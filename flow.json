[
    {
        "id": "902fc438.e5d758",
        "type": "tab",
        "label": "Home",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2026898575f7aa56",
        "type": "tab",
        "label": "Tendencias",
        "disabled": false,
        "info": ""
    },
    {
        "id": "18d8f6b717fbdf76",
        "type": "tab",
        "label": "Arranque escalonado",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bef159b0eb2cf912",
        "type": "tab",
        "label": "Incremento prolongado",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d08f14e12055286a",
        "type": "tab",
        "label": "Arranque Automático",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fb40d997e0f412a5",
        "type": "tab",
        "label": "Rockin Start",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ebaf6b5134c2a666",
        "type": "tab",
        "label": "Control PID",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9941a439.4b17c8",
        "type": "tab",
        "label": "Protecciones",
        "disabled": false,
        "info": ""
    },
    {
        "id": "43b51d90.0b47f4",
        "type": "tab",
        "label": "Configuración VSD",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7a89175c.90f6a8",
        "type": "tab",
        "label": "E/S",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e7088c4e.cc6b4",
        "type": "tab",
        "label": "Eventos y Datalog",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3af652c9.6f9bee",
        "type": "tab",
        "label": "Usuario",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2e27dea6.c4c362",
        "type": "tab",
        "label": "Navegación",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dd18d94e.4b1408",
        "type": "tab",
        "label": "C2S",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2858ae04397c7488",
        "type": "tab",
        "label": "PQA",
        "disabled": false,
        "info": ""
    },
    {
        "id": "38e901f121b52acb",
        "type": "tab",
        "label": "Sensor de fondo",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4c43e2ae2d9aec48",
        "type": "tab",
        "label": "SWC",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e483884bee93bec2",
        "type": "tab",
        "label": "Modbus",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7af521b51c8e6a51",
        "type": "tab",
        "label": "AVAS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f08f78f1e5892037",
        "type": "tab",
        "label": "configuracion Sarta",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6278f7e7f20ddc7d",
        "type": "tab",
        "label": "Instalación",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b368eb771541cd7f",
        "type": "tab",
        "label": "Geometrias",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6a1ef6a7aef873a7",
        "type": "tab",
        "label": "Dinagramas",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1890b8e955d8f8fa",
        "type": "tab",
        "label": "PumpOffController",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1ae6c379.02ea3d",
        "type": "subflow",
        "name": "VSDWrite",
        "info": "",
        "category": "VSD",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "aa1b627f.089b4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 40,
                "wires": [
                    {
                        "id": "8c24ec8f.cf43c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 640,
                "y": 90,
                "wires": [
                    {
                        "id": "8c24ec8f.cf43c",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Parameter",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-sort-numeric-asc",
                    "label": {
                        "en-US": "Parámetro:"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            },
            {
                "name": "Datatype",
                "type": "str",
                "value": "REAL",
                "ui": {
                    "icon": "font-awesome/fa-file-text-o",
                    "label": {
                        "en-US": "Tipo de dato:"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "color": "#E9967A",
        "icon": "font-awesome/fa-cogs"
    },
    {
        "id": "51296ca5.0c0cb4",
        "type": "subflow",
        "name": "DI Module",
        "info": "",
        "category": "SWC OS",
        "in": [],
        "out": [
            {
                "x": 360,
                "y": 70,
                "wires": [
                    {
                        "id": "c9b9512f.10fa",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Channel",
                "type": "num",
                "value": "",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            }
        ],
        "color": "#C0DEED",
        "icon": "node-red/trigger.svg",
        "status": {
            "x": 360,
            "y": 120,
            "wires": [
                {
                    "id": "c9b9512f.10fa",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "4973034f.ff5fac",
        "type": "subflow",
        "name": "AI Module",
        "info": "",
        "category": "SWC OS",
        "in": [],
        "out": [
            {
                "x": 320,
                "y": 30,
                "wires": [
                    {
                        "id": "3d932183.a9966e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Channel",
                "type": "num",
                "value": "",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            }
        ],
        "color": "#C0DEED",
        "icon": "node-red-node-smooth/smooth.png",
        "status": {
            "x": 320,
            "y": 80,
            "wires": [
                {
                    "id": "3d932183.a9966e",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "2657da37.013b66",
        "type": "subflow",
        "name": "User",
        "info": "",
        "category": "Users",
        "in": [
            {
                "x": 40,
                "y": 90,
                "wires": [
                    {
                        "id": "f771788a.2843f8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 120,
                "wires": [
                    {
                        "id": "8f64c5d0.2e2de8",
                        "port": 0
                    },
                    {
                        "id": "7ac7e5a3.05d60c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#E9967A",
        "icon": "font-awesome/fa-user-plus"
    },
    {
        "id": "1fbf295f73cccb97",
        "type": "subflow",
        "name": "Drive Reference",
        "info": "",
        "category": "VSD",
        "in": [
            {
                "x": 120,
                "y": 50,
                "wires": [
                    {
                        "id": "e27b11d88be5d114"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 190,
                "wires": [
                    {
                        "id": "a770ba9dd1d7b8a8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#E9967A",
        "icon": "node-red-dashboard/ui_gauge.png",
        "status": {
            "x": 280,
            "y": 140,
            "wires": [
                {
                    "id": "e27b11d88be5d114",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "a52b5a046f4fd02f",
        "type": "subflow",
        "name": "Protection ",
        "info": "",
        "category": "Protections",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "521caa2fc4efa734"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 930,
                "y": 40,
                "wires": [
                    {
                        "id": "d64f129a6c7d781a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 930,
                "y": 90,
                "wires": [
                    {
                        "id": "818e472f7d541380",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "protection",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-file-text-o",
                    "label": {
                        "en-US": "Protection"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "color": "#E9967A",
        "outputLabels": [
            "Disparo",
            "Alarma"
        ],
        "icon": "node-red/status.svg",
        "status": {
            "x": 470,
            "y": 180,
            "wires": [
                {
                    "id": "f6688829e74f45a1",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "11d568a7.09a5c7",
        "type": "subflow",
        "name": "SWC_OS",
        "info": "",
        "category": "SWC OS",
        "in": [
            {
                "x": 140,
                "y": 110,
                "wires": [
                    {
                        "id": "1083899a.1b4716"
                    },
                    {
                        "id": "9cc3f117.42857"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 80,
                "wires": [
                    {
                        "id": "1083899a.1b4716",
                        "port": 0
                    }
                ]
            },
            {
                "x": 840,
                "y": 130,
                "wires": [
                    {
                        "id": "3228637d.9e937c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#3FADB5",
        "inputLabels": [
            "Request"
        ],
        "outputLabels": [
            "CPU Temperature",
            "CPU Freq"
        ],
        "icon": "font-awesome/fa-desktop"
    },
    {
        "id": "669c188.bd26ee8",
        "type": "subflow",
        "name": "Load Protection",
        "info": "",
        "category": "Protections",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "17ab7fc9d8bf882b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 930,
                "y": 40,
                "wires": [
                    {
                        "id": "cea7f83d8531c46a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 930,
                "y": 90,
                "wires": [
                    {
                        "id": "a482404e80d50aee",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "protection",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Protection"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "color": "#E9967A",
        "icon": "font-awesome/fa-flash",
        "status": {
            "x": 470,
            "y": 180,
            "wires": [
                {
                    "id": "389b970a2172c9c6",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "c8b77ff3.ab501",
        "type": "subflow",
        "name": "VSDBasic",
        "info": "",
        "category": "VSD",
        "in": [
            {
                "x": 90,
                "y": 200,
                "wires": [
                    {
                        "id": "05d887b016f50dbe"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1090,
                "y": 220,
                "wires": [
                    {
                        "id": "bb80a9dd468b9dbf",
                        "port": 0
                    }
                ]
            },
            {
                "x": 2190,
                "y": 190,
                "wires": [
                    {
                        "id": "20a94e1f3f6e8848",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#E9967A",
        "icon": "font-awesome/fa-mail-forward",
        "status": {
            "x": 1270,
            "y": 270,
            "wires": [
                {
                    "id": "bfda390e.8957b8",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "e6caea2d.94f508",
        "type": "subflow",
        "name": "VSDReadPar",
        "info": "",
        "category": "VSD",
        "in": [
            {
                "x": 90,
                "y": 70,
                "wires": [
                    {
                        "id": "430e037a.b0c2ec"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 590,
                "y": 60,
                "wires": [
                    {
                        "id": "977ba8de.b9cf38",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Parameter",
                "type": "num",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Parámetro"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            },
            {
                "name": "Datatype",
                "type": "str",
                "value": "REAL"
            }
        ],
        "color": "#E9967A",
        "icon": "node-red/parser-csv.svg"
    },
    {
        "id": "035da46c73925442",
        "type": "subflow",
        "name": "VSDBasicAFE (2)",
        "info": "",
        "category": "VSD",
        "in": [
            {
                "x": 90,
                "y": 200,
                "wires": [
                    {
                        "id": "938c8afc9524926f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1090,
                "y": 220,
                "wires": [
                    {
                        "id": "e7537b32dfdb9705",
                        "port": 0
                    }
                ]
            },
            {
                "x": 2190,
                "y": 190,
                "wires": [
                    {
                        "id": "dba47efe70219591",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#E9967A",
        "icon": "font-awesome/fa-mail-forward",
        "status": {
            "x": 1270,
            "y": 270,
            "wires": [
                {
                    "id": "97e367536885e6cd",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "f77d8fb250cbcf1d",
        "type": "subflow",
        "name": "conversionDia",
        "info": "",
        "category": "conversion",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "4f091c4deeb7e255"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 80,
                "wires": [
                    {
                        "id": "4f091c4deeb7e255",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1d0c3cb2.7129f3",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "name": "Start system",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "77d67b76.8c8804",
            "26428723.4b3e38",
            "bfa48676.a364f8"
        ],
        "x": 14,
        "y": 11.5,
        "w": 552,
        "h": 97
    },
    {
        "id": "82fde41a.c6f8d8",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "name": "Home",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e765ca36.69fb98",
            "876da3c9.83763",
            "7b211215.487a7c",
            "d2ee2a47.afabd8",
            "14f401b1.71d24e",
            "dc439b5.84bfd68",
            "56fab3e7.5f20dc",
            "666152d6.dc641c",
            "c83649c3.716488",
            "3d5528dc.de75d8",
            "78bacd83.c921b4",
            "b22ef31b.8b813",
            "f21e2e27.0af3d",
            "ff70c9bf.cb00c8",
            "da1b0a1a.7d4d28",
            "236c6c92.d31584",
            "56c9781860235a31",
            "8eb0770368c697e5",
            "d99efa50f8eed7c5",
            "2bc0495b1bd3fa65",
            "b03aee65d7a42da4",
            "3c155817e9114c24",
            "16335e2c56b3d940",
            "669c22af8e42e6cb",
            "60e038d3b3bf8b56",
            "77cd4010fe016c65"
        ],
        "x": 14,
        "y": 119,
        "w": 1182,
        "h": 322
    },
    {
        "id": "fcb3da61.429db8",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "Comandos de marcha",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fb0f6d56.a4f3b",
            "d0488f55.8dba",
            "ae2634a.4641dc8",
            "a5c1b515.63bb98",
            "8e7b4c24.c71ec",
            "bd2cf57e.cd4498",
            "81878561.f8ad48",
            "bf32fe6a.aafbf",
            "98688f83.ade3e",
            "7c2fb5f3.7182bc",
            "7044a9d1.4dd378",
            "8f772663.6c8508",
            "24678530.efc32a",
            "7dacdbe3.f9cb94",
            "dd4a0973.7218d8",
            "81e9aa1f.0a9c58",
            "a29bf048.6ceca",
            "34cf5b75.27eb74",
            "389a8a70.699a96",
            "501b4196.e2e16",
            "83065c59.d13dc",
            "26677beb.cdb794",
            "a3099110.2b922",
            "420eb07c.41ee3",
            "e834cca1573f4ed0",
            "d0d71887678a5547",
            "3c6233b7580fdd3b",
            "88d14fc4446fc3c6",
            "0cf9a43ae3a4bb15",
            "744089fd1f82831a",
            "1893048213e6d12c",
            "a4403c3e26ba31b8",
            "881f8e7e37d29f85",
            "47eecc9b022b2242",
            "4283632c186cd676",
            "824394eb2c1be3fa",
            "9669205ed660f045",
            "c18012395112a0ce",
            "f285ddcdf74ae6b9",
            "f2fb1024dc9010ce",
            "4dbb8df1fbdeceaf",
            "ceaca04f38cadf35",
            "a0f125484bdc6ae9",
            "dcb3223dea58991d",
            "87827b566b48717a",
            "6ce1fdc68db47520",
            "4f1a0a8f7bc7b597",
            "5faed9508d725863",
            "cb0c215187dec002",
            "f0a1193a68ccf552",
            "171a6647ad51ac09",
            "906f6c90b95e81f4",
            "bc51637eae51a6ea",
            "da070d04b5c81bf7",
            "59e526854e2b8c3c",
            "1ef50e743f40cd2a",
            "b966cb015fc7f719",
            "4a7db122c2dc8b89",
            "0fec5b4cfbe1d12c",
            "7bb26d6155488061",
            "caab4c9366a6a718",
            "e6a12821beef3055",
            "dbe93e91ea0fe6e8",
            "5f0c32e4b7c726e9",
            "3b7708c43f02500b",
            "52efdbba89b3fe41",
            "fb95e28d90e2177d",
            "840a159c6c18072c",
            "3484e5233d4f23d3",
            "20aa1ab35334cb43",
            "628cd5f619b29af6",
            "3b0732a010e2131c",
            "01c5f660785e97d7",
            "1fba507567d2f877",
            "65c50b2d766f8a54",
            "67dc130a552ed9f0",
            "7328b1fd6e58fbd8",
            "326325a2bd2ea956"
        ],
        "x": 34,
        "y": 479,
        "w": 2312,
        "h": 472
    },
    {
        "id": "3cb51855.a66038",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "Refrescar datos",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "492ac1d1.0e276",
            "ecf98f3f.4a704",
            "25837d82b2979b05"
        ],
        "x": 134,
        "y": 1339,
        "w": 252,
        "h": 122
    },
    {
        "id": "27a0641a.d154dc",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "1306de9a.9ba341",
            "c41a251e.427c98"
        ],
        "x": 58,
        "y": 1433
    },
    {
        "id": "365d864c.8c19ca",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bca3caea.1077d8",
            "8ac2b187.14625",
            "9bb5d411.271d48",
            "dad86215.ed79c",
            "dd0fb9ab.f737f8",
            "e032b1f4.a8be7"
        ],
        "x": 1672,
        "y": 127
    },
    {
        "id": "43bab036.712ca",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "27c43941.e9e0c6",
            "e9d2f5f0.86a518"
        ],
        "x": 68,
        "y": 633
    },
    {
        "id": "54254b6e.789ca4",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "name": "Sintonización",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5882e74a.6dd008",
            "461aa518.bd9c8c",
            "bb683181.4564b",
            "291937e923ec846c",
            "47d4911e4ea82005",
            "a56650d20cbb0e90",
            "34d023e6cfc76baf",
            "26320c2147a2f648"
        ],
        "x": 44,
        "y": 2019
    },
    {
        "id": "68e6bb30.d1fce4",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "6cdd72bc.8124cc",
            "a7e99088.c8108"
        ],
        "x": 68,
        "y": 53
    },
    {
        "id": "8a04702.34fd29",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "name": "Acceso a pantalla de configuración drive C2S",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fa33f7fa.bf0bd8",
            "e1b497b2.06f878",
            "49534500.cd9cdc"
        ],
        "x": 744,
        "y": 2019
    },
    {
        "id": "ab42d2fa.9240c",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "78a8be83.7018c",
            "82264d68.0b05a"
        ],
        "x": 3378,
        "y": 1713
    },
    {
        "id": "bd17e5b9.9261f8",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "name": "Eventos escritura de parámetros de variador",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "279bdd90.fb2742",
            "97664a1c.3d18a8",
            "97d12c4e.c1f6",
            "d91115b3.73d618",
            "73dc2505.42413c",
            "aa730b91.5646d8"
        ],
        "x": 3384,
        "y": 2349
    },
    {
        "id": "ec31a094.c373c",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4af99851.bcfb28",
            "9f627758.670cd8"
        ],
        "x": 3378,
        "y": 133
    },
    {
        "id": "d689e3de.7d569",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "name": "Motor IM",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d1b70a55.083b88",
            "8c735cd0.645ef",
            "3333030b.c56a6c",
            "4b5ddde8.f05d24",
            "6b0e4d29.b19b14",
            "98e9311ebc924c66",
            "72b3150f9f310688",
            "228eb994177c4301",
            "980eb62d2bc87e1c",
            "fa907c59507b08c4",
            "e0ebe56beee379ef",
            "c1e4f00f3ccb67bc"
        ],
        "x": 14,
        "y": 459,
        "w": 922,
        "h": 182
    },
    {
        "id": "eed2da25.98fab8",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "name": "Bypass Filtro Armónicos",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "71fd37.e2a532c8",
            "566c907c.70175"
        ],
        "x": 38,
        "y": 33
    },
    {
        "id": "9132da2c.b8c6b8",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "name": "Menú Entradas/Salidas SWCPRO",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2499f70f.806ab8",
            "461615d3.efcb8c",
            "c1f7c147.2e2dd",
            "98ed183e.8031b8",
            "950ebf98.9385d",
            "8916af0a.61064",
            "b0a2cd1a.ab273",
            "8c4c4846.6ea308",
            "34d0978b94237bdb",
            "61c5e328a04409ef",
            "4fb7354230af86db",
            "9429fcb37217992b",
            "3d5229b6c4b0f5b3",
            "bdea02d8ef94c62c",
            "b0149f3837310cf3",
            "de4f39a85d994607",
            "cae90cc36eb53039"
        ],
        "x": 54,
        "y": 719,
        "w": 882,
        "h": 322
    },
    {
        "id": "312f680c.5a3b4",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "name": "Entradas",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f167459.5f028b8",
            "7c55c2ad.611734"
        ],
        "x": 42,
        "y": 617
    },
    {
        "id": "9b538856.60fb38",
        "type": "group",
        "z": "e7088c4e.cc6b4",
        "name": "Memoria USB",
        "style": {
            "label": true
        },
        "nodes": [
            "de8f2e2a.cab36",
            "37820ee5.859272",
            "9562fc1.ada0d",
            "8f26d964.56a778",
            "8102dc0f.63d08",
            "45ba8097.f74b1",
            "8db0f092.83eb9",
            "febace6d.62f9c",
            "88dcdbf8.24dc88",
            "8f48d1f2.ceb62",
            "8f928b10.7d7368",
            "b67add6d.8a94a",
            "bd43bd09.9aab9",
            "f8f6d7e7.a66d88",
            "ba2695ff.6d9548",
            "90b649a5.3b9fa8",
            "588cbae4.e05ae4",
            "249b4bda.1f1dd4",
            "9be46ec.495559",
            "6faf6e85.a53ad",
            "ed649516.fdb838",
            "bc78207d.aabd4",
            "85d73faa.116d8",
            "7b1a1485.ef152c",
            "ecf97624.7b4b68",
            "96e2b8dbe394949c",
            "68ea2079fef8dd21",
            "8ba4f2c8d51b2c68",
            "9bf850479811451b",
            "a9ea2f32ef0100a8",
            "6b3d4586f5261369",
            "917c8ac6.aa72e8",
            "0fd3e2e27d9d0b07",
            "b2f24c7fe6177738",
            "627e721583dda1c1",
            "501877860b9d3fc8",
            "8c3a98707b868c5f",
            "864a29df26985766",
            "0fddcf4a071bf7c0",
            "f3617af339d8b6d7",
            "fc4ece5efd45fece"
        ],
        "x": 84,
        "y": 231.5
    },
    {
        "id": "deaa6892.b3d988",
        "type": "group",
        "z": "e7088c4e.cc6b4",
        "name": "Eventos / Alarmas ",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b1830307.ee865",
            "31895ea6.22f372"
        ],
        "x": 88,
        "y": 13
    },
    {
        "id": "1dd5b051.a95e6",
        "type": "group",
        "z": "e7088c4e.cc6b4",
        "name": "Datalogger",
        "style": {
            "label": true,
            "fill": "#ffefbf",
            "color": "#000000"
        },
        "nodes": [
            "4ea7eb06.9f2174",
            "7e0625da.a5746c",
            "ccef2ff8.d103a",
            "4a152bf2.aedbf4",
            "ac8dba55.436ca8",
            "b92820bf.a85cd",
            "53de6e8d.a41ec",
            "7409201c.daf43",
            "793ef4d5.ef60dc",
            "556daeb1.5f8c4",
            "458b1cd4.6b15f4",
            "c16175a3.4e3dc8",
            "6e2e57d6.1acb68",
            "c0a93ee0.0bece",
            "bb20b02b.93fbf",
            "87d327f9.2d5698",
            "a5965533.262318",
            "8b735152.e0f1d",
            "a88b1b0d.338558",
            "1770e069.fa06e",
            "a1296c3e.0467d",
            "7fcfdd93.ac45a4",
            "15d31797.55bf88",
            "96675df9.60de8",
            "65c0afcd.8388",
            "70eee707.21eb08",
            "3b3e865c.e649aa",
            "89541385.7f5a6",
            "bc74ae1c.8050f",
            "7d3c0e90.bc175",
            "64bd474c.8651a8",
            "c2a083b6.80ece",
            "e19ab68f.2ca7d8",
            "7e9f72bb.cc0ccc",
            "f125f8dc.4fc0e8",
            "acd83647.191f48",
            "ac947de3.26a6d",
            "3300d502.d9f2da",
            "669ee12e.3c9e4",
            "bedc0725.f22738",
            "3c51eaef.2751d6",
            "e3de11a.525d4f",
            "2ffd423b.f2a4ae",
            "4cb76011.15326",
            "6b7af496.0913bc",
            "5c0f44f8.2977bc",
            "b59d2d9c.bc7c8",
            "a222d060.87b67",
            "27ab586e.ff3e28",
            "4c30ceb7.d240a",
            "4e129740.b3ea78",
            "a28ff141.b8c37",
            "b9ed60ab.26f43",
            "882afa67.5605e8",
            "87546f4f362a24f5",
            "76c9fc9ecefea5ef",
            "d685da5d5bb1ac2b",
            "b63fd9b5a4a85e3f",
            "cf7c1eb5ab4e32e7",
            "70da6b8c3ca0227f",
            "f06495c212d54952",
            "2ac8468b0d40dc4f",
            "b158c05a816f9d52",
            "0ccc179696cadb08",
            "035a2d04492a866a",
            "5d28c5ce6c26a9db",
            "427ca275f0328dc3",
            "138bf87b6179889b",
            "15c20a65195e997c",
            "d4815689f3a8cac7",
            "c7031429.d17478"
        ],
        "x": 74,
        "y": 479
    },
    {
        "id": "f7ed166d.1aa528",
        "type": "group",
        "z": "3af652c9.6f9bee",
        "name": "Usuarios",
        "style": {
            "fill": "#ffbfbf",
            "fill-opacity": "0.5",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f3c2e7cf.5ed158",
            "eb91dac5.690838"
        ],
        "x": 88,
        "y": 53
    },
    {
        "id": "e98dc6a9.24ece8",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "name": "Eventos y Alarmas",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "890323f.ee684e",
            "3031a06c.c602b",
            "c2e14be8.387158",
            "c98bd2dc.e9d39",
            "2f580b82.d69ec4",
            "312d9def.84df32",
            "dcd696d0.332638",
            "b6e49e7b8af2df41",
            "25a8d0d2661ecaf2",
            "ba6763dbf23cbb5a",
            "b9261a31b4bbd186",
            "35a52a0820bebc23",
            "f0d5aa40cd56628f",
            "ec06c2c2ff2f48b5",
            "f57c522aea6111e7",
            "a7b76a6f68de8ef5",
            "529deff5ef6dbaa8",
            "80d606957859a016",
            "cd2627ac2843f441"
        ],
        "x": 14,
        "y": 1079,
        "w": 1242,
        "h": 262
    },
    {
        "id": "3ae9fbe60d6132ea",
        "type": "group",
        "z": "dd18d94e.4b1408",
        "name": "Arranque",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ca280181.090e2",
            "56ac92ec57275087",
            "d7c5f9ec46c1ad01",
            "0c82132c006f9e50",
            "4bc9b58e.7b883c",
            "dfd54bf68767ddc1",
            "98a11684d294d791",
            "a553cb02d3dd2a37"
        ],
        "x": 24,
        "y": 639
    },
    {
        "id": "6abd418f.d175b",
        "type": "group",
        "z": "dd18d94e.4b1408",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "8ed62712.fe2018",
            "b2f2659a.67f648"
        ],
        "x": 18,
        "y": 23
    },
    {
        "id": "8c207e440fb46f33",
        "type": "group",
        "z": "dd18d94e.4b1408",
        "name": "IP C2S",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9166bbc5fd352f81",
            "9f77b0d829ad914b"
        ],
        "x": 24,
        "y": 899
    },
    {
        "id": "48d282d70b9e72c9",
        "type": "group",
        "z": "38e901f121b52acb",
        "name": "Sensor seleccionado",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6914a9b4.85f3c",
            "48e8b39099139f6e"
        ],
        "x": 1884,
        "y": 249
    },
    {
        "id": "9437db38.d604e",
        "type": "group",
        "z": "38e901f121b52acb",
        "name": "Lectura y asignación DHS",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "58d38a40.f1fd6c",
            "d5c6e22e.5913a",
            "db2c3fd1.d4b6a",
            "30bc82a5.83883e",
            "75b2fd8d.98dbcc",
            "5fde841b.216d14",
            "a6bc5916.f91728",
            "5b339a75.df7174",
            "ee057353c5c82042",
            "03a3b206eac12d39",
            "f198a750.0dc288",
            "2ef0e8e6.2d3508",
            "49f6872d.f357e8",
            "0f5155c1229cda5c",
            "9599bd03.2a1a5",
            "1fb58a8a.67c8f5",
            "ca39f80a814eaaa4",
            "3fd537023c8f14fd"
        ],
        "x": 1894,
        "y": 19
    },
    {
        "id": "af8e6105.775618",
        "type": "group",
        "z": "38e901f121b52acb",
        "name": "Configurar sensor de fondo",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c46d6edd.69e92",
            "3accac1b.919a24",
            "efaec9be.df9588",
            "cf1d2db4.cfc918",
            "39c53f14.25a278",
            "a9eece6d2bcfed87",
            "42dcedfeb8aee4f5",
            "ae309722e4bebd6b",
            "ff70137391f2b512",
            "0a8b43dcb8a55d7f",
            "a7d2cd08afbd2e76",
            "86ad5821826b4199",
            "6260bf964a453af8",
            "2069ef42c04cbfaf"
        ],
        "x": 134,
        "y": 69
    },
    {
        "id": "d84d4fbe.ee6ce",
        "type": "group",
        "z": "38e901f121b52acb",
        "name": "Objeto global propiedades del sensor",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8ed3ce75.2bbb",
            "bde8b5e.8ff1e48",
            "5500fe6d.2fbd18",
            "feb905dc.b5207",
            "a7f0f525.ae1878",
            "ba68c6c472e8f1c8"
        ],
        "x": 924,
        "y": 469
    },
    {
        "id": "ef81d12e3dd41149",
        "type": "group",
        "z": "38e901f121b52acb",
        "name": "Mapa Modbus Sensor de fondo",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b52f82cb1a7a7339",
            "94d4b0f6a1035ffd",
            "74b80b74448a0b3f",
            "5278e06818418426",
            "9e553fa95475d36d",
            "aad1d8441babacb4",
            "7beffe89e0d83774",
            "a8053e3fc3891ec7",
            "6577cdd1e1da10e7",
            "c46b426ddcba3ca6",
            "e8d9bf36189ddebb",
            "30f707ecbdeb2452",
            "4f1871a965b65434",
            "f63b600c8217e624",
            "9f49be987339f818",
            "1d797f4ca9b83896",
            "4c67ee20325480a3",
            "1819ab29e1ba5014",
            "30a50f9a4b478ffd",
            "27d05faae193e4da",
            "2aad8b543010b8e8"
        ],
        "x": 924,
        "y": 19
    },
    {
        "id": "e29eaee41e038edd",
        "type": "group",
        "z": "4c43e2ae2d9aec48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "798ac169.6edda",
            "88ac83a3.561a3",
            "4906fc64.1e6a14",
            "d43fb27a.273b3",
            "1cb59f89.cf5d7",
            "4aca35c3.0308ac",
            "bb03c26f.a7a22",
            "bd579703.22d958",
            "1478ddff.860e02",
            "98ca0b1c.cda4f8"
        ],
        "x": 24,
        "y": 29,
        "w": 942,
        "h": 202
    },
    {
        "id": "57eba231.4d56dc",
        "type": "group",
        "z": "4c43e2ae2d9aec48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e2589faa.5b6d2",
            "e9e93a2c.deeb18"
        ],
        "x": 28,
        "y": 243,
        "w": 374,
        "h": 304
    },
    {
        "id": "10280aeffc57de7d",
        "type": "group",
        "z": "18d8f6b717fbdf76",
        "name": "Otras configuraciones gráficas de pantalla",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "52ffcbd2c7ced519",
            "42cacf9e374e4c19",
            "936b88689b3da65d",
            "56a6a4fa29fe8751",
            "4d61b8ddd12f192a",
            "fa14e78abe8cc9e5",
            "4a3a2387d414149a",
            "d5b8dd2ee11b4e46",
            "e5145dd75ddc6f5b",
            "9a0d5aa34c82b984",
            "ad037575e738b405",
            "37db6fd4d5812c19",
            "fae1adb677ba13c7",
            "9faabcc1f09b24a8"
        ],
        "x": 1204,
        "y": 49
    },
    {
        "id": "fbbdc4b7.95b5c8",
        "type": "group",
        "z": "18d8f6b717fbdf76",
        "name": "Máquina de estados Arranque escalonado",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fceee294.75f2a",
            "2da6eab8.1a0d46",
            "df0f741c.af19a8",
            "f2d35fb.fa772a",
            "8fb0b4bf.9589d8",
            "d49b2738.582fc8",
            "29c7a23.727065e",
            "d21b5c08.66b8c",
            "a238dee5.dce89",
            "457f5e6e.ca6a6",
            "ca0a5684.ea6928",
            "1693e576.9b12ab",
            "5a332056.69647",
            "6b84c64e.dcc588",
            "19987e51.456892",
            "b3caef3.352311",
            "e4129fed.88799",
            "95c850f6.36643",
            "66a490ba.d5e37",
            "b22288f6.37a878",
            "8552caa4.241e38",
            "1d20ae55.84ce82",
            "94a055d5.0c9b78",
            "8342ff02.52b06",
            "d57a1b85.5bfae8",
            "1a666499.a2effb",
            "b577a0f5.21f92",
            "ac2b4653.316da8",
            "402cd950.ce2c18",
            "c8e55399.c9ba1",
            "f27260f5.84ea7",
            "4fa4f9ba.bbe438",
            "9582cf9f.08cd2",
            "1f018e5b.62ca82",
            "5a992b9e.0fe264",
            "bf6826f1.1eaf58",
            "101b1cf1.8df2b3",
            "3024e2c5.a2abce",
            "16d2de82.3f9bd1",
            "eb1fb4ef.aeeb68",
            "8f53cc8f.84257",
            "a032476a.407a38",
            "d521fa7d.be0208",
            "91f68c48.47e4b",
            "bb39aa69.c4e278",
            "864e753a.a4d358",
            "69d64be34aec24d1",
            "2ad4d2c7fa4ba6cb",
            "e6efd332166f2fd0",
            "55a221abc9c0f1ed",
            "adced32ef7b81494",
            "778a429fbac30b7d",
            "8026b7042b40e2c2",
            "51367c09faad81b1",
            "c2722fbcc455fb20",
            "fdc68848fdaa926f",
            "4b38c31b6019dbbd",
            "d566d0fc26a835fe",
            "afbe0913d246a90b",
            "217f6aef752bcc72",
            "cee6c2c4f89ff3be",
            "8cc0d170eac2b8a5",
            "b7c86f2160305665",
            "460c509cea317bee"
        ],
        "x": 34,
        "y": 389
    },
    {
        "id": "0382d006bf3e8547",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "name": "Lectura escritura Cubloc",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1617c9c527c7d680",
            "1052252d2e7f47ab",
            "2cd6cbf135d592bb",
            "61280c95aee7b192",
            "99a274a00b57e276",
            "ef74065d019aa081",
            "4f1250843d4fc966",
            "38cc0bef813f4de7",
            "26144798845bf323",
            "94ed97e6d2f75d45",
            "ee2f3e9df0f329c5",
            "a8b5fbf8701e60ae",
            "fc0377f144e8f895",
            "19bb32e54a08128b",
            "23fa42dfe2b133da",
            "eecb7d8c6fa2c337",
            "d3b4a26719f7796d",
            "e219528c8859a421",
            "db78f4a9db4a0b18",
            "a352b171830499c8",
            "85366b43.f6bda8",
            "bc8762e.9b52fa",
            "df086dcc.f3e5",
            "8f903bea.3e5c78",
            "efcf76de.3c9038",
            "73a225c4.f6a26c",
            "6072e3af4ad63d61",
            "a5c076e6.b3cdf8",
            "b80d3fafa1137e22",
            "de3e9eaee7d8ac1e",
            "7a595adbeef4154f",
            "6902084ea4b2cbde",
            "091d586eb31e93bf",
            "744df9a18d278db4",
            "772ec0a16fcfa09d",
            "aae2d4b8cf582bf7",
            "5bbb1ce225da9237",
            "f339b976e17001e2",
            "4b39b4da3180cdc0",
            "e7cea693752dde35",
            "13ae2db66a6609f2",
            "3f594a3dbdf92d76",
            "633deaa1943f8055",
            "ba79778827ca94cb",
            "e6e775f93ad9b13e",
            "72c298a02ef42417",
            "8d784be063f1d4db",
            "e17b61229da5159d"
        ],
        "x": 674,
        "y": 3669
    },
    {
        "id": "2fa4e5be63ea61ce",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "name": "Funciones de salida C2S",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "81384875bc1f5bd4",
            "3cca25dd292d56e4",
            "515bf075edacdc7f",
            "60644c9056ee8264",
            "eecf6f885f3529b9",
            "4d661e0115eb3f43"
        ],
        "x": 44,
        "y": 3669
    },
    {
        "id": "2bb641e0f5f82309",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "name": "Salidas",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5d9b6e5b.adfe78",
            "80a9920a.43161"
        ],
        "x": 42,
        "y": 2797
    },
    {
        "id": "e3aa057d.09fb18",
        "type": "group",
        "z": "d08f14e12055286a",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "dad84feb.d4773",
            "7aad629d.de652c",
            "8f8a192b.bb2ef8"
        ],
        "x": 28,
        "y": 43
    },
    {
        "id": "83483662ea05d247",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "name": "Relación de transformación",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6625e1db09743bc3"
        ],
        "x": 48,
        "y": 2853
    },
    {
        "id": "854dec5e.9e51d",
        "type": "group",
        "z": "fb40d997e0f412a5",
        "name": "Rocking Start",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c30870cb.fa25a",
            "f3b2b1b2.a0af2",
            "4384031.9ff1afc",
            "b4d97ea9.9a1f1"
        ],
        "x": 28,
        "y": 33
    },
    {
        "id": "e1e65313b5eaa836",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7acc47cbe9990f19",
            "30d70d168bf42655",
            "eb0d147d1d43c8ac",
            "99e2af3d95892f16",
            "b5c1e33ed75a3eb6",
            "77dcd918.f8c298",
            "dc03e803896e0929",
            "0cb1b9b3bb70aef9",
            "dc1f3421fd7b7c84",
            "a969f81453a84932",
            "43c5b35d32c86d63",
            "2d3e026b35cdd9cc",
            "a9a50228154fac64",
            "eb431166fc1c96a0",
            "bf383a9670894a6e"
        ],
        "x": 14,
        "y": 1399,
        "w": 1568,
        "h": 428
    },
    {
        "id": "06c0dbf1bffe1e21",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "VSD Command clear",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "56e67824752411be",
            "84eb16f681c366e0"
        ],
        "x": 34,
        "y": 1579,
        "w": 352,
        "h": 82
    },
    {
        "id": "6202107f.ed9aa",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "Arranque normal",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d69d4857.ada828",
            "b5761987.f38488",
            "7def9f62.495c9",
            "7c7e0f85.16d55",
            "b8ccca4f.5b80d8",
            "eb737131.03a4d",
            "eb59ebb6.a7e4b8",
            "c1cf35bd.94c428",
            "ec2d25ed.7e35c8",
            "51500f5e.edf25",
            "204c251e.8264ca",
            "1045d8d0.faf6d7",
            "1deb40a1.1db35f",
            "9be1365.7de13c8",
            "1606c10f.56a83f",
            "dd55fa16.314248",
            "7d35cec3.ade78",
            "5a06445d.c7a0ec",
            "16923a95.e45025",
            "a82882b.f096f8",
            "272e3aff.3c6086",
            "3beb2e16.d977e2",
            "d8c3331e.ce174",
            "6ba5b0f.631cf5",
            "2d5cd8ff.c3ed88",
            "1a514d1e.aa2be3",
            "44bb5770.e48438",
            "2c549c27.8f7a24",
            "d819c89.12f6638",
            "565805a7.6b4eec",
            "4f86c81.221cf38",
            "51579afe.51eb14",
            "da5262b2.a8a4e",
            "40d7a088.46f87",
            "4d8f9a8e.22e4f4",
            "a5507750.6b4748",
            "5a370780.070d78",
            "d0882460.0dcf78",
            "f796f5cc.fb7898",
            "7d229a445e26240e",
            "27642c12f77a13e3",
            "2fa174f43f9aa092",
            "0bfc0884740c4779",
            "4ea2e1987f3b3d50",
            "e1b2eae20714df85",
            "aa49b3720341c633",
            "e6b6ff7d.8a7e4",
            "54a9c1dc.1b5e1",
            "95d0ab4.c78fe58",
            "665fede5f3de1d98",
            "b946d082e2c5a396",
            "448626b05dfddbc4",
            "08226d873258aac3",
            "d8d555f6892b9f69",
            "2e9f7aa20b0503c1",
            "9ee0b0d96c23fba3",
            "81eed12a3bd250e1",
            "16cf58d47defa9bf",
            "f57724415e4e2027",
            "623eb47dc08d064b",
            "820ffd9d.4462a",
            "cca85736.340b98",
            "fda65d81e947c35c",
            "f465608052b953d3"
        ],
        "x": 4,
        "y": 9,
        "w": 1782,
        "h": 472
    },
    {
        "id": "986845c5f7bf4a6e",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "Visualización de datos",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b079c206d161b62c",
            "c483d44b5f6def10",
            "f7709059ebe5ad7b"
        ],
        "x": 568,
        "y": 1373,
        "w": 1970,
        "h": 1600
    },
    {
        "id": "0379aa12b6a49e83",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "IP info",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "52501268e456d659",
            "9f18333324a3788b"
        ],
        "x": 44,
        "y": 1479,
        "w": 342,
        "h": 82
    },
    {
        "id": "9ede9b9e7f6ac7f4",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "Nombre pozo editable",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8751d17310eaf23b",
            "b00ac783be79f527",
            "b9e9be80c75ac7c7",
            "35137a2a22d04d5a",
            "2f2a2b11810b4fbe",
            "e8b4e1fd2e2dcd2b",
            "a0eaac952dc20a15",
            "fadff7a7b6574e6e"
        ],
        "x": 1504,
        "y": 1169,
        "w": 852,
        "h": 182
    },
    {
        "id": "086b9d08c3b68939",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "Status Bar",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "daa89a01.910de8",
            "9523c57c.c9b468",
            "24868425.cac96c",
            "9b0b3358.5ac42",
            "6c6bc8b9.ccf248",
            "2705e4ec.6d650c",
            "ea32976ff44ab826",
            "e3dba22f.3fd21",
            "7358889e25a9730b",
            "deadd391d9a98ab5",
            "3f8e772d5525d94a",
            "0de54509db195c49",
            "cf15dfa9acf0c78c"
        ],
        "x": 34,
        "y": 959,
        "w": 712,
        "h": 242
    },
    {
        "id": "6b3fc99d.7d45d8",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "Diagnóstico de Red SWC",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "856da30f.2df08",
            "7342b43f.bedb2c",
            "df476a8b.883118",
            "3663f735.969b68",
            "babc7e0a.35af5",
            "ef1ec9d.e6ba638",
            "4933a716.e0ed08",
            "ccd73af1.690d48",
            "61e7fdf2ae5b9c9e",
            "8b49a22469343868",
            "03894c480a20a7a9"
        ],
        "x": 1094,
        "y": 959,
        "w": 1192,
        "h": 202
    },
    {
        "id": "9bdf522.eba6db",
        "type": "group",
        "z": "bef159b0eb2cf912",
        "name": "Máquina de estados Incremento prolongado",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "51d6f5bd.7b3bac",
            "7984b34.194704c",
            "406ea535.518d9c",
            "67f2d064.1098c",
            "825a8d81.e5826",
            "39b139ed.19f7a6",
            "76e5042d.a8799c",
            "595852e0.7df8ec",
            "cfde9e34.955e5",
            "6bb7cd2e.159434",
            "8b72bbb3.5d5a38",
            "b416b548.9000d8",
            "ea102947.4ba5a8",
            "36c8477f.f95a48",
            "223f7107.39115e",
            "f144e183.7ff68",
            "b130bfc6.1176",
            "a0fa86d.e053b78",
            "95ba5bc8.730648",
            "80958343820b9c28",
            "ae40d46c1e2917ed",
            "db3fdb908ecb466b",
            "ae172e07.4eb89",
            "9f324830.9da0c8",
            "295e7694c13aceb8",
            "bbb7f8e6bcef99a7",
            "e7e169ca4e5a950c",
            "5daaff04fc344334",
            "e8e6627edafb7e4b",
            "bbb0593f5e861907"
        ],
        "x": 44,
        "y": 499
    },
    {
        "id": "7b407017129e2c3f",
        "type": "group",
        "z": "18d8f6b717fbdf76",
        "name": "Configuración Gráfica",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f74cea60.fcb698",
            "fb3c6926.732028",
            "fb0cb7ee.fd5898",
            "bd09ef7a.b5593",
            "deff6b32.1521a8",
            "7157d825.d18368",
            "44c815d7.7d19fc",
            "133426a.57f73d9",
            "a8a729db.101208",
            "9408742.a02f988",
            "82a14e7ad6ab2948",
            "3ae93c02217b5b2f",
            "0854324f06e6da08",
            "19fba003462f3717",
            "493e60583e5c317a",
            "645d9a5ba71350a1",
            "f92c8804d4db951a",
            "7ce1ea89ccdec386",
            "a46699b424dc32bc",
            "5f3854df5c8e1ca8",
            "b121db50c00ed93e",
            "f95759e7d28493ed",
            "beef9d38aa192130",
            "c3390704b058d213",
            "ed742163861f3de5"
        ],
        "x": 34,
        "y": 49
    },
    {
        "id": "9a734cfed6dfbaf1",
        "type": "group",
        "z": "9941a439.4b17c8",
        "name": "Configuración - Visualización Protecciones",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "37b64a70f39dda06",
            "87fca62744442ad4",
            "95daead77be77494",
            "a7f58aaec292b159",
            "ee5753bdd6eedb72"
        ],
        "x": 78,
        "y": 33
    },
    {
        "id": "b3942c43115e460d",
        "type": "group",
        "z": "9941a439.4b17c8",
        "name": "Estados y disparo de Protecciones",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "99671f60976b1d2a",
            "dbdc491cb6e9eee5"
        ],
        "x": 1488,
        "y": -7
    },
    {
        "id": "0474082dbe49e1c2",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "name": "Navegación IM/PMM",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "106ca9e625394352",
            "1b6d3ebacefe3d37",
            "9cdf3802172b71cc",
            "a28622130c14789d",
            "434bc2a7ef4648fe",
            "e47d9aae66b9b7ad",
            "57d065564d629038",
            "f95e46ccd8ac066d",
            "19c4a03f21911a68",
            "2860f506c52efbc2",
            "63243c41273cf7d9",
            "cb8e42aa56a6b2ce",
            "cceaec3f0ca53e04",
            "4afcbaac77839321",
            "9d0fffcb9a325d70",
            "f21eae2ca8cf2e94",
            "f16f772e573fd5ce",
            "20ba747923598475",
            "3cbd8b298714a327",
            "6b796b9d0ec051e0",
            "9d2e714d2884e2b7",
            "8ae59eea10204a4f",
            "d2853f7de9a85224",
            "58b74f02b3f60b0c",
            "f407b78dc23fb32c",
            "9cba57eb85267c36",
            "d4daabe197993fa3",
            "563a90fe780ab40a",
            "c71541cb5e570e62",
            "d5a3c6290a63030e",
            "623b79c2b0162bc6",
            "95c97983.71d388",
            "481a8ff2.e2ec1",
            "8080cedd65508fc1"
        ],
        "x": 44,
        "y": 2239
    },
    {
        "id": "3b46205e7c2e192e",
        "type": "group",
        "z": "e483884bee93bec2",
        "name": "Ajuste de protecciones desde Modbus",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "527fb039.aa59f",
            "f52d84f3.4970f8"
        ],
        "x": 2458,
        "y": 43
    },
    {
        "id": "08ae5a87c119f624",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "name": "Eventos Navegación",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "931b0370.afc1b",
            "d929d138.3b512"
        ],
        "x": 1248,
        "y": 73,
        "w": 324,
        "h": 324
    },
    {
        "id": "482200446b2a6616",
        "type": "group",
        "z": "e483884bee93bec2",
        "name": "Tipo SCADA",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3454aecec2b8cde8",
            "1feec9a4535b665b",
            "7b6eb12fa8a2304d",
            "76db56cf8aa9c664"
        ],
        "x": 84,
        "y": 859
    },
    {
        "id": "b45a4400.43489",
        "type": "group",
        "z": "e483884bee93bec2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "37b1384c.b01fc8",
            "7ac30616.86268",
            "a8908e3.92ee7f",
            "adb11e12e96f0a22"
        ],
        "x": 1114,
        "y": 999
    },
    {
        "id": "9a19e63e2b7f231e",
        "type": "group",
        "z": "e483884bee93bec2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c117cee0146ec7e5",
            "e2e299a6.d3c5c8",
            "e52ecc43.c86a5",
            "f6e30287.8d13d"
        ],
        "x": 68,
        "y": 33
    },
    {
        "id": "20a59349.5b554c",
        "type": "group",
        "z": "e7088c4e.cc6b4",
        "name": "Ultima detención",
        "style": {
            "label": true
        },
        "nodes": [
            "c2c2c8b5.2756c8",
            "95321517.b23b88",
            "def1bbac.336cb8",
            "b4dfa5ba.66e068",
            "2f9d4e3e.f5bb62",
            "2907fd80.639f02",
            "f291cd1f.07a95",
            "5a8731ef.91be5"
        ],
        "x": 1774,
        "y": 19
    },
    {
        "id": "c2c81bf2.d0a218",
        "type": "group",
        "z": "ebaf6b5134c2a666",
        "name": "Control PID",
        "style": {
            "label": true,
            "color": "#000000",
            "fill": "#addb7b"
        },
        "nodes": [
            "afcd8222.ca23b",
            "cf985e84.c7693"
        ],
        "x": 18,
        "y": 13
    },
    {
        "id": "1178951067fce7a4",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "Inyect last reference",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "25e6e69ca5aed538",
            "eb7ab466.6a90b8",
            "9bd1e11d.4da77",
            "890cac9f.ef77",
            "1a666ca6835d2d34",
            "5e9480f01e3c4b75",
            "fd43d65633c388cf"
        ],
        "x": 534,
        "y": 2999,
        "w": 762,
        "h": 182
    },
    {
        "id": "3a4b00b6e7d09e3a",
        "type": "group",
        "z": "bef159b0eb2cf912",
        "name": "Configuración Ref Prolongada",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4ce031c644161551",
            "44b727f8b1644f59",
            "efe8acb9d356845d",
            "472809a09b0bbc57",
            "60147134ac0b341b",
            "b39733923cc0b641",
            "c27cb084a6f62baf",
            "7219dcb863a2c3b2",
            "9f4b355a3084b991",
            "a770e5fe78f92fe7",
            "2823e7ed6786ef76",
            "7d435bd209becfc7",
            "e80688147fe09808",
            "4391f93affafd7a8",
            "b8719faf43e567b6",
            "39607c495a244614",
            "5f33dee798d46a51",
            "a8fa4bfd132668a6",
            "162a8666c5990542",
            "d52c8745f2dcf456",
            "2ff480a1df8f6421",
            "44c036455c97db1f",
            "dda93ddb4cdd8e42",
            "6df94c87285004b1",
            "65c8020583102863",
            "e262ad6ae9015a31",
            "05f960527ef968ba",
            "53d31594ecf44cdd",
            "d47b33e4bb67ed8d",
            "32c533cd806813d9",
            "aeb76c9ced35d9f4",
            "9c5515f79c0d3921",
            "9a23521db4cf3e10",
            "ac2c282207510e0a",
            "0d8935807bf48065",
            "6943549b680dd673",
            "5f28e0260ab07b11",
            "6f1f2fc244d27fc2",
            "4f53dfb62883c1ff",
            "7c0eb170.c43d1",
            "5378dc339b4a7503",
            "cdc3f81082ef5bc3",
            "11717dd3aec1338f",
            "ea89edab35b9a3f3",
            "94af1ad005c45bd0",
            "726f6b06fb5eadb4",
            "43c7fadb8296320f",
            "c0984e4d12fb5c0c",
            "df585b7236ec5055"
        ],
        "x": 44,
        "y": 29
    },
    {
        "id": "26716b1e0dd96786",
        "type": "group",
        "z": "e483884bee93bec2",
        "name": "Tracking prolonged ref time",
        "style": {
            "label": true
        },
        "nodes": [
            "977b56e84f992b9c",
            "0b763c8cadd505c7",
            "575cba8bd41cb933"
        ],
        "x": 1274,
        "y": 859
    },
    {
        "id": "12a3e534213911db",
        "type": "group",
        "z": "e483884bee93bec2",
        "name": "Tracking prolonged ref target",
        "style": {
            "label": true
        },
        "nodes": [
            "9a63dbdf4e0f99be",
            "467c21fb4bd7a9a1",
            "19607e18163d56ce",
            "3154c6b4c8cc66ad"
        ],
        "x": 634,
        "y": 859
    },
    {
        "id": "99af8da767a0630e",
        "type": "group",
        "z": "e483884bee93bec2",
        "name": "Control ref prolongada remoto",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9dd957589ee217df",
            "d1e6de8dde9f69c8",
            "383d03b632f049e6",
            "4f3ea6384074c205",
            "e9213780ed441bdc",
            "b1623a4d0ab7c8f0",
            "7a9a543200435791",
            "6e660692407ba546",
            "082ae2d584d98115",
            "19231215a5a741a2",
            "44f1ff6177c8cbd1",
            "e636353ca8ba18cc"
        ],
        "x": 64,
        "y": 999
    },
    {
        "id": "2875fa33518b9c8b",
        "type": "group",
        "z": "e483884bee93bec2",
        "name": "Funciones de Control",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "385eb83d41dd3fbf",
            "4535ed1046164305",
            "1910455f45408d2a",
            "db968d1345f44509",
            "3312a576df424c46",
            "6c1d277cf9494c28",
            "0427840aec03285a",
            "ba03e78439726e1a",
            "937c2139d52cbc05",
            "34c24e2213f080b8",
            "c62e575b03c3fbf4",
            "0a089cd0b62fea8c",
            "85d94e678bb72941",
            "d66ecb27c345f344",
            "3e9fe9ba4feeebbd"
        ],
        "x": 64,
        "y": 1139
    },
    {
        "id": "1e1760200fc29774",
        "type": "group",
        "z": "e483884bee93bec2",
        "name": "Settings PID presión Mapa Modbus",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "94ca7768cd1415ed",
            "4fda1b05fdfab878",
            "7f5a0b529fb9f80f",
            "14a84ddaa9487761",
            "0ae15a15398873a2",
            "b81f6fa74c89d4b4",
            "0f9ea69e9302b2dd",
            "62e761f19af70f12",
            "6d970f1bee054be7",
            "8962f3815cdf9c6b"
        ],
        "x": 2464,
        "y": 769
    },
    {
        "id": "562a3cb193226c87",
        "type": "group",
        "z": "e483884bee93bec2",
        "name": "Reconexión modbus RTU",
        "style": {
            "stroke": "#a4a4a4",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "94552363ac04ccfa",
            "f2171731a54fc371"
        ],
        "x": 64,
        "y": 1399
    },
    {
        "id": "62fac95632266b01",
        "type": "group",
        "z": "38e901f121b52acb",
        "name": "Evento fall de comunicación Sensor de fondo",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0f0573bfc77396d5",
            "d6ed5fb294847658",
            "6ef36a66a2f5f9eb",
            "f84b1d2c053bb108",
            "e4284fa872b282d4",
            "97b2eb182dd8a393",
            "368d9188a60b7fdd",
            "a3e0a5db4f30662d"
        ],
        "x": 1894,
        "y": 339
    },
    {
        "id": "cdf073be70c458e3",
        "type": "group",
        "z": "4c43e2ae2d9aec48",
        "name": "Actualizar librería PowerFlex 755 Black",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "36f95f70ccf63de1",
            "20405d20297ca08d",
            "3539776256db88ec",
            "f35238f5504731e5",
            "6c5df1518abcc7e9",
            "bc05ec2a30e4c881",
            "a0a010e125181197",
            "30bd0cb80ad79de5",
            "7d4643cba6304672"
        ],
        "x": 654,
        "y": 751.5,
        "w": 652,
        "h": 307,
        "info": "# Condiciones\nSólo funciona si el nombre del proyecto es \"CILA2S-ESP-SWCPRO_AFE\""
    },
    {
        "id": "78ef64315cd0ce13",
        "type": "group",
        "z": "4c43e2ae2d9aec48",
        "name": "Reemplazar Images de Inicio del Dashboard ",
        "style": {
            "label": true
        },
        "nodes": [
            "8954035d0a8f1631",
            "e68013d871eac1ad",
            "b9d51a758c063405",
            "fb094e793357db7f",
            "8939ae1589f73827",
            "2a74d2652ba40313",
            "eb54458a9f9594a8",
            "7678f4acbd0db084",
            "59eca6c2abde58bc",
            "253e92bec7f97195",
            "9ba6cd185a117255",
            "cdfbf8cd5bdab07e",
            "355c46fbbb336d6d",
            "6b17f15625324adb",
            "5a6a33ce45c42196",
            "bd32ed88482e9c36"
        ],
        "x": 54,
        "y": 1079,
        "w": 538,
        "h": 649.5
    },
    {
        "id": "40d3cefab634ddad",
        "type": "group",
        "z": "4c43e2ae2d9aec48",
        "name": "AFE balck Edition",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "91e55e6983bf455a",
            "5d824d49885ba783",
            "fb9e86c361917fd8",
            "b8d044e75c493a2b",
            "1902da7dd948937b",
            "0157dedcb48ab813",
            "a579cd13d184ebae",
            "af07bd6da4e63f8f",
            "8ee841a674a90ec4"
        ],
        "x": 54,
        "y": 751.5,
        "w": 572,
        "h": 287,
        "info": "# Condiciones\nSólo funciona si el nombre del proyecto es \"CILA2S-ESP-SWCPRO_AFE\""
    },
    {
        "id": "605d50dc83a98078",
        "type": "group",
        "z": "4c43e2ae2d9aec48",
        "name": "Cambiar Splash",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8ff160913729fcb1",
            "510b47c4f9f0e95c",
            "0855ddfdc4bcf012",
            "54f95f30bf9a6bbe"
        ],
        "x": 654,
        "y": 1091.5,
        "w": 432,
        "h": 157
    },
    {
        "id": "5c9801fdee1b9e98",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "name": "Header All Screens ",
        "style": {
            "stroke": "#d1d1d1",
            "label": true,
            "fill": "#7f8faf",
            "color": "#ffffff"
        },
        "nodes": [
            "ce96fe756e53c0a0",
            "3fb8bbbc0defe6a6",
            "f57c6beca1b20786",
            "e4251ebaa452dc47",
            "186ee7f203734f85",
            "7c6ff4da66ac0cc1",
            "dad6e54bbf3f8ac8",
            "88dee94e10e8741d",
            "2302ffda8592e4b4"
        ],
        "x": 974,
        "y": 459,
        "w": 312,
        "h": 402
    },
    {
        "id": "a55fe2f884c89e71",
        "type": "group",
        "z": "902fc438.e5d758",
        "name": "Tendencia home",
        "style": {
            "stroke": "#a4a4a4",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2c94ceb6cbbb8cd1",
            "83023dd30811818a",
            "7841d296e32be02e",
            "d6ca01c917296363"
        ],
        "x": 14,
        "y": 1679,
        "w": 532,
        "h": 142
    },
    {
        "id": "38940f8.c9c27f",
        "type": "group",
        "z": "2858ae04397c7488",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "70a63b74.44894c",
            "ee01b6d1.f76f98",
            "dc201b4c96bf9cb8",
            "acb738077324d4f5",
            "ead83bdf05616014"
        ],
        "x": 18,
        "y": 23
    },
    {
        "id": "6ce8e77fdd3e0883",
        "type": "group",
        "z": "38e901f121b52acb",
        "name": "Reconectar sensor de fondo",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "23f92de5ec381106",
            "5a5c7bbde1986cca"
        ],
        "x": 2234,
        "y": 239
    },
    {
        "id": "14f2aa5a616905b0",
        "type": "group",
        "z": "2858ae04397c7488",
        "name": "Reconexión PQA",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d6617fe34e1242e1",
            "98c32ee0a85b9ad7"
        ],
        "x": 474,
        "y": 1039
    },
    {
        "id": "a73c3da33ecbc290",
        "type": "group",
        "z": "e7088c4e.cc6b4",
        "name": "Adquisición de eventos SAG y SWELL de PQA",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b12eba6fd0e17d1b",
            "1643986494e61d09",
            "1c0275c34f3f9e2d",
            "be1dcb53f06bb73c",
            "5d0d0564b7be518e",
            "1d092dec161ff8be",
            "fa5e45a53a5caf5e",
            "bab297d8e38d1fcc",
            "490a325563bb2b0f",
            "8cdf9e74dbd5c0c5",
            "e48317a5283cbf0a",
            "d30eebef31591926",
            "00d05a309c7c6ed1",
            "09f6acfa5e5cc6f3",
            "a26de32e2dcd2d22",
            "8cf1c791b0b47299",
            "dbce895a0f6ce0d4",
            "7d85f80cc3c27c5f",
            "74580d7aefe3b448",
            "f053a3ef63abbf05",
            "4ae0bb1a2ebb141b",
            "ee89b458b55779ef"
        ],
        "x": 84,
        "y": 999
    },
    {
        "id": "ef99c8bf39cb12ee",
        "type": "group",
        "z": "e7088c4e.cc6b4",
        "name": "Datalogger inteligente",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4d34d9c39ea9ded2",
            "d38e41d42749671a",
            "969d8fb4a4d15631",
            "97c807c1cde7d7ad",
            "054ce8d4b4d3feaa",
            "f721ad059ebe8c87",
            "7e23e60415c042ca",
            "99c66c0d456be274",
            "7f68e60b6bcca236",
            "3e1b13e612db7827",
            "dac1d568dc8320ef",
            "fe70b631c41feb58",
            "f23a659cd0a28f68",
            "45ea2f3b7b0db088",
            "185362389c4ba49c",
            "aa0c6f2f1857c988",
            "9f928098844fc95b",
            "f4b48211bb151221",
            "f122345c94f70dd6",
            "07425a23aa5a0f54",
            "71f2a010dbe92ca0",
            "32a1993d1a97aa54",
            "7b25eaf1bbcded8c",
            "367ccf51e2a0b6a6",
            "16afa1f5f7dc62c6",
            "92681599211b5c1a",
            "f23be6785e9ef561",
            "92a3ced62fe1792f",
            "35829a65d3583713",
            "4a9f332cf0866f31",
            "0ee3bd6b8995e671",
            "f0241497e5ab15d9",
            "1e62621c23af5836",
            "e9e2cd19031e3496",
            "4081874fcc1e456f",
            "bd2caffeba935272",
            "575e2c87503e8e40",
            "a2c7905d2fd47522",
            "b62ae7ee359ad1c8",
            "41dcf4bd9dbee179",
            "73cfbcfce264d0b2",
            "47fd7e4516cca7ea",
            "80db24a4bf6da7a1",
            "dc02777dd42d3b3c",
            "c9ada558c6cd767a",
            "2db8861f9036d4b5",
            "d6cc6a14211fbb52",
            "f81c5469551cda8f",
            "6a66df72dcc45e12",
            "450b7d6a02c8f87a",
            "7ae6c01eed40c021",
            "35804c8cf6abb4b4",
            "0ddb0b7d6b3ad0ea",
            "51e2ba8e9d633518",
            "907554900c736361",
            "2503fbac96a3adb4",
            "9880e17fc566d4a0",
            "2dcdcbefc82e8eee",
            "ddcc2b539ae52a88",
            "4f42a07c80b4d5bc",
            "78802ee4ab2d7860",
            "079f9b945da9d33a",
            "4f21f696a5414e2a",
            "a7d327324e0d9817",
            "fb821b484a78cf1d",
            "e886da873e0ee6a0",
            "8c1d7db85d4d9264",
            "49c5e6d960779b36",
            "5da98c90313abc58",
            "bc3666a5f87878f4",
            "70cc72ed49d03464",
            "a0c2e815c0d9e4d4",
            "dc748c8ba6c06c76",
            "c45fd7bb53fd598e",
            "3a5768aeb6cdd348",
            "2f31be3d5d542ff6",
            "3c2754ab7c4da092",
            "328f2a1a633d116e",
            "6a59c2215811b08b",
            "74eb7f10c4cccd95",
            "fb752468a5e98b48",
            "b552ad2437f71beb",
            "3120732a7cdecb8c",
            "f6ef5c936a2f64f1",
            "624db792d9278081",
            "38dfb44b87844fdf",
            "85de4bfdecc8488f",
            "5d0bec7de83934b7",
            "8957fbfe4d116bbd",
            "f736a5abb72e972f",
            "281862cc6ff52331",
            "388a0627e7b6f7c9",
            "9efbbc4fce014bcb",
            "68f331b06f4142f2",
            "4555b569a677dcaf",
            "a411cc3e683eabea",
            "f70dbb20e18055b9",
            "9de3a38ace1638b8",
            "c43eb4c44df0964c",
            "9cc6dcc0a22ca5be",
            "e2ae23cedd8d79b2",
            "dd86e7bfc458132d",
            "65668775670971ab"
        ],
        "x": 1394,
        "y": 1019
    },
    {
        "id": "de313b37d3ca86b4",
        "type": "group",
        "z": "7af521b51c8e6a51",
        "name": "Datos para Sensorless",
        "style": {
            "fill": "#dbcbe7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8e77e45481f2ce74",
            "1f5b91745cf74c06",
            "11282e89dc9749a9",
            "a850b4c0d60fb314",
            "a651d20b61d8eae1",
            "92af29b43d98cf42",
            "bb0e848bf8df0746",
            "57b0e7b8b4128b6d",
            "477274a152d422ef",
            "60c53a5b248e3c83",
            "968e4e27382ad46b",
            "73514f96913027d0",
            "7ef0d7fd20e90152",
            "f4c2848e1a087910",
            "88efa1935790c033",
            "a940c34393a3c21f",
            "be0ea5dc9ccd2372",
            "a615ab4f97d0df6c",
            "e14265ab1a2c8731",
            "b90c6c88f56765e9",
            "e2cab74926656de7",
            "44e2d32a5618e21f"
        ],
        "x": 14,
        "y": 1059
    },
    {
        "id": "e9acf894c223c544",
        "type": "group",
        "z": "7af521b51c8e6a51",
        "name": "Avas IPR ",
        "style": {
            "fill": "#b797cf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "13e56b225a4f7262",
            "65f9fd69cd644489",
            "209a7e73d606bd63",
            "df1d97613cf01d63",
            "92c275e98763b20b",
            "61a0e01d8198af31",
            "1d7f7e08aa6be572",
            "81040b9d06e8a4cf"
        ],
        "x": 14,
        "y": 13
    },
    {
        "id": "bb085715e2738a9c",
        "type": "group",
        "z": "7af521b51c8e6a51",
        "name": "Asignación de datos",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "71afc427dc4e32a5",
            "7d0fb5e1b5d85914",
            "9d7807bc3969807d",
            "f4f95fc766314268",
            "560d12e1fedae98e",
            "9a3fe8f4e8cd6366"
        ],
        "x": 14,
        "y": 1559
    },
    {
        "id": "5dc71a84bf12ae23",
        "type": "group",
        "z": "7af521b51c8e6a51",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c8c0bcb1ebd9fe87",
            "68a2367b68a2d36b",
            "74b76e998626d493",
            "8b6c1f1de90514c9",
            "3232c7cbd0e96a18",
            "8f3bb3f83df36820",
            "9760d6fc054dbb32",
            "485f8467108ee0df",
            "cf63e264fc5ccf5c",
            "da666b63953f842e",
            "b3903684adce0c4c",
            "9359569d1a0d28db",
            "f2cbfa42b06d2425",
            "43cd392ac81ac6ca",
            "2465266dce183982",
            "cf278cc310a75f2a",
            "b0156b916b41fd41",
            "8ab99b43.236ef8",
            "b506833eadd068ed"
        ],
        "x": 1294,
        "y": 19
    },
    {
        "id": "936eab7d97be78af",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "name": "LEER, ESCRIBIR PLC A.D",
        "style": {
            "label": true
        },
        "nodes": [
            "f88ee0328a8f5964",
            "138266be848cd64a",
            "6afa3775f2be0e4d",
            "3af54985e9349f2c",
            "8dc4ac2430aa44fc",
            "0ad7006f65f3d19b",
            "7397d1cb1a9a2fa0",
            "c30c78cc60db84f8",
            "6b2ab85fc1f64252",
            "bba3aa277bcf1444",
            "e0ebb1532663774a",
            "8be993bf3ba4ae30",
            "eb02c5e2d4135d47",
            "f04f801e0bd8ff6a",
            "9f6c8af864ad03c7",
            "9adbbbd6b997667e",
            "d4216d9506b296f0",
            "58193979505252cc",
            "2800358056b8906c",
            "b2f03b978904c38e",
            "2c02e2ef212817a8",
            "5770bf05578643c0"
        ],
        "x": 674,
        "y": 4179
    },
    {
        "id": "b41ee12005a32e8e",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "name": "Configuración Caja Reductora",
        "style": {
            "label": true
        },
        "nodes": [
            "8c883beecb073f29",
            "f00d56fe45dfd7e6",
            "eed8fecdae2e657d",
            "32bc047cbfe5209f",
            "f35627cd1cfa7f47",
            "b9f0543b020f09e6",
            "7c41ad0f41e86a32",
            "1531a70dc9391c98",
            "03837bc80d795dbf",
            "744ca6c9d01302bb",
            "14c39db2aa8e8711",
            "c2e616ae555eda40",
            "0a8b8a1414acb20f"
        ],
        "x": 54,
        "y": 3179
    },
    {
        "id": "e2e299a6.d3c5c8",
        "type": "group",
        "z": "e483884bee93bec2",
        "g": "9a19e63e2b7f231e",
        "name": "Escribir valores en el Mapa",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a114a289.8a1e4",
            "1e5314e3.cd3f7b",
            "16d0549c.29adcb",
            "b74aaf11.088a3",
            "43428867.2750e8",
            "e9fd7861.d2db88",
            "238050bf.0374f",
            "573c6f3e.737db",
            "c1702022.91ab1",
            "97dbb46e.15a998"
        ],
        "x": 94,
        "y": 339
    },
    {
        "id": "e52ecc43.c86a5",
        "type": "group",
        "z": "e483884bee93bec2",
        "g": "9a19e63e2b7f231e",
        "name": "Cambio de sentido de giro remoto",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c973a8a2.547fd8",
            "ab968d92.63f1a",
            "b7525f1.09e7ba",
            "767f6ef3.dc93e",
            "32b103a.fd52dfc",
            "df95f144.a381e",
            "ee97766f.b938a8",
            "dbdd149d.067a48",
            "75ae9dfb.c587e4",
            "c7fb486e.cbe278",
            "2ae6e9d4.8de576",
            "147476e5.8f75e9",
            "b468d7fd.170728",
            "8e0bd418.ddd0a8",
            "9b2f7ea6.27b4a",
            "1b2dd03e.2d9c2",
            "367aaa61.59c686",
            "80168343b8739cfc",
            "e9a27110d3a5ec11",
            "3611a75838121692",
            "3beef93f3144bc82",
            "5d696eb6d1b57169",
            "ac48a73ca5e98ec8",
            "2dd8e878a937af2c"
        ],
        "x": 94,
        "y": 569
    },
    {
        "id": "f6e30287.8d13d",
        "type": "group",
        "z": "e483884bee93bec2",
        "g": "9a19e63e2b7f231e",
        "name": "Referencia remota",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "826fef16.9c1a",
            "69f6e4eb.80e62c",
            "f7d52c85.918f3",
            "ac4a48c1.4681c8",
            "2a1f1c0d.25ca44",
            "deda81b5.9e94a",
            "c687d6d470168640",
            "83ae31690d1972ca",
            "96f743d2fd4a62b8",
            "730f767fbc450987",
            "25370127fccaf364",
            "8d0786369fd3802f",
            "d47b00374bf9b04e",
            "971e052f5f27f92d",
            "a5f79bdaf8d4e1ea",
            "f5e1989e29bb2e65",
            "c6349afceceaa2b1",
            "8b1a609d64c70224",
            "6ee257d699f817b0",
            "b9964b24b8e04eab",
            "0b0df3a707795c4a",
            "af1e567e54d62d35",
            "2cbf4228734cf0ab"
        ],
        "x": 1084,
        "y": 339
    },
    {
        "id": "c117cee0146ec7e5",
        "type": "group",
        "z": "e483884bee93bec2",
        "g": "9a19e63e2b7f231e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "95837cd7.bf6c2",
            "2941139c.7c7b0c",
            "21fd4ac4.46c936",
            "17ca02e7.855ccd",
            "9515e42e.7cd818",
            "66f58a7.5c16574",
            "75c0e161.43a1c",
            "ead1502b.eb49",
            "46cdb592.10060c",
            "5c77bc75.2ac4e4",
            "eaf3c61f.78e7d8",
            "5b1cac10.b42af4",
            "922be5c684474398",
            "809262472babe067",
            "04f4b5dacafd8d8a",
            "18dfc8d5e0aea327",
            "5d4610f087064296",
            "2e3cdd711a03c0ab",
            "ef5d21afc5393db0",
            "6e4f3aa97716a07f",
            "44c1195dcc60d5f0",
            "40a7a5e88d4d7930",
            "75f68408374f389c",
            "29b89c8339e18619",
            "af93f6b34f6ca585",
            "65facb997d933eab",
            "8a633215f5f69823",
            "f16c8e907b36e129",
            "1c4082263cd5819b",
            "a1b50cf6ed1c0958",
            "d2f91eb0e1d587bc"
        ],
        "x": 94,
        "y": 59
    },
    {
        "id": "d929d138.3b512",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "g": "08ae5a87c119f624",
        "name": "Eventos de pantalla",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6e752954.f1b758",
            "8a17d991.081178",
            "4372d5a0.d338dc"
        ],
        "x": 1274,
        "y": 99,
        "w": 272,
        "h": 82
    },
    {
        "id": "931b0370.afc1b",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "g": "08ae5a87c119f624",
        "name": "Notificaciones",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "230a6662.27d8ea",
            "65dbd957.020378",
            "207ea8ce.3dea68",
            "cbbbcd1c.7180e",
            "c9c60e8060e9ce10",
            "52f1e35a6b450a62"
        ],
        "x": 1274,
        "y": 189,
        "w": 272,
        "h": 182
    },
    {
        "id": "dbdc491cb6e9eee5",
        "type": "group",
        "z": "9941a439.4b17c8",
        "g": "b3942c43115e460d",
        "name": "Protecciones",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f8baefd81119f16d",
            "e5fc5b4881c0f9df",
            "233e4f7d69176554",
            "41c53a29993cf119",
            "63fb3c1006e10f66",
            "2af5d35f7e135f74",
            "e63d7c218dfa3131",
            "f96d74aeb0c6d7c9",
            "1fc2d5c8c31847d9",
            "f90c77cce78e8938",
            "38eb03411b2d00a4",
            "f939f41a8ca3bfbe",
            "1f703339.98e8cd",
            "f0a7aa49a0a74635",
            "5dea5f3a2e3fb369",
            "412d39b3d6365e23",
            "1a8c4a3f92c0ded2",
            "edee9c45251eda71",
            "12e8c4108bf41494",
            "88548b2e943eafad",
            "d0a28faca735a7cd",
            "d98b5b76f78e1dcf",
            "0dbb0daa3dc39314",
            "d76e4d26562180bb",
            "20fa657d189a7cd8",
            "66ad2b617a4c9304",
            "c0793ecf8b698a86",
            "11a3e1a0.57fb4e",
            "2ed8536c3c3c63ad",
            "1d84d1358359ba1d",
            "8618be3dd8824ba7"
        ],
        "x": 1514,
        "y": 299
    },
    {
        "id": "99671f60976b1d2a",
        "type": "group",
        "z": "9941a439.4b17c8",
        "g": "b3942c43115e460d",
        "name": "Detención del Drive por Protección",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fc115c1c3c5adc56",
            "cd8568898a1445e0",
            "972aef4d6395664e",
            "216de0af1bfc86e8",
            "b851e9e0bcbacdf7",
            "03c7ddb21f171192",
            "633f44af41940f7e",
            "198c5f953ea61b81",
            "6fb0ab0f1387a9a8",
            "a84bce49f9e89b58",
            "74dcac6d2f510c53",
            "6a229694c9c0fbca"
        ],
        "x": 1514,
        "y": 19
    },
    {
        "id": "95daead77be77494",
        "type": "group",
        "z": "9941a439.4b17c8",
        "g": "9a734cfed6dfbaf1",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "400ce727.4517c8",
            "b9cf40b5.69993",
            "1db2d1d.1c82b2e",
            "b6f6a61e.0e38c8",
            "7e389392.ac4dbc",
            "a87faac1.bb76b8",
            "79f09a4.a918e64",
            "721711bc.7db34",
            "7fdf0e15.2e7a9",
            "2fe2a445.25977c",
            "6c899679.fb9ed8",
            "9cbac96.37b2538",
            "fd740530.6ea6e8",
            "b619d99c.fdf4b8",
            "85089df3.64f3f",
            "d9c1727d.dc991",
            "abcfcbee.604498",
            "ebb37133.902fa",
            "da307934.bf9758",
            "f66f318f.e1d3c",
            "7831058.b11adfc",
            "5629df50.34e2e",
            "7c306901.d02908",
            "8ccdb23e.cee62",
            "96dd78cc.aad9d8",
            "c6b036f4d80b1a9a",
            "652eef7ff30e8029",
            "2dbce9795a096dfe",
            "bde48f770f85aba2"
        ],
        "x": 384,
        "y": 1129
    },
    {
        "id": "87fca62744442ad4",
        "type": "group",
        "z": "9941a439.4b17c8",
        "g": "9a734cfed6dfbaf1",
        "name": "Habilitación",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5dd9cf85.27896",
            "deffcbd1.da3648",
            "6e5cff51.ca9b5",
            "de6d6ff9.56ca3",
            "8f738cb4.9e191",
            "c2bf520.28a1ab",
            "6d577b26.f18754",
            "8b18fca7.f8239",
            "60f8fb0e.0d2614",
            "2339a5ac.9523ea",
            "977f27b6.a4ac18",
            "73e8a4e0.cb406c",
            "3d7397df.5ea198",
            "68d97034.e931b",
            "429bf2da.4bbcec",
            "b5cb6f06.167ce",
            "9d4270b8.c13a9",
            "3db2865e.468b9a",
            "a7e30e7d.a2a26",
            "1e4fac6.8c41954",
            "19a66bb9.eaa504"
        ],
        "x": 104,
        "y": 229
    },
    {
        "id": "a7f58aaec292b159",
        "type": "group",
        "z": "9941a439.4b17c8",
        "g": "9a734cfed6dfbaf1",
        "name": "Setpoints",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b97782b7.b47be",
            "ddfcf25.e7fe71",
            "410685e8.07f64c",
            "1fd029b.46df3d6",
            "36c5ad7b.d3fa62",
            "4c2d321d.01398c",
            "410660d7.f2d6",
            "5e2f16a6.aa56b8",
            "a3904b79.ced4c8",
            "f322ed66.a544",
            "63a08073.58c7c",
            "363b001c.00b61",
            "f5088006.ca943",
            "143cdae5.a42c25",
            "1364a1d1.b3fb3e",
            "949f4a44.b36468",
            "9e597c33.a74f7",
            "56513a0.df0d0c8",
            "d1d4282.44780d8",
            "ef579a2e.12ee98",
            "5a49fa81.518a74",
            "3056b595.debbaa",
            "3dbf77cf.4aba18",
            "2152075deac4a89d",
            "30359a42be66cafb",
            "dfa8404d9c6a7f4f",
            "e08e4b7c2b9e63c1"
        ],
        "x": 104,
        "y": 509
    },
    {
        "id": "37b64a70f39dda06",
        "type": "group",
        "z": "9941a439.4b17c8",
        "g": "9a734cfed6dfbaf1",
        "name": "Tiempos muertos",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7a934192.2c198",
            "e3d1e9c7.edab28",
            "6b0e8d5f.299684",
            "58160456.e38f7c",
            "1dd04927.d420c7",
            "d6c44294.8d5c4",
            "abe95f44.c6928",
            "6ad13e30.8d694",
            "2b073dd5.537132",
            "65d1ab48.e61414",
            "fd6407f4.3aab98",
            "2cdd9d25.204662",
            "f1f2cd06.98ab4",
            "99256b55.7d96e8",
            "f0fd85f4.866ff8",
            "146ef6f6.8001b9",
            "cff34256.f092f",
            "734dc18d.34a9b",
            "63852295.9e94dc",
            "a6cf636c.f3836",
            "e0a3fe6a.f68a1",
            "b7c04dbc52f1518e",
            "fd7610f36124f3bf",
            "fd21111ca22e29fa",
            "fc3f919b2e15cdc9"
        ],
        "x": 104,
        "y": 789
    },
    {
        "id": "ee5753bdd6eedb72",
        "type": "group",
        "z": "9941a439.4b17c8",
        "g": "9a734cfed6dfbaf1",
        "name": "Tabla Protecciones",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4c77f9bc.81feb8",
            "f82abc70.f86b",
            "cc3a2f05.7f208",
            "ca2c2f23.6cc77",
            "58ac270c.e2b418",
            "a61b19cd.790608",
            "89112155.2a218",
            "e469fa2b.b205e8",
            "65b175f6.1549bc",
            "5bf2a7aa.f590f8",
            "5ab224aea45fee3e"
        ],
        "x": 104,
        "y": 59
    },
    {
        "id": "b079c206d161b62c",
        "type": "group",
        "z": "902fc438.e5d758",
        "g": "986845c5f7bf4a6e",
        "name": "Datos C2S",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "da849ce7.0ef51",
            "a9bfdd539a3af04e",
            "2958b089336b7560",
            "f93d008c4941f1f3",
            "418bd57d6e9c178d",
            "c4507372adf32737",
            "def0c8ddae21bc33",
            "8f00cd8e28191886",
            "fd7d8e466c89b924",
            "06ed38b7797ff80d",
            "7f65b417a3a88e16",
            "6955fc6ecc3d7c19",
            "80ed9b3f88067f5f",
            "f458467692584c33",
            "cca11fa308c0840d",
            "4cdb6f97ddc0cb13",
            "fd10872c8ba7f129",
            "d1bb75bd64fc58b1",
            "87f10cbd3a2d9eec",
            "68ba7be08a9049a1",
            "421f2b5fe1dbe6b3",
            "f4b06287d144da8b",
            "9708fb7ce60bdd70"
        ],
        "x": 594,
        "y": 1399,
        "w": 772,
        "h": 702
    },
    {
        "id": "f7709059ebe5ad7b",
        "type": "group",
        "z": "902fc438.e5d758",
        "g": "986845c5f7bf4a6e",
        "name": "Datos Eléctricos",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "36fa9c99094e8f47",
            "aafad2ba.dcc8b"
        ],
        "x": 618,
        "y": 2533,
        "w": 1894,
        "h": 414
    },
    {
        "id": "c483d44b5f6def10",
        "type": "group",
        "z": "902fc438.e5d758",
        "g": "986845c5f7bf4a6e",
        "name": "Datos de proceso",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6da4bb9c.3ee354",
            "61e97bac3a5fa1cd",
            "0a0df9d8a978db38",
            "8f8ff381bd9d2c1f",
            "2b715f6c759a6b18",
            "fa84d5e02a827049",
            "e44a08d354c85928",
            "cb8fca5aa01b3ab3",
            "440c76b3cb510964",
            "2f0f2458b8e59e33",
            "2fa030ef30608d2f",
            "d33dde4544af2cd6",
            "336430b48e86b80b",
            "6bf042012b32c37b",
            "ccb71f7b12aba0c8",
            "bbd59ab25e9049cc",
            "b2f44a0d0b45c665",
            "b7f3094c080b162b",
            "af7426950ecaa616",
            "31cd12a81cc4ce35",
            "48830760252f1247",
            "f1d4d62969cbc89b",
            "aa3ba9750fafce19",
            "75f247cd047b44cb",
            "494c25dceeae9fd7",
            "97fab81ee49031d0",
            "404d3ee6268725b6",
            "2662ae1844428c50",
            "95acda615faab2e3",
            "099520137e4ab863",
            "222bb80678f72aa6",
            "aabd8ae60349a4b0",
            "90fdc4810e9cd514"
        ],
        "x": 1454,
        "y": 1419,
        "w": 932,
        "h": 942
    },
    {
        "id": "77dcd918.f8c298",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "ed9802d3.5add5",
            "1502171f.780179",
            "4e16b16d.cb9b2",
            "606a3e77.9d00f",
            "db83bdec.22c7e",
            "54a6e602.e31808",
            "c6df69643b03cfe5",
            "d5ba2ecbce42ca80",
            "3108fe8ac8386097",
            "bc6a76eddcdfd1e1",
            "da31c60bdaccad48",
            "f97ac2ea32babdcc",
            "16bbbec3a6d114f6"
        ],
        "x": 534,
        "y": 1599,
        "w": 1022,
        "h": 202
    },
    {
        "id": "5d9b6e5b.adfe78",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "2bb641e0f5f82309",
        "name": "Salidas digitales",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "742e267a.cbc27"
        ],
        "x": 68,
        "y": 2823
    },
    {
        "id": "80a9920a.43161",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "2bb641e0f5f82309",
        "name": "Salidas analógicas",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f6e2a6e0.47efb8",
            "edfe6c51.d89c68",
            "a00ff6e2dc632d87"
        ],
        "x": 1358,
        "y": 2823
    },
    {
        "id": "1306de9a.9ba341",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "27a0641a.d154dc",
        "name": "Volts por Hertz",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7ed08f75.bf75b",
            "59d9f322.aedecc",
            "1d4bc15f.069e1f",
            "e8c7703c.35e3c",
            "4105a369.d1cc3c",
            "7b0567a6.14ba98",
            "9429095c.bf7808",
            "190647c5.caaac8",
            "d517c385.40ed7",
            "2e60217a.d7bbae",
            "17803970.897c87",
            "6f6dca07.0b3994",
            "f4d9092eba3243ad",
            "5fb8e65144bf6a74"
        ],
        "x": 954,
        "y": 1459
    },
    {
        "id": "c41a251e.427c98",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "27a0641a.d154dc",
        "name": "Control de motor - Volts por Hertz",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5c27d2c5.3f268c",
            "9bfa59cc.d6a398",
            "c1afba0d.22f5d8",
            "9b007129.593e9",
            "a7e937e4.d19518",
            "64263ab2.3a9e04",
            "d290dc22.ecd03",
            "454c0be8.b02024",
            "370e9542.6d045a",
            "5a72c82c.208f48",
            "1e07455b.07cd1b",
            "b732c4f9.4ad3d8",
            "a763d7bfcda17def",
            "dd0739fd9e6348e6",
            "5039c34e9497432a",
            "ac2cdd9baa7fe6f8",
            "4439aa38bfddcf38",
            "61a1dfd07f85203a",
            "93a963e82ada3353",
            "50d29025ecaf8df6",
            "8adf9c244d0720dd",
            "0a47c45733293452",
            "b36fa25daa569196",
            "9868544bf8a521ce",
            "c31591ac84f99b45",
            "e95ec941ba45f078",
            "07daee8465dca7bf",
            "68960b669106b8e0",
            "c245e8a8b48db5ab",
            "0238a15a00d7e007",
            "e9a747d5f95a0cbc",
            "9bd9b6cfa517c920"
        ],
        "x": 84,
        "y": 1459
    },
    {
        "id": "e032b1f4.a8be7",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "365d864c.8c19ca",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e5ce125e.59232",
            "4a1410ce.7057a"
        ],
        "x": 1698,
        "y": 153
    },
    {
        "id": "9bb5d411.271d48",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "365d864c.8c19ca",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "16097ef1.129291",
            "44ee5bb3.49b264"
        ],
        "x": 1718,
        "y": 1183
    },
    {
        "id": "8ac2b187.14625",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "365d864c.8c19ca",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "37d2bc6e.615114",
            "efe6d3f.f10193"
        ],
        "x": 1718,
        "y": 1693
    },
    {
        "id": "dd0fb9ab.f737f8",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "365d864c.8c19ca",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "826b087f.5615a8",
            "de31a457.a923c8"
        ],
        "x": 1718,
        "y": 1963
    },
    {
        "id": "dad86215.ed79c",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "365d864c.8c19ca",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "372b998e.a167c6",
            "baaa353b.511268"
        ],
        "x": 1718,
        "y": 2233
    },
    {
        "id": "27c43941.e9e0c6",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "43bab036.712ca",
        "name": "Control de motor - Datos Placa de Motor",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b97c0cba.aea3",
            "625acf36.28ca1",
            "52666b13.2f23b4",
            "9fce2d60.4554b",
            "a5bfded0.8a3cf",
            "dc569dcc.729",
            "b405c349.c96bb",
            "a90890e0.f21c8",
            "2b15e46d.065cec",
            "ed08c0de.3ee1e",
            "e89df25d.18cdc",
            "2d255252.339eee",
            "183f49bb.f6d776",
            "9355594d.0b5af8",
            "c780b49a.0e4338",
            "fa5d0b5d.173c98",
            "44e6874.2344578",
            "657a5d37.6d07c4",
            "c3259a58.4fe088",
            "3f0134d0.dc178c",
            "f7f5dc17.aa232",
            "84e1276ea446d2d0",
            "dc19234d7f6c1436",
            "1123964175133a16",
            "88d45e925bb0a53f",
            "f77ad42ee258fcf3",
            "5b00382c3aa9c08a",
            "5e95ce70c9780198",
            "9bed0f621baa53b3",
            "6a0fed7ca364e043",
            "64264957cd067edd",
            "04edf6add93f3e0a",
            "6d449132863bfaa3",
            "372ef6730ba0963c",
            "fed8f4b7d58907b7",
            "df300b03b43a428a",
            "5ba45362a29ceb5d",
            "f060cfc58dd20231",
            "a379cf5705b7c2eb",
            "c1b33094c533ed83",
            "e61bc8c044b0b30f",
            "09f37d36d65bf3a4",
            "d8318d743aa640d3",
            "0c62e444e693c77d"
        ],
        "x": 94,
        "y": 659
    },
    {
        "id": "e9d2f5f0.86a518",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "43bab036.712ca",
        "name": "Datos placa de motor",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ea258cd2.d6e7d",
            "7507ff98.5a92b",
            "dca07a87.27ec18",
            "f041a8b3.dcb0d8",
            "184c506a.42dbd",
            "60be1d12.066574",
            "ed33f12b.95cc7",
            "effa34c4.ff41c8",
            "3f3006.edaa2ffa",
            "53d73778.d0b178",
            "b8855fd7.225d3",
            "30d2c9b7.d0d666",
            "1a6f7f25.56eb41",
            "39af17e3.7d87a8",
            "ee2e2c40.fad2f",
            "b5a3116a.ae72c",
            "1b0e4b2b.ecf4e5",
            "8832b98054f3f184"
        ],
        "x": 894,
        "y": 669
    },
    {
        "id": "6cdd72bc.8124cc",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "68e6bb30.d1fce4",
        "name": "Rampas y Límites",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "645e5a91.8ccef4",
            "faa40213.086fa",
            "ebeef8ea.3def58",
            "7b0522e.ed903dc",
            "2163239b.5a9bbc",
            "e5c3bbc0.8b2998",
            "e89aec53.9b1b1",
            "2709f5cf.b4e16a",
            "3ca6161d.651d6a",
            "1358ba12.db4f76",
            "40fde4de.c5c06c",
            "d35710bff3d93d90",
            "dc8a4a15e9607f5b",
            "4690fd613d3bc91f",
            "7787993fb7221125",
            "2fd1ed2e5df4231a",
            "aec6098c8c25d147",
            "f0339fb685ad9574",
            "342c2a02039a907d",
            "22759c960f6c0f40",
            "643c6ef985fbeb3a",
            "66245871913bcba0",
            "230c2a4fd67a60e3",
            "8bb2754a544a32a3",
            "a823bab656932f36",
            "8f7c11af44102a99",
            "d1c71cd5d571e814",
            "68be1d94a3423ce3",
            "636c56ef9f5b9334",
            "f9bdb1cc101cae19",
            "5e73365c7e46ff54"
        ],
        "x": 94,
        "y": 79
    },
    {
        "id": "a7e99088.c8108",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "68e6bb30.d1fce4",
        "name": "Rampas y Límites",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2498ec05.7284b4",
            "319a607a.54c89",
            "7048ef53.1fd6f",
            "acaa43fe.71bfa",
            "b559fab2.66fd28",
            "df9eb38c.fa6d7",
            "f7f45d3a.6e4e4",
            "7116aa90.5b13a4",
            "24d1e786.5ef6e8",
            "4d7667fd.f49138",
            "d4e8aa0c.01c0c8",
            "ee09985d.8da768",
            "d4a47d02.7580e",
            "44b05f12.5269e",
            "c48a9a39.50daa8",
            "d0b40d4094928563",
            "c3c49381858b2d5e"
        ],
        "x": 874,
        "y": 79
    },
    {
        "id": "78a8be83.7018c",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "ab42d2fa.9240c",
        "name": "Mapa de motores PMM",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "727b085.b0b11f8",
            "16584a.4bbef7b7",
            "e743a599.f2f618",
            "4c00f1aa.f0c6d",
            "f3b82ba0.812c08",
            "dff6197.eaa9ce8",
            "498c14cb.46245c",
            "7e19ed0d.1c5424",
            "f9e935e0.772998",
            "ce38aaac.e61788",
            "d9787c05.edb21",
            "a297078a.2cb578",
            "de5b8de.ac8e57",
            "978a0bd9172de45f",
            "1eb3abc782ede49a",
            "3f3a83c71b2f5a67"
        ],
        "x": 3414,
        "y": 1829
    },
    {
        "id": "82264d68.0b05a",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "ab42d2fa.9240c",
        "name": "Selector Motores",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7d7b0b0.e782bf4",
            "98651a1f.5a1358",
            "d6814492.90c268",
            "ffb8c84.3759b38",
            "84631e96.4b794"
        ],
        "x": 3404,
        "y": 1739
    },
    {
        "id": "4af99851.bcfb28",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "ec31a094.c373c",
        "name": "Curvas de saturación",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c0cd9ee1.f138c",
            "68032ab5.936c34",
            "76d227a1.4092a8",
            "4e777453.fab6ec",
            "30dd0597.abe6aa",
            "4d1c67aa.dc2248",
            "c04c9d7b.5b36c",
            "2431a353.9e0c8c",
            "b4b87be6.ac2648",
            "44bd86cb.3ea668",
            "afa764bf.961b98",
            "1a469fe3.9dc9c",
            "853ee1e8.4131",
            "d70a59a7.2e1c68",
            "c14cd8c3.11ee38",
            "d813c0ef.52e79",
            "6c2b016d.007b7",
            "2e79c9c3.0a8ab6",
            "d0a6d29e.312d2",
            "2fe72b39.af4dc4",
            "76086326.77e1cc",
            "6d167b.64ffd984",
            "7aba77f9.b83958",
            "943d4c3f.8b4fc",
            "4e32371e.e2c948",
            "ac5fb5b5.f22398",
            "c51d3efd.f4e56",
            "11379727.11b049",
            "2f8f8eca.ba0612",
            "61f79ae5.eefeb4",
            "67b6ee74.1c4a4",
            "fcdcf329.63bc3",
            "497d94c.bdc1a6c",
            "c999db30.1d3468",
            "f298c6dd.5083b8",
            "cb1fc440.3cff48",
            "ae0588b7.1dc7d8",
            "195d27f8.7db898",
            "ab07e36a.c22f7",
            "4e92e4f1.bce65c",
            "5ef05ed0.a303c",
            "89ce92c3.63338",
            "218b3f86.c346",
            "1ca78a39.c747d6",
            "14ac4ee2.f8ead1",
            "600ba037.f6e12",
            "bae26ad7.a83a68",
            "265502ba.24d3fe",
            "6adb755c.44760c",
            "af470457.282ff8",
            "a688bec7.25003",
            "b0861b20.d4a078",
            "deb023ab.58e51",
            "7b5ffe1a.15acc"
        ],
        "x": 3404,
        "y": 159
    },
    {
        "id": "9f627758.670cd8",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "ec31a094.c373c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "48b8327f.02362c",
            "a2deff1c.93535",
            "70cf390d.c5d878",
            "66203a9.e0f74c4",
            "54e04245.45a71c",
            "a96921f8.2d297",
            "83dc64fd.2716d8",
            "eccf049.e4737f8",
            "aa5d1a4e.f133c8",
            "92796a6e.3f2aa8",
            "1431de59.1732b2",
            "5a36e9b9.a20668",
            "65ee9c58.6d2aa4",
            "bc9c2d06.cbf2",
            "2978f575.d7200a",
            "d90dfe81.b3cd8",
            "3e376c3a.fed3c4",
            "c1c11f53.9f28b",
            "fe4cb2b6.9aa45",
            "7189cd97.69abc4",
            "54d0530c.1bd45c",
            "b25672f5.b0e48",
            "163b5dca.a43f02",
            "6f7317bf.168328",
            "74a0601c.5b8d4",
            "a6c62c42.d33a6",
            "44fb2423.875f7c",
            "153fa58.ba59b5b",
            "369317f.d62bee8",
            "b5914c17.a76a7",
            "ccb636f4.cf6b58",
            "b65ac1d.386484",
            "99da96b7.007268",
            "bf2b565b.691fb8",
            "ae74f8b0.f90d68",
            "a98cf89e.3f41c8",
            "3e674474.0027cc",
            "babbfa5a.e55e98",
            "7f64c136.0e4f7",
            "ed2f479a.b6db28",
            "bb5bfb8c.ba5108",
            "c12e9bd1.f6c148",
            "42553824.67bda8",
            "8106ac05.7996",
            "1f5a5605.0e961a",
            "56ad5dac.23dfd4",
            "21e4ac73.634a74",
            "5a35d66c.5a19f8",
            "32f13493.0df5ac",
            "62306322.3aaeec",
            "f98edab7.69c4a8",
            "4f348ef0.41c4b",
            "487147d15f5c304a"
        ],
        "x": 4244,
        "y": 159
    },
    {
        "id": "71fd37.e2a532c8",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "eed2da25.98fab8",
        "name": "Configuración",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ec341205.42507",
            "f45a1830.4aa818",
            "ca8a89a5.fe94a8",
            "6101e2c0.41d6fc",
            "e00ed097.2bcdd",
            "2bfa63f5.c92f2c",
            "c8ee6da5.6ba99",
            "927a90e3.4b638",
            "e652eb79.a623b8",
            "e9bea53b.440a68",
            "a8dc214e.b7f56",
            "c13d5700.feaa78",
            "fd850cd.624c2f",
            "fbfce46a.370cb8",
            "e63ca624.4a94a8",
            "fda9d1c0.d590d",
            "d558f19d.c5be2",
            "4402b8da.a316d8",
            "4d97afba.4dc4d",
            "5888eaa2.e36944",
            "97a2a505.e43258",
            "ad49eac5.1a3bb8",
            "1bfae043.076ad",
            "6f110bb3.d5a3c4",
            "b2d8bf8c.b4036",
            "ed030ba5.58dbe8",
            "868cefce.6694a"
        ],
        "x": 64,
        "y": 59
    },
    {
        "id": "566c907c.70175",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "eed2da25.98fab8",
        "name": "Función de activación Filtro de armónicos",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d4a5a008.b6ca1",
            "5fa7bbbb.7ded74",
            "117f9d35.ea0683",
            "65bec257.67c89c",
            "f1503b0b.316be8",
            "a344ac6f.b0fa4",
            "dc337b1c.735738",
            "3f94e47b8b495988"
        ],
        "x": 64,
        "y": 429
    },
    {
        "id": "f167459.5f028b8",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "312f680c.5a3b4",
        "name": "Entradas digitales",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "76d03353.299b94",
            "49c39e.d1336c64",
            "f68d7eac.63fb98"
        ],
        "x": 68,
        "y": 643
    },
    {
        "id": "7c55c2ad.611734",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "312f680c.5a3b4",
        "name": "Entradas analógicas",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d532ac68.2d5408",
            "c4bcf1ca.3d67d"
        ],
        "x": 1788,
        "y": 643
    },
    {
        "id": "b1830307.ee865",
        "type": "group",
        "z": "e7088c4e.cc6b4",
        "g": "deaa6892.b3d988",
        "name": "Eventos",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5d023264.f9da5c",
            "2da816b7.b2be9a",
            "3114e207.ca335e",
            "b5c74953.41a018",
            "2fbf43b6.2f889c",
            "7f9ef622.6d0448",
            "a6d197ee.394348",
            "2db25cfef9829aac",
            "320aa1af1a983da1",
            "07fdea154e1be602",
            "afa7cc8cdf628598"
        ],
        "x": 114,
        "y": 39
    },
    {
        "id": "31895ea6.22f372",
        "type": "group",
        "z": "e7088c4e.cc6b4",
        "g": "deaa6892.b3d988",
        "name": "Alarmas",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d9650a0e.03ed98",
            "fdc0f6ae.24f238",
            "3013b30c.31a45c",
            "f161b281.6743b",
            "dafe5a37.3d7818",
            "8eacc47.e177438",
            "8493b2ad.8a07f",
            "980848c8.d90ec8",
            "c42f5649.4492d8",
            "f9b9d7a57c57d25e"
        ],
        "x": 934,
        "y": 39
    },
    {
        "id": "f3c2e7cf.5ed158",
        "type": "group",
        "z": "3af652c9.6f9bee",
        "g": "f7ed166d.1aa528",
        "name": "Acciones usuario",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "21e4fb07.22d804",
            "a80677cf.4274c8",
            "8e762cce.be81",
            "64ff74e5.f4c53c",
            "fbd8c1e9.7d493",
            "be55ea76.ed4478",
            "7060d261.ea55cc",
            "b045615539735b86",
            "f8489c5a6d52f42a"
        ],
        "x": 114,
        "y": 453
    },
    {
        "id": "eb91dac5.690838",
        "type": "group",
        "z": "3af652c9.6f9bee",
        "g": "f7ed166d.1aa528",
        "name": "Acceso a usuarios",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "df6fb5ca.5f8af8",
            "28cd79fb.3dcae6",
            "2066be8e.5c6832",
            "e04fbd1c.98ffe",
            "2ffa7be0.763644",
            "be50258c.07bb98",
            "6e26c35e.a97f8c",
            "1595def7.d11251",
            "affdacff.6646c",
            "51d66341.8ee0fc",
            "3a348318.fe982c",
            "cf6714f4.9f00d8",
            "d547e2d2.48e7b",
            "93b28ffa.83d6a",
            "9226d68a.21c148",
            "d13ee029.db027",
            "1aeb057.5ff60fb",
            "9ec2fc99.b8d92",
            "ea307c20.921bb",
            "710c23d.a8063dc",
            "c42260f.7383fa",
            "7b0bc601.5d8048",
            "423ba16e.29911",
            "6ddd2f34.2b638",
            "ea3b2578.9471a8",
            "977882cd.4483a",
            "bb4f29c8.aa7e88",
            "ca6aa931.930ae8",
            "84a10c4b.f35cd",
            "b2f289ce.2f9b78",
            "e14b4549.f7e448",
            "deeb99bb.1de168",
            "f0f6dd30.db5d1",
            "e067a1921f82df48"
        ],
        "x": 114,
        "y": 79
    },
    {
        "id": "8ed62712.fe2018",
        "type": "group",
        "z": "dd18d94e.4b1408",
        "g": "6abd418f.d175b",
        "name": "Reestablecer comunicación Drive",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "94c309f0.3ce088",
            "13543f21.6950c1",
            "707fd695.b69b88",
            "f315fa9c.1185c8",
            "c9f9bcf4.df756",
            "223b4301.94d90c",
            "28a5f644.25dfba",
            "c743079b.f42c28",
            "205ad8ee.53daf8",
            "2aab0f68.d1ce8",
            "89596b07.c81a88",
            "5479100e.249ec",
            "50944dad750778ed",
            "e7869ca8.ae27c",
            "c6cdb127fcc1677c",
            "b5432e18.1b297",
            "bd99b4e3.36dc18",
            "c30439cc.4bcb68"
        ],
        "x": 44,
        "y": 49
    },
    {
        "id": "b2f2659a.67f648",
        "type": "group",
        "z": "dd18d94e.4b1408",
        "g": "6abd418f.d175b",
        "name": "Leer datos drive",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6c83c496.5eb8ec",
            "d105f996.05fde8",
            "8fdf7c75.8bd9d",
            "21bfe70d.8d67a8",
            "d21e2c47.59925",
            "36d8209f.12d38",
            "838adacf.15be18",
            "f16815630fb5bc06",
            "0215c9c0562ad541",
            "ebf423611202c084",
            "d2bf0a88cc35bf5f",
            "e92736fb1766d1e0"
        ],
        "x": 44,
        "y": 269
    },
    {
        "id": "e2589faa.5b6d2",
        "type": "group",
        "z": "4c43e2ae2d9aec48",
        "g": "57eba231.4d56dc",
        "name": "Inicializar",
        "style": {
            "label": true,
            "fill": "#ffbfbf",
            "color": "#000000"
        },
        "nodes": [
            "ec92d582.14aa18",
            "ad87cee4.7dbb5",
            "f0c186466f456fd2"
        ],
        "x": 54,
        "y": 269,
        "w": 322,
        "h": 122
    },
    {
        "id": "e9e93a2c.deeb18",
        "type": "group",
        "z": "4c43e2ae2d9aec48",
        "g": "57eba231.4d56dc",
        "name": "UI-Control",
        "style": {
            "label": true,
            "fill": "#ffbfbf",
            "color": "#000000"
        },
        "nodes": [
            "7abe043b.fb14fc",
            "97407954.a004c8",
            "805762db.d27b7",
            "37f2db57.b831c4"
        ],
        "x": 54,
        "y": 399,
        "w": 322,
        "h": 122
    },
    {
        "id": "dad84feb.d4773",
        "type": "group",
        "z": "d08f14e12055286a",
        "g": "e3aa057d.09fb18",
        "name": "Máquina de estados Arranque automático",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c0305bdc.676a28",
            "3781fe66.587af2",
            "2e7249b4.58bd66",
            "32c8b0ee.45f27",
            "66ec00f0.b69ff",
            "383d0d61.1e6de2",
            "14c9d205.a3aa7e",
            "40db7d54.6eda64",
            "853cd9a2.d77cf8",
            "e603fb56.c7b328",
            "7a545a2b.6f6b74",
            "8276f23c.bfc3f",
            "6db9c12b.c8705",
            "c325ce5a.11ef9",
            "12c8fd79.9681e3",
            "60c61f62.f5c34",
            "cb35c95f.b22ce8",
            "364f96f4.f46f0a",
            "a6252416.b477e8",
            "587d6709.b2cc68",
            "1efee279.9d3c5e",
            "24b7cec5.441a12",
            "9beed943.b3e2c8",
            "9209505b.0e275",
            "7c8924eb.60c91c",
            "58e6dd7.174e024",
            "36e990a0.a6e0b",
            "3c3c201f.7b4db",
            "8aebe900.f1cdd8",
            "ff0d6d6.216379",
            "14170dd0.bdfb02",
            "46402130.f1178",
            "ee2f7708.642508",
            "b7da3a44.60ff68",
            "6e5aa94d.e5afd8",
            "37db10ec.6a6f7",
            "c3276752.914e88",
            "19f7e764da2b7e6d",
            "533f18d250f0f542",
            "faf07e5a91b1eecf",
            "01509800705ed2e4",
            "d163284a3410a96e",
            "d44ef6369dfdda4b",
            "0daf9cd5f1466dab",
            "5237e183.b1e0e",
            "221aa83c16ff94a6",
            "de4880db95ed8834",
            "d9b3e61d145ba55d",
            "c1061922fbb55e35",
            "3b9c1ffbdb77d781",
            "7fba8f14a29d758a",
            "67301b2be25911c7",
            "a8d50b9f6b5726b4",
            "51a7ac20587f7354",
            "87c4cb7258a17006",
            "d07a46088074515d",
            "2a3c466dd1080ff6",
            "cc955a6af7eeba4b",
            "334b38419b875f82",
            "10c25391a80303f1",
            "fa1bb151f224679d",
            "034d0d8558a3e344",
            "0cdce45fc079816d",
            "e389f8df8737b7b1",
            "49f37bb1c339412e",
            "8c91d4455998c1e3",
            "346a6c0d781748eb",
            "d9f0353e18035527",
            "90144d34685e497b",
            "a5e1205e8fe1feed",
            "8b6fa7aad0992c0b",
            "fb18fc5d2d9efad1",
            "f53306f8.1383d8",
            "3b031b8.c62abe4",
            "a03109bcfc45b245",
            "bb5a0d783e5dca2d",
            "04f012cc78946963",
            "ab5dd4dcf08f666f",
            "4df7de2a24a0f655",
            "dba5a375ebc26199",
            "1f7639cd6cd873fe",
            "736d904a50210d65",
            "d02f5d5ee0c770af",
            "eb3c3b3196b499d2",
            "2f283ff35941d8fd",
            "c8bc621a82792de1",
            "e5c936c9725329c6"
        ],
        "x": 54,
        "y": 349
    },
    {
        "id": "7aad629d.de652c",
        "type": "group",
        "z": "d08f14e12055286a",
        "g": "e3aa057d.09fb18",
        "name": "Configuración Gráfica Arranque automático",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "497412a1.c5deec",
            "5df27476.8a476c",
            "bf9f3756.731868",
            "4e9cdd5a.9541e4",
            "874c5aed.184488",
            "cb991004.c84de",
            "9b89d9af.1de058",
            "acf47dfa.1c447",
            "ea37e9ba.aa7508",
            "52a8c629.843998",
            "b0e43e11.45b77",
            "a56dfe8e.9d817",
            "97729306.5f405",
            "d8da080.181c0f8",
            "8be14622.b08ef8",
            "b91731c.f01b2d",
            "685eb5d0.f522ec",
            "2c2a7aa0.9ef0d6",
            "28d953db.54529c",
            "45809fd1.8506",
            "7a12922f.1cbe9c",
            "d768e1d2.1e7f1",
            "4e0a3fc7.922b2",
            "20949174.cb72ee",
            "ab740524.1ae268",
            "f486135b.0c2e3",
            "b2b71204.5d357",
            "891ddd2d.407f3",
            "1e43264c.b5a5fa",
            "61109ded.3b49a4",
            "a877cbae.a027a8",
            "39c71fe2.06935",
            "449e7bab.192fe4",
            "6ae46230.0f8d4c",
            "fbbc75ab.913998",
            "6e4597fe.cd4c38",
            "1da40511.9db73b",
            "2cde88bf.5168b8",
            "dff7a91d.077a48",
            "49e64ca4.8b1944",
            "a4e7e30d.3de15",
            "f213a859.b29578",
            "c1723a65.a620c8",
            "ca41ebf5.6cdf28",
            "8ef5c8d6.524028",
            "b8c12e8b.715b2",
            "93ed76d69e2674b6"
        ],
        "x": 54,
        "y": 69
    },
    {
        "id": "8f8a192b.bb2ef8",
        "type": "group",
        "z": "d08f14e12055286a",
        "g": "e3aa057d.09fb18",
        "name": "Habilitar / Deshabilitar Arranque Automático",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8a0fe789.871358",
            "9fd2782d.a0cc58",
            "add1cac2.311828",
            "2b8ab955.9e7406",
            "d4b73c65.8c417",
            "e4fcccc8.8deff",
            "82ddd765.a9a1c8",
            "2850bc9d.bad744",
            "5472c69c.f21938",
            "b275f5b2.e7e328",
            "aedcd40.1fbec3",
            "73af0be0.8d91e4",
            "4e19cfd4.3982f"
        ],
        "x": 1864,
        "y": 359
    },
    {
        "id": "6625e1db09743bc3",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "83483662ea05d247",
        "name": "Configuración",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f72eda9846fb1be0",
            "41d9a0fdb928169d",
            "ab239694d74f8bf1",
            "155b3430262c837d",
            "58e0c4b9ff2b2113",
            "484735a529a9aaae",
            "f56e0cf8144b9036",
            "8cf7bd19dec526a3",
            "4d2d1c806ea0b6a4",
            "3cf91acc442c9d10",
            "afaf0235e82beea2",
            "08780a15484b25dd",
            "8db3135a85f1fab1",
            "75ddaf92deb8acf4",
            "b56d661ba261fa58",
            "51328fc9e89bd926",
            "c7ce33ac338a9db9",
            "39d670dcae0601f1",
            "db43fb238938f2fc"
        ],
        "x": 74,
        "y": 2879
    },
    {
        "id": "c30870cb.fa25a",
        "type": "group",
        "z": "fb40d997e0f412a5",
        "g": "854dec5e.9e51d",
        "name": "Configurar",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "401ed26f.e6543c",
            "23b18b52.b524e4",
            "245c43fe.49aa2c",
            "97f8ca63.3d9238",
            "6bebb49.91ff04c",
            "2971ab67.7e1f64",
            "73213270.315b5c",
            "541ff565.eda9ec",
            "a0487735.d07c68",
            "de01e320.127c4",
            "5525a94.436c858",
            "2f470fc9.a87a7",
            "3df3dfb.cab992",
            "aa646335.08c07"
        ],
        "x": 54,
        "y": 59
    },
    {
        "id": "f3b2b1b2.a0af2",
        "type": "group",
        "z": "fb40d997e0f412a5",
        "g": "854dec5e.9e51d",
        "name": "Habilitar / Deshabilitar Roking Start",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "42b1083e.ce9cd8",
            "f5ea8178.fe0f7",
            "b81da68d.f1f608",
            "3e70c8e7.d122b8",
            "dbda20bb.9241b",
            "5d32f571.d3ac9c",
            "abae1ac3.029958",
            "df83e8e7.26b538",
            "786a9585.cd75cc",
            "f1aef2ac.9e095",
            "8d16d48d.753ca8",
            "dd5b4bbd.505ea8",
            "8b4427d0.6b69c8",
            "168b6577.3e722b"
        ],
        "x": 814,
        "y": 59
    },
    {
        "id": "4384031.9ff1afc",
        "type": "group",
        "z": "fb40d997e0f412a5",
        "g": "854dec5e.9e51d",
        "name": "Tendencia Rocking Start",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a46bb197.4590c",
            "2299663a.5fb8fa",
            "f073de6b.d109f",
            "70d87fe5.6d57",
            "bf8e558a.d150b8",
            "941a0b79.4ef8d8",
            "9b8ae752.54eb48",
            "c128eecc26e4da4f",
            "10b60fbfd88b46af"
        ],
        "x": 1714,
        "y": 99
    },
    {
        "id": "b4d97ea9.9a1f1",
        "type": "group",
        "z": "fb40d997e0f412a5",
        "g": "854dec5e.9e51d",
        "name": "Máquina de estados",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4d314b1.8c27eb4",
            "e525d535.df71c8",
            "d3122c65.f6281",
            "a8811bf0.cf69a8",
            "b92b51f2.862c3",
            "83935bd.322d4a8",
            "5d139b56.877384",
            "154e2116.00b6df",
            "9757bec7.cb582",
            "db524c1c.7299d",
            "8dda8991.669f28",
            "a573636f.f2ef1",
            "f6feffbc.b7037",
            "d864cf5d.4424a",
            "f12b186c.4312a8",
            "7d7e0a82.1b3274",
            "752c4cf4.41b3d4",
            "429c93e5.ec4a6c",
            "6581a2a4.fd4b4c",
            "29a13a58.22e996",
            "12dfffdf.e5a1a",
            "4f79aee8.bf74",
            "bebada93.7c96e8",
            "eb62ad9.cbb145",
            "c7b640c9.5eab7",
            "3576f525.ca307a",
            "c3264b50.948808",
            "f0234075.f9965",
            "71b11fd7.a2749",
            "e1903816.64f2b8",
            "163e3938.402577",
            "a16f5366.da31f",
            "2aa3c62e.9854aa",
            "2c0787ec.c0d3f8",
            "c65245e9.e0b928",
            "fa892337.16686",
            "f07c3e38.b976d",
            "9d5c8cc0.ad9cb",
            "a7eee5d5.1a1eb8",
            "1dfca80a.0b9d78",
            "39a13028.67056",
            "ece75963.8a7658",
            "f498fdbf7ce6961d",
            "53dc0629efb2bf3e",
            "ae981d0ae38d021c",
            "b6e4d731ae400625",
            "cd5552afd6067d55",
            "40d2340f963b7d0a",
            "20c76542990c37f1",
            "a67018ade5d649d0",
            "25995e1ba47e46a1",
            "70e07a51.c14f94",
            "50551e9e.69ca8",
            "95637e8c.f75fe",
            "6362e6081ae4c9bc",
            "2d20bc9389f4bb1d"
        ],
        "x": 54,
        "y": 359
    },
    {
        "id": "527fb039.aa59f",
        "type": "group",
        "z": "e483884bee93bec2",
        "g": "3b46205e7c2e192e",
        "name": "Protecciones Mapa Modbus",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b803e401.b39198",
            "28b9d8d4.780938",
            "8dd3e4dc.7b82c8",
            "d2066f4.d47179",
            "22b4769d.fa73aa",
            "7fcd7f44.da50a",
            "7e94d37b.d9ba6c",
            "11a05a7f.1ef4b6",
            "39b7d6d0.170dda",
            "e7ce38e8.ddf7a8",
            "30a1afd8.5fed9",
            "b9e47311.f3082",
            "5a4c3f91.66de5",
            "1d2a31df.d8149e",
            "93b8513a.2e011",
            "2cd74731.e47058",
            "e1b1ed5d.b46dc",
            "366809a8.54ae36",
            "de525e4.80448a",
            "e848d5b7.89ed48",
            "7eb9f31b.5d87ac",
            "d49a58a4.182318",
            "898a9e08.eb30d",
            "f9984424.f2ea88",
            "19f40c8c.08b2c3",
            "888867d4.3eb148",
            "4970f246.2964dc",
            "18312819.54fd68",
            "66c4a9b8.ae31f8",
            "8cd9b627.3e1fe8",
            "dd479ce7.53bf1",
            "5530c155.8e88f",
            "fd592d35.6763e",
            "b261da20ce556a23",
            "f149f03c.2778",
            "9d69dee97c9d4411",
            "5c3fd2882dd2bad7",
            "25cc60d9875e0b46",
            "2027934fefee8b19",
            "46aa199a15d83484"
        ],
        "x": 2484,
        "y": 69
    },
    {
        "id": "f52d84f3.4970f8",
        "type": "group",
        "z": "e483884bee93bec2",
        "g": "3b46205e7c2e192e",
        "name": "Habilitar/Deshabilitar Edición local de Protecciones",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ba9797b7.e07f98",
            "a68f4079.7351a",
            "62e320be.78337",
            "186649d5.ec0ba6",
            "f68d32a7.f0e8d",
            "596ac22c.7d379c"
        ],
        "x": 2484,
        "y": 609
    },
    {
        "id": "afcd8222.ca23b",
        "type": "group",
        "z": "ebaf6b5134c2a666",
        "g": "c2c81bf2.d0a218",
        "name": "Habilitar / Deshabilitar PID",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "937ff287.3fa5b",
            "77550c98.576f84",
            "5f1d5b77.109174",
            "ae41290c.649488",
            "3bbaed96.9213e2",
            "fd36c4d1.9d5ea8",
            "da507039.de239",
            "715302ac.f9f87c",
            "e5c41a9d.a8b708",
            "8929022a.7ccf3",
            "39667d7d.270542",
            "d06ffec0.71437",
            "345fe7bb.77c178",
            "69988bfb01469774",
            "25037f6e145deee9"
        ],
        "x": 44,
        "y": 719
    },
    {
        "id": "cf985e84.c7693",
        "type": "group",
        "z": "ebaf6b5134c2a666",
        "g": "c2c81bf2.d0a218",
        "name": "Configuración PID",
        "style": {
            "label": true,
            "color": "#000000",
            "fill": "#e3f3d3"
        },
        "nodes": [
            "dda02d35.2cecb",
            "44fdc5e6.85bf0c",
            "9d734d6a.585f9",
            "766ff7ed.aba428",
            "73d662e7.047d5c",
            "d1f79561.529bc8",
            "4c96d1b1.d47ce",
            "859f68e9.1bfb38",
            "31c4f09e.6de82",
            "dac5ee0c.60a49",
            "b2ee364c.f0d8e8",
            "7c042baf.6c61e4",
            "e8529ec4.1062b",
            "6bf8246a.73f65c",
            "d4218cf0.530c9",
            "8f1125c4.daacb8",
            "2a2f104.a62ccf",
            "59760e1.297e2f",
            "35db28d5.6cf898",
            "3cbda9fc.643276",
            "5c474c06.fc4eb4",
            "429c084c.bdb7e8",
            "61a138bb.1bf0c8",
            "6f1fc25f.3bf7dc",
            "4678d40e.8d6dbc",
            "b9b2071a.501878",
            "c7b2c342.4724d",
            "b2f62aea.fc39d8",
            "4901c762.a51cc8",
            "dd4ef7f.6489508",
            "3832b43d.5075cc",
            "1ceaf72f.47aa79",
            "2664f246.4ed1ae",
            "a810eee4.622a1",
            "5e68509d.103b9",
            "84515fce.0be5a",
            "3067f725.56f2f8",
            "ae17baf7.aa0dd8",
            "deafd3e9.1a118",
            "7d4871c0.b9897",
            "d2b661d8.32601",
            "45f9d45.fc2d92c",
            "70d72abf.382ff4",
            "63f1e3c6.d2a68c",
            "4c971bbf.6a51f4",
            "bb6b8bf2.f42718",
            "39b2bc9d.88ad84",
            "ba9a49de.2a6e68",
            "d97ed6bd.e7ad18",
            "0cb5e56ab0b31d03",
            "d6aaf343fc532b87",
            "40acf2ee.4ee9dc",
            "58b12e1b.3b9df",
            "3e50826c.d0363e",
            "795a5947.03adf8",
            "2d6cb3ad.ebcb0c",
            "d95b1415.57edd8",
            "d4429be1.13ea88",
            "eee59c62.d3fa3",
            "88bb6493.18ae58",
            "727b77b9.180d28",
            "f171af22.95924",
            "61bc8156.3d3b5",
            "6f73b47b.2b635c",
            "72ffcab6.7fb4d4",
            "e678be60.ba5b7",
            "129c6a9a.aae9c5",
            "decb725e.fc487",
            "d91f2728.58e308",
            "8a1b8fa8.1f3b2",
            "a4d48e9d.89b09",
            "ebca0701.bab008",
            "81ae77f6.5fd3c8",
            "dd3279e.534be88",
            "51ec3e53.feab2",
            "18af7d43.439f33",
            "659c35ff.e1291c",
            "92b6d7ac.198a68",
            "65e9bd38.989f24",
            "aa741b22.4cb5c8",
            "c19d91e6.6c67e",
            "80aaf983eb9bdbb6",
            "8b2d994174f28a66",
            "ada87f22bb366bb1",
            "68b8b2db4e687c5a",
            "28462b4cb38cf6dc",
            "76b3ffcb3376d8bb",
            "2dfd6ae97fe5faf5",
            "d94dfcb17909ebcb",
            "2cd9c26ea850347c",
            "4f30a3731f8eb96a",
            "84c4ad5ef4fd9fae",
            "42b381631f7c8f45"
        ],
        "x": 44,
        "y": 39
    },
    {
        "id": "8939ae1589f73827",
        "type": "group",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "Eliminar las Imagenes",
        "style": {
            "label": true
        },
        "nodes": [
            "4f676190d3be32c2",
            "6202f66fd42f47be",
            "f8baf859808ea12a",
            "d381293ba6d9615d"
        ],
        "x": 294,
        "y": 1111.5,
        "w": 272,
        "h": 277
    },
    {
        "id": "70a63b74.44894c",
        "type": "group",
        "z": "2858ae04397c7488",
        "g": "38940f8.c9c27f",
        "name": "Configuración CTs",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5c5b638c.a8f91c",
            "cf0d5223.b4dab",
            "7cc997fc.b5d5b8",
            "83dce8ae2adb063d",
            "d22f737e1faaee45"
        ],
        "x": 44,
        "y": 949
    },
    {
        "id": "ee01b6d1.f76f98",
        "type": "group",
        "z": "2858ae04397c7488",
        "g": "38940f8.c9c27f",
        "name": "Lectura de datos eléctricos PQA",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ed025e5c.648858",
            "6188debb.009948",
            "5fe9be31.70c2a",
            "1f4cd023.43eb4",
            "a65e22e6.71c65",
            "993f38ab.482e9",
            "3f9fcc24.6fac3c",
            "d1a9dbc4.33f7e",
            "329a20ae.addd08",
            "f69145ec.595428",
            "7bbced0c.e692d4",
            "8f2ea546.30e13",
            "8d348d63.134818",
            "5ff5e28d.2c7d74",
            "9d6fe8b8.eb7cf8",
            "f8287ebe.9bb3c8",
            "eaf2e52.a8fae18",
            "72ceef76.7f8f1",
            "139d011a.841abf",
            "ddee4aa9.906988",
            "339b7b9a.f4bb14",
            "894eb396.e8f0c",
            "23986012.d8fc9",
            "43ffc14d.a3cac8",
            "d3d2bf92f1387fd6",
            "3bd8b039f4c56513",
            "30c7e65d47bd2971",
            "2003f49f54e21777",
            "d51a596fcfbf93f0",
            "d7c4d57611493bd3",
            "2ceb25cffb9d80e4",
            "5e2a332d18ad3650",
            "1a122bae4ed0bf36",
            "da4c68da2f239de1",
            "c362c1dcf4cc0796",
            "3878a4d12166cb8d",
            "c11fe0bdbc916732",
            "1bd0aa4e49b351af",
            "cd759f2045b5bef1",
            "56708d2b8fa5451d",
            "815a917abb15058c",
            "f54284edcaf056e4",
            "7ef87d44828138c4",
            "79ed59278564eccd",
            "bb92b76588cce739",
            "20a33011be6557f7"
        ],
        "x": 44,
        "y": 49
    },
    {
        "id": "61a0e01d8198af31",
        "type": "group",
        "z": "7af521b51c8e6a51",
        "g": "e9acf894c223c544",
        "name": "Gráfica IPR",
        "style": {
            "label": true,
            "color": "#000000",
            "fill": "#dbcbe7"
        },
        "nodes": [
            "024222d619f069a9",
            "e58bbd637487099d",
            "81e868e2dc43d637",
            "fee026c23d97c1b7",
            "e6fb7f8fce8d014a",
            "ad2ab3510ec88098",
            "d6e8102aa90a0542",
            "1fc5363114952530",
            "adb1a0acdc299c85",
            "510cf13fa3e782ca",
            "82ab635315c76227",
            "78e27382a15f4a9e",
            "bb9476c101821117"
        ],
        "x": 384,
        "y": 839
    },
    {
        "id": "df1d97613cf01d63",
        "type": "group",
        "z": "7af521b51c8e6a51",
        "g": "e9acf894c223c544",
        "name": "Estado mecanico",
        "style": {
            "fill": "#dbcbe7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9c3a14196b83240f",
            "c07b8fbacd53c32d",
            "8c563a0cfe8efb1f",
            "ec35b7307e4c1490",
            "7e0250bc4c718e16",
            "b4299e0a9fa3bb6f",
            "e5c810643b40337b",
            "ff18b4648c621a74"
        ],
        "x": 354,
        "y": 39
    },
    {
        "id": "92c275e98763b20b",
        "type": "group",
        "z": "7af521b51c8e6a51",
        "g": "e9acf894c223c544",
        "name": "Propiedades de flujo",
        "style": {
            "fill": "#dbcbe7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7806a2e04be44a09",
            "d5c2fdb13a35e0df",
            "9042c080dc5671d1",
            "db2a2f73872e3f21",
            "a29fc34c4378e8bb",
            "34a6674d0381ec15"
        ],
        "x": 354,
        "y": 259
    },
    {
        "id": "81040b9d06e8a4cf",
        "type": "group",
        "z": "7af521b51c8e6a51",
        "g": "e9acf894c223c544",
        "name": "Pruebas de produccion",
        "style": {
            "fill": "#dbcbe7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "14bcf7fb6dabf77e",
            "b55f7f014ffe2d47",
            "fc9581d79bb51d53",
            "ffec73d93b66549c",
            "9e055d7583437201",
            "753ff1f519f5a74c",
            "00e206d0e7ead86d",
            "12caa31633404674"
        ],
        "x": 354,
        "y": 439
    },
    {
        "id": "1d7f7e08aa6be572",
        "type": "group",
        "z": "7af521b51c8e6a51",
        "g": "e9acf894c223c544",
        "name": "Datos gráfica IPR",
        "style": {
            "fill": "#dbcbe7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "87baf888d3cb86d4",
            "17c98ce1d5f32e3c",
            "abe91eb5b09be054",
            "3dc5b308a908c905",
            "bd8ba4215a00bc0c",
            "874fe8b7b2726764"
        ],
        "x": 354,
        "y": 659
    },
    {
        "id": "aafad2ba.dcc8b",
        "type": "group",
        "z": "902fc438.e5d758",
        "g": "f7709059ebe5ad7b",
        "name": "Trend Harmonics",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5b529f4c.7ffeb",
            "6c9ed5d3.e7799c",
            "23815ef1.931a32",
            "2b47642.2404d9c",
            "eddefb96.175bf8",
            "a5c181ee.2efe1",
            "b54a4559.022378",
            "3ea5879e.bf0588",
            "c8aa3a95.12b518",
            "20b8681c.81fd48",
            "3ccbaa0b.2db096",
            "e65ba7a271b6d8d4",
            "79fcf2343e22827c",
            "8a9d0c3be8d8b701",
            "c8a0d32e8d573a65",
            "5d1f6d0f9daa5340"
        ],
        "x": 1234,
        "y": 2679,
        "w": 1252,
        "h": 242
    },
    {
        "id": "36fa9c99094e8f47",
        "type": "group",
        "z": "902fc438.e5d758",
        "g": "f7709059ebe5ad7b",
        "name": "Datos de fases",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6784775a.6334d8",
            "7dad9b43beefaa90",
            "c317645c3c09e5cf",
            "b8b03c987e844b4a",
            "284e8360857dd2c6",
            "0d744c83e33992d3",
            "cfaca06ac50b5d36",
            "ea4e85ef2d837356",
            "3a1748983f097cb1",
            "105d7cf5310d3d86",
            "7578d16bf9d408ae"
        ],
        "x": 644,
        "y": 2559,
        "w": 572,
        "h": 362
    },
    {
        "id": "742e267a.cbc27",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "5d9b6e5b.adfe78",
        "name": "Configuración",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fbfdc632.b7ce48",
            "46eea134.b469d",
            "a08e63a7.f53368",
            "7cb731aa.76fe4",
            "f4b0d9f.1a26428",
            "9f3404ba.ce1bf",
            "80ada9ce.dd6e78",
            "81ed1f96.efd728",
            "180718a5.baba87",
            "eccd3519.8cb2d",
            "abe29ed.1fc52e",
            "8595327d.ba485",
            "57c4ecc7.38c9ac",
            "5476c23f.573384",
            "9f6b3c9b.c3ac28",
            "c29f37e6.63b16",
            "c373d753.396418",
            "512df90.8039408",
            "90e165b4.870ae",
            "dc847f0d.6c9988",
            "1534fa6c.e8a65e",
            "d0dec1ce.b76b2",
            "92cb81f5.08589",
            "83d6f70d.fe31c",
            "8c81df12.73e348",
            "e8f6e11a.ede6c8",
            "bd7dd23a7e43554f",
            "7f496609020b2c65",
            "637ff0465e23b3ff",
            "7b0b3baff810e681",
            "0ee7137faf7e5266",
            "8c3766dbc41a84da",
            "95a9452fed1bcc46",
            "b0ad660b4a9c1425",
            "30502daf05b7eeda",
            "be049efe6b0fc3b9",
            "16235279f7b6eaa7",
            "ab1db35992368238",
            "50dac80ef4089e02",
            "1171c12e1e767c11",
            "e7962357e39f4154",
            "290e6a8105e84287",
            "54b354e7737802b3"
        ],
        "x": 94,
        "y": 2849
    },
    {
        "id": "f6e2a6e0.47efb8",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "80a9920a.43161",
        "name": "Configuración",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d148ba09.e15568",
            "6cbf6e38.5582a",
            "a045d09a.22bef8",
            "d7be28ca.8c1d88",
            "cb7712ba.8aa1d",
            "9524b437.51c5c",
            "2cf5ef28.2fd368",
            "fff0ee98.0c9fd",
            "41c6ba6a.16e404",
            "73f3e36f.fef6e4",
            "fa663982.7376",
            "be444b62.9432f",
            "84039f9a.8536f8",
            "f387b0e2.5c86a",
            "994eeb00.d47c4",
            "3624bfe8.d588",
            "1cd134f3.04fc43",
            "1850d240.8ce4c6",
            "b23d1104.2e7b8",
            "a5b71e52.d0332",
            "bb5e3162.6feb9"
        ],
        "x": 1384,
        "y": 2849
    },
    {
        "id": "edfe6c51.d89c68",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "80a9920a.43161",
        "name": "Asignación salidas analógicas",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d52f2cd1.ac7d18",
            "d39a12de.5d991",
            "3986e0cf.5e4f78",
            "65ad9b0d.6b12ac",
            "f4e358da.4d49",
            "e105d502.4aeb1",
            "bc63c380.fb7a78",
            "5cb767da.98178",
            "2713f52d.0666ea",
            "b5293ad6.80a578",
            "f3e2dee0.b212f",
            "bbf3ce81.a5335",
            "3b90925b.82939e",
            "4a46db90.05ea4c",
            "23ebaedc.4ea2ba",
            "10966509.4f25e3",
            "eed2c392.531d68",
            "ac5611e0.f1126",
            "6f5153fc.5881dc"
        ],
        "x": 1384,
        "y": 3169
    },
    {
        "id": "16097ef1.129291",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "9bb5d411.271d48",
        "name": "Frecuencia LS",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7b0b7d11.ef94f4",
            "24f4f23.9e9be0e",
            "4830181d.e9bf78",
            "c43a16af.f971f8",
            "8ddae80f.11ee78",
            "5abae9dd.c7ad78",
            "c65b2507.1eed08",
            "4c8c812a.398b9",
            "745ed37.26d462c",
            "1a32f855.c2c028",
            "e3905f2d.c95a2",
            "c0a46c61.dc42",
            "1ed192c3.bfc6ad",
            "1a19e82d.8f39f8",
            "ba617df3.9e4f1",
            "a46247f8.6b5118",
            "6b5988d9.5e0e88",
            "40b0ee2.96d1d1",
            "cd4abd8a.4c59b",
            "69d7ef79.c6018",
            "96db82a3.1ddb4",
            "cf151366.60e73",
            "bea0d195.c7ba2",
            "b51d88ff.ef5998",
            "2138aa9f.001906",
            "12cfd19b.b82f2e",
            "560fd45e.767cdc",
            "a9566671.523d38",
            "a13e706.ccdb19",
            "b974b01d.cfbb5",
            "6be34fa62c3a9d3c",
            "3157c937b070fc59"
        ],
        "x": 1744,
        "y": 1209
    },
    {
        "id": "37d2bc6e.615114",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "8ac2b187.14625",
        "name": "Reg. Velocidad",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "dce82df4.12048",
            "f803389.88f91c8",
            "44b77597.ab174c",
            "c3f612b3.bcf64",
            "3c732144.06b13e",
            "c6f7e0c2.65693",
            "74e18be.f141b74",
            "a382e6ae.b41588",
            "abbf3d2a.6e7da",
            "e2f1db4a.fea878",
            "19814956e3c6bf4f",
            "68f55546e9d05ca2",
            "73609231970905b6",
            "59ca9b2ac35f46be"
        ],
        "x": 1744,
        "y": 1719
    },
    {
        "id": "de31a457.a923c8",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "dd0fb9ab.f737f8",
        "name": "Datos Filtro-Cable",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f5f0f42c.099238",
            "5f92ad2e.445a74",
            "57a5e4ed.c2432c",
            "deda5dc1.fda29",
            "45d0fb82.ffcd44",
            "133ae82a.b6a158",
            "9ae2d969.d5dba8",
            "c2687871.db7ae8",
            "ebb57eb2.bb1c",
            "4ad6d480.e0967c",
            "b53e7ff3.dc50f",
            "9fce6b89.48e478",
            "b6e11c32b8331dcb",
            "9a4e1f31c48da3ad"
        ],
        "x": 1744,
        "y": 1989
    },
    {
        "id": "e5ce125e.59232",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "e032b1f4.a8be7",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "afa5c201.2f248",
            "743f0186.4b8f9",
            "1cbf9dce.5bbb72",
            "24f18299.bd639e",
            "56473adc.bc2c04",
            "863f77e9.8dae48",
            "8b7e0eb6.80d92",
            "19b5942a.d0224c",
            "9745de0b.84d6",
            "7527c6e0.3daf78",
            "db5ca676.d68768",
            "99cac53c.47c8b8",
            "55a31575.a4b83c",
            "854fa33f.3d50f",
            "fc654a6d.5268d8",
            "b24c7597.1af458",
            "b88c61ed.9265f",
            "86aa229e.4b6ab",
            "d17d055e.734f88",
            "ee0c9166.6012f",
            "c7ac18ee.59a518",
            "64698b78.be6ca4",
            "5c21db77.38e264",
            "2ed9b06d.cb93",
            "c665f457.098dd8",
            "9f259535.982c38",
            "8f382bd3.ee7d88",
            "90affdcc.d8c46",
            "5d7f867.cd65f78",
            "32fbb07d.5fdd8",
            "caa71678.3a5088",
            "beda2309.0d15f",
            "f54dc2c3.bffab",
            "828ccebb.964c1",
            "45b89365.6d23cc",
            "2500666.093ae9a",
            "4d817e3c.c961c",
            "813a133b.414c1",
            "edc3de2b.7764d",
            "b09b1a2b8790a0bc",
            "97ab591ffc2044fc",
            "3b69a862993ee94f",
            "9b58f7c59517e634",
            "6d578eea713357b0",
            "75e582863a4f60b7",
            "42771e59be201413",
            "d2b98dd2b82097dc",
            "3dd25f58f5e4d540",
            "8730df877455bf91",
            "f2c07387c6f5e240",
            "543a9fecad88de6b",
            "99bd60527766f478",
            "cc8a2c6b9280aaba",
            "b20e4f163400933a",
            "302ec7ea295a297b",
            "5c0cd8be862826b8",
            "bbc093139403e3cf",
            "22341ae01ccb0b7c"
        ],
        "x": 2614,
        "y": 179
    },
    {
        "id": "44ee5bb3.49b264",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "9bb5d411.271d48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ae2721d3.4bcd8",
            "c021296f.17dad8",
            "f39bbd3b.4769a",
            "ebc56bb1.140698",
            "7f3e34cf.429e6c",
            "f35ddccf.5a35c",
            "16817136.af3cff",
            "23e3e38d.5a954c",
            "df7917d4.57c688",
            "6e764326.6b1bbc",
            "1f3d785b.d91428",
            "282517c.f6243e8",
            "f45d7b96.216108",
            "d8d5aad8.a949b8",
            "39e86b5d.35b194",
            "b480a111.e4c9f",
            "ca86aaf7.79be48",
            "cf8a9363.49c4d",
            "71e164ea.68de2c",
            "9ef7c03b.b86bf",
            "cc897f41.bb324",
            "6907fd4.8d31404",
            "447308f.65180f8",
            "e26d490a.41f358",
            "b346d664.740438",
            "d24ccd06.fca8d",
            "5ae05e22.f0fdc",
            "a8842cd8.32111",
            "a4a750ad.e20f3",
            "515762f0.f3981c",
            "c9e3c42b.034f48",
            "15a2e258.50303e",
            "6c05251d.3cc84c",
            "d8621f59.3cffc",
            "55810d2a.c80474",
            "334eb42.adf5b4c",
            "d50bec.189cd418",
            "23626d5b.56d2d2",
            "db5662ed.a16e4",
            "1d1061cb.2b143e",
            "6271ec419c9975fc"
        ],
        "x": 2614,
        "y": 1209
    },
    {
        "id": "efe6d3f.f10193",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "8ac2b187.14625",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b863e443.3af7b8",
            "8199e4ed.0bd9a8",
            "6e86298c.770778",
            "e0303c1e.7edd9",
            "fa3568e9.0c3ec8",
            "d2a77dbe.25c1b",
            "4fd20af4.d91884",
            "6630c4bb.775bac",
            "db0e9993.8974b8",
            "91cb546d.d6f518",
            "20a0c8c5.d444d8",
            "9eb9ee4d.8a5ee",
            "a9bbcb5f.75e628",
            "3d6f0452.d8f0fc",
            "8c80ee18.d43d2",
            "56007926.5024e8",
            "55372f1ea71702ea"
        ],
        "x": 2664,
        "y": 1719
    },
    {
        "id": "826b087f.5615a8",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "dd0fb9ab.f737f8",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c222c852.50c558",
            "1c6ede71.3c4732",
            "a0f6257c.44c1b8",
            "dbd07ace.b5eec8",
            "bb3a93fd.1b707",
            "fce229b.6ed04d8",
            "949a4063.906a9",
            "2dc3ae2.b4b4252",
            "a1620c10.be3e7",
            "c2e28f90.5f874",
            "fb3775bd.41b018",
            "fd4063c.445afa",
            "7cda2e346e20ca45"
        ],
        "x": 2614,
        "y": 1989
    },
    {
        "id": "372b998e.a167c6",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "dad86215.ed79c",
        "name": "Datos Transformador",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7b7ca039.67f56",
            "6498086b.9f9a68",
            "9bf778b2.624758",
            "343b6f0c.a164f",
            "ea303938.a1b5d8",
            "cdffc0da.22a1a",
            "2f0cd90c.938d76",
            "f33acc87.bb25e",
            "45410815.f7dda8",
            "def7c04e.c8b96",
            "51483786.1c2ad8",
            "39c3c44b.cc30dc",
            "e66dff2b.a7dd8",
            "ff92d86d.df5e68",
            "95131597.1e69e8",
            "faf58aaf.e821f8",
            "516fa65f.6a1c98",
            "e0c9e81f.251cc8",
            "8200abc2.f87818",
            "d949483f.6f4b18",
            "9cd1b87b.a684f8",
            "568bca570ecc01fd",
            "c982f81bb2232785"
        ],
        "x": 1744,
        "y": 2259
    },
    {
        "id": "baaa353b.511268",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "dad86215.ed79c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "cbd2d3fc.af02e",
            "ffa28ddc.d23fc",
            "15fc1e52.e7f6c2",
            "946844fc.d8dc68",
            "3c0d8e06.367122",
            "587ffe16.63ee7",
            "2ffbd36c.c2cacc",
            "ccb52a42.9a64c8",
            "7fa2f785.01b918",
            "e9df39ce.6be8d8",
            "a2b77052.10374",
            "2bd65955.58afc6",
            "a85fb5ca.b44918",
            "5f074c.ea3398b4",
            "57ecef09.5048c",
            "de27c84a.defcd8",
            "43d398b6.0feef8",
            "30635b5b.fe2734",
            "6161c997.a416c8",
            "df936049.05cc6",
            "b02ed6c.d535028",
            "f4b66ac0.43fc28",
            "ed55550c.a9e878",
            "846ec779.d5b4a8",
            "39ee5ad0.f26776",
            "4de35d21.2223c4",
            "85f7b858.bdbea8",
            "d78b7a3f.686b58",
            "e3c99a130078517c"
        ],
        "x": 2614,
        "y": 2259
    },
    {
        "id": "4a1410ce.7057a",
        "type": "group",
        "z": "43b51d90.0b47f4",
        "g": "e032b1f4.a8be7",
        "name": "Datos de motor",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5f577028.557e7",
            "3953f1bb.50451e",
            "9dba3a50.d46e18",
            "55a026b4.1e22e8",
            "72f3a6fe.cd65f8",
            "8cff052d.eb3db8",
            "c15387aa.a8fd08",
            "f1718aa1.686ed8",
            "fa8770e0.5ba6c",
            "20770ad6.360126",
            "dfc8c65e.fc6888",
            "4d993a72.a00f14",
            "f18f1d1d.95aa8",
            "726836a6.0b5fd8",
            "8c893b5b.fc9f88",
            "6b14338e.f1e85c",
            "229b82a9.6cb0fe",
            "7005eb09.6914a4",
            "b78bd570.359c38",
            "380f82f0.cf6c0e",
            "57d246fb.480188",
            "b9cd680b.1fd608",
            "63dc45d3.9b57ac",
            "1245e207.7afbce",
            "38a439e7.694806",
            "d9b1483f.eb0558",
            "ce3075a3.4468d8",
            "cb0406fe.9aeec8",
            "e4edf7a1.385598",
            "1b750968.faca77",
            "ba948f27.d0eb6",
            "8e1478d3.1bbd28",
            "1fb6db03.b00575",
            "f14f9c67.b050f",
            "6f87bde8b1a083c8",
            "b8a561cb8ccefea8",
            "5c5e8fa89a38b688",
            "241b96f16c7fb471",
            "16bf7c77de194650",
            "fadba50d6fb6bf88",
            "aca2c323a793fb22",
            "782cd3d9bdeb2c48",
            "59d388ef8c967338",
            "fdde2c2ca8e4de95",
            "2050d2bbce658501",
            "607ddb92b1c4b838",
            "19f2cc6b8799a89d",
            "960f99a442c984a1",
            "014e809185179741"
        ],
        "x": 1724,
        "y": 179
    },
    {
        "id": "76d03353.299b94",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "f167459.5f028b8",
        "name": "Configuración",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f470fc15.8b31e8",
            "d671f08c.fac63",
            "cb3f9a14.d22ae",
            "ae41ae78.9752e8",
            "d6e3de24.2cb928",
            "3a1ce2e8.4d1856",
            "523b81e3.a07f",
            "89414bbc.a5514",
            "3ba9978d.7a9e38",
            "52006668.0c28b8",
            "cb4b75c1.8fff18",
            "ed19269a.1fe5a8",
            "100713b.4d5176c",
            "bde3d14e.e6be",
            "9f2f8e14.328968",
            "f6f9d9a1.224f48",
            "6abcbd22.e3abec",
            "a4d364a6.229fd8",
            "a8d5423e.4c7098",
            "c07fb278.4e5528",
            "10200c7c.83f54c",
            "12432895.b1026f",
            "bdbcd347.d56d4",
            "b8809fb9.73dba",
            "f831d635.e4d04",
            "e38c9f19.aa8ea",
            "1b2731e4.61a096",
            "8802186f.daff38",
            "5df67e9b.9bd0e8",
            "8e13fa8a.d674a",
            "b40da20f.064d88",
            "19774c3b.a5ad2c",
            "6dcec406.d1258c",
            "808ade40.bbd5d8",
            "e7978310592e6ac7",
            "9a3c55637b414564",
            "f4ae677093cfe747",
            "5304b7de65486472",
            "bed8e03b679b20a1",
            "5a4252038d4d9943",
            "9cc8b89eee5fff72",
            "a47bc1a79bec3f2a",
            "4eafac1d50c909bb",
            "9460f3800542cdfd",
            "d50db12b1156dd89",
            "6976ac3e970219a5",
            "c1aa521337e30c76",
            "3b8d6f41c33605f7"
        ],
        "x": 94,
        "y": 669
    },
    {
        "id": "49c39e.d1336c64",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "f167459.5f028b8",
        "name": "Lectura y asignación",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "54c12847.319f98",
            "6f336942.c58e1",
            "f9b834a1.6c5a5",
            "eb6bdff7.d5569",
            "c20e1b92.e56e1",
            "d17c3c2d.965de",
            "dab82b8f.e880b",
            "3134cc67.a5a254",
            "af3144a8.4a3b3",
            "31a64605.74157a",
            "30fc350c.0aa69a",
            "1a4ccb.26b08336",
            "4908d8f6.97f228",
            "ec7a14d8.fa5698",
            "c52f7d3.c8a3",
            "c9d88b91.5f83a8",
            "f06a62d1.ada4d8",
            "fc8213b0.f28cc",
            "77508f33.45f12",
            "5287952b.dbba9c",
            "74448153.b8033",
            "b4155087.d0ca4",
            "e6312c67.27e8d",
            "88f57863.f4af9",
            "72a989b1.85998",
            "45e8974.fb42ee8",
            "44fff4a7.060ba4",
            "baae080a.c182c8",
            "1561ad43.605253",
            "761da194.76fb",
            "cb551b9a.bd13d",
            "e046565b.c4feb",
            "83de296d.53474",
            "747e1688.393e4",
            "a8ab9da7.503428",
            "ef75c8ee.09e148",
            "92dda540.64d698",
            "fc2a5e3c.ff192",
            "c8299c5c.f6ad3",
            "aa0dd7ec.1d1e5",
            "f18a3b7c.1aad6",
            "95c053ae2c019985",
            "2e2cf12086edcf86",
            "4fe80e167740fe3b",
            "700f09d5af266f7c",
            "6f0d221e3a45b687",
            "1849f3aa0476fa69",
            "66e2a95ab2027f24",
            "cf7f1dbc82e6cdf6",
            "a6e1ec9e8b26c3a0",
            "5df2ddef493d23fe",
            "4e13729b39b53a93",
            "7597b324654286f9",
            "8d447a4ef7c4cb60",
            "6f3178a650d8f715",
            "2269e10b0b7231d8",
            "3f9c85c8e9580550",
            "d84e84fdd737275b",
            "4548acf8d88fcc50",
            "514d5ed34a685fd8",
            "f26c7cd67e2a751d",
            "b5ec933cfb0dbcbd",
            "5da2941ec6653d0f",
            "b9fd0d85469bdf62",
            "3de787026c042847",
            "fc9ab9803bf425e9",
            "cd0abe2063f7e179",
            "f3abda2e507b8187",
            "fca9f1d2b33c8c2e",
            "031596c77ab928a6",
            "a724aed5969ba98e",
            "8f47197d521272a7",
            "4ecee57cdebe7ef9",
            "3fa49a152e65892e",
            "350c6611a0391867",
            "a853aa4816675625",
            "fce58f058803ab8c",
            "30127a72a9e86380",
            "c41453a946699da7",
            "201ace7033e4132b",
            "da4c7a07f5b760bc",
            "ec420b972b84d6ae",
            "f441ed5865c99c7f",
            "4f0b55e892bfb4a3",
            "3643e1d2b5d5f9fa",
            "46fe667e3d90053a",
            "b82e31a7ba4b9493",
            "6a842bb4461218eb",
            "189c95398ca4a74d",
            "b2ee82111ec548a3",
            "f23e7677d613999c",
            "04e938b98f177269",
            "f0c4e1c284d417e4",
            "5b71991a6e96505e",
            "e3ef249e78603d8f",
            "d8c71c648cf1f608",
            "b99e04abad6045ae",
            "19aea13c856153f6",
            "5ab703c3e911fc3e",
            "edb17caf37c08ee9",
            "75922f11ac8749fb",
            "3161bcdbdf37be16",
            "e6c20f948495f302",
            "3fc079948c7f2493",
            "1e344070d99d23c3",
            "40c06d2a5432c88f",
            "a682a86850214d5f",
            "c6a423374d97a37e",
            "51b02f5772ae79a5",
            "42cae9fbf107f110",
            "0220f9cd260d0dcd",
            "7250a8f6b3cf4176",
            "307b5601f51c9d31",
            "ecec3b9850b6eabb",
            "563c0a8a176cfc41",
            "fdb7ccf7f3ebf53e",
            "ca3af6e1d9ee34fc",
            "6433e4e81cbe5966",
            "dc85213a17dc9013",
            "a90a4c26744febb0",
            "91e8a1a7b161d82c",
            "ab3e62c25ddbc9c1",
            "0ad35375797d0a52",
            "018dcb63fda2f0d3",
            "6fed0052fdfbe6ae",
            "58b360b864d7d87f",
            "d84a785289e598cd",
            "6133d498b94e40b8",
            "2ff24437b6c204db",
            "17a07b9ae7a7861b",
            "b5d771a24eb13652",
            "d4b501a8a9462e2e",
            "ab0eb95721c4a38c",
            "b7e8c0e0211714a7",
            "4389731b102c742f",
            "eb879b75e4a754f9",
            "b142564394135d0f",
            "b8f6d05216308f2f",
            "5b523df343832e42",
            "7c549260263926de",
            "a6537492cee742bb",
            "5de1f62eeac3700c",
            "0136783bb78db2e2",
            "6d0c3c367c64344a",
            "ea0a3cc6e4d6537a",
            "33cf5bad91b4412f",
            "86f805b5cb28bb05",
            "bd92a3ae5f6e2f10",
            "2aa31c125e8aa8f1",
            "9b11a2d4e3432956",
            "ea1cf5c958c8fbd1",
            "ae81aa320575e993",
            "de596228ce0351bb",
            "fce9ca29ea26c2ca",
            "7c2016e7007063f4",
            "bf08332fad815da4",
            "d7a21b76ea69a930",
            "2dcd110a422850fa",
            "c3df5a6a531467c2",
            "9a42b3bc50c233d0"
        ],
        "x": 94,
        "y": 1519
    },
    {
        "id": "f68d7eac.63fb98",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "f167459.5f028b8",
        "name": "Handle de las funciones DI",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "dd9a0d3d.ab8378",
            "28e01967.4859fe",
            "27a840fd.42a858",
            "ac563b4d.79d9b8",
            "ef425222.75e11",
            "a08074ff.25fb48",
            "d1863a1.a519248",
            "a2a2a85e.6d85f",
            "b1aedb71852e9755",
            "658c36cbd748534d",
            "737d9189cedc73ed",
            "81f602598a6222c1",
            "079b06c4d753c468",
            "dc7c0e6833d4017c"
        ],
        "x": 94,
        "y": 2559
    },
    {
        "id": "d532ac68.2d5408",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "7c55c2ad.611734",
        "name": "Configuración",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d72d7948.167a58",
            "e59fb555.39dfe8",
            "334cfa5.6777406",
            "bcbad123.d96408",
            "5eef4cc4.48bc2c",
            "5322e804.acbe18",
            "82e33d5e.1187b",
            "88918c98.f333",
            "b70a0946.953d7",
            "6393896c.e0efd",
            "bb031d32.09f76",
            "1c9beea7.9ae659",
            "fab6cd4c.25aec",
            "3b6c080b.f3913",
            "ee89b28c.cce778",
            "bafbe273.306aa8",
            "14396baf.99d41c",
            "974d273f.d93b38",
            "5bac8f8f.62b8e",
            "e433c433.141818",
            "c0af715a.2d774",
            "c9557dde.602ce8",
            "33588963.6948d6",
            "9b7b0b9e.5f7dd",
            "842f214f.04ba7",
            "5c9b452a467b8d49",
            "1b0e6f453fe679e8",
            "c4e78fbf68f418d3",
            "1b6da6d12918e8a2",
            "d084fb814fbc81c7",
            "2279f26cd0212d82",
            "9045b8b8f1b4cb30",
            "9e6212a088a3de43",
            "9bdf8250cc69db9a",
            "646733347a6612a4",
            "1701a25e8d726d0c",
            "6918ddbec17b6a14"
        ],
        "x": 1814,
        "y": 669
    },
    {
        "id": "c4bcf1ca.3d67d",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "7c55c2ad.611734",
        "name": "Lectura y asignación",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3a88048e.fa8db4",
            "1e5a15c3.d3674a",
            "1ac9ed41.2b8e73",
            "de32c3da.8ba478",
            "e4db17d9.6120e",
            "878b6c3a.00eaf",
            "3adbec4e.aae574",
            "a220e289.3ca13",
            "bbd8841e.d88cf8",
            "147f9005.665838",
            "37869600.1de64a",
            "25cc95aa.4ffc02",
            "ef4e68b2.e60838",
            "b93fb769.b2bb28",
            "2061f379.d14bbc",
            "3497868c.810b82",
            "f2fd3d81.a906d",
            "f8aba240.950148",
            "18c47ba8.228914",
            "3df4fb63.5f8cbc",
            "cf4ce76f.283b48",
            "3e5019c8.17d316",
            "3854e43c.ec8264",
            "a7252de6.c8312",
            "88f2ffd7.25d348",
            "1d28383f.f01808",
            "62212e6.f902cd",
            "c861991c.b55738",
            "cd379a79.9a98",
            "957a71c9.d6fe98",
            "61bfc03.335464",
            "55eb0949.d6d6c8",
            "5162edc5.fd86ec",
            "98d887d0.c0b08",
            "a4715132.442a68",
            "736848aa.a139b",
            "67b09cbc.c12944",
            "613538c3.5a6e2",
            "5acff31a.72921c",
            "5ae9830f.47b96c",
            "ac13eab3.b694b8",
            "e944556b.827528",
            "8fdf8ee9.0bd3d",
            "bee2d0ed90d4d8eb"
        ],
        "x": 1814,
        "y": 1179
    },
    {
        "id": "a80677cf.4274c8",
        "type": "group",
        "z": "3af652c9.6f9bee",
        "g": "f3c2e7cf.5ed158",
        "name": "Eventos Usuario",
        "style": {
            "fill": "#ff7f7f",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c404a6e9.ffda18",
            "7dfbde1e.e4b5b",
            "6d40adaa.11d2c4",
            "ba206124b4c1fb5e",
            "ecd73acb6f9a9a0a",
            "6f28d8cd32960ae4",
            "cb232372.b3dee"
        ],
        "x": 614,
        "y": 899
    },
    {
        "id": "64ff74e5.f4c53c",
        "type": "group",
        "z": "3af652c9.6f9bee",
        "g": "f3c2e7cf.5ed158",
        "name": "Acciones externas usuario",
        "style": {
            "label": true,
            "fill": "#ff7f7f",
            "color": "#000000"
        },
        "nodes": [
            "8edea7ae.674088",
            "33c5f16c.c8a5ae",
            "42f85e00.83b314",
            "c1672804cba19e98"
        ],
        "x": 614,
        "y": 479
    },
    {
        "id": "be55ea76.ed4478",
        "type": "group",
        "z": "3af652c9.6f9bee",
        "g": "f3c2e7cf.5ed158",
        "name": "Detectar usuario",
        "style": {
            "fill": "#ff7f7f",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ffad1340.f8a3b",
            "8effe1fe.bacd6",
            "98a9b5d4.5e5608",
            "d1a73825.d89578",
            "41b82348a8ab40a8",
            "8f8a6a475ac5ee0b",
            "a1956d7f8e9c73a6"
        ],
        "x": 614,
        "y": 689
    },
    {
        "id": "a00ff6e2dc632d87",
        "type": "group",
        "z": "7a89175c.90f6a8",
        "g": "80a9920a.43161",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9c034468.c6cea",
            "7e42111d.6ffa3",
            "f9db0dde.a8fef",
            "a43b5e16.f2f1c",
            "df3cfb7a.40f0c",
            "62b54556.f80694",
            "3f0d31a8.92e6d6",
            "af7bcd62.060f7",
            "348a92f6.f6e64e",
            "b9d1e79f.6df258",
            "a2785f6.327baa",
            "1a44e8c1.d5f3ef",
            "628521d7.5f7cf",
            "141d3991.af4366",
            "ab756585.f8d38"
        ],
        "x": 2114,
        "y": 3169
    },
    {
        "id": "dd4ef7f.6489508",
        "type": "group",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3afd29ba.46fad6",
            "ce02b206.111c9",
            "b4849220.625db",
            "77182564.24ff4c",
            "64cd81f4.6692f",
            "d5ba14a5.0e5e98",
            "962b19d2.c18838",
            "8c5351d8.97256",
            "89f58b9e.9e0d08",
            "248484da4b66af7c",
            "7af9ff4dabd191fb",
            "fbf0ac29aa515aa8",
            "32f2e49688936893"
        ],
        "x": 1394,
        "y": 459
    },
    {
        "id": "6c6732761a2613b5",
        "type": "group",
        "z": "f08f78f1e5892037",
        "name": "Interfaz Grafica Propiedades Sarta",
        "style": {
            "label": true
        },
        "nodes": [
            "96a0db69365db42c",
            "0a9c1250941292a9",
            "036736e96b3cf5d5",
            "9502af6540a09397",
            "f06113857db7c713",
            "b5d17c2c285bed8f",
            "d6dfa4c09d44edeb",
            "7247099ec1945e1e",
            "6cab9abe97ffc657",
            "989d5cfdc435febf",
            "44c74582fd34edd0",
            "9f334e9689c6521d",
            "7ad7df9f83927007",
            "8f3c14c5cc07112c",
            "4d7ffaf1b7b94f9c",
            "af548f8ab182c8a4",
            "71dce0659dc33da9",
            "941c42e964a7526d",
            "4c43476f.e5a758",
            "1112a5e0c336769a",
            "ff83bad55c73ba02"
        ],
        "x": 64,
        "y": 59,
        "w": 1328,
        "h": 562
    },
    {
        "id": "1112a5e0c336769a",
        "type": "group",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "Guardar y Eliminar Sarta",
        "style": {
            "label": true,
            "stroke": "#000000",
            "label-position": "n",
            "color": "#ffffff",
            "fill": "#000000"
        },
        "nodes": [
            "0f3bd1b3c0dba716",
            "f06b7450276d4474",
            "30dda140ac7f22a6",
            "91bcd26b8c353463",
            "a765a6d464c4d688",
            "11c07b25881dd37c",
            "715a788e41e6b141",
            "094cc2932f6a6569",
            "bea780155e3ae62b",
            "e25446d909349bd1"
        ],
        "x": 714,
        "y": 119,
        "w": 652,
        "h": 202
    },
    {
        "id": "56a92b2a688064b3",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "name": "Navegacion Sartas",
        "style": {
            "label": true
        },
        "nodes": [
            "7f58bafb234d04c9",
            "219b52896a3bc0c3",
            "7b495ef4bbce99f7",
            "571b4cb30ff6bd65",
            "93908b95eb15daba",
            "dc10ee8417e2d926",
            "c2ab1be8f01b7d58",
            "610f87e6c3ac9ed0"
        ],
        "x": 74,
        "y": 2199,
        "w": 582,
        "h": 182
    },
    {
        "id": "69cbede8f851191a",
        "type": "group",
        "z": "2e27dea6.c4c362",
        "name": "Navegacion Dinagramas",
        "style": {
            "label": true
        },
        "nodes": [
            "32808ce842cb8f72",
            "f258f142685365f9",
            "10d0df396dc90c03",
            "fe33e19e6f3ad930",
            "b3c56d84218b82e9",
            "97362283dcbb7395",
            "24cbb0c1657e1589",
            "a1c5e02a9d683eb4"
        ],
        "x": 74,
        "y": 2399,
        "w": 582,
        "h": 182
    },
    {
        "id": "a29dc858ae62d58f",
        "type": "group",
        "z": "6278f7e7f20ddc7d",
        "name": "Confirmar Datos de Configuracion SRP",
        "style": {
            "label": true
        },
        "nodes": [
            "a8d022ed20b061f9",
            "91b2784f93f468b9",
            "f61acb3281458831",
            "827ab83ae2c78ad2",
            "4ced36f0f13b7bb9",
            "d1f54575177f2e57",
            "79c8fd5ea0a7f8cd",
            "8b747d190ebff0b2"
        ],
        "x": 34,
        "y": 439,
        "w": 532,
        "h": 222
    },
    {
        "id": "93b8284ca58599b2",
        "type": "group",
        "z": "6278f7e7f20ddc7d",
        "name": "Adquision datos de la unidad de bombeo",
        "style": {
            "label": true
        },
        "nodes": [
            "36d47c1baf16eadc",
            "cde211deb28f6bed",
            "de3161fb18eb7d79",
            "1d725debadffb46d",
            "5db66f5b60da77ea",
            "fb7eab19ddad7e6e",
            "9c9a324973206a61",
            "48cb0fa85922cb7b",
            "495dd699cb4052d8",
            "854ce32ea1b5afc8",
            "1306ba5c4c7bcc52",
            "fa157a68217c39cd",
            "7ad17a6371ef812b",
            "155305bb3c1378e6",
            "5ed97706ae066277",
            "c48671c015ff393d"
        ],
        "x": 794,
        "y": 479,
        "w": 792,
        "h": 322
    },
    {
        "id": "cae36d29c5f8f5f1",
        "type": "group",
        "z": "6278f7e7f20ddc7d",
        "name": "Adquisión de Datos de Instalación",
        "style": {
            "label": true
        },
        "nodes": [
            "ec242348a51029a6",
            "5f0bb9f1e0119991",
            "8fa3259854a3cbcd",
            "1078ae10a317774d",
            "a2a4d12b5d11c700",
            "3726e3fccd9462d5",
            "e695355b9e32b218",
            "e2419e408c8a7668",
            "80e019ab8f8149e8",
            "f3108ce20db66c79",
            "adaae1b6a39a1d7e",
            "c967f958cd8bdfb7",
            "05a3da5da05a6074",
            "0587dab757af8216",
            "7272dab73cde0eab"
        ],
        "x": 34,
        "y": 39,
        "w": 772,
        "h": 382
    },
    {
        "id": "9bddfef0b0857da0",
        "type": "group",
        "z": "6278f7e7f20ddc7d",
        "name": "Adquision de produccion Data",
        "style": {
            "label": true
        },
        "nodes": [
            "d15c9873acaa7a5a",
            "1a95f9772998f85b",
            "e04df775f9112cfa",
            "329b040ad0147b73",
            "51b9fdba441d36b6",
            "d7d48cf3a4dde0e5",
            "4ce75a492476ae17",
            "2789ad8eda712c18",
            "e93fa5e49c25b892",
            "76e92771251ba430",
            "3e15e467a40d88f7",
            "951dd9076fa62aea",
            "dd4b874c564be096",
            "48399d05d546249b",
            "3a3d15df3519e181",
            "a20e87743bb7a4fe",
            "9404675ff21528fd",
            "f3be5ce759a4a80f",
            "bd2109e7b422682a",
            "d9756d5c2fdbe14c"
        ],
        "x": 854,
        "y": 39,
        "w": 872,
        "h": 402
    },
    {
        "id": "67a422f5076a03ee",
        "type": "group",
        "z": "b368eb771541cd7f",
        "name": "Geometria SRP Adquisión Data",
        "style": {
            "stroke": "#999999",
            "fill": "none",
            "fill-opacity": "1",
            "label": true
        },
        "nodes": [
            "b4539185fb0ed29c",
            "6beb986644fd85c9",
            "d0000719b53a7a2e",
            "dc9dec37ee85de21",
            "a1c831b7e90e22ff",
            "e921a2fdc3c59c6c",
            "39c025cfd924d890",
            "feb2500f598af26b",
            "0867564e255cf141",
            "8459b3906d74937a",
            "bcbc178529974542",
            "86fc24861fc10aec",
            "da09bd4c407c4879",
            "1ac77a51ce28dc09",
            "ae6d79c692edb1b3",
            "c76052ebdaa1c89f",
            "a6eada0644843ecf",
            "5ad2031a8a072ecf",
            "4ea4752526705df9",
            "302111413eaa1c5e",
            "7e0d4a9b48d34e79",
            "79f86b9972bfcd80",
            "343c34ac79b7a658",
            "48fafa6b2605673b",
            "5cd1fb77c9bc162f",
            "a7f1ced49f661635",
            "6b6f660a01296c98",
            "e3fea7b19ee5bea0",
            "9323de8b6d7ca929",
            "305da8bc7276e8b4",
            "a9c77bf176fd0376",
            "6e17766beb28a8c1",
            "35a420bf34c17eac",
            "a6a22dd37b39aff2",
            "a2a2df81154e9740",
            "56abbddc993e4f47",
            "72026d71504e7a74",
            "58fc26aba318c49c",
            "32ce26c0d0b04f77"
        ],
        "x": 34,
        "y": 19,
        "w": 1572,
        "h": 562
    },
    {
        "id": "54bb46e073aa1e2e",
        "type": "group",
        "z": "6a1ef6a7aef873a7",
        "name": "Datos DHSSensorLess",
        "style": {
            "label": true
        },
        "nodes": [
            "843e250256d34d87",
            "2ef2aff836428e70",
            "b6564175707f7414",
            "28957741ff430c98",
            "7ee866165d8eaa56",
            "f295c7967245792a",
            "bbd14a02c90c8979"
        ],
        "x": 594,
        "y": 159,
        "w": 512,
        "h": 242
    },
    {
        "id": "854b667853465d2b",
        "type": "group",
        "z": "6a1ef6a7aef873a7",
        "name": "Imagen DHSSensorLess",
        "style": {
            "label": true
        },
        "nodes": [
            "fe1a9bde13dab923",
            "57d96f9647eeba77",
            "832a31d3f59bf4df",
            "381f2e27385db5e4",
            "9ab20d05e2553884"
        ],
        "x": 34,
        "y": 159,
        "w": 482,
        "h": 142
    },
    {
        "id": "a063560e4a0a3bf1",
        "type": "group",
        "z": "6a1ef6a7aef873a7",
        "name": "Calculos Para Dinagramas de Fondo [Ecuación de Onda]",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#000000",
            "color": "#ffffff"
        },
        "nodes": [
            "5ef9f1c757b3c525",
            "78dececd724e88a8",
            "9380591e68aa6cfd",
            "1c4e8fcfe6a3e2e8",
            "1d26662def25323f",
            "e0439a824aa40693",
            "519724ca0bae0425",
            "de1bafacc719791d",
            "7a6ff18321a03c6d",
            "1b31503325926827",
            "144b8abb78491883",
            "b8210abad06fb15e",
            "d0f5dfd40edd6ea0"
        ],
        "x": 14,
        "y": 419,
        "w": 632,
        "h": 422
    },
    {
        "id": "9d4d96338ab627d0",
        "type": "group",
        "z": "6a1ef6a7aef873a7",
        "name": "Dinagrama de Fondo2D",
        "style": {
            "fill": "#000000",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "65d6f38a052e2fb5",
            "6eaf6a1933c0c45b",
            "6749a4e697c2d46c",
            "4040a91ad2f6935f",
            "05d96036920b3247",
            "067c35d016f6c30c"
        ],
        "x": 14,
        "y": 859,
        "w": 652,
        "h": 122
    },
    {
        "id": "9648249e35aead30",
        "type": "group",
        "z": "6a1ef6a7aef873a7",
        "name": "Dinagrama de Superficie2D",
        "style": {
            "fill": "#ffC000",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "7e856988dab94127",
            "31c115f2ca699261",
            "305dc890db8b5ec3",
            "01cf9b61f66c1ef5"
        ],
        "x": 24,
        "y": 1019,
        "w": 682,
        "h": 82
    },
    {
        "id": "d5ab7ccd2eaf9c7e",
        "type": "group",
        "z": "1890b8e955d8f8fa",
        "name": "Tendencia Principal",
        "style": {
            "label": true
        },
        "nodes": [
            "9d5ab93e68875cf4",
            "e058166bb272c1b4",
            "ea9f83cfaae149a6",
            "d2c079af5901e54c"
        ],
        "x": 174,
        "y": 1319,
        "w": 492,
        "h": 122
    },
    {
        "id": "a0b84f94a6510eee",
        "type": "group",
        "z": "1890b8e955d8f8fa",
        "name": "ADQUISICIÓN TIEMPO",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#bfdbef"
        },
        "nodes": [
            "e8b8423b9c4c6e08",
            "5f3e1c612d3d4d12",
            "c969c7cacbbff852",
            "eb4dfe7adadd8f34",
            "2e1d777e859bed3d",
            "6e1f6fa9633b3d1f",
            "2109bbab6075bb12",
            "c28da4d63169b436",
            "633d69e85cd4273d",
            "73e4e1467a78a7bb",
            "4c056e6caf7acffe",
            "344a1d24134f522b",
            "923d63f441f43f13",
            "eaf4b2085acff39e"
        ],
        "x": 134,
        "y": 459,
        "w": 1092,
        "h": 282
    },
    {
        "id": "3caf0dee72fc2047",
        "type": "group",
        "z": "1890b8e955d8f8fa",
        "name": "habilitar y notificaciones",
        "style": {
            "label": true
        },
        "nodes": [
            "156287dbdde7759f",
            "dc5431853d568cc5",
            "24332fdbcbeb5e8d",
            "9bf20a3cfce9fae1",
            "eaaaccf524f27cd3",
            "b972240fa3c146c4",
            "8676f151870d6dd1",
            "c82c938cd7e28fae",
            "abf83d7b7058ada8",
            "2edb376b1401ac97",
            "872c0292870c3d55",
            "4c2bf44c8e1d1fb9",
            "b11065b3e2970783",
            "258d1e598d71b09d",
            "9dac8d865abda724",
            "5e99aadeec08ef39",
            "cd39cc92c052f90b",
            "941b04b909291975"
        ],
        "x": 714,
        "y": 1319,
        "w": 1432,
        "h": 322
    },
    {
        "id": "1f2682bef5794306",
        "type": "group",
        "z": "1890b8e955d8f8fa",
        "name": "Actualización de Datos",
        "style": {
            "label": true
        },
        "nodes": [
            "b37f86580848e10b",
            "265746b1eeaca5fd",
            "5332bed331397338",
            "f78646b26f8246e0",
            "25d0f4f9cc0cbbc0",
            "4f627b07415ef96e",
            "c3a8183221d9fafe",
            "c153e4fdd9ce3c18",
            "ae26d5eef96a6990",
            "937aca96cc86906c",
            "eee0b070f76590b2"
        ],
        "x": 154,
        "y": 179,
        "w": 1392,
        "h": 162
    },
    {
        "id": "6604db9c5e9f2794",
        "type": "group",
        "z": "1890b8e955d8f8fa",
        "name": "Logica Control",
        "style": {
            "fill": "#000000",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "7468830a5595288e",
            "dfb2d8dab3143b0d",
            "4834ceceae06a274",
            "a3cb09a8f3941aba",
            "ceaf6c43578a56ea",
            "cba380e0e52cd32b",
            "994ebb3d980c43bd",
            "846c2e0e5cd8fad9",
            "1551d461961f629a",
            "a238e44da1043fc8",
            "fd237aae6448ebac",
            "9ec6d52462cf9447",
            "50866dbb9fc505f2",
            "8ce32e6d89bb8bd5",
            "5ab55f15839c8b62",
            "b03e0ac1537edae8",
            "603028515e6a66ba",
            "b9dcf539def2f220",
            "8c7c947326ff02b5",
            "7819bb96d43a4d64",
            "b64a18e24f00a0e2"
        ],
        "x": 174,
        "y": 779,
        "w": 1142,
        "h": 482
    },
    {
        "id": "d25d405a.19cff",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#bbbbbe",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#324a9d",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#324a9d",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#324a9d",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#e7e9e8",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#e8e8e8",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#d7d7d7",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#e7e9e8",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#324a9d",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#e7e9e8",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 58,
                "sy": 46,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "764d8ce4.3c81b4",
        "type": "ui_group",
        "name": "Menu_Bar",
        "tab": "1ecc5089.33b77f",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e5ec1549.1923c8",
        "type": "ui_group",
        "name": "Commando_Arranque_Normal",
        "tab": "1ecc5089.33b77f",
        "order": 2,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1b027e16.1fc232",
        "type": "ui_group",
        "name": "C2S_Data",
        "tab": "1ecc5089.33b77f",
        "order": 6,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "474271dc.04fa9",
        "type": "ui_group",
        "name": "Electric_Data",
        "tab": "1ecc5089.33b77f",
        "order": 7,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "26126cf5.7e87a4",
        "type": "ui_group",
        "name": "Downhole_Data",
        "tab": "1ecc5089.33b77f",
        "order": 8,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f7aa27b.6c2ded8",
        "type": "ui_group",
        "name": "comandos_Marcha",
        "tab": "1ecc5089.33b77f",
        "order": 5,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d4113fd9.a0bfc",
        "type": "ui_group",
        "name": "Commando_Arranque_Escalonado",
        "tab": "1ecc5089.33b77f",
        "order": 3,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2d559537.720c4a",
        "type": "ui_group",
        "name": "Commando_Referencia_Prolongada",
        "tab": "1ecc5089.33b77f",
        "order": 4,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4b33f8ea.b34188",
        "type": "ui_group",
        "name": "Ajuste",
        "tab": "fe41bc20.3ab56",
        "order": 1,
        "disp": false,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "38898609.fe288a",
        "type": "ui_group",
        "name": "Tabla",
        "tab": "fe41bc20.3ab56",
        "order": 2,
        "disp": false,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c0d4b517.4b9968",
        "type": "ui_group",
        "name": "Placa de motor",
        "tab": "9d512981.aa8278",
        "order": 4,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c9a29e84.68bd",
        "type": "ui_group",
        "name": "Voltios Hertz",
        "tab": "9d512981.aa8278",
        "order": 8,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "971dcd1e.a04d5",
        "type": "ui_group",
        "name": "Rampas",
        "tab": "9d512981.aa8278",
        "order": 13,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "53f5e611.7d5b48",
        "type": "ui_group",
        "name": "Límites",
        "tab": "9d512981.aa8278",
        "order": 14,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "13baa6fa.5569a9",
        "type": "ui_group",
        "name": "Frecuencia LS",
        "tab": "9d512981.aa8278",
        "order": 10,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "1c12ea7.7bc1e16",
        "type": "ui_group",
        "name": "Reg. Velocidad",
        "tab": "9d512981.aa8278",
        "order": 11,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "5bbc6e36.6f635",
        "type": "ui_group",
        "name": "Sintonización",
        "tab": "9d512981.aa8278",
        "order": 12,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "4d236281.ace7dc",
        "type": "ui_group",
        "name": "Datos Filtro-Cable",
        "tab": "9d512981.aa8278",
        "order": 17,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "75fbd908.193868",
        "type": "ui_group",
        "name": "Datos de motor",
        "tab": "9d512981.aa8278",
        "order": 6,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "65440464.5a5b5c",
        "type": "ui_group",
        "name": "Datos de transformador",
        "tab": "9d512981.aa8278",
        "order": 16,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "6bc484bb.848a6c",
        "type": "ui_group",
        "name": "Curvas de saturación",
        "tab": "9d512981.aa8278",
        "order": 7,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "131a527672e0b4a0",
        "type": "ui_group",
        "name": "NavPMM",
        "tab": "9d512981.aa8278",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "7dbed15a02aec33a",
        "type": "ui_group",
        "name": "NavAjustesRef",
        "tab": "9d512981.aa8278",
        "order": 9,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "9bfa57e13e5326f8",
        "type": "ui_group",
        "name": "Nav-tab",
        "tab": "9d512981.aa8278",
        "order": 2,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1db3fea4fdfc1236",
        "type": "ui_group",
        "name": "NavDatos de motor",
        "tab": "9d512981.aa8278",
        "order": 5,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "e6368c98d211b3a1",
        "type": "ui_group",
        "name": "NavIM",
        "tab": "9d512981.aa8278",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "332af29a.076dee",
        "type": "ui_group",
        "name": "Relación de Transformación",
        "tab": "9d512981.aa8278",
        "order": 15,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aa8453cf.6d05a",
        "type": "ui_group",
        "name": "FiltroArmonicos",
        "tab": "73af030.b87b7fc",
        "order": 8,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e342ea29.f4f318",
        "type": "ui_group",
        "name": "Nav_Bar",
        "tab": "73af030.b87b7fc",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9457c46f.d710c8",
        "type": "ui_group",
        "name": "Configuración E.D.",
        "tab": "73af030.b87b7fc",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "89c29882.24ba28",
        "type": "ui_group",
        "name": "Información del canal E.D.",
        "tab": "73af030.b87b7fc",
        "order": 3,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "42b2cabf.0c7ea4",
        "type": "ui_group",
        "name": "Configuración E.A.",
        "tab": "73af030.b87b7fc",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4a58744b.a270cc",
        "type": "ui_group",
        "name": "Información del canal E.A.",
        "tab": "73af030.b87b7fc",
        "order": 5,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "999747fd.0e43c8",
        "type": "ui_group",
        "name": "Configuración S.D.",
        "tab": "73af030.b87b7fc",
        "order": 6,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f099a646.bd5eb8",
        "type": "ui_group",
        "name": "Información del canal S.D.",
        "tab": "73af030.b87b7fc",
        "order": 7,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2d9cedce.ac17c2",
        "type": "ui_group",
        "name": "Configuración S.A.",
        "tab": "73af030.b87b7fc",
        "order": 9,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7821f022.e6285",
        "type": "ui_group",
        "name": "Información del canal S.A.",
        "tab": "73af030.b87b7fc",
        "order": 10,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "91f407cc.9e95a8",
        "type": "ui_group",
        "name": "Memorias USB",
        "tab": "fdffe6bc.86dd78",
        "order": 8,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "96dbaa88.715ef8",
        "type": "ui_group",
        "name": "Eventos",
        "tab": "fdffe6bc.86dd78",
        "order": 2,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "42e65bd9.26fdf4",
        "type": "ui_group",
        "name": "Alarmas",
        "tab": "fdffe6bc.86dd78",
        "order": 3,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b006ff9.8805c",
        "type": "ui_group",
        "name": "Buttons",
        "tab": "fdffe6bc.86dd78",
        "order": 5,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a41af5be.52be18",
        "type": "ui_group",
        "name": "Settings",
        "tab": "fdffe6bc.86dd78",
        "order": 4,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "33c417e4.ee9778",
        "type": "ui_group",
        "name": "Nav_Bar_User",
        "tab": "fdffe6bc.86dd78",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a706ea3d.b7fbc8",
        "type": "ui_group",
        "name": "User Credentials",
        "tab": "c17f19ae.06fbf8",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "c17f19ae.06fbf8",
        "type": "ui_tab",
        "name": "Usuario",
        "icon": "fa-user",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ce0b9fc7.62b0b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a706ea3d.b7fbc8",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "c587b420.8480a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a706ea3d.b7fbc8",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "a3d1f2c7.5fe22",
        "type": "pccc endpoint",
        "address": "192.168.2.10",
        "port": "44818",
        "userouting": false,
        "routing": "0x01,0x00,0x01,0x00",
        "cycletime": "500",
        "timeout": "1500",
        "name": "PowerFlex755T_Read",
        "vartable": [
            {
                "addr": "N42:3",
                "name": "TimeOut"
            },
            {
                "addr": "N45:0",
                "name": "Status_Word"
            },
            {
                "addr": "N45:1",
                "name": "Output_Frequency"
            },
            {
                "addr": "N45:2",
                "name": "Commanded_SpdRef"
            },
            {
                "addr": "N45:3",
                "name": "Output_Current"
            },
            {
                "addr": "N45:4",
                "name": "Output_Voltage"
            },
            {
                "addr": "N45:5",
                "name": "Output_Power"
            },
            {
                "addr": "N45:6",
                "name": "Power_Factor"
            },
            {
                "addr": "N45:7",
                "name": "Bus_DC_Volts"
            },
            {
                "addr": "N45:8",
                "name": "Drive_Temp_C"
            },
            {
                "addr": "N45:9",
                "name": "Elapsed_Run_Time"
            },
            {
                "addr": "N45:10",
                "name": "Last_Fault_Code"
            },
            {
                "addr": "N45:11",
                "name": "Elapsed_kWH"
            }
        ]
    },
    {
        "id": "ae58460d.12c698",
        "type": "modbus-client",
        "name": "PQA",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.2.13",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "",
        "unit_id": "5",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "f630cb55.8d18e8",
        "type": "modbus-client",
        "name": "Cubloc RS-232",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/serial0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "55a9eb4e.762c64",
        "type": "ui_group",
        "name": "Configuración",
        "tab": "2dbf183f.1f2ed8",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "aeef0dfe.74e9c",
        "type": "modbus-client",
        "name": "DHS RS485",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/serial1",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "8276e64d.c16508",
        "type": "ui_group",
        "name": "Estado sensor de fondo",
        "tab": "2dbf183f.1f2ed8",
        "order": 4,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1b1afe53.beb8f2",
        "type": "ui_group",
        "name": "Información",
        "tab": "2dbf183f.1f2ed8",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bbd73f04.32559",
        "type": "ui_group",
        "name": "Monitoreo SWC",
        "tab": "af61749c.7aa158",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "af61749c.7aa158",
        "type": "ui_tab",
        "name": "SWC",
        "icon": "fa-television",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e9d237aaf9318e74",
        "type": "pccc endpoint",
        "address": "192.168.2.10",
        "port": "44818",
        "userouting": false,
        "routing": "0x01,0x00,0x01,0x00",
        "cycletime": "500",
        "timeout": "1500",
        "name": "PowerFlex755T_Write",
        "vartable": [
            {
                "addr": "N42:3",
                "name": "TimeOut"
            },
            {
                "addr": "N45:4",
                "name": "PF755T_SpeedReference"
            },
            {
                "addr": "N45:6",
                "name": "PF755T_ControlCommands"
            },
            {
                "addr": "N45:8",
                "name": "AO1"
            },
            {
                "addr": "N45:10",
                "name": "AO2"
            },
            {
                "addr": "N45:12",
                "name": "AO3"
            },
            {
                "addr": "N45:14",
                "name": "AO4"
            },
            {
                "addr": "N45:0",
                "name": "CommandWord"
            }
        ]
    },
    {
        "id": "5d5048d34dbd174e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "91f407cc.9e95a8",
        "order": 2,
        "width": "1",
        "height": 1
    },
    {
        "id": "65db6bee60684518",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b006ff9.8805c",
        "order": 1,
        "width": "1",
        "height": 1,
        "className": ""
    },
    {
        "id": "2a3f8c77015e1a1e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c0d4b517.4b9968",
        "order": 8,
        "width": "4",
        "height": 1,
        "className": ""
    },
    {
        "id": "b8cc309b89fdcfe7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c0d4b517.4b9968",
        "order": 9,
        "width": "12",
        "height": 1,
        "className": ""
    },
    {
        "id": "5bee3e62f87517c5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "75fbd908.193868",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "96dc73abba5af4cc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "75fbd908.193868",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "3277174914c3713a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "75fbd908.193868",
        "order": 17,
        "width": 4,
        "height": 1
    },
    {
        "id": "01358576108dd154",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6bc484bb.848a6c",
        "order": 13,
        "width": 4,
        "height": 1
    },
    {
        "id": "359df4f9e500f367",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6bc484bb.848a6c",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "70aac6a2b066d189",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6bc484bb.848a6c",
        "order": 16,
        "width": 4,
        "height": 1
    },
    {
        "id": "ed91556d4dcf78ba",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6bc484bb.848a6c",
        "order": 18,
        "width": 4,
        "height": 1
    },
    {
        "id": "695f2c8d559922d5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c9a29e84.68bd",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "ac70cdfa92062d83",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c9a29e84.68bd",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "4c3bb9116936a12b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c9a29e84.68bd",
        "order": 12,
        "width": 4,
        "height": 1
    },
    {
        "id": "e4dc28c1fbf1c37d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "13baa6fa.5569a9",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "468291498ecddaca",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "13baa6fa.5569a9",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "e777418ac2eb6e2c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "13baa6fa.5569a9",
        "order": 13,
        "width": 4,
        "height": 1
    },
    {
        "id": "ad7d0610e139e348",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "13baa6fa.5569a9",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "a839a87ffea10d15",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c12ea7.7bc1e16",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "e3db53326f20bc20",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c12ea7.7bc1e16",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "88a1a593e6990fe8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5bbc6e36.6f635",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "1fa86ba80c41549b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5bbc6e36.6f635",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "d118306ffddc69b7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "971dcd1e.a04d5",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "cd2221c60b8f88a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "971dcd1e.a04d5",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "f0e21ba28c153bd6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "971dcd1e.a04d5",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "3a15d416f027e5da",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "971dcd1e.a04d5",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9efa93d52f069a55",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "971dcd1e.a04d5",
        "order": 7,
        "width": "2",
        "height": 1,
        "className": ""
    },
    {
        "id": "de3e8dd47da56b6c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "971dcd1e.a04d5",
        "order": 9,
        "width": "2",
        "height": 1,
        "className": ""
    },
    {
        "id": "3529a3529b84b019",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "53f5e611.7d5b48",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "e7f09f34455608cf",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "53f5e611.7d5b48",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "84b39d86c2dad7d1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "53f5e611.7d5b48",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "c00eeb439e522750",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "332af29a.076dee",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "f113bd4ba6a1eb9f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "332af29a.076dee",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "c79f90f95d8cc09e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "65440464.5a5b5c",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "477215d8e9013ef6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "65440464.5a5b5c",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "e1d70f0ef49a39a6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "65440464.5a5b5c",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "dd485b5d19c24643",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "65440464.5a5b5c",
        "order": 12,
        "width": 4,
        "height": 1
    },
    {
        "id": "f92cb8b9361f9485",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4d236281.ace7dc",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "c63d80684ef18a99",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4d236281.ace7dc",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "403471e8cdf530ee",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4d236281.ace7dc",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "b7a904d68fe7be6a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4d236281.ace7dc",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "78b8f22f.a47d4c",
        "type": "ui_group",
        "name": "Rampas de Aceleración",
        "tab": "df82a9eeeb3d8a7c",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "edf097a9.5fb028",
        "type": "ui_group",
        "name": "Tiempo de Rearme",
        "tab": "df82a9eeeb3d8a7c",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e72670e4.f5998",
        "type": "ui_group",
        "name": "No. de Intentos",
        "tab": "df82a9eeeb3d8a7c",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "20076456.83052c",
        "type": "ui_group",
        "name": "Habilitar AR",
        "tab": "df82a9eeeb3d8a7c",
        "order": 2,
        "disp": false,
        "width": "2",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cf893b29.8b0a68",
        "type": "ui_group",
        "name": "Habilitar AR2",
        "tab": "df82a9eeeb3d8a7c",
        "order": 6,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "225e345f.a1250c",
        "type": "ui_group",
        "name": "Configuración",
        "tab": "df82a9eeeb3d8a7c",
        "order": 7,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a2ab3a38.4d35e8",
        "type": "ui_group",
        "name": "Tendencia",
        "tab": "df82a9eeeb3d8a7c",
        "order": 8,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2540c0d0.abd4d",
        "type": "ui_group",
        "name": "Control",
        "tab": "df82a9eeeb3d8a7c",
        "order": 9,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "42783be43cc39c58",
        "type": "ui_group",
        "name": "Nav_Bar",
        "tab": "df82a9eeeb3d8a7c",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1fec051811af2cc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "20076456.83052c",
        "order": 1,
        "width": "2",
        "height": "1",
        "className": ""
    },
    {
        "id": "d53fab09c2e470cf",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2540c0d0.abd4d",
        "order": 1,
        "width": "5",
        "height": 1,
        "className": ""
    },
    {
        "id": "983c822705ee3d99",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2540c0d0.abd4d",
        "order": 5,
        "width": "5",
        "height": 1,
        "className": ""
    },
    {
        "id": "2f4bb5caedb1453c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "320ee129640638c3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "ce7a42782d5e783d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "fd29cfb8e7167283",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 6,
        "height": 1
    },
    {
        "id": "101d63c2c3beb16e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "532df66faefc7a82",
        "type": "ui_group",
        "name": "Navbar_PID",
        "tab": "df82a9eeeb3d8a7c",
        "order": 10,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2bc37396131d90ff",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "e5ec1549.1923c8",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "b474f4f8714ff047",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "e5ec1549.1923c8",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "ca5a2ceb7cac24dc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d4113fd9.a0bfc",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "eb80d482996c46c7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f7aa27b.6c2ded8",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "023e5000b6b8367e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f7aa27b.6c2ded8",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "067da5f1dfa51a71",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "474271dc.04fa9",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "a07f6b49ca906c9b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 11,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "efa335e50fc2115a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 21,
        "width": 2,
        "height": 1
    },
    {
        "id": "c253497a21bdea1f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "ebb0cc4282933f43",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7821f022.e6285",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "70398263c8576e0f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7821f022.e6285",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "e9acedc9aa6f26ae",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7821f022.e6285",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "25f4054bd0947068",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "aa8453cf.6d05a",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "764dbf8ab8a1eb76",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "aa8453cf.6d05a",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "3548b3b4.c8d65c",
        "type": "modbus-client",
        "name": "PyModbusServer",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "f6e9eea4ba6b65b2",
        "type": "ui_group",
        "name": "Sensor Personalizado",
        "tab": "2dbf183f.1f2ed8",
        "order": 3,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aa4e36446e2d9052",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "55a9eb4e.762c64",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "d5d1f1401c248771",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "55a9eb4e.762c64",
        "order": 5,
        "width": "3",
        "height": "4",
        "className": ""
    },
    {
        "id": "4b44edd12d743430",
        "type": "ui_group",
        "name": "Habilitar/Deshabilitar",
        "tab": "df82a9eeeb3d8a7c",
        "order": 13,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "edc39ed791f9c007",
        "type": "ui_group",
        "name": "Sintonización",
        "tab": "df82a9eeeb3d8a7c",
        "order": 11,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4d2798c5816c08e6",
        "type": "ui_group",
        "name": "Límites de Operación",
        "tab": "df82a9eeeb3d8a7c",
        "order": 12,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "84d4f3527698919d",
        "type": "ui_group",
        "name": "Reglas de Activación",
        "tab": "df82a9eeeb3d8a7c",
        "order": 16,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "62322ccaa2234181",
        "type": "ui_group",
        "name": "TendenciaPID",
        "tab": "df82a9eeeb3d8a7c",
        "order": 14,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4b5a8f5776f16ee5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bbd73f04.32559",
        "order": 1,
        "width": 12,
        "height": 1
    },
    {
        "id": "b082e80c0aaf3d75",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bbd73f04.32559",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "afb231f5394578a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bbd73f04.32559",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "29969290edc60199",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bbd73f04.32559",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "402eb612fd5d7ffc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bbd73f04.32559",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "fb4a425e0443e833",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bbd73f04.32559",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "49b56a6d4f4a9a8f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bbd73f04.32559",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "10a4b733bffe6fec",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bbd73f04.32559",
        "order": 10,
        "width": 12,
        "height": 1
    },
    {
        "id": "ee6055a6495f5b42",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bbd73f04.32559",
        "order": 12,
        "width": 7,
        "height": 1
    },
    {
        "id": "4a6e96bfabd88c14",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bbd73f04.32559",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "4f5b8416.cada1c",
        "type": "ui_group",
        "name": "Status_Bar",
        "tab": "1ecc5089.33b77f",
        "order": 10,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ecc5089.33b77f",
        "type": "ui_tab",
        "name": "Principal",
        "icon": "fa-home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fe41bc20.3ab56",
        "type": "ui_tab",
        "name": "Protecciones",
        "icon": "fa-shield",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9d512981.aa8278",
        "type": "ui_tab",
        "name": "Configuración VSD",
        "icon": "fa-cogs",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "73af030.b87b7fc",
        "type": "ui_tab",
        "name": "Entradas y Salidas",
        "icon": "fa-microchip",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2dbf183f.1f2ed8",
        "type": "ui_tab",
        "name": "Sensor de Fondo",
        "icon": "fa-thermometer-three-quarters",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "df82a9eeeb3d8a7c",
        "type": "ui_tab",
        "name": "Otras Funciones de Control",
        "icon": "fa-play",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fdffe6bc.86dd78",
        "type": "ui_tab",
        "name": "Eventos y Datalog",
        "icon": "fa-calendar",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "73d37e5b1f2a302a",
        "type": "ui_group",
        "name": "Status_Bar",
        "tab": "9d512981.aa8278",
        "order": 18,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4190699f61725da4",
        "type": "ui_group",
        "name": "Status_Bar",
        "tab": "73af030.b87b7fc",
        "order": 11,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ab77be5a0af25d0a",
        "type": "ui_group",
        "name": "Status_Bar",
        "tab": "2dbf183f.1f2ed8",
        "order": 5,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ac27a3905053ab85",
        "type": "ui_group",
        "name": "Status_Bar",
        "tab": "df82a9eeeb3d8a7c",
        "order": 15,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "13df98319c7579a6",
        "type": "ui_group",
        "name": "tendencia",
        "tab": "1ecc5089.33b77f",
        "order": 9,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "444cec62e9d2cae6",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "20076456.83052c",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "b25ed3402423abcc",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "20076456.83052c",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "5929e62108ea9235",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "20076456.83052c",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "87bd259a7434fe22",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "20076456.83052c",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "b2faf62898fd1d90",
        "type": "ui_spacer",
        "z": "d08f14e12055286a",
        "name": "spacer",
        "group": "e72670e4.f5998",
        "order": 5,
        "width": "4",
        "height": 1,
        "className": ""
    },
    {
        "id": "356679599d87f504",
        "type": "ui_spacer",
        "z": "d08f14e12055286a",
        "name": "spacer",
        "group": "cf893b29.8b0a68",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "522a270cfe021396",
        "type": "ui_spacer",
        "z": "d08f14e12055286a",
        "name": "spacer",
        "group": "225e345f.a1250c",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "c56ebdd9b75d7457",
        "type": "ui_spacer",
        "z": "d08f14e12055286a",
        "name": "spacer",
        "group": "225e345f.a1250c",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "876c920caf22e84f",
        "type": "ui_spacer",
        "z": "d08f14e12055286a",
        "name": "spacer",
        "group": "225e345f.a1250c",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "9218a736e2466c30",
        "type": "ui_spacer",
        "z": "d08f14e12055286a",
        "name": "spacer",
        "group": "225e345f.a1250c",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "72354f7f027c3bbf",
        "type": "ui_spacer",
        "z": "d08f14e12055286a",
        "name": "spacer",
        "group": "225e345f.a1250c",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "73f16e9e64513683",
        "type": "ui_spacer",
        "z": "d08f14e12055286a",
        "name": "spacer",
        "group": "225e345f.a1250c",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "64104f2cd6a8f693",
        "type": "ui_spacer",
        "z": "d08f14e12055286a",
        "name": "spacer",
        "group": "225e345f.a1250c",
        "order": 13,
        "width": "5",
        "height": "3",
        "className": ""
    },
    {
        "id": "b9c183795ead2603",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "edc39ed791f9c007",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "22b075d14ebdfcdf",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "edc39ed791f9c007",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "e7a96193d3c93125",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "edc39ed791f9c007",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "230bff0fe81fd86e",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "edc39ed791f9c007",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "aa299551063fbf16",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "edc39ed791f9c007",
        "order": 9,
        "width": "1",
        "height": 1,
        "className": ""
    },
    {
        "id": "d7a1382984847a68",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "edc39ed791f9c007",
        "order": 11,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "78269d8be67ce9b0",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "4b44edd12d743430",
        "order": 2,
        "width": "4",
        "height": 1,
        "className": ""
    },
    {
        "id": "92af60f17573fc09",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "4b44edd12d743430",
        "order": 1,
        "width": "0",
        "height": "0",
        "className": ""
    },
    {
        "id": "13ab3352d619f4ed",
        "type": "ui_spacer",
        "z": "ebaf6b5134c2a666",
        "name": "spacer",
        "group": "84d4f3527698919d",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "62a095f80caf1936",
        "type": "ui_spacer",
        "z": "ebaf6b5134c2a666",
        "name": "spacer",
        "group": "84d4f3527698919d",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "1624081765cba1cc",
        "type": "ui_spacer",
        "z": "ebaf6b5134c2a666",
        "name": "spacer",
        "group": "84d4f3527698919d",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "5635eaad07077b61",
        "type": "ui_spacer",
        "z": "ebaf6b5134c2a666",
        "name": "spacer",
        "group": "84d4f3527698919d",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "228c597e4e56ad4b",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "4b33f8ea.b34188",
        "order": 21,
        "width": "5",
        "height": "4",
        "className": ""
    },
    {
        "id": "2ca2d25e57fdd4ba",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "9457c46f.d710c8",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "181d1ace90dd8834",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "9457c46f.d710c8",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "e5040061cdc8233f",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "9457c46f.d710c8",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "d095de798719643e",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "9457c46f.d710c8",
        "order": 16,
        "width": "6",
        "height": "1",
        "className": ""
    },
    {
        "id": "8525869578bc85d9",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "9457c46f.d710c8",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "a39c868aeeddbe67",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "9457c46f.d710c8",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "d4e2b6dc67d968db",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "9457c46f.d710c8",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "3e271949884cfc02",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "9457c46f.d710c8",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "aa471c663e01e9eb",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "9457c46f.d710c8",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "a0a9169b50e97db9",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "9457c46f.d710c8",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "5af3effcb4857b2f",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "08032c07bdf71aa6",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "3f2062f8852bde3b",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "d689d7e5a4cb9aa1",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "42cb6c1d7df8dcba",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "3150baa1a780728f",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "752b799378c7ad93",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "e897538ceb874790",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "96f4eb616abde638",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "40c9f3bc5f8e47d4",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "e843a8ee5c9cb431",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "5c4afc6292c1e03a",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "42b2cabf.0c7ea4",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "2508f9d851cb6283",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "999747fd.0e43c8",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "3735aa91befdee14",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "999747fd.0e43c8",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "58c97dd27ebab84d",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "999747fd.0e43c8",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "2fa6878512838f28",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "999747fd.0e43c8",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "64c5b40d7b77d055",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "999747fd.0e43c8",
        "order": 16,
        "width": "6",
        "height": "2",
        "className": ""
    },
    {
        "id": "c0783652e85a1a7b",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "999747fd.0e43c8",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9eecd76e4033a877",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "999747fd.0e43c8",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "56fe7a95d2fbd96c",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "999747fd.0e43c8",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "e01ae390c852ada2",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "999747fd.0e43c8",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "e55875e7d819623e",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "999747fd.0e43c8",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "81455d226333269a",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "aa8453cf.6d05a",
        "order": 1,
        "width": "3",
        "height": "3",
        "className": ""
    },
    {
        "id": "025f3c242ff757d5",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "cc470b010ff71390",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "3cf24e12a4d0a624",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "86792884207d98fb",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "be0e52b3b9065663",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "ed701de774bb5964",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "fababcd1c37dba02",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "20d204e03009c1dd",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "00ae3989876a5298",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "c707bdf7df93e0b4",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "2d9cedce.ac17c2",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d3be3140d129fde",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "775dcebaf3471e27",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 14,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "4f846cd6983fa713",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "9e0ea1f679ba95b4",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 49,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "566ff3c2756d95e1",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 28,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "a654b20ac2bc89f9",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "fb865543689619f6",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 42,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "335a4a283e7c4dbb",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 35,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "18a1c8ed177e9461",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 43,
        "width": 1,
        "height": 1
    },
    {
        "id": "33030d0d3de23f15",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 7,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "dcd3cc98553d4799",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 21,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "3181703e79e34098",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "ebe235f1592e5665",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "5e5ada828f8b23be",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 56,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "9cf6b312f40e8906",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 57,
        "width": "16",
        "height": 1,
        "className": ""
    },
    {
        "id": "ac510513b74dcf18",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 50,
        "width": 1,
        "height": 1
    },
    {
        "id": "2dcd5474df1f68f4",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "32f5ddd7cdf61d17",
        "type": "ui_spacer",
        "z": "38e901f121b52acb",
        "name": "spacer",
        "group": "f6e9eea4ba6b65b2",
        "order": 58,
        "width": "9",
        "height": 1,
        "className": ""
    },
    {
        "id": "aa15cbbe8fbb2b32",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "c9a29e84.68bd",
        "order": 1,
        "width": "2",
        "height": "3",
        "className": ""
    },
    {
        "id": "bf8db9bf6a71ac1a",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "c9a29e84.68bd",
        "order": 5,
        "width": "2",
        "height": "3",
        "className": ""
    },
    {
        "id": "d071e2723f781b85",
        "type": "ui_spacer",
        "z": "43b51d90.0b47f4",
        "name": "spacer",
        "group": "332af29a.076dee",
        "order": 1,
        "width": "2",
        "height": "2",
        "className": ""
    },
    {
        "id": "3b85a7438709be09",
        "type": "ui_spacer",
        "z": "43b51d90.0b47f4",
        "name": "spacer",
        "group": "332af29a.076dee",
        "order": 5,
        "width": "2",
        "height": "2",
        "className": ""
    },
    {
        "id": "aa291819959667d9",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "f7aa27b.6c2ded8",
        "order": 4,
        "width": "3",
        "height": "2",
        "className": ""
    },
    {
        "id": "3dfc6e9db716aab8",
        "type": "ui_tab",
        "name": "Tendencias",
        "icon": "fa-area-chart",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e3ea45406021c442",
        "type": "ui_group",
        "name": "Selector variables CILA2S",
        "tab": "3dfc6e9db716aab8",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "514fcb790b3b8279",
        "type": "ui_group",
        "name": "Selector de tiempo",
        "tab": "3dfc6e9db716aab8",
        "order": 2,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "73e7292f7ff015d8",
        "type": "ui_group",
        "name": "Gráfico",
        "tab": "3dfc6e9db716aab8",
        "order": 3,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5506d219e1b48a22",
        "type": "ui_group",
        "name": "PQAevents",
        "tab": "fdffe6bc.86dd78",
        "order": 7,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c80ba27e4370eea1",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "5506d219e1b48a22",
        "order": 4,
        "width": "4",
        "height": 1,
        "className": ""
    },
    {
        "id": "2587eb2bae31a097",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "5506d219e1b48a22",
        "order": 6,
        "width": "1",
        "height": 1,
        "className": ""
    },
    {
        "id": "d4ce0f7379428df9",
        "type": "ui_group",
        "name": "Smart Datalogger®",
        "tab": "fdffe6bc.86dd78",
        "order": 6,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b92b62577237e482",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "d4ce0f7379428df9",
        "order": 4,
        "width": "3",
        "height": 1,
        "className": ""
    },
    {
        "id": "a329b0e3c78b451e",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "a41af5be.52be18",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "63f6985783f08cde",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "d4ce0f7379428df9",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "0f150a78a103d9bb",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "d4ce0f7379428df9",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "5ba693e8814bb59d",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "d4ce0f7379428df9",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "cc5edd1e7d1bc1b2",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "d4ce0f7379428df9",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "647c07c3eeb33ecf",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "d4ce0f7379428df9",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "196499f92c16a5d8",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "d4ce0f7379428df9",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "5d20a046d2382864",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "d4ce0f7379428df9",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "bc907fbfe59599f4",
        "type": "ui_spacer",
        "z": "e7088c4e.cc6b4",
        "name": "spacer",
        "group": "d4ce0f7379428df9",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "eb4189681357c221",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "8276e64d.c16508",
        "order": 3,
        "width": "12",
        "height": "4"
    },
    {
        "id": "a147a441e4501b29",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "38898609.fe288a",
        "order": 2,
        "width": "7",
        "height": "4"
    },
    {
        "id": "6f626a33ebbf9f27",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "4b33f8ea.b34188",
        "order": 20,
        "width": "5",
        "height": "4"
    },
    {
        "id": "3b2c064edad4c19d",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "f44449b952264214",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "ddfcac5c31a9b7ac",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "f44449b952264214",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "d5e130139af2b6ae",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "f44449b952264214",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "143c22dddb4bff1c",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "f44449b952264214",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "a98cec9a8dceac9f",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "c88a78ac91c87880",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "3c27564a5eeb4659",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "c88a78ac91c87880",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "79ebbf94dfd83969",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "c88a78ac91c87880",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9247c124c89ad6fd",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "c88a78ac91c87880",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "d3098a611a3ec789",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "45f961811da830f5",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "f4f4df242166e0f3",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "45f961811da830f5",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "21aa54510e964db8",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "45f961811da830f5",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "eae3deff7a73e0fc",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "2d31d65cb3154f18",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "d09cda24d1a59b01",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "2d31d65cb3154f18",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "304c037f07711b10",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "2d31d65cb3154f18",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "41827642fef75e8f",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "7f71cf7415a9a522",
        "order": 16,
        "width": 6,
        "height": 1
    },
    {
        "id": "227ab2732f98bbdb",
        "type": "ui_tab",
        "name": "AVAS®",
        "icon": "fa-laptop",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "02dda30351a34cce",
        "type": "ui_group",
        "name": "Estado mecánico",
        "tab": "227ab2732f98bbdb",
        "order": 2,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "97db202e2e66e6c5",
        "type": "ui_group",
        "name": "Propiedades de flujo",
        "tab": "227ab2732f98bbdb",
        "order": 3,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d51e5858af3d175d",
        "type": "ui_group",
        "name": "Pruebas de producción",
        "tab": "227ab2732f98bbdb",
        "order": 4,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8c7f5396abbccd01",
        "type": "ui_group",
        "name": "Datos de instalación",
        "tab": "227ab2732f98bbdb",
        "order": 5,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "89e12b591528cad3",
        "type": "ui_group",
        "name": "Gráfica IPR",
        "tab": "227ab2732f98bbdb",
        "order": 6,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c16981372038961a",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "89e12b591528cad3",
        "order": 5,
        "width": "10",
        "height": 1,
        "className": ""
    },
    {
        "id": "a5274f2740ad0d41",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "8c7f5396abbccd01",
        "order": 15,
        "width": "8",
        "height": 1,
        "className": ""
    },
    {
        "id": "32b7864ad3ff6c2e",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "8c7f5396abbccd01",
        "order": 16,
        "width": "10",
        "height": 1,
        "className": ""
    },
    {
        "id": "7010e8a9247227c4",
        "type": "ui_spacer",
        "z": "2e27dea6.c4c362",
        "name": "spacer",
        "group": "26126cf5.7e87a4",
        "order": 12,
        "width": "2",
        "height": 1,
        "className": ""
    },
    {
        "id": "997d37017b7f8871",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "e5ec1549.1923c8",
        "order": 1,
        "width": 1,
        "height": "3",
        "className": ""
    },
    {
        "id": "3575e8ed35356cd6",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "e5ec1549.1923c8",
        "order": 5,
        "width": 1,
        "height": "3",
        "className": ""
    },
    {
        "id": "a6bdb4426be252d1",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "e5ec1549.1923c8",
        "order": 11,
        "width": 1,
        "height": "3",
        "className": ""
    },
    {
        "id": "3b76e849b93702bc",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "d4113fd9.a0bfc",
        "order": 1,
        "width": 1,
        "height": "3",
        "className": ""
    },
    {
        "id": "ae2e7941001f6d12",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "d4113fd9.a0bfc",
        "order": 4,
        "width": 1,
        "height": "3",
        "className": ""
    },
    {
        "id": "5e4fd30156655673",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "d4113fd9.a0bfc",
        "order": 6,
        "width": 1,
        "height": "3",
        "className": ""
    },
    {
        "id": "d8f08a1906326b98",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "2d559537.720c4a",
        "order": 1,
        "width": 1,
        "height": "3",
        "className": ""
    },
    {
        "id": "5cbd53ea5702a74d",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "2d559537.720c4a",
        "order": 4,
        "width": 1,
        "height": "3",
        "className": ""
    },
    {
        "id": "dc3682c86990052f",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "2d559537.720c4a",
        "order": 7,
        "width": 1,
        "height": "3",
        "className": ""
    },
    {
        "id": "9c68d89bd7ed3ea1",
        "type": "ui_spacer",
        "z": "902fc438.e5d758",
        "name": "spacer",
        "group": "2d559537.720c4a",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "737fcab07a3aa4b4",
        "type": "ui_group",
        "name": "Nav_bar",
        "tab": "227ab2732f98bbdb",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3eee573de2d0980e",
        "type": "ui_group",
        "name": "Amperimetric",
        "tab": "227ab2732f98bbdb",
        "order": 7,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8a39e6048e5caa3d",
        "type": "ui_spacer",
        "z": "7af521b51c8e6a51",
        "name": "spacer",
        "group": "3eee573de2d0980e",
        "order": 4,
        "width": "2",
        "height": "6",
        "className": ""
    },
    {
        "id": "df1da3d9e58a326e",
        "type": "modbus-client",
        "name": "PLCTCP",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.2.15",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "02cbe3fdab13693b",
        "type": "ui_group",
        "name": "CajaReductora",
        "tab": "9d512981.aa8278",
        "order": 18,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "c4af1abf6fb99202",
        "type": "ui_group",
        "name": "ParametrosSarta",
        "tab": "a1df2961a39cdb81",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a1df2961a39cdb81",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "fa-cogs",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c826a906d21939e3",
        "type": "ui_spacer",
        "z": "f08f78f1e5892037",
        "name": "spacer",
        "group": "e5ec1549.1923c8",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "d063f13f9026fee1",
        "type": "ui_group",
        "name": "Menu",
        "tab": "a1df2961a39cdb81",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "91918b5f0ec9ab0d",
        "type": "ui_group",
        "name": "Menu",
        "tab": "415c32a74f3175cf",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "415c32a74f3175cf",
        "type": "ui_tab",
        "name": "Downhole SensorLess Dynagram",
        "icon": "fa-area-chart",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "138a041197444b87",
        "type": "ui_group",
        "name": "DHSSensorLess",
        "tab": "415c32a74f3175cf",
        "order": 4,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "fd1cdabd977e8a85",
        "type": "ui_group",
        "name": "Surface",
        "tab": "415c32a74f3175cf",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "fdcbda020f30e7e0",
        "type": "ui_group",
        "name": "Downhole",
        "tab": "415c32a74f3175cf",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "bdb839607367176a",
        "type": "ui_group",
        "name": "instala",
        "tab": "a1df2961a39cdb81",
        "order": 3,
        "disp": false,
        "width": 12,
        "collapse": false
    },
    {
        "id": "c41c874c460569a1",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 14,
        "height": 1
    },
    {
        "id": "f370b4882888b570",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "c136572f74d453b9",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9a5cd49039d77f4d",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "5dd38dab62d69390",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "9e0219202a02cb59",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "94717bf79cdf5c38",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "745669bb9c179f47",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "aa90f23ddd87d376",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "96d6891088d4a05a",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "6b837cefe3a69df4",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "dfd8b7261cc56e96",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "7ceeb7fc3670d956",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "ee23ed51b5e6e651",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 32,
        "width": 5,
        "height": 1
    },
    {
        "id": "7c4d80cf8c563d8d",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "f5e216b22bb9913e",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 36,
        "width": 9,
        "height": 1
    },
    {
        "id": "06ae88b03af2595f",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 38,
        "width": 1,
        "height": 1
    },
    {
        "id": "30dd458c557a8d5c",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "a15701e6a990f79f",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 41,
        "width": 4,
        "height": 1
    },
    {
        "id": "5fa28315fb175cd6",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "",
        "order": 43,
        "width": 1,
        "height": 1
    },
    {
        "id": "e5360c10debc8116",
        "type": "ui_group",
        "name": "geometria",
        "tab": "a1df2961a39cdb81",
        "order": 4,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b549eecabcfc9578",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "c4af1abf6fb99202",
        "order": 10,
        "width": 12,
        "height": 1
    },
    {
        "id": "83e6bc22a85899dd",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "c4af1abf6fb99202",
        "order": 11,
        "width": 12,
        "height": 1
    },
    {
        "id": "08ea7a06456f79a1",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "c4af1abf6fb99202",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "42f7b38aeadc1182",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "c4af1abf6fb99202",
        "order": 15,
        "width": 12,
        "height": 1
    },
    {
        "id": "a6a9beac0ced49a8",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "c4af1abf6fb99202",
        "order": 16,
        "width": 12,
        "height": 1
    },
    {
        "id": "493ee3e89bc456a2",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "bdb839607367176a",
        "order": 22,
        "width": 4,
        "height": 1
    },
    {
        "id": "057a3b91852f8c83",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "bdb839607367176a",
        "order": 24,
        "width": 4,
        "height": 1
    },
    {
        "id": "86565319436092b7",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "bdb839607367176a",
        "order": 25,
        "width": 4,
        "height": 1
    },
    {
        "id": "e069a750de6f3fdc",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "bdb839607367176a",
        "order": 27,
        "width": 4,
        "height": 1
    },
    {
        "id": "e351b39faa12133d",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "e5360c10debc8116",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "d38daf116fdcafc2",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "e5360c10debc8116",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "15201d3c4320317e",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "e5360c10debc8116",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "2a3c44e151918ed1",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "e5360c10debc8116",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "f02bf7adb52b2a5e",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "e5360c10debc8116",
        "order": 14,
        "width": 3,
        "height": 1
    },
    {
        "id": "50607bed329ee4a6",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "e5360c10debc8116",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "498c20f8b39c3e4d",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "e5360c10debc8116",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "cb3053c4f756cff2",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "e5360c10debc8116",
        "order": 19,
        "width": 4,
        "height": 1
    },
    {
        "id": "4273402a1abc6bb7",
        "type": "ui_spacer",
        "z": "b368eb771541cd7f",
        "name": "spacer",
        "group": "e5360c10debc8116",
        "order": 21,
        "width": 4,
        "height": 1
    },
    {
        "id": "d5793763aabf18e4",
        "type": "ui_group",
        "name": "DHSSensorLess",
        "tab": "415c32a74f3175cf",
        "order": 4,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "f2a62c0d6f10d2b7",
        "type": "ui_group",
        "name": "Surface",
        "tab": "415c32a74f3175cf",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "ded8f6853f86499e",
        "type": "ui_group",
        "name": "Downhole",
        "tab": "415c32a74f3175cf",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "e37df2c845093401",
        "type": "ui_group",
        "name": "PumpOff",
        "tab": "df82a9eeeb3d8a7c",
        "order": 8,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "e765ca36.69fb98",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "group": "764d8ce4.3c81b4",
        "name": "menu home",
        "order": 1,
        "width": "16",
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-ComandosC2S-tab\" data-toggle=\"tab\" href=\"#nav-ComandosC2S\" role=\"tab\"\n                aria-controls=\"nav-ComandosC2S\" aria-selected=\"false\" ng-click=\"send({payload:ComandosC2S()})\">Comandos\n                C2S</a>\n            <a class=\"nav-item nav-link\" id=\"nav-C2S-tab\" data-toggle=\"tab\" href=\"#nav-C2S\" role=\"tab\"\n                aria-controls=\"nav-C2S\" aria-selected=\"false\" ng-click=\"send({payload:C2S()})\">Datos C2S</a>\n            <a class=\"nav-item nav-link\" id=\"nav-electricos-tab\" data-toggle=\"tab\" href=\"#nav-electricos\" role=\"tab\"\n                aria-controls=\"nav-electricos\" aria-selected=\"false\" ng-click=\"send({payload:electricos()})\">Datos\n                eléctricos</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-fondo-tab\" data-toggle=\"tab\" href=\"#nav-fondo\" role=\"tab\"\n                aria-controls=\"nav-fondo\" aria-selected=\"true\" ng-click=\"send({payload:fondo()})\">Datos de proceso</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.fondo = function() { return \"Fondo\"; };\n        this.scope.C2S = function() { return \"C2S\"; };\n        this.scope.electricos = function() { return \"Eléctricos\"; };\n        this.scope.ComandosC2S = function() { return \"ComandosC2S\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n</body>\n\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 450,
        "y": 300,
        "wires": [
            [
                "876da3c9.83763",
                "16335e2c56b3d940",
                "60e038d3b3bf8b56"
            ]
        ]
    },
    {
        "id": "876da3c9.83763",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Fondo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C2S",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Eléctricos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ComandosC2S",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 610,
        "y": 220,
        "wires": [
            [
                "3d5528dc.de75d8"
            ],
            [
                "56fab3e7.5f20dc"
            ],
            [
                "14f401b1.71d24e"
            ],
            [
                "78bacd83.c921b4"
            ]
        ]
    },
    {
        "id": "7b211215.487a7c",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "Ar. Normal",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Principal_Menu_Bar\",\t                \"Principal_Commando_Arranque_Normal\",\t                \"Principal_comandos_Marcha\",\t                \"Principal_tendencia\",\t                \"Principal_Status_Bar\"\t       ],\t       \"hide\":[ \"Principal_C2S_Data\",\t                \"Principal_Electric_Data\",\t                \"Principal_Downhole_Data\",\t                \"Principal_Commando_Arranque_Escalonado\",\t                \"Principal_Commando_Referencia_Prolongada\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 290,
        "wires": [
            [
                "d2ee2a47.afabd8"
            ]
        ]
    },
    {
        "id": "6e752954.f1b758",
        "type": "ui_ui_control",
        "z": "2e27dea6.c4c362",
        "g": "d929d138.3b512",
        "name": "",
        "events": "all",
        "x": 1410,
        "y": 140,
        "wires": [
            [
                "4372d5a0.d338dc"
            ]
        ]
    },
    {
        "id": "77d67b76.8c8804",
        "type": "inject",
        "z": "2e27dea6.c4c362",
        "g": "1d0c3cb2.7129f3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "bfa48676.a364f8"
            ]
        ]
    },
    {
        "id": "8a17d991.081178",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "d929d138.3b512",
        "name": "in uicontrol",
        "links": [
            "d2ee2a47.afabd8",
            "dc439b5.84bfd68",
            "666152d6.dc641c",
            "c83649c3.716488",
            "f21e2e27.0af3d",
            "da1b0a1a.7d4d28",
            "6b0e4d29.b19b14",
            "f95e46ccd8ac066d",
            "3cbd8b298714a327",
            "1b6d3ebacefe3d37",
            "b0a2cd1a.ab273",
            "c98bd2dc.e9d39",
            "bb4f29c8.aa7e88",
            "6b3d4586f5261369",
            "eb0d147d1d43c8ac",
            "8751f41a6c3b999b",
            "b9e2d52df918f5f6",
            "7b495ef4bbce99f7",
            "10d0df396dc90c03"
        ],
        "x": 1315,
        "y": 140,
        "wires": [
            [
                "6e752954.f1b758"
            ]
        ]
    },
    {
        "id": "4372d5a0.d338dc",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "d929d138.3b512",
        "name": "out uicontrol",
        "links": [
            "a3c47b56.260d18",
            "9be1365.7de13c8",
            "d8c3331e.ce174",
            "f1123923.6f3c18",
            "69ab9a05.d68fb4",
            "f16f101c.45049",
            "475f760e.f7c4c8",
            "1d75f920.e7d3c7",
            "8c1672c3.bfe98",
            "58ac270c.e2b418",
            "39a7cf283ee8e264",
            "fd328934.0ddd18",
            "b3363f6b.8bce4",
            "d547e2d2.48e7b",
            "6eb47ec.d02a08",
            "f95759e7d28493ed",
            "1fd02487f8ca4356",
            "aeb29ded9a6b39dc",
            "d50db12b1156dd89",
            "8862fe04df379b4e",
            "b0ad660b4a9c1425",
            "2f2a2b11810b4fbe",
            "4c96d1b1.d47ce",
            "610f87e6c3ac9ed0",
            "a1c5e02a9d683eb4",
            "9323de8b6d7ca929"
        ],
        "x": 1505,
        "y": 140,
        "wires": []
    },
    {
        "id": "d2ee2a47.afabd8",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "links": [
            "8a17d991.081178"
        ],
        "x": 1155,
        "y": 290,
        "wires": []
    },
    {
        "id": "14f401b1.71d24e",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "Electricos",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Principal_Menu_Bar\",\t                \"Principal_Electric_Data\",\t                \"Principal_tendencia\",\t                \"Principal_Status_Bar\"\t       ],\t       \"hide\":[ \"Principal_C2S_Data\",\t                \"Principal_Downhole_Data\",\t                \"Principal_Commando_Arranque_Normal\",\t                \"Principal_Commando_Arranque_Escalonado\",\t                \"Principal_Commando_Referencia_Prolongada\",\t                \"Principal_comandos_Marcha\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 250,
        "wires": [
            [
                "dc439b5.84bfd68"
            ]
        ]
    },
    {
        "id": "dc439b5.84bfd68",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "links": [
            "8a17d991.081178"
        ],
        "x": 1155,
        "y": 250,
        "wires": []
    },
    {
        "id": "56fab3e7.5f20dc",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "C2S",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Principal_Menu_Bar\",\t                \"Principal_C2S_Data\",\t                \"Principal_tendencia\",\t                \"Principal_Status_Bar\"\t       ],\t       \"hide\":[ \"Principal_Electric_Data\",\t                \"Principal_Downhole_Data\",\t                \"Principal_Commando_Arranque_Normal\",\t                \"Principal_Commando_Arranque_Escalonado\",\t                \"Principal_Commando_Referencia_Prolongada\",\t                \"Principal_comandos_Marcha\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 210,
        "wires": [
            [
                "666152d6.dc641c"
            ]
        ]
    },
    {
        "id": "666152d6.dc641c",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "links": [
            "8a17d991.081178"
        ],
        "x": 1155,
        "y": 210,
        "wires": []
    },
    {
        "id": "c83649c3.716488",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "links": [
            "8a17d991.081178"
        ],
        "x": 1155,
        "y": 170,
        "wires": []
    },
    {
        "id": "3d5528dc.de75d8",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "Fondo",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Principal_Menu_Bar\",\t                \"Principal_Downhole_Data\",\t                \"Principal_tendencia\"\t       ],\t       \"hide\":[ \"Principal_C2S_Data\",\t                \"Principal_Electric_Data\",\t                \"Principal_Commando_Arranque_Normal\",\t                \"Principal_Commando_Arranque_Escalonado\",\t                \"Principal_Commando_Referencia_Prolongada\",\t                \"Principal_comandos_Marcha\",\t                \"Principal_Status_Bar\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 170,
        "wires": [
            [
                "c83649c3.716488"
            ]
        ]
    },
    {
        "id": "78bacd83.c921b4",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "tipodearranque",
        "property": "#:(memoryOnly)::Input.Navigation.ComandOper",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 760,
        "y": 320,
        "wires": [
            [
                "b22ef31b.8b813"
            ],
            [
                "ff70c9bf.cb00c8"
            ],
            [
                "7b211215.487a7c"
            ]
        ]
    },
    {
        "id": "b22ef31b.8b813",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "Ar. Escalon",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Principal_Menu_Bar\",\t                \"Principal_Commando_Arranque_Escalonado\",\t                \"Principal_comandos_Marcha\",\t                \"Principal_tendencia\",\t                \"Principal_Status_Bar\"\t       ],\t       \"hide\":[ \"Principal_C2S_Data\",\t                \"Principal_Electric_Data\",\t                \"Principal_Downhole_Data\",\t                \"Principal_Commando_Arranque_Normal\",\t                \"Principal_Commando_Referencia_Prolongada\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 330,
        "wires": [
            [
                "f21e2e27.0af3d"
            ]
        ]
    },
    {
        "id": "f21e2e27.0af3d",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "links": [
            "8a17d991.081178"
        ],
        "x": 1155,
        "y": 330,
        "wires": []
    },
    {
        "id": "ff70c9bf.cb00c8",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "Ref. Prolong",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Principal_Menu_Bar\",\t                \"Principal_Commando_Referencia_Prolongada\",\t                \"Principal_comandos_Marcha\",\t                \"Principal_tendencia\",\t                \"Principal_Status_Bar\"\t       ],\t       \"hide\":[ \"Principal_C2S_Data\",\t                \"Principal_Electric_Data\",\t                \"Principal_Downhole_Data\",\t                \"Principal_Commando_Arranque_Normal\",\t                \"Principal_Commando_Arranque_Escalonado\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 370,
        "wires": [
            [
                "da1b0a1a.7d4d28"
            ]
        ]
    },
    {
        "id": "da1b0a1a.7d4d28",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "links": [
            "8a17d991.081178"
        ],
        "x": 1155,
        "y": 370,
        "wires": []
    },
    {
        "id": "236c6c92.d31584",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "arranque change",
        "links": [
            "35ccf461.2cb12c",
            "6462ec7c.9e9864",
            "38a73d64.5af212",
            "984b7042.907f4",
            "f796f5cc.fb7898",
            "4a3a2387d414149a",
            "c27cb084a6f62baf"
        ],
        "x": 635,
        "y": 360,
        "wires": [
            [
                "78bacd83.c921b4"
            ]
        ]
    },
    {
        "id": "daa89a01.910de8",
        "type": "ui_led",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "order": 1,
        "group": "4f5b8416.cada1c",
        "width": 5,
        "height": 1,
        "label": "C2S: {{msg.payload}}",
        "labelPlacement": "right",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "FALLA de variador!",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "FALLA de protección!",
                "valueType": "str"
            },
            {
                "color": "#ffa500",
                "value": "ALARMA!",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "ACTIVO",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "ACTIVO Acelerando",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "ACTIVO Desacelerando",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "DETENIDO",
                "valueType": "str"
            },
            {
                "color": "#000000",
                "value": "Falla de comunicación drive",
                "valueType": "str"
            },
            {
                "color": "#ffff00",
                "value": "Variador deshabilitado",
                "valueType": "str"
            },
            {
                "color": "#ffa500",
                "value": "Falla general",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 610,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9523c57c.c9b468",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "group": "4f5b8416.cada1c",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "Rtx: ",
        "format": "  {{msg.payload}}",
        "layout": "row-center",
        "x": 610,
        "y": 1080,
        "wires": []
    },
    {
        "id": "da849ce7.0ef51",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "Data show",
        "func": "var Output_Frequency    = global.get(\"C2S.Implicit.Output_Frequency\",'memoryOnly')||0;\nvar Power_Factor        = global.get(\"C2S.Implicit.Power_Factor\",'memoryOnly')||0;\nvar Output_Voltage      = global.get(\"C2S.Implicit.Output_Voltage\", 'memoryOnly') || 0;\nvar Bus_DC_Volts        = global.get(\"C2S.Implicit.Bus_DC_Volts\", 'memoryOnly') || 0;\nvar Output_Power        = global.get(\"C2S.Implicit.Output_Power\", 'memoryOnly') || 0;\nvar Output_Current      = global.get(\"C2S.Implicit.Output_Current\", 'memoryOnly') || 0;\nvar Elapsed_Run_Time    = global.get(\"C2S.Implicit.Elapsed_Run_Time\", 'memoryOnly') || 0;\nvar Last_Fault_Code     = global.get(\"C2S.Implicit.Last_Fault_Code\", 'memoryOnly') || 0;\nvar Elapsed_kWH         = global.get(\"C2S.Implicit.Drive_Temp_C\", 'memoryOnly') || 0;\n\nvar MtrCurrent;\nvar MtrVoltage;\n\nvar MaxLimit = global.get(\"C2S.Speed_Control.MaxLimit\")||1;\nvar Speed = global.get(\"C2S.Implicit.Output_Frequency\",'memoryOnly')||0;\nvar SpeedPercentage = (Math.abs(Speed) / MaxLimit)*100;\n\nvar MtrCtrl = global.get(\"C2S.Motor_Control.Type\") || \"IM\";\n\n// Corriente y tensión de motor\nvar Rtx = global.get(\"C2S.RelTx\") || 1;\nMtrVoltage = Output_Voltage * Rtx;\nMtrCurrent = Output_Current / Rtx;\n\nreturn[\n    { payload: catcherror(Output_Frequency,3)},\n    { payload: catcherror(SpeedPercentage,0)},\n    { payload: catcherror(Power_Factor,3)},\n    { payload: catcherror(Output_Current,3)},\n    { payload: catcherror(Bus_DC_Volts,0)},\n    { payload: catcherror(MtrVoltage,1)},\n    { payload: catcherror(Output_Power,1)},\n    { payload: catcherror(Output_Voltage,1)},\n    { payload: catcherror(MtrCurrent,1)},\n    { payload: catcherror(Elapsed_Run_Time, 1)},\n    { payload: catcherror(Last_Fault_Code, 0)},\n    { payload: catcherror(Elapsed_kWH, 1)}\n]\n\nfunction catcherror(variable,dec){\n    return parseFloat(variable.toFixed(dec));\n}",
        "outputs": 12,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1560,
        "wires": [
            [
                "def0c8ddae21bc33"
            ],
            [
                "fd7d8e466c89b924"
            ],
            [
                "06ed38b7797ff80d"
            ],
            [
                "68ba7be08a9049a1"
            ],
            [
                "80ed9b3f88067f5f"
            ],
            [
                "cca11fa308c0840d"
            ],
            [
                "fd10872c8ba7f129"
            ],
            [
                "87f10cbd3a2d9eec"
            ],
            [
                "f4b06287d144da8b"
            ],
            [
                "f93d008c4941f1f3"
            ],
            [
                "418bd57d6e9c178d"
            ],
            [
                "9708fb7ce60bdd70"
            ]
        ],
        "outputLabels": [
            "Output_Frequency",
            "SpeedPercentage",
            "Power_Factor",
            "Output_Current",
            "Bus_DC_Volts",
            "Mtr_Voltage",
            "Output_Power",
            "Output_Voltage",
            "Mtr_Current",
            "",
            "",
            ""
        ]
    },
    {
        "id": "6784775a.6334d8",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "name": "Data show",
        "func": "var Chart_Selection = flow.get(\"PQA.Harmonics_Chart.Selection\", \"memoryOnly\") || \"\";\n\n\nvar Frecuencia = global.get(\"PQA.Real_Time_Parameters.Frequency\", 'memoryOnly') || 0;\nvar LN,LL,Corriente,Factor_Protecia,THDV,THDI,Potencia,FP;\n\nif (Chart_Selection == \"Linea1\") {\n    LN = global.get(\"PQA.Real_Time_Parameters.Line_Voltage_1_2\", 'memoryOnly') || 0;\n    LL = global.get(\"PQA.Real_Time_Parameters.Phase_1_Voltage\", 'memoryOnly') || 0;\n    Corriente = global.get(\"PQA.Real_Time_Parameters.Total_Phase_A_Current\", 'memoryOnly') || 0;\n    THDV = global.get(\"PQA.Harmonics.Power_Quality['THD_V1(V12)']\",'memoryOnly')||0;\n    THDI = global.get(\"PQA.Harmonics.Power_Quality.THD_I1\",'memoryOnly')||0;\n    Potencia = global.get(\"PQA.Real_Time_Parameters.Phase_A_Power\",'memoryOnly')||0;\n    FP = global.get(\"PQA.Real_Time_Parameters.Phase_A_Power_Factor\", 'memoryOnly') || 0;\n\n}\nelse if (Chart_Selection == \"Linea2\") {\n    LN = global.get(\"PQA.Real_Time_Parameters.Line_Voltage_2_3\", 'memoryOnly') || 0;\n    LL = global.get(\"PQA.Real_Time_Parameters.Phase_2_Voltage\", 'memoryOnly') || 0;\n    Corriente = global.get(\"PQA.Real_Time_Parameters.Total_Phase_B_Current\", 'memoryOnly') || 0;\n    THDV = global.get(\"PQA.Harmonics.Power_Quality['THD_V2(V31)']\", 'memoryOnly') || 0;\n    THDI = global.get(\"PQA.Harmonics.Power_Quality.THD_I2\", 'memoryOnly') || 0;\n    Potencia = global.get(\"PQA.Real_Time_Parameters.Phase_B_Power\", 'memoryOnly') || 0;\n    FP = global.get(\"PQA.Real_Time_Parameters.Phase_B_Power_Factor\", 'memoryOnly') || 0;\n}\nelse if (Chart_Selection == \"Linea3\") {\n    LN = global.get(\"PQA.Real_Time_Parameters.Line_Voltage_3_1\", 'memoryOnly') || 0;\n    LL = global.get(\"PQA.Real_Time_Parameters.Phase_3_Voltage\", 'memoryOnly') || 0;\n    Corriente = global.get(\"PQA.Real_Time_Parameters.Total_Phase_C_Current\", 'memoryOnly') || 0;\n    THDV = global.get(\"PQA.Harmonics.Power_Quality['THD_V3(V23)']\", 'memoryOnly') || 0;\n    THDI = global.get(\"PQA.Harmonics.Power_Quality.THD_I3\", 'memoryOnly') || 0;\n    Potencia = global.get(\"PQA.Real_Time_Parameters.Phase_C_Power\", 'memoryOnly') || 0;\n    FP = global.get(\"PQA.Real_Time_Parameters.Phase_C_Power_Factor\", 'memoryOnly') || 0;\n\n}\nelse if (Chart_Selection == \"LineaP\") {\n    LN = global.get(\"PQA.Real_Time_Parameters.Average_Phase_Voltage\", 'memoryOnly') || 0;\n    LL = global.get(\"PQA.Real_Time_Parameters.Average_Line_Voltage\", 'memoryOnly') || 0;\n    THDV = global.get(\"PQA.Harmonics.Power_Quality.THD_avg\",'memoryOnly') || 0;\n    THDI = global.get(\"PQA.Harmonics.Power_Quality.THD_Iavg\", 'memoryOnly') || 0;\n    Corriente = global.get(\"PQA.Real_Time_Parameters.Average_Phase_Current\", 'memoryOnly') || 0;\n    Potencia = global.get(\"PQA.Real_Time_Parameters.Total_System_Power\",'memoryOnly')||0;\n    FP = global.get(\"PQA.Real_Time_Parameters.Total_Power_Factor\",'memoryOnly') || 0;\n}\n\nreturn [\n    { payload: catcherror(LN, 1) + \" \" + \"V\" },\n    { payload: catcherror(LL, 1) + \" \" + \"V\" },\n    { payload: catcherror(Corriente, 1) + \" \" + \"A\" },\n    { payload: catcherror(FP, 2) + \" \" + \"\" },\n    { payload: catcherror(THDV, 2) + \" \" + \"%\" },\n    { payload: catcherror(THDI, 2) + \" \" + \"%\" },\n    { payload: catcherror(Potencia, 1) + \" \" + \"kW\" },\n    { payload: catcherror(Frecuencia, 2) + \" \" + \"Hz\" }\n]\n\nfunction catcherror(variable, dec) {\n    return parseFloat(variable.toFixed(dec));\n}\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 2740,
        "wires": [
            [
                "7dad9b43beefaa90"
            ],
            [
                "c317645c3c09e5cf"
            ],
            [
                "b8b03c987e844b4a"
            ],
            [
                "ea4e85ef2d837356"
            ],
            [
                "0d744c83e33992d3"
            ],
            [
                "cfaca06ac50b5d36"
            ],
            [
                "284e8360857dd2c6"
            ],
            [
                "3a1748983f097cb1"
            ]
        ],
        "outputLabels": [
            "LN",
            "LL",
            "Corriente",
            "THDV",
            "THDI",
            "Potencia",
            "FP",
            "Frecuencia"
        ]
    },
    {
        "id": "6da4bb9c.3ee354",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Data show",
        "func": "var Process_data = global.get(\"Process_data.DHS\",'memoryOnly')||[];\n\n// Protecciones Instrumentación\nvar THP = global.get(\"Process_data.AI['Presión de cabeza THP']\", 'memoryOnly') || 0;\nvar THT = global.get(\"Process_data.AI['Temperatura de cabeza THT']\", 'memoryOnly') || 0;\n\n// Sensor de Fondo\nvar Vibration_X = Process_data[\"Vibración X\"] || \"--\";\nvar Vibration_Z = Process_data[\"Vibración Z\"] || \"--\";\n\n//Protecciones Fondo\nvar LeakageCurrent = Process_data[\"Corriente de fuga\"] || \"--\";\nvar IntakePressure = Process_data[\"Presión de entrada\"] || \"--\";\nvar DischargePressure = Process_data[\"Presión de descarga\"] || \"--\";\nvar IntakeTemperature = Process_data[\"Temperatura de entrada\"] || \"--\";\nvar MotorTemperature = Process_data[\"Temperatura de motor\"] || \"--\";\nvar DischargeTemperature = Process_data[\"Temperatura de descarga\"] || \"--\";\n\n//Sensorless\n\nvar PIP = global.get(\"SENSORLESS.PIP_inferida\",\"memoryOnly\")||\"--\";\nvar NFD = global.get(\"SENSORLESS.Nivel_de_fluido_inferido\", \"memoryOnly\") || \"--\";\nvar Submergency = global.get(\"SENSORLESS.Sumergencia_inferida\", \"memoryOnly\") || \"--\";\nvar Flow = global.get(\"SENSORLESS.Caudal_ajustado_con_la_viscosidad\", \"memoryOnly\") || \"--\";\n\nreturn [\n    { payload: DecPlacces(IntakePressure, 1, \"psi\") },\n    { payload: DecPlacces(DischargePressure, 1, \"psi\") },\n    { payload: DecPlacces(IntakeTemperature, 1, \"ºF\") },\n    { payload: DecPlacces(DischargeTemperature, 1, \"ºF\") },\n    { payload: DecPlacces(MotorTemperature, 1, \"ºF\") },\n    { payload: DecPlacces(Vibration_X, 3, \"G\") },\n    { payload: DecPlacces(Vibration_Z, 3, \"G\") },\n    { payload: DecPlacces(LeakageCurrent, 3, \"mA\") },\n    { payload: DecPlacces(THP, 2,\"psi\") },\n    { payload: DecPlacces(THT, 2,\"ºF\") },\n    { payload: DecPlacces(PIP, 1, \"psi\") },\n    { payload: DecPlacces(NFD, 1, \"ft\") },\n    { payload: DecPlacces(Submergency, 1, \"ft\") },\n    { payload: DecPlacces(Flow, 1, \"m^3/s\") }\n];\n\nfunction DecPlacces(value, Places, Units) {\n    return typeof value == \"number\" ? parseFloat(value.toFixed(Places)):0;\n}",
        "outputs": 14,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 1640,
        "wires": [
            [
                "e44a08d354c85928"
            ],
            [
                "440c76b3cb510964"
            ],
            [
                "2fa030ef30608d2f"
            ],
            [
                "336430b48e86b80b"
            ],
            [
                "ccb71f7b12aba0c8"
            ],
            [
                "b7f3094c080b162b"
            ],
            [
                "af7426950ecaa616"
            ],
            [
                "48830760252f1247"
            ],
            [
                "f1d4d62969cbc89b"
            ],
            [
                "494c25dceeae9fd7"
            ],
            [
                "404d3ee6268725b6"
            ],
            [
                "95acda615faab2e3"
            ],
            [
                "222bb80678f72aa6"
            ],
            [
                "90fdc4810e9cd514"
            ]
        ],
        "outputLabels": [
            "Intake Pressure",
            "Discharge Pressure",
            "Intake Temperature",
            "Discharge Temperature",
            "Motor Temperature",
            "Vibration X",
            "Vibration Z",
            "Leakage Current",
            "THP",
            "THT",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "24868425.cac96c",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "name": "retroal ref",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::C2S.Implicit.Output_Frequency",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1040,
        "wires": [
            [
                "2705e4ec.6d650c"
            ]
        ]
    },
    {
        "id": "26428723.4b3e38",
        "type": "exec",
        "z": "2e27dea6.c4c362",
        "g": "1d0c3cb2.7129f3",
        "command": "sudo systemctl start kiosk",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 430,
        "y": 60,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bfa48676.a364f8",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "g": "1d0c3cb2.7129f3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 240,
        "y": 60,
        "wires": [
            [
                "26428723.4b3e38"
            ]
        ]
    },
    {
        "id": "492ac1d1.0e276",
        "type": "inject",
        "z": "902fc438.e5d758",
        "g": "3cb51855.a66038",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 250,
        "y": 1380,
        "wires": [
            [
                "ecf98f3f.4a704"
            ]
        ]
    },
    {
        "id": "ecf98f3f.4a704",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "3cb51855.a66038",
        "name": "refresh data",
        "links": [
            "0a0df9d8a978db38",
            "2958b089336b7560",
            "5bf2a7aa.f590f8",
            "65e9bd38.989f24",
            "66c4a9b8.ae31f8",
            "7578d16bf9d408ae",
            "8f772663.6c8508",
            "95a9452fed1bcc46",
            "95d0ab4.c78fe58",
            "9760d6fc054dbb32",
            "9a23521db4cf3e10",
            "9a3fe8f4e8cd6366",
            "9b0b3358.5ac42",
            "9cc8b89eee5fff72",
            "9e6212a088a3de43",
            "ad037575e738b405",
            "dd3279e.534be88",
            "e65ba7a271b6d8d4",
            "e0ebb1532663774a",
            "9f6c8af864ad03c7",
            "fe1a9bde13dab923",
            "bbd14a02c90c8979"
        ],
        "x": 345,
        "y": 1380,
        "wires": []
    },
    {
        "id": "fb0f6d56.a4f3b",
        "type": "ui_button",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "group": "f7aa27b.6c2ded8",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Arrancar",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "Start",
        "payloadType": "str",
        "topic": "Basic",
        "x": 900,
        "y": 720,
        "wires": [
            [
                "87827b566b48717a"
            ]
        ]
    },
    {
        "id": "d0488f55.8dba",
        "type": "ui_button",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "group": "f7aa27b.6c2ded8",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Detener",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "Stop",
        "payloadType": "str",
        "topic": "Basic",
        "x": 900,
        "y": 800,
        "wires": [
            [
                "59e526854e2b8c3c"
            ]
        ]
    },
    {
        "id": "ae2634a.4641dc8",
        "type": "ui_button",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "group": "f7aa27b.6c2ded8",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "grey",
        "icon": "",
        "payload": "Reset",
        "payloadType": "str",
        "topic": "Basic",
        "x": 910,
        "y": 890,
        "wires": [
            [
                "e834cca1573f4ed0",
                "20aa1ab35334cb43",
                "01c5f660785e97d7"
            ]
        ]
    },
    {
        "id": "a5c1b515.63bb98",
        "type": "ui_button",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "cambio giro",
        "group": "f7aa27b.6c2ded8",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "fa-undo",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 960,
        "y": 580,
        "wires": [
            [
                "bf32fe6a.aafbf"
            ]
        ]
    },
    {
        "id": "8e7b4c24.c71ec",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "group": "f7aa27b.6c2ded8",
        "order": 7,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Sentido de giro actual: ",
        "format": "  {{msg.payload}}",
        "layout": "row-spread",
        "x": 590,
        "y": 760,
        "wires": []
    },
    {
        "id": "bd2cf57e.cd4498",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 160,
        "y": 710,
        "wires": [
            [
                "81878561.f8ad48",
                "da070d04b5c81bf7",
                "0fec5b4cfbe1d12c",
                "a30b8826e30e6eab"
            ]
        ]
    },
    {
        "id": "81878561.f8ad48",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "ver sentido",
        "func": "var controlmode = global.get(\"C2S.Drive_Status.Command_dir\",\"memoryOnly\")||0;\n\nif(controlmode == 1){\n    msg.payload = \"Forward\";\n    msg.icon = \"fa fa-repeat\";\n}\nelse{\n    msg.payload = \"Reverse\";\n    msg.icon = \"fa fa-undo\";\n}\nnode.status({ fill: \"green\", shape: \"dot\", text: controlmode });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 760,
        "wires": [
            [
                "8e7b4c24.c71ec"
            ]
        ]
    },
    {
        "id": "bf32fe6a.aafbf",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "select",
        "func": "var controlmode = global.get(\"C2S.Drive_Status.Command_dir\",\"memoryOnly\")||0;\n\nif(controlmode== 1)\n    msg.payload = \"¿Desea cambiar el modo de giro a reverse?\";\nelse\n    msg.payload = \"¿Desea cambiar el modo de giro a forward?\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1100,
        "y": 580,
        "wires": [
            [
                "98688f83.ade3e"
            ]
        ]
    },
    {
        "id": "98688f83.ade3e",
        "type": "ui_toast",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "Cancelar",
        "raw": false,
        "topic": "Modo de control",
        "name": "",
        "x": 1240,
        "y": 580,
        "wires": [
            [
                "7c2fb5f3.7182bc"
            ]
        ]
    },
    {
        "id": "7c2fb5f3.7182bc",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "inv giro?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Aceptar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1390,
        "y": 580,
        "wires": [
            [
                "7044a9d1.4dd378"
            ]
        ]
    },
    {
        "id": "7044a9d1.4dd378",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "inv giro",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Command_dir",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 580,
        "wires": [
            [
                "81e9aa1f.0a9c58",
                "744089fd1f82831a"
            ],
            [
                "a29bf048.6ceca",
                "1893048213e6d12c"
            ]
        ]
    },
    {
        "id": "8f772663.6c8508",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 75,
        "y": 710,
        "wires": [
            [
                "bd2cf57e.cd4498"
            ]
        ]
    },
    {
        "id": "24678530.efc32a",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Forward Link Out",
        "links": [
            "a4403c3e26ba31b8",
            "dbdd149d.067a48"
        ],
        "x": 1785,
        "y": 520,
        "wires": []
    },
    {
        "id": "7dacdbe3.f9cb94",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Reverse Link Out",
        "links": [
            "a4403c3e26ba31b8",
            "dbdd149d.067a48"
        ],
        "x": 1785,
        "y": 640,
        "wires": []
    },
    {
        "id": "dd4a0973.7218d8",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "forward?",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Command_dir",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1830,
        "y": 560,
        "wires": [
            [
                "4f1a0a8f7bc7b597"
            ],
            [
                "171a6647ad51ac09"
            ]
        ]
    },
    {
        "id": "81e9aa1f.0a9c58",
        "type": "delay",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1690,
        "y": 560,
        "wires": [
            [
                "dd4a0973.7218d8"
            ]
        ]
    },
    {
        "id": "a29bf048.6ceca",
        "type": "delay",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1690,
        "y": 600,
        "wires": [
            [
                "34cf5b75.27eb74"
            ]
        ]
    },
    {
        "id": "34cf5b75.27eb74",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "reverse?",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Command_dir",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1830,
        "y": 600,
        "wires": [
            [
                "5faed9508d725863"
            ],
            [
                "f0a1193a68ccf552"
            ]
        ]
    },
    {
        "id": "389a8a70.699a96",
        "type": "ui_template",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "group": "f7aa27b.6c2ded8",
        "name": "LOGO",
        "order": 5,
        "width": "4",
        "height": "3",
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col\">\n                <img src=\"http://localhost:1880/swcpro-images/Slacol_bcpgrp.png\" style=\"width:100%;\">\n            </div>\n        </div>\n    </div>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n            <h5><span class=\"badge badge-secondary\">Versión: VRC 2.0.0</span></h5>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 750,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "4c77f9bc.81feb8",
        "type": "ui_dropdown",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "name": "Protecciones",
        "label": "",
        "tooltip": "",
        "place": "Seleccione una protección",
        "group": "4b33f8ea.b34188",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Tensión",
                "value": "Voltage",
                "type": "str"
            },
            {
                "label": "Corriente VSD",
                "value": "Load",
                "type": "str"
            },
            {
                "label": "Corriente de motor",
                "value": "MotorLoad",
                "type": "str"
            },
            {
                "label": "Bus DC",
                "value": "BusDC",
                "type": "str"
            },
            {
                "label": "Presión THP",
                "value": "THP",
                "type": "str"
            },
            {
                "label": "Temperatura THT",
                "value": "THT",
                "type": "str"
            },
            {
                "label": "Vibración",
                "value": "VibrationGeneral",
                "type": "str"
            },
            {
                "label": "Corriente de fuga",
                "value": "CurrentLeakage",
                "type": "str"
            },
            {
                "label": "Presión de entrada",
                "value": "IntakePressure",
                "type": "str"
            },
            {
                "label": "Presión de descarga",
                "value": "DischargePressure",
                "type": "str"
            },
            {
                "label": "Temperatura de entrada",
                "value": "IntakeTemperature",
                "type": "str"
            },
            {
                "label": "Temperatura de motor",
                "value": "MotorTemperature",
                "type": "str"
            },
            {
                "label": "Temperatura de descarga",
                "value": "DischargeTemperature",
                "type": "str"
            },
            {
                "label": "Nivel de fluido dinámico",
                "value": "DynamicFluidLevel",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "a61b19cd.790608"
            ]
        ]
    },
    {
        "id": "f82abc70.f86b",
        "type": "ui_table",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "group": "38898609.fe288a",
        "name": "",
        "order": 1,
        "width": "10",
        "height": "13",
        "columns": [
            {
                "field": "protec",
                "title": "Protección",
                "width": "65%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "condic",
                "title": "Condición",
                "width": "35%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 830,
        "y": 120,
        "wires": []
    },
    {
        "id": "5dd9cf85.27896",
        "type": "ui_switch",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "HH",
        "label": "",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 600,
        "y": 310,
        "wires": [
            [
                "c2bf520.28a1ab"
            ]
        ]
    },
    {
        "id": "deffcbd1.da3648",
        "type": "ui_switch",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "H",
        "label": "",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 600,
        "y": 360,
        "wires": [
            [
                "6d577b26.f18754"
            ]
        ]
    },
    {
        "id": "6e5cff51.ca9b5",
        "type": "ui_switch",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "L",
        "label": "",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 13,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 600,
        "y": 410,
        "wires": [
            [
                "8b18fca7.f8239"
            ]
        ]
    },
    {
        "id": "de6d6ff9.56ca3",
        "type": "ui_switch",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "LL",
        "label": "",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 16,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 600,
        "y": 460,
        "wires": [
            [
                "60f8fb0e.0d2614"
            ]
        ]
    },
    {
        "id": "b97782b7.b47be",
        "type": "ui_text_input",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "",
        "label": "HH",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 600,
        "y": 590,
        "wires": [
            [
                "4c2d321d.01398c"
            ]
        ]
    },
    {
        "id": "ddfcf25.e7fe71",
        "type": "ui_text_input",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "",
        "label": "H",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 600,
        "y": 640,
        "wires": [
            [
                "410660d7.f2d6"
            ]
        ]
    },
    {
        "id": "410685e8.07f64c",
        "type": "ui_text_input",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "",
        "label": "L",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 600,
        "y": 690,
        "wires": [
            [
                "5e2f16a6.aa56b8"
            ]
        ]
    },
    {
        "id": "1fd029b.46df3d6",
        "type": "ui_text_input",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "",
        "label": "LL",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 17,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 600,
        "y": 740,
        "wires": [
            [
                "a3904b79.ced4c8"
            ]
        ]
    },
    {
        "id": "7a934192.2c198",
        "type": "ui_text_input",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "",
        "label": "t1 (s)",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 710,
        "y": 870,
        "wires": [
            [
                "d6c44294.8d5c4"
            ]
        ]
    },
    {
        "id": "e3d1e9c7.edab28",
        "type": "ui_text_input",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "",
        "label": "t2 (s)",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 710,
        "y": 920,
        "wires": [
            [
                "abe95f44.c6928"
            ]
        ]
    },
    {
        "id": "6b0e8d5f.299684",
        "type": "ui_text_input",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "",
        "label": "t3 (s)",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 15,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 710,
        "y": 970,
        "wires": [
            [
                "6ad13e30.8d694"
            ]
        ]
    },
    {
        "id": "58160456.e38f7c",
        "type": "ui_text_input",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "",
        "label": "t4 (s)",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 18,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 710,
        "y": 1020,
        "wires": [
            [
                "2b073dd5.537132"
            ]
        ]
    },
    {
        "id": "8f738cb4.9e191",
        "type": "ui_text",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "group": "4b33f8ea.b34188",
        "order": 4,
        "width": 1,
        "height": 1,
        "name": "enable",
        "label": "",
        "format": "{{msg.payload}}Enable",
        "layout": "row-center",
        "x": 730,
        "y": 270,
        "wires": []
    },
    {
        "id": "36c5ad7b.d3fa62",
        "type": "ui_text",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "group": "4b33f8ea.b34188",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "valor",
        "label": "",
        "format": "Valor",
        "layout": "row-center",
        "x": 720,
        "y": 550,
        "wires": []
    },
    {
        "id": "1dd04927.d420c7",
        "type": "ui_text",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "group": "4b33f8ea.b34188",
        "order": 6,
        "width": 2,
        "height": 1,
        "name": "Tiempo muerto",
        "label": "",
        "format": "T. Muerto",
        "layout": "row-center",
        "x": 810,
        "y": 830,
        "wires": []
    },
    {
        "id": "cc3a2f05.7f208",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "name": "a Tabla",
        "func": "var protecciones = global.get(\"Protections\")||null;\nvar statusprot = global.get(\"Protections\",\"memoryOnly\")||null;\nvar labelprot = [\"Voltage\", \"Load\", \"BusDC\", \"THP\", \"THT\", \"VibrationGeneral\", \"CurrentLeakage\", \"IntakePressure\", \"DischargePressure\", \"IntakeTemperature\", \"MotorTemperature\", \"DischargeTemperature\", \"MotorLoad\", \"DynamicFluidLevel\"];\nvar estadoprot = [];\nvar i;\n\nevaluarhab();\nif (statusprot!=null)evalstatus();\n\nmsg.payload = [ {'protec': \"<font size = 4px>Tension\",'condic': estadoprot[0]},\n                {'protec': \"<font size = 4px>Corriente VSD\",'condic': estadoprot[1]},\n                {'protec': \"<font size = 4px>Corriente de motor\",'condic': estadoprot[12]},\n                {'protec': \"<font size = 4px>Bus DC\",'condic': estadoprot[2]},\n                {'protec': \"<font size = 4px>Presión THP\",'condic': estadoprot[3]},\n                {'protec': \"<font size = 4px>Temperatura THT\",'condic': estadoprot[4]},\n                {'protec': \"<font size = 4px>Vibración\",'condic': estadoprot[5]},\n                {'protec': \"<font size = 4px>Corriente de fuga\",'condic': estadoprot[6]},\n                {'protec': \"<font size = 4px>Presión de entrada\",'condic': estadoprot[7]},\n                {'protec': \"<font size = 4px>Presión de descarga\",'condic': estadoprot[8]},\n                {'protec': \"<font size = 4px>Temperatura de entrada\",'condic': estadoprot[9]},\n                {'protec': \"<font size = 4px>Temperatura de motor\",'condic': estadoprot[10]},\n                {'protec': \"<font size = 4px>Temperatura de descarga\",'condic': estadoprot[11]},\n                { 'protec': \"<font size = 4px>Nivel de fluido dinámico\", 'condic': estadoprot[12] },\n    ];\nreturn msg;\nfunction evaluarhab(){\n    for(i=0;i<13;i++){\n        var acu=0;\n        if(protecciones!=null){\n            if (typeof protecciones[labelprot[i]] !='undefined'){\n                if (typeof protecciones[labelprot[i]].HH != 'undefined'){\n                    if(protecciones[labelprot[i]].HH.EN == true)\n                        acu++;\n                }\n                if (typeof protecciones[labelprot[i]].H != 'undefined') {\n                    if(protecciones[labelprot[i]].H.EN == true)\n                        acu++;\n                }\n                if (typeof protecciones[labelprot[i]].L != 'undefined') {\n                    if(protecciones[labelprot[i]].L.EN == true)\n                        acu++;\n                }\n                if (typeof protecciones[labelprot[i]].LL != 'undefined') {\n                    if(protecciones[labelprot[i]].LL.EN == true)\n                        acu++;\n                }\n                if(acu>0)\n                    estadoprot.push(\"<font size = 4px><font color = green>Normal\");\n                else\n                    estadoprot.push(\"<font size = 4px><font color = gray>-----\");\n            }\n            else\n                estadoprot.push(\"<font size = 4px><font color = gray>-----\");\n        }\n        else\n            estadoprot.push(\"<font size = 4px><font color = gray>-----\");\n    }\n}\n\nfunction evalstatus(){\n    for(i=0;i<13;i++){\n        if(statusprot!=null){\n            if(estadoprot[i] == \"<font size = 4px><font color = green>Normal\"){\n                if (typeof statusprot[labelprot[i]] !='undefined'){\n                    if(statusprot[labelprot[i]].H == true)\n                        estadoprot[i] = \"<font size = 4px><font color = orange><b>Alarma H<b>\";\n                    if(statusprot[labelprot[i]].L == true)\n                        estadoprot[i] = \"<font size = 4px><font color = orange><b>Alarma L<b>\";\n                    if(statusprot[labelprot[i]].HH == true)\n                        estadoprot[i] = \"<font size = 4px><font color = red><b>Disparo HH<b>\";\n                    if(statusprot[labelprot[i]].LL == true)\n                        estadoprot[i] = \"<font size = 4px><font color = red><b>Disparo LL<b>\";\n                }\n            }\n        }\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 120,
        "wires": [
            [
                "f82abc70.f86b"
            ]
        ]
    },
    {
        "id": "ca2c2f23.6cc77",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "name": "protec",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Protecciones",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 120,
        "wires": [
            [
                "cc3a2f05.7f208",
                "e469fa2b.b205e8"
            ]
        ]
    },
    {
        "id": "58ac270c.e2b418",
        "type": "link in",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "name": "",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 145,
        "y": 120,
        "wires": [
            [
                "ca2c2f23.6cc77"
            ]
        ]
    },
    {
        "id": "c2bf520.28a1ab",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "HH",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::HH.EN",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 310,
        "wires": [
            []
        ]
    },
    {
        "id": "6d577b26.f18754",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "H",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::H.EN",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8b18fca7.f8239",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "L",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::L.EN",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 410,
        "wires": [
            []
        ]
    },
    {
        "id": "60f8fb0e.0d2614",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "LL",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::LL.EN",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "4c2d321d.01398c",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "HH",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::HH.Setpoint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 590,
        "wires": [
            [
                "30359a42be66cafb"
            ]
        ]
    },
    {
        "id": "410660d7.f2d6",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "H",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::H.Setpoint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 640,
        "wires": [
            [
                "3056b595.debbaa",
                "dfa8404d9c6a7f4f"
            ]
        ]
    },
    {
        "id": "5e2f16a6.aa56b8",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "L",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::L.Setpoint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 690,
        "wires": [
            [
                "3dbf77cf.4aba18",
                "e08e4b7c2b9e63c1"
            ]
        ]
    },
    {
        "id": "a3904b79.ced4c8",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "LL",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::LL.Setpoint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 740,
        "wires": [
            [
                "2152075deac4a89d"
            ]
        ]
    },
    {
        "id": "d6c44294.8d5c4",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "HH",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::HH.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 870,
        "wires": [
            []
        ]
    },
    {
        "id": "abe95f44.c6928",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "H",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::H.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "6ad13e30.8d694",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "L",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::L.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 970,
        "wires": [
            []
        ]
    },
    {
        "id": "2b073dd5.537132",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "LL",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::LL.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "400ce727.4517c8",
        "type": "ui_button",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "",
        "group": "4b33f8ea.b34188",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Guardar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 470,
        "y": 1450,
        "wires": [
            [
                "b9cf40b5.69993",
                "1db2d1d.1c82b2e",
                "b6f6a61e.0e38c8",
                "7e389392.ac4dbc",
                "a87faac1.bb76b8",
                "79f09a4.a918e64",
                "721711bc.7db34",
                "7fdf0e15.2e7a9",
                "2fe2a445.25977c",
                "6c899679.fb9ed8",
                "9cbac96.37b2538",
                "fd740530.6ea6e8",
                "c6b036f4d80b1a9a",
                "bde48f770f85aba2"
            ]
        ]
    },
    {
        "id": "a61b19cd.790608",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "name": "select",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::proteccionSelec",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 180,
        "wires": [
            [
                "89112155.2a218"
            ]
        ]
    },
    {
        "id": "2339a5ac.9523ea",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "HH Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.HH.EN",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 310,
        "wires": [
            [
                "977f27b6.a4ac18"
            ]
        ]
    },
    {
        "id": "977f27b6.a4ac18",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = false;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 310,
        "wires": [
            [
                "5dd9cf85.27896"
            ]
        ]
    },
    {
        "id": "73e8a4e0.cb406c",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "H Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.H.EN",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 360,
        "wires": [
            [
                "a7e30e7d.a2a26"
            ]
        ]
    },
    {
        "id": "3d7397df.5ea198",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "L Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.L.EN",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 410,
        "wires": [
            [
                "1e4fac6.8c41954"
            ]
        ]
    },
    {
        "id": "68d97034.e931b",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "LL Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.LL.EN",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 460,
        "wires": [
            [
                "19a66bb9.eaa504"
            ]
        ]
    },
    {
        "id": "f322ed66.a544",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "HH Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.HH.Setpoint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 590,
        "wires": [
            [
                "56513a0.df0d0c8"
            ]
        ]
    },
    {
        "id": "63a08073.58c7c",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "H Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.H.Setpoint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 640,
        "wires": [
            [
                "d1d4282.44780d8"
            ]
        ]
    },
    {
        "id": "363b001c.00b61",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "L Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.L.Setpoint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 690,
        "wires": [
            [
                "ef579a2e.12ee98"
            ]
        ]
    },
    {
        "id": "f5088006.ca943",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "LL Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.LL.Setpoint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 740,
        "wires": [
            [
                "5a49fa81.518a74"
            ]
        ]
    },
    {
        "id": "65d1ab48.e61414",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "HH Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.HH.DT",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 870,
        "wires": [
            [
                "734dc18d.34a9b"
            ]
        ]
    },
    {
        "id": "fd6407f4.3aab98",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "H Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.H.DT",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 920,
        "wires": [
            [
                "63852295.9e94dc"
            ]
        ]
    },
    {
        "id": "2cdd9d25.204662",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "L Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.L.DT",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 970,
        "wires": [
            [
                "a6cf636c.f3836"
            ]
        ]
    },
    {
        "id": "f1f2cd06.98ab4",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "LL Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.LL.DT",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 1020,
        "wires": [
            [
                "e0a3fe6a.f68a1"
            ]
        ]
    },
    {
        "id": "89112155.2a218",
        "type": "link out",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "name": "",
        "links": [
            "429bf2da.4bbcec",
            "143cdae5.a42c25",
            "99256b55.7d96e8"
        ],
        "x": 435,
        "y": 180,
        "wires": []
    },
    {
        "id": "429bf2da.4bbcec",
        "type": "link in",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "",
        "links": [
            "89112155.2a218",
            "e469fa2b.b205e8"
        ],
        "x": 145,
        "y": 310,
        "wires": [
            [
                "2339a5ac.9523ea",
                "73e8a4e0.cb406c",
                "3d7397df.5ea198",
                "68d97034.e931b"
            ]
        ]
    },
    {
        "id": "143cdae5.a42c25",
        "type": "link in",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "",
        "links": [
            "89112155.2a218",
            "e469fa2b.b205e8"
        ],
        "x": 145,
        "y": 660,
        "wires": [
            [
                "f322ed66.a544",
                "63a08073.58c7c",
                "363b001c.00b61",
                "f5088006.ca943"
            ]
        ]
    },
    {
        "id": "99256b55.7d96e8",
        "type": "link in",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "",
        "links": [
            "89112155.2a218",
            "e469fa2b.b205e8"
        ],
        "x": 145,
        "y": 940,
        "wires": [
            [
                "65d1ab48.e61414",
                "fd6407f4.3aab98",
                "2cdd9d25.204662",
                "f1f2cd06.98ab4",
                "b7c04dbc52f1518e"
            ]
        ]
    },
    {
        "id": "e469fa2b.b205e8",
        "type": "link out",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "name": "",
        "links": [
            "b5cb6f06.167ce",
            "634f708f.bc456",
            "f79788de.b1be08",
            "1364a1d1.b3fb3e",
            "f0fd85f4.866ff8",
            "429bf2da.4bbcec",
            "143cdae5.a42c25",
            "99256b55.7d96e8"
        ],
        "x": 395,
        "y": 140,
        "wires": []
    },
    {
        "id": "b5cb6f06.167ce",
        "type": "link in",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "",
        "links": [
            "e469fa2b.b205e8"
        ],
        "x": 145,
        "y": 270,
        "wires": [
            [
                "3db2865e.468b9a"
            ]
        ]
    },
    {
        "id": "9d4270b8.c13a9",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "disabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 270,
        "wires": [
            [
                "5dd9cf85.27896",
                "deffcbd1.da3648",
                "6e5cff51.ca9b5",
                "de6d6ff9.56ca3"
            ]
        ]
    },
    {
        "id": "3db2865e.468b9a",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "selected?",
        "property": "#:(memoryOnly)::proteccionSelec",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 270,
        "wires": [
            [
                "9d4270b8.c13a9"
            ]
        ]
    },
    {
        "id": "b9cf40b5.69993",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "HH Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.HH.EN",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1170,
        "wires": [
            [
                "b619d99c.fdf4b8"
            ]
        ]
    },
    {
        "id": "1db2d1d.1c82b2e",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "H Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.H.EN",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1220,
        "wires": [
            [
                "85089df3.64f3f"
            ]
        ]
    },
    {
        "id": "b6f6a61e.0e38c8",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "L Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.L.EN",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1270,
        "wires": [
            [
                "d9c1727d.dc991"
            ]
        ]
    },
    {
        "id": "7e389392.ac4dbc",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "LL Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.LL.EN",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1320,
        "wires": [
            [
                "abcfcbee.604498"
            ]
        ]
    },
    {
        "id": "a87faac1.bb76b8",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "HH Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.HH.Setpoint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1380,
        "wires": [
            [
                "ebb37133.902fa"
            ]
        ]
    },
    {
        "id": "79f09a4.a918e64",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "H Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.H.Setpoint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1430,
        "wires": [
            [
                "da307934.bf9758"
            ]
        ]
    },
    {
        "id": "721711bc.7db34",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "L Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.L.Setpoint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1480,
        "wires": [
            [
                "f66f318f.e1d3c"
            ]
        ]
    },
    {
        "id": "7fdf0e15.2e7a9",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "LL Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.LL.Setpoint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1530,
        "wires": [
            [
                "7831058.b11adfc"
            ]
        ]
    },
    {
        "id": "2fe2a445.25977c",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "HH Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.HH.DT",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1580,
        "wires": [
            [
                "5629df50.34e2e"
            ]
        ]
    },
    {
        "id": "6c899679.fb9ed8",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "H Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.H.DT",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1630,
        "wires": [
            [
                "7c306901.d02908"
            ]
        ]
    },
    {
        "id": "9cbac96.37b2538",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "L Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.L.DT",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1680,
        "wires": [
            [
                "8ccdb23e.cee62"
            ]
        ]
    },
    {
        "id": "fd740530.6ea6e8",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "LL Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.LL.DT",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1730,
        "wires": [
            [
                "96dd78cc.aad9d8"
            ]
        ]
    },
    {
        "id": "b619d99c.fdf4b8",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "HH.EN",
        "func": "var varflujo = \"HH.EN\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||false;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1170,
        "wires": [
            []
        ]
    },
    {
        "id": "85089df3.64f3f",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "H.EN",
        "func": "var varflujo = \"H.EN\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||false;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "d9c1727d.dc991",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "L.EN",
        "func": "var varflujo = \"L.EN\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||false;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1270,
        "wires": [
            []
        ]
    },
    {
        "id": "abcfcbee.604498",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "LL.EN",
        "func": "var varflujo = \"LL.EN\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||false;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "ebb37133.902fa",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "HH.Setpoint",
        "func": "var varflujo = \"HH.Setpoint\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||0;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "da307934.bf9758",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "H.Setpoint",
        "func": "var varflujo = \"H.Setpoint\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||0;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 1430,
        "wires": [
            []
        ]
    },
    {
        "id": "f66f318f.e1d3c",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "L.Setpoint",
        "func": "var varflujo = \"L.Setpoint\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||0;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 810,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "7831058.b11adfc",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "LL.Setpoint",
        "func": "var varflujo = \"LL.Setpoint\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||0;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 1530,
        "wires": [
            []
        ]
    },
    {
        "id": "5629df50.34e2e",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "HH.DT",
        "func": "var varflujo = \"HH.DT\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||0;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "7c306901.d02908",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "H.DT",
        "func": "var varflujo = \"H.DT\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||0;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1630,
        "wires": [
            []
        ]
    },
    {
        "id": "8ccdb23e.cee62",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "L.DT",
        "func": "var varflujo = \"L.DT\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||0;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "96dd78cc.aad9d8",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "LL.DT",
        "func": "var varflujo = \"LL.DT\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||0;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1730,
        "wires": [
            []
        ]
    },
    {
        "id": "1364a1d1.b3fb3e",
        "type": "link in",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "",
        "links": [
            "e469fa2b.b205e8"
        ],
        "x": 145,
        "y": 550,
        "wires": [
            [
                "949f4a44.b36468"
            ]
        ]
    },
    {
        "id": "949f4a44.b36468",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "selected?",
        "property": "#:(memoryOnly)::proteccionSelec",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 550,
        "wires": [
            [
                "9e597c33.a74f7"
            ]
        ]
    },
    {
        "id": "9e597c33.a74f7",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "disabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 550,
        "wires": [
            [
                "b97782b7.b47be",
                "ddfcf25.e7fe71",
                "410685e8.07f64c",
                "1fd029b.46df3d6"
            ]
        ]
    },
    {
        "id": "f0fd85f4.866ff8",
        "type": "link in",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "",
        "links": [
            "e469fa2b.b205e8"
        ],
        "x": 145,
        "y": 830,
        "wires": [
            [
                "146ef6f6.8001b9"
            ]
        ]
    },
    {
        "id": "146ef6f6.8001b9",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "selected?",
        "property": "#:(memoryOnly)::proteccionSelec",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 830,
        "wires": [
            [
                "cff34256.f092f"
            ]
        ]
    },
    {
        "id": "cff34256.f092f",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "disabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 830,
        "wires": [
            [
                "7a934192.2c198",
                "e3d1e9c7.edab28",
                "6b0e8d5f.299684",
                "58160456.e38f7c",
                "fd21111ca22e29fa"
            ]
        ]
    },
    {
        "id": "a7e30e7d.a2a26",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = false;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "deffcbd1.da3648"
            ]
        ]
    },
    {
        "id": "1e4fac6.8c41954",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = false;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 410,
        "wires": [
            [
                "6e5cff51.ca9b5"
            ]
        ]
    },
    {
        "id": "19a66bb9.eaa504",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "87fca62744442ad4",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = false;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 460,
        "wires": [
            [
                "de6d6ff9.56ca3"
            ]
        ]
    },
    {
        "id": "56513a0.df0d0c8",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = null;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 590,
        "wires": [
            [
                "b97782b7.b47be"
            ]
        ]
    },
    {
        "id": "d1d4282.44780d8",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = null;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 640,
        "wires": [
            [
                "ddfcf25.e7fe71"
            ]
        ]
    },
    {
        "id": "ef579a2e.12ee98",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = null;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 690,
        "wires": [
            [
                "410685e8.07f64c"
            ]
        ]
    },
    {
        "id": "5a49fa81.518a74",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = null;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 740,
        "wires": [
            [
                "1fd029b.46df3d6"
            ]
        ]
    },
    {
        "id": "734dc18d.34a9b",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = null;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 870,
        "wires": [
            [
                "7a934192.2c198"
            ]
        ]
    },
    {
        "id": "63852295.9e94dc",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = null;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 920,
        "wires": [
            [
                "e3d1e9c7.edab28"
            ]
        ]
    },
    {
        "id": "a6cf636c.f3836",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = null;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 970,
        "wires": [
            [
                "6b0e8d5f.299684"
            ]
        ]
    },
    {
        "id": "e0a3fe6a.f68a1",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = null;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 1020,
        "wires": [
            [
                "58160456.e38f7c"
            ]
        ]
    },
    {
        "id": "65b175f6.1549bc",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "name": "Protecciones",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Protecciones",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 100,
        "wires": [
            [
                "cc3a2f05.7f208"
            ]
        ]
    },
    {
        "id": "3056b595.debbaa",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "seguri",
        "property": "#:(memoryOnly)::HH.Setpoint",
        "propertyType": "flow",
        "rules": [
            {
                "t": "lt",
                "v": "payload",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 840,
        "y": 640,
        "wires": [
            [
                "b97782b7.b47be"
            ]
        ]
    },
    {
        "id": "3dbf77cf.4aba18",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "seguri",
        "property": "#:(memoryOnly)::LL.Setpoint",
        "propertyType": "flow",
        "rules": [
            {
                "t": "gt",
                "v": "payload",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 840,
        "y": 690,
        "wires": [
            [
                "1fd029b.46df3d6"
            ]
        ]
    },
    {
        "id": "1f703339.98e8cd",
        "type": "ui_text",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "group": "4b33f8ea.b34188",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Valor actual",
        "format": "<font size = 5px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2090,
        "y": 1060,
        "wires": []
    },
    {
        "id": "8c24ec8f.cf43c",
        "type": "exec",
        "z": "1ae6c379.02ea3d",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Exec Escribir Par",
        "x": 510,
        "y": 60,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "19669f01.a88711",
        "type": "change",
        "z": "1ae6c379.02ea3d",
        "name": "Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "python3 -m cpppo.server.enip.get_attribute '@0x93/++/09=(---)###' '@0x93/++/09' -S -a IP",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "###",
                "fromt": "str",
                "to": "Dato",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "++",
                "fromt": "str",
                "to": "Parameter",
                "tot": "env"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "---",
                "fromt": "str",
                "to": "Datatype",
                "tot": "env"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "IP",
                "fromt": "str",
                "to": "C2S.IP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 60,
        "wires": [
            [
                "8c24ec8f.cf43c"
            ]
        ]
    },
    {
        "id": "aa1b627f.089b4",
        "type": "change",
        "z": "1ae6c379.02ea3d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Dato",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 60,
        "wires": [
            [
                "19669f01.a88711"
            ]
        ]
    },
    {
        "id": "b97c0cba.aea3",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "label": "Tensión (V)",
        "tooltip": "",
        "group": "c0d4b517.4b9968",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "Accel",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 550,
        "y": 700,
        "wires": [
            [
                "b405c349.c96bb"
            ]
        ]
    },
    {
        "id": "625acf36.28ca1",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "label": "Corriente (A)",
        "tooltip": "",
        "group": "c0d4b517.4b9968",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "Accel",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 550,
        "y": 810,
        "wires": [
            [
                "2b15e46d.065cec"
            ]
        ]
    },
    {
        "id": "52666b13.2f23b4",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "label": "Frecuencia (Hz)",
        "tooltip": "",
        "group": "c0d4b517.4b9968",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "Accel",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 560,
        "y": 930,
        "wires": [
            [
                "2d255252.339eee"
            ]
        ]
    },
    {
        "id": "9fce2d60.4554b",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "label": "Velocidad (RPM)",
        "tooltip": "",
        "group": "c0d4b517.4b9968",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "Accel",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 570,
        "y": 1030,
        "wires": [
            [
                "183f49bb.f6d776"
            ]
        ]
    },
    {
        "id": "a5bfded0.8a3cf",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "label": "Potencia",
        "tooltip": "",
        "group": "c0d4b517.4b9968",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "Accel",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 540,
        "y": 1130,
        "wires": [
            [
                "c780b49a.0e4338"
            ]
        ]
    },
    {
        "id": "dc569dcc.729",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "label": "Polos",
        "tooltip": "",
        "group": "c0d4b517.4b9968",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "Accel",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 530,
        "y": 1230,
        "wires": [
            [
                "44e6874.2344578"
            ]
        ]
    },
    {
        "id": "b405c349.c96bb",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Voltage",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Voltage",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "a90890e0.f21c8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Voltage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Voltage",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 700,
        "wires": [
            [
                "b97c0cba.aea3"
            ]
        ]
    },
    {
        "id": "2b15e46d.065cec",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Amps",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Amps",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 810,
        "wires": [
            []
        ]
    },
    {
        "id": "ed08c0de.3ee1e",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Amps",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Amps",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 810,
        "wires": [
            [
                "625acf36.28ca1"
            ]
        ]
    },
    {
        "id": "e89df25d.18cdc",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Hertz",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Hertz",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 930,
        "wires": [
            [
                "52666b13.2f23b4"
            ]
        ]
    },
    {
        "id": "2d255252.339eee",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Hertz",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Hertz",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 930,
        "wires": [
            []
        ]
    },
    {
        "id": "183f49bb.f6d776",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "RPM",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.RPM",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1030,
        "wires": [
            []
        ]
    },
    {
        "id": "9355594d.0b5af8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "RPM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.RPM",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1030,
        "wires": [
            [
                "9fce2d60.4554b"
            ]
        ]
    },
    {
        "id": "c780b49a.0e4338",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Power",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Power",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1130,
        "wires": [
            []
        ]
    },
    {
        "id": "fa5d0b5d.173c98",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Power",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1130,
        "wires": [
            [
                "a5bfded0.8a3cf"
            ]
        ]
    },
    {
        "id": "44e6874.2344578",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Poles",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Poles",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1230,
        "wires": [
            []
        ]
    },
    {
        "id": "657a5d37.6d07c4",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Poles",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Poles",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1230,
        "wires": [
            [
                "dc569dcc.729"
            ]
        ]
    },
    {
        "id": "ea258cd2.d6e7d",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "",
        "group": "c0d4b517.4b9968",
        "order": 10,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 980,
        "y": 780,
        "wires": [
            [
                "7507ff98.5a92b",
                "dca07a87.27ec18",
                "f041a8b3.dcb0d8",
                "184c506a.42dbd",
                "60be1d12.066574",
                "ed33f12b.95cc7",
                "39af17e3.7d87a8",
                "b5a3116a.ae72c",
                "8832b98054f3f184"
            ]
        ]
    },
    {
        "id": "7507ff98.5a92b",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Send Voltage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Voltage",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 750,
        "wires": [
            [
                "effa34c4.ff41c8"
            ]
        ]
    },
    {
        "id": "dca07a87.27ec18",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Send Amps",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Amps",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 790,
        "wires": [
            [
                "3f3006.edaa2ffa"
            ]
        ]
    },
    {
        "id": "f041a8b3.dcb0d8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Send Hertz",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Hertz",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 830,
        "wires": [
            [
                "53d73778.d0b178"
            ]
        ]
    },
    {
        "id": "184c506a.42dbd",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Send RPM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.RPM",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 870,
        "wires": [
            [
                "b8855fd7.225d3"
            ]
        ]
    },
    {
        "id": "60be1d12.066574",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Send Power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Power",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 910,
        "wires": [
            [
                "30d2c9b7.d0d666"
            ]
        ]
    },
    {
        "id": "ed33f12b.95cc7",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Send Poles",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Poles",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 950,
        "wires": [
            [
                "1a6f7f25.56eb41"
            ]
        ]
    },
    {
        "id": "effa34c4.ff41c8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Voltage",
        "env": [
            {
                "name": "Parameter",
                "value": "41360",
                "type": "num"
            }
        ],
        "x": 1540,
        "y": 750,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3f3006.edaa2ffa",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Amps",
        "env": [
            {
                "name": "Parameter",
                "value": "41361",
                "type": "num"
            }
        ],
        "x": 1550,
        "y": 790,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "53d73778.d0b178",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Hertz",
        "env": [
            {
                "name": "Parameter",
                "value": "41362",
                "type": "num"
            }
        ],
        "x": 1550,
        "y": 830,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b8855fd7.225d3",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "RPM",
        "env": [
            {
                "name": "Parameter",
                "value": "41363",
                "type": "num"
            }
        ],
        "x": 1550,
        "y": 870,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "30d2c9b7.d0d666",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Power",
        "env": [
            {
                "name": "Parameter",
                "value": "41366",
                "type": "num"
            }
        ],
        "x": 1550,
        "y": 910,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1a6f7f25.56eb41",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Poles",
        "env": [
            {
                "name": "Parameter",
                "value": "41367",
                "type": "num"
            },
            {
                "name": "Datatype",
                "value": "DINT",
                "type": "str"
            }
        ],
        "x": 1550,
        "y": 950,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7ed08f75.bf75b",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "",
        "group": "c9a29e84.68bd",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1040,
        "y": 1620,
        "wires": [
            [
                "59d9f322.aedecc",
                "1d4bc15f.069e1f",
                "e8c7703c.35e3c",
                "190647c5.caaac8",
                "17803970.897c87",
                "f4d9092eba3243ad"
            ]
        ]
    },
    {
        "id": "59d9f322.aedecc",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Send Start_Acc_Boost",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Volts_per_Hertz.Start_Acc_Boost",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1580,
        "wires": [
            [
                "4105a369.d1cc3c"
            ]
        ]
    },
    {
        "id": "1d4bc15f.069e1f",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Send Break_Voltage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Volts_per_Hertz.Break_Voltage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1660,
        "wires": [
            [
                "7b0567a6.14ba98"
            ]
        ]
    },
    {
        "id": "e8c7703c.35e3c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Send Break_Frequecy",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Volts_per_Hertz.Break_Frequecy",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1700,
        "wires": [
            [
                "9429095c.bf7808"
            ]
        ]
    },
    {
        "id": "4105a369.d1cc3c",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Start_Acc_Boost",
        "env": [
            {
                "name": "Parameter",
                "value": "41440",
                "type": "num"
            }
        ],
        "x": 1480,
        "y": 1580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7b0567a6.14ba98",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Break_Voltage",
        "env": [
            {
                "name": "Parameter",
                "value": "41443",
                "type": "num"
            }
        ],
        "x": 1490,
        "y": 1660,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9429095c.bf7808",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Break_Frequecy",
        "env": [
            {
                "name": "Parameter",
                "value": "41444",
                "type": "num"
            }
        ],
        "x": 1490,
        "y": 1700,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c3259a58.4fe088",
        "type": "ui_dropdown",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "label": "Unidades de potencia",
        "tooltip": "",
        "place": "",
        "group": "c0d4b517.4b9968",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HP",
                "value": 0,
                "type": "num"
            },
            {
                "label": "kW",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 580,
        "y": 1330,
        "wires": [
            [
                "3f0134d0.dc178c"
            ]
        ]
    },
    {
        "id": "3f0134d0.dc178c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Power_Units",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Power_Units",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1330,
        "wires": [
            []
        ]
    },
    {
        "id": "f7f5dc17.aa232",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Power_Units",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Power_Units",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1330,
        "wires": [
            [
                "c3259a58.4fe088"
            ]
        ]
    },
    {
        "id": "39af17e3.7d87a8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Power_Units",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Power_Units",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 990,
        "wires": [
            [
                "ee2e2c40.fad2f"
            ]
        ]
    },
    {
        "id": "ee2e2c40.fad2f",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Power_Units",
        "env": [
            {
                "name": "Parameter",
                "value": "41365",
                "type": "num"
            },
            {
                "name": "Datatype",
                "value": "DINT",
                "type": "str"
            }
        ],
        "x": 1530,
        "y": 990,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "645e5a91.8ccef4",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "label": "Rampa de aceleración",
        "tooltip": "",
        "group": "971dcd1e.a04d5",
        "order": 2,
        "width": "6",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "Accel",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 580,
        "y": 120,
        "wires": [
            [
                "2709f5cf.b4e16a"
            ]
        ]
    },
    {
        "id": "faa40213.086fa",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "label": "Rampa de desaceleración",
        "tooltip": "",
        "group": "971dcd1e.a04d5",
        "order": 5,
        "width": "6",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 570,
        "y": 220,
        "wires": [
            [
                "3ca6161d.651d6a"
            ]
        ]
    },
    {
        "id": "ebeef8ea.3def58",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "label": "Límite mínimo",
        "tooltip": "",
        "group": "53f5e611.7d5b48",
        "order": 2,
        "width": "6",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 600,
        "y": 320,
        "wires": [
            [
                "1358ba12.db4f76"
            ]
        ]
    },
    {
        "id": "7b0522e.ed903dc",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "label": "Límite máximo",
        "tooltip": "",
        "group": "53f5e611.7d5b48",
        "order": 5,
        "width": "6",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 600,
        "y": 420,
        "wires": [
            [
                "40fde4de.c5c06c"
            ]
        ]
    },
    {
        "id": "2163239b.5a9bbc",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "Accel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.Accel",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 361,
        "y": 120,
        "wires": [
            [
                "645e5a91.8ccef4"
            ]
        ]
    },
    {
        "id": "2498ec05.7284b4",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Decel Time 1",
        "env": [
            {
                "name": "Parameter",
                "value": "42877",
                "type": "num"
            }
        ],
        "x": 1530,
        "y": 200,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e5c3bbc0.8b2998",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "Decel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.Decel",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 361,
        "y": 220,
        "wires": [
            [
                "faa40213.086fa"
            ]
        ]
    },
    {
        "id": "e89aec53.9b1b1",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "MinLimit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.MinLimit",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 371,
        "y": 320,
        "wires": [
            [
                "ebeef8ea.3def58"
            ]
        ]
    },
    {
        "id": "319a607a.54c89",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Min Limit Fwd",
        "env": [
            {
                "name": "Parameter",
                "value": "42860",
                "type": "num"
            }
        ],
        "x": 1520,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7048ef53.1fd6f",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Max Limit Fwd",
        "env": [
            {
                "name": "Parameter",
                "value": "42858",
                "type": "num"
            }
        ],
        "x": 1520,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2709f5cf.b4e16a",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "Accel",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Speed_Control.Accel",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "3ca6161d.651d6a",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "Decel",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Speed_Control.Decel",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "1358ba12.db4f76",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "MinLimit",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Speed_Control.MinLimit",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "40fde4de.c5c06c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "MaxLimit",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Speed_Control.MaxLimit",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "acaa43fe.71bfa",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "",
        "group": "971dcd1e.a04d5",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 960,
        "y": 160,
        "wires": [
            [
                "b559fab2.66fd28",
                "df9eb38c.fa6d7",
                "d4a47d02.7580e"
            ]
        ]
    },
    {
        "id": "b559fab2.66fd28",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Send Accel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.Accel",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 160,
        "wires": [
            [
                "4d7667fd.f49138"
            ]
        ]
    },
    {
        "id": "df9eb38c.fa6d7",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Send Decel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.Decel",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 200,
        "wires": [
            [
                "2498ec05.7284b4"
            ]
        ]
    },
    {
        "id": "f7f45d3a.6e4e4",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "",
        "group": "53f5e611.7d5b48",
        "order": 8,
        "width": "6",
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 960,
        "y": 280,
        "wires": [
            [
                "7116aa90.5b13a4",
                "ee09985d.8da768",
                "c48a9a39.50daa8"
            ]
        ]
    },
    {
        "id": "7116aa90.5b13a4",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Send MaxLimit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.MaxLimit",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 320,
        "wires": [
            [
                "7048ef53.1fd6f",
                "d4e8aa0c.01c0c8"
            ]
        ]
    },
    {
        "id": "24d1e786.5ef6e8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Max Limit Rev",
        "env": [
            {
                "name": "Parameter",
                "value": "42859",
                "type": "num"
            }
        ],
        "x": 1520,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4d7667fd.f49138",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Accel Time 1",
        "env": [
            {
                "name": "Parameter",
                "value": "42875",
                "type": "num"
            }
        ],
        "x": 1530,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d4e8aa0c.01c0c8",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Invertir",
        "func": "msg.payload = msg.payload*-1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1360,
        "y": 360,
        "wires": [
            [
                "24d1e786.5ef6e8"
            ]
        ]
    },
    {
        "id": "fa33f7fa.bf0bd8",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "8a04702.34fd29",
        "name": "Pantalla Configuración-Estándar-Drive_C2S Link Out",
        "links": [
            "2d0c4fa4.505a8",
            "251a85e5.2591ca",
            "29bb8af3.ae5fa6",
            "885891cc.84f0d",
            "bd852785.499c28",
            "6fe51a99.814d94",
            "664a9d08.0c3cc4",
            "af3a631.a66aea",
            "dc9ea4ba.1aa038",
            "b970befc.5452",
            "e7412dd2.70fb",
            "eb89266c.2d2618",
            "7fd169a3.b2f638",
            "f7031c65.4fe95",
            "4b4d89b2.afea38",
            "d36a0063.bfbca"
        ],
        "x": 955,
        "y": 2100,
        "wires": []
    },
    {
        "id": "e1b497b2.06f878",
        "type": "inject",
        "z": "43b51d90.0b47f4",
        "g": "8a04702.34fd29",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "20",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 840,
        "y": 2060,
        "wires": [
            [
                "fa33f7fa.bf0bd8"
            ]
        ]
    },
    {
        "id": "ee09985d.8da768",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "MinLimit",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 280,
        "wires": [
            [
                "319a607a.54c89",
                "c3c49381858b2d5e"
            ]
        ]
    },
    {
        "id": "d4a47d02.7580e",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Evento Rampas",
        "func": "var Accel_Decel = global.get('C2S.Speed_Control');\nmsg.payload = \"Cambio de rampas: Aceleración: \" +Accel_Decel.Accel+\" Desaceleración: \"+Accel_Decel.Decel;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 120,
        "wires": [
            [
                "44b05f12.5269e"
            ]
        ]
    },
    {
        "id": "44b05f12.5269e",
        "type": "ui_toast",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1510,
        "y": 120,
        "wires": []
    },
    {
        "id": "c48a9a39.50daa8",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Evento Límites",
        "func": "var Accel_Decel = global.get('C2S.Speed_Control');\nmsg.payload = \"Cambio de límites de velocidad: Mínimo: \" +Accel_Decel.MinLimit+\" Máximo: \"+Accel_Decel.MaxLimit;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 240,
        "wires": [
            [
                "44b05f12.5269e"
            ]
        ]
    },
    {
        "id": "b5a3116a.ae72c",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Evento placa de motor",
        "func": "msg.payload = \"Actualización de los datos de placa de motor\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 710,
        "wires": [
            [
                "1b0e4b2b.ecf4e5"
            ]
        ]
    },
    {
        "id": "1b0e4b2b.ecf4e5",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Rampas y límites",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 1435,
        "y": 710,
        "wires": []
    },
    {
        "id": "d517c385.40ed7",
        "type": "ui_toast",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1480,
        "y": 1540,
        "wires": []
    },
    {
        "id": "2e60217a.d7bbae",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Rampas y límites",
        "links": [
            "59e817c2.295b38",
            "2da816b7.b2be9a"
        ],
        "x": 1405,
        "y": 1500,
        "wires": []
    },
    {
        "id": "190647c5.caaac8",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Ajustes Refuerzo",
        "func": "\nAccel_Decel = global.get('Speed_Control');\nmsg.payload = \"Actualización de los ajustes de refuerzo\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1250,
        "y": 1540,
        "wires": [
            [
                "d517c385.40ed7",
                "2e60217a.d7bbae"
            ]
        ]
    },
    {
        "id": "49534500.cd9cdc",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "8a04702.34fd29",
        "name": "Comunicación Drive Link In",
        "links": [
            "2939a4d0.1f6b6c"
        ],
        "x": 875,
        "y": 2100,
        "wires": [
            [
                "fa33f7fa.bf0bd8"
            ]
        ]
    },
    {
        "id": "17803970.897c87",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Current Limit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Volts_per_Hertz.Current_Limit",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1740,
        "wires": [
            [
                "6f6dca07.0b3994",
                "5fb8e65144bf6a74"
            ]
        ]
    },
    {
        "id": "6f6dca07.0b3994",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Current_Limit",
        "env": [
            {
                "name": "Parameter",
                "value": "41182",
                "type": "num"
            }
        ],
        "x": 1490,
        "y": 1740,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "727b085.b0b11f8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "Ninguno",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 1870,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "16584a.4bbef7b7",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "PMM",
        "property": "C2S.PMM_Mtr.Brand_Selected",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Ninguno",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BORETS 45A3440V",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BAKER 49A2575V",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SLB 51.4A2600V",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "N460PM115 2990V 3600RPM SGL CR0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "N460PM145 3250V 3600RPM SGL CR0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "N512PM320 3870V 3600RPM SGL CR0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "N512PM480 4130V 3600RPM SGL CR0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "N512PM235 3950V 3600RPM SGL CR0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "N512PM295 4700V 3600RPM CR2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "N460PM145 3260V 3600RPM SGL",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 11,
        "x": 3650,
        "y": 2130,
        "wires": [
            [
                "727b085.b0b11f8"
            ],
            [
                "978a0bd9172de45f"
            ],
            [
                "1eb3abc782ede49a"
            ],
            [
                "3f3a83c71b2f5a67"
            ],
            [
                "f3b82ba0.812c08"
            ],
            [
                "dff6197.eaa9ce8"
            ],
            [
                "498c14cb.46245c"
            ],
            [
                "7e19ed0d.1c5424"
            ],
            [
                "f9e935e0.772998"
            ],
            [
                "ce38aaac.e61788"
            ],
            [
                "d9787c05.edb21"
            ]
        ]
    },
    {
        "id": "e743a599.f2f618",
        "type": "json",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 4290,
        "y": 1870,
        "wires": [
            [
                "4c00f1aa.f0c6d"
            ]
        ]
    },
    {
        "id": "4c00f1aa.f0c6d",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "Mapa Mtr",
        "rules": [
            {
                "t": "set",
                "p": "C2S.PMM_Mtr.Map",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4420,
        "y": 1870,
        "wires": [
            [
                "a297078a.2cb578"
            ]
        ]
    },
    {
        "id": "f3b82ba0.812c08",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "N460PM115 2990V 3600RPM SGL CR0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Parámetro\":27,\"Descripción\":\"Motor NP Hz\",\"Valor\":120},{\"Parámetro\":28,\"Descripción\":\"Motor NP RPM\",\"Valor\":3600},{\"Parámetro\":30,\"Descripción\":\"Motor NP Power\",\"Valor\":70},{\"Parámetro\":31,\"Descripción\":\"Motor Poles\",\"Valor\":4},{\"Parámetro\":2010,\"Descripción\":\"Mtr NL Voltage\",\"Valor\":2300},{\"Parámetro\":2011,\"Descripción\":\"Mtr FL Voltage\",\"Valor\":2520},{\"Parámetro\":2012,\"Descripción\":\"MtrNormalDutyAmp\",\"Valor\":18.3},{\"Parámetro\":2013,\"Descripción\":\"Stator Resistance\",\"Valor\":3.2},{\"Parámetro\":2014,\"Descripción\":\"Total kgm2\",\"Valor\":0.036},{\"Parámetro\":2015,\"Descripción\":\"Ld No Load\",\"Valor\":69},{\"Parámetro\":2016,\"Descripción\":\"Lq No Load\",\"Valor\":63},{\"Parámetro\":2017,\"Descripción\":\"Mtr Efficiency\",\"Valor\":91.9},{\"Parámetro\":2020,\"Descripción\":\"Ld Sat 10 Pcnt\",\"Valor\":99},{\"Parámetro\":2021,\"Descripción\":\"Ld Sat 25 Pcnt\",\"Valor\":96},{\"Parámetro\":2022,\"Descripción\":\"Ld Sat 50 Pcnt\",\"Valor\":89},{\"Parámetro\":2023,\"Descripción\":\"Ld Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2024,\"Descripción\":\"Ld Sat 150 Pcnt\",\"Valor\":65},{\"Parámetro\":2025,\"Descripción\":\"Lq Sat 10 Pcnt\",\"Valor\":99},{\"Parámetro\":2026,\"Descripción\":\"Lq Sat 25 Pcnt\",\"Valor\":96},{\"Parámetro\":2027,\"Descripción\":\"Lq Sat 50 Pcnt\",\"Valor\":89},{\"Parámetro\":2028,\"Descripción\":\"Lq Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2029,\"Descripción\":\"Lq Sat 150 Pcnt\",\"Valor\":65}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3970,
        "y": 2030,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "dff6197.eaa9ce8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "N460PM145 3250V 3600RPM SGL CR0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Parámetro\":27,\"Descripción\":\"Motor NP Hz\",\"Valor\":120},{\"Parámetro\":28,\"Descripción\":\"Motor NP RPM\",\"Valor\":3600},{\"Parámetro\":30,\"Descripción\":\"Motor NP Power\",\"Valor\":90},{\"Parámetro\":31,\"Descripción\":\"Motor Poles\",\"Valor\":4},{\"Parámetro\":2010,\"Descripción\":\"Mtr NL Voltage\",\"Valor\":2279},{\"Parámetro\":2011,\"Descripción\":\"Mtr FL Voltage\",\"Valor\":2720},{\"Parámetro\":2012,\"Descripción\":\"MtrNormalDutyAmp\",\"Valor\":23.7},{\"Parámetro\":2013,\"Descripción\":\"Stator Resistance\",\"Valor\":2.2},{\"Parámetro\":2014,\"Descripción\":\"Total kgm2\",\"Valor\":0},{\"Parámetro\":2015,\"Descripción\":\"Ld No Load\",\"Valor\":50},{\"Parámetro\":2016,\"Descripción\":\"Lq No Load\",\"Valor\":46},{\"Parámetro\":2017,\"Descripción\":\"Mtr Efficiency\",\"Valor\":92.4},{\"Parámetro\":2020,\"Descripción\":\"Ld Sat 10 Pcnt\",\"Valor\":99},{\"Parámetro\":2021,\"Descripción\":\"Ld Sat 25 Pcnt\",\"Valor\":96},{\"Parámetro\":2022,\"Descripción\":\"Ld Sat 50 Pcnt\",\"Valor\":89},{\"Parámetro\":2023,\"Descripción\":\"Ld Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2024,\"Descripción\":\"Ld Sat 150 Pcnt\",\"Valor\":65},{\"Parámetro\":2025,\"Descripción\":\"Lq Sat 10 Pcnt\",\"Valor\":99},{\"Parámetro\":2026,\"Descripción\":\"Lq Sat 25 Pcnt\",\"Valor\":96},{\"Parámetro\":2027,\"Descripción\":\"Lq Sat 50 Pcnt\",\"Valor\":89},{\"Parámetro\":2028,\"Descripción\":\"Lq Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2029,\"Descripción\":\"Lq Sat 150 Pcnt\",\"Valor\":65}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3970,
        "y": 2070,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "498c14cb.46245c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "N512PM320 3870V 3600RPM SGL CR0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Parámetro\":27,\"Descripción\":\"Motor NP Hz\",\"Valor\":120},{\"Parámetro\":28,\"Descripción\":\"Motor NP RPM\",\"Valor\":3600},{\"Parámetro\":30,\"Descripción\":\"Motor NP Power\",\"Valor\":200},{\"Parámetro\":31,\"Descripción\":\"Motor Poles\",\"Valor\":4},{\"Parámetro\":2010,\"Descripción\":\"Mtr NL Voltage\",\"Valor\":3010},{\"Parámetro\":2011,\"Descripción\":\"Mtr FL Voltage\",\"Valor\":3260},{\"Parámetro\":2012,\"Descripción\":\"MtrNormalDutyAmp\",\"Valor\":39.9},{\"Parámetro\":2013,\"Descripción\":\"Stator Resistance\",\"Valor\":1.8},{\"Parámetro\":2014,\"Descripción\":\"Total kgm2\",\"Valor\":0.1},{\"Parámetro\":2015,\"Descripción\":\"Ld No Load\",\"Valor\":35},{\"Parámetro\":2016,\"Descripción\":\"Lq No Load\",\"Valor\":33},{\"Parámetro\":2017,\"Descripción\":\"Mtr Efficiency\",\"Valor\":92.6},{\"Parámetro\":2020,\"Descripción\":\"Ld Sat 10 Pcnt\",\"Valor\":93},{\"Parámetro\":2021,\"Descripción\":\"Ld Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2022,\"Descripción\":\"Ld Sat 50 Pcnt\",\"Valor\":85},{\"Parámetro\":2023,\"Descripción\":\"Ld Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2024,\"Descripción\":\"Ld Sat 150 Pcnt\",\"Valor\":71},{\"Parámetro\":2025,\"Descripción\":\"Lq Sat 10 Pcnt\",\"Valor\":93},{\"Parámetro\":2026,\"Descripción\":\"Lq Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2027,\"Descripción\":\"Lq Sat 50 Pcnt\",\"Valor\":85},{\"Parámetro\":2028,\"Descripción\":\"Lq Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2029,\"Descripción\":\"Lq Sat 150 Pcnt\",\"Valor\":71}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3970,
        "y": 2110,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "7e19ed0d.1c5424",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "N512PM480 4130V 3600RPM SGL CR0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Parámetro\":27,\"Descripción\":\"Motor NP Hz\",\"Valor\":120},{\"Parámetro\":28,\"Descripción\":\"Motor NP RPM\",\"Valor\":3600},{\"Parámetro\":30,\"Descripción\":\"Motor NP Power\",\"Valor\":300},{\"Parámetro\":31,\"Descripción\":\"Motor Poles\",\"Valor\":4},{\"Parámetro\":2010,\"Descripción\":\"Mtr NL Voltage\",\"Valor\":3270},{\"Parámetro\":2011,\"Descripción\":\"Mtr FL Voltage\",\"Valor\":3580},{\"Parámetro\":2012,\"Descripción\":\"MtrNormalDutyAmp\",\"Valor\":55.1},{\"Parámetro\":2013,\"Descripción\":\"Stator Resistance\",\"Valor\":1.4},{\"Parámetro\":2014,\"Descripción\":\"Total kgm2\",\"Valor\":0.2},{\"Parámetro\":2015,\"Descripción\":\"Ld No Load\",\"Valor\":28},{\"Parámetro\":2016,\"Descripción\":\"Lq No Load\",\"Valor\":26},{\"Parámetro\":2017,\"Descripción\":\"Mtr Efficiency\",\"Valor\":92.7},{\"Parámetro\":2020,\"Descripción\":\"Ld Sat 10 Pcnt\",\"Valor\":93},{\"Parámetro\":2021,\"Descripción\":\"Ld Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2022,\"Descripción\":\"Ld Sat 50 Pcnt\",\"Valor\":85},{\"Parámetro\":2023,\"Descripción\":\"Ld Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2024,\"Descripción\":\"Ld Sat 150 Pcnt\",\"Valor\":71},{\"Parámetro\":2025,\"Descripción\":\"Lq Sat 10 Pcnt\",\"Valor\":93},{\"Parámetro\":2026,\"Descripción\":\"Lq Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2027,\"Descripción\":\"Lq Sat 50 Pcnt\",\"Valor\":85},{\"Parámetro\":2028,\"Descripción\":\"Lq Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2029,\"Descripción\":\"Lq Sat 150 Pcnt\",\"Valor\":71}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3970,
        "y": 2150,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "f9e935e0.772998",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "N512PM235 3950V 3600RPM SGL CR0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Parámetro\":27,\"Descripción\":\"Motor NP Hz\",\"Valor\":120},{\"Parámetro\":28,\"Descripción\":\"Motor NP RPM\",\"Valor\":3600},{\"Parámetro\":30,\"Descripción\":\"Motor NP Power\",\"Valor\":145},{\"Parámetro\":31,\"Descripción\":\"Motor Poles\",\"Valor\":4},{\"Parámetro\":2010,\"Descripción\":\"Mtr NL Voltage\",\"Valor\":3090},{\"Parámetro\":2011,\"Descripción\":\"Mtr FL Voltage\",\"Valor\":3320},{\"Parámetro\":2012,\"Descripción\":\"MtrNormalDutyAmp\",\"Valor\":28.2},{\"Parámetro\":2013,\"Descripción\":\"Stator Resistance\",\"Valor\":2.6},{\"Parámetro\":2014,\"Descripción\":\"Total kgm2\",\"Valor\":0.1},{\"Parámetro\":2015,\"Descripción\":\"Ld No Load\",\"Valor\":50},{\"Parámetro\":2016,\"Descripción\":\"Lq No Load\",\"Valor\":46},{\"Parámetro\":2017,\"Descripción\":\"Mtr Efficiency\",\"Valor\":92.4},{\"Parámetro\":2020,\"Descripción\":\"Ld Sat 10 Pcnt\",\"Valor\":93},{\"Parámetro\":2021,\"Descripción\":\"Ld Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2022,\"Descripción\":\"Ld Sat 50 Pcnt\",\"Valor\":85},{\"Parámetro\":2023,\"Descripción\":\"Ld Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2024,\"Descripción\":\"Ld Sat 150 Pcnt\",\"Valor\":71},{\"Parámetro\":2025,\"Descripción\":\"Lq Sat 10 Pcnt\",\"Valor\":93},{\"Parámetro\":2026,\"Descripción\":\"Lq Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2027,\"Descripción\":\"Lq Sat 50 Pcnt\",\"Valor\":85},{\"Parámetro\":2028,\"Descripción\":\"Lq Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2029,\"Descripción\":\"Lq Sat 150 Pcnt\",\"Valor\":71}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3970,
        "y": 2190,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "ce38aaac.e61788",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "N512PM295 4700V 3600RPM CR2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Parámetro\":27,\"Descripción\":\"Motor NP Hz\",\"Valor\":120},{\"Parámetro\":28,\"Descripción\":\"Motor NP RPM\",\"Valor\":3600},{\"Parámetro\":30,\"Descripción\":\"Motor NP Power\",\"Valor\":185},{\"Parámetro\":31,\"Descripción\":\"Motor Poles\",\"Valor\":4},{\"Parámetro\":2010,\"Descripción\":\"Mtr NL Voltage\",\"Valor\":3010},{\"Parámetro\":2011,\"Descripción\":\"Mtr FL Voltage\",\"Valor\":3270},{\"Parámetro\":2012,\"Descripción\":\"MtrNormalDutyAmp\",\"Valor\":36.9},{\"Parámetro\":2013,\"Descripción\":\"Stator Resistance\",\"Valor\":2},{\"Parámetro\":2014,\"Descripción\":\"Total kgm2\",\"Valor\":0.1},{\"Parámetro\":2015,\"Descripción\":\"Ld No Load\",\"Valor\":39},{\"Parámetro\":2016,\"Descripción\":\"Lq No Load\",\"Valor\":36},{\"Parámetro\":2017,\"Descripción\":\"Mtr Efficiency\",\"Valor\":92.4},{\"Parámetro\":2020,\"Descripción\":\"Ld Sat 10 Pcnt\",\"Valor\":93},{\"Parámetro\":2021,\"Descripción\":\"Ld Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2022,\"Descripción\":\"Ld Sat 50 Pcnt\",\"Valor\":85},{\"Parámetro\":2023,\"Descripción\":\"Ld Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2024,\"Descripción\":\"Ld Sat 150 Pcnt\",\"Valor\":71},{\"Parámetro\":2025,\"Descripción\":\"Lq Sat 10 Pcnt\",\"Valor\":93},{\"Parámetro\":2026,\"Descripción\":\"Lq Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2027,\"Descripción\":\"Lq Sat 50 Pcnt\",\"Valor\":85},{\"Parámetro\":2028,\"Descripción\":\"Lq Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2029,\"Descripción\":\"Lq Sat 150 Pcnt\",\"Valor\":71}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3990,
        "y": 2230,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "d9787c05.edb21",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "N460PM145 3260V 3600RPM SGL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Parámetro\":27,\"Descripción\":\"Motor NP Hz\",\"Valor\":120},{\"Parámetro\":28,\"Descripción\":\"Motor NP RPM\",\"Valor\":3600},{\"Parámetro\":30,\"Descripción\":\"Motor NP Power\",\"Valor\":90},{\"Parámetro\":31,\"Descripción\":\"Motor Poles\",\"Valor\":4},{\"Parámetro\":2010,\"Descripción\":\"Mtr NL Voltage\",\"Valor\":2279},{\"Parámetro\":2011,\"Descripción\":\"Mtr FL Voltage\",\"Valor\":2720},{\"Parámetro\":2012,\"Descripción\":\"MtrNormalDutyAmp\",\"Valor\":23.7},{\"Parámetro\":2013,\"Descripción\":\"Stator Resistance\",\"Valor\":3},{\"Parámetro\":2014,\"Descripción\":\"Total kgm2\",\"Valor\":0},{\"Parámetro\":2015,\"Descripción\":\"Ld No Load\",\"Valor\":55.6},{\"Parámetro\":2016,\"Descripción\":\"Lq No Load\",\"Valor\":54.1},{\"Parámetro\":2017,\"Descripción\":\"Mtr Efficiency\",\"Valor\":92},{\"Parámetro\":2020,\"Descripción\":\"Ld Sat 10 Pcnt\",\"Valor\":93},{\"Parámetro\":2021,\"Descripción\":\"Ld Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2022,\"Descripción\":\"Ld Sat 50 Pcnt\",\"Valor\":85},{\"Parámetro\":2023,\"Descripción\":\"Ld Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2024,\"Descripción\":\"Ld Sat 150 Pcnt\",\"Valor\":71},{\"Parámetro\":2025,\"Descripción\":\"Lq Sat 10 Pcnt\",\"Valor\":93},{\"Parámetro\":2026,\"Descripción\":\"Lq Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2027,\"Descripción\":\"Lq Sat 50 Pcnt\",\"Valor\":85},{\"Parámetro\":2028,\"Descripción\":\"Lq Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2029,\"Descripción\":\"Lq Sat 150 Pcnt\",\"Valor\":71}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3990,
        "y": 2270,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "7b0b7d11.ef94f4",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "label": "LS Ramp Rate [s]",
        "tooltip": "",
        "group": "13baa6fa.5569a9",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 1250,
        "wires": [
            [
                "cd4abd8a.4c59b"
            ]
        ]
    },
    {
        "id": "24f4f23.9e9be0e",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "label": "LS Cur. Ref. Freq. [Hz]",
        "tooltip": "",
        "group": "13baa6fa.5569a9",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2260,
        "y": 1290,
        "wires": [
            [
                "69d7ef79.c6018"
            ]
        ]
    },
    {
        "id": "4830181d.e9bf78",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "label": "LS Ramp Hold [s]",
        "tooltip": "",
        "group": "13baa6fa.5569a9",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 1330,
        "wires": [
            [
                "96db82a3.1ddb4"
            ]
        ]
    },
    {
        "id": "c43a16af.f971f8",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "label": "LS HS Freq. [Hz]",
        "tooltip": "",
        "group": "13baa6fa.5569a9",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 1370,
        "wires": [
            [
                "cf151366.60e73"
            ]
        ]
    },
    {
        "id": "8ddae80f.11ee78",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "label": "HS LS Freq. [Hz]",
        "tooltip": "",
        "group": "13baa6fa.5569a9",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 1410,
        "wires": [
            [
                "bea0d195.c7ba2"
            ]
        ]
    },
    {
        "id": "5abae9dd.c7ad78",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "label": "LS Min. Freq. [Hz]",
        "tooltip": "",
        "group": "13baa6fa.5569a9",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 1450,
        "wires": [
            [
                "b51d88ff.ef5998"
            ]
        ]
    },
    {
        "id": "c65b2507.1eed08",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "label": "LS Ch. Dir. Freq. [Hz]",
        "tooltip": "",
        "group": "13baa6fa.5569a9",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2260,
        "y": 1490,
        "wires": [
            [
                "2138aa9f.001906"
            ]
        ]
    },
    {
        "id": "4c8c812a.398b9",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "label": "LS Fly Start Dly. [s]",
        "tooltip": "",
        "group": "13baa6fa.5569a9",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 1530,
        "wires": [
            [
                "12cfd19b.b82f2e"
            ]
        ]
    },
    {
        "id": "745ed37.26d462c",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "label": "LS Mtr. Stall Dly. [s]",
        "tooltip": "",
        "group": "13baa6fa.5569a9",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 1570,
        "wires": [
            [
                "560fd45e.767cdc"
            ]
        ]
    },
    {
        "id": "dce82df4.12048",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "",
        "label": "HS Id Bandwith [R/S]",
        "tooltip": "",
        "group": "1c12ea7.7bc1e16",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2270,
        "y": 1760,
        "wires": [
            [
                "a382e6ae.b41588"
            ]
        ]
    },
    {
        "id": "f803389.88f91c8",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "",
        "label": "HS Iq Bandwith [R/S]",
        "tooltip": "",
        "group": "1c12ea7.7bc1e16",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2270,
        "y": 1800,
        "wires": [
            [
                "abbf3d2a.6e7da"
            ]
        ]
    },
    {
        "id": "44b77597.ab174c",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "",
        "label": "HS Speed Estimation Kp",
        "tooltip": "",
        "group": "1c12ea7.7bc1e16",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2280,
        "y": 1840,
        "wires": [
            [
                "e2f1db4a.fea878"
            ]
        ]
    },
    {
        "id": "c3f612b3.bcf64",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "",
        "label": "Speed Regulator Bandwith [R/S]",
        "tooltip": "",
        "group": "1c12ea7.7bc1e16",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2300,
        "y": 1880,
        "wires": [
            [
                "59ca9b2ac35f46be"
            ]
        ]
    },
    {
        "id": "5882e74a.6dd008",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "54254b6e.789ca4",
        "name": "",
        "group": "5bbc6e36.6f635",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Current Regulator",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "x": 290,
        "y": 2060,
        "wires": [
            [
                "bb683181.4564b"
            ]
        ]
    },
    {
        "id": "461aa518.bd9c8c",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "54254b6e.789ca4",
        "name": "",
        "group": "5bbc6e36.6f635",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "No Load Voltage",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "x": 290,
        "y": 2100,
        "wires": [
            [
                "bb683181.4564b"
            ]
        ]
    },
    {
        "id": "f5f0f42c.099238",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "",
        "label": "Longitud [m]",
        "tooltip": "",
        "group": "4d236281.ace7dc",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2230,
        "y": 2030,
        "wires": [
            [
                "ebb57eb2.bb1c"
            ]
        ]
    },
    {
        "id": "5f92ad2e.445a74",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "",
        "label": "Calibre AWG",
        "tooltip": "",
        "group": "4d236281.ace7dc",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2230,
        "y": 2150,
        "wires": [
            [
                "9fce6b89.48e478"
            ]
        ]
    },
    {
        "id": "57a5e4ed.c2432c",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "",
        "label": "mΩ/m",
        "tooltip": "",
        "group": "4d236281.ace7dc",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2210,
        "y": 2070,
        "wires": [
            [
                "4ad6d480.e0967c"
            ]
        ]
    },
    {
        "id": "deda5dc1.fda29",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "",
        "label": "mH/m",
        "tooltip": "",
        "group": "4d236281.ace7dc",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2210,
        "y": 2110,
        "wires": [
            [
                "b53e7ff3.dc50f"
            ]
        ]
    },
    {
        "id": "7d7b0b0.e782bf4",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "82264d68.0b05a",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3540,
        "y": 1780,
        "wires": [
            [
                "98651a1f.5a1358"
            ]
        ]
    },
    {
        "id": "98651a1f.5a1358",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "82264d68.0b05a",
        "name": "Brand",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PMM_Mtr.Brand",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3670,
        "y": 1780,
        "wires": [
            [
                "84631e96.4b794"
            ]
        ]
    },
    {
        "id": "d6814492.90c268",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "82264d68.0b05a",
        "name": "Brand Selected",
        "rules": [
            {
                "t": "set",
                "p": "C2S.PMM_Mtr.Brand_Selected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3980,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "ffb8c84.3759b38",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "82264d68.0b05a",
        "name": "Motor PMM",
        "links": [
            "97407954.a004c8",
            "ad87cee4.7dbb5",
            "89e59280.db7f"
        ],
        "x": 3445,
        "y": 1780,
        "wires": [
            [
                "7d7b0b0.e782bf4"
            ]
        ]
    },
    {
        "id": "84631e96.4b794",
        "type": "ui_dropdown",
        "z": "43b51d90.0b47f4",
        "g": "82264d68.0b05a",
        "name": "Motor PMM",
        "label": "",
        "tooltip": "",
        "place": "Seleccione motor PMM",
        "group": "75fbd908.193868",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Personalizado",
                "value": "Personalizado",
                "type": "str"
            },
            {
                "label": "BORETS 45A3440V",
                "value": "BORETS 45A3440V",
                "type": "str"
            },
            {
                "label": "BAKER 49A2575V",
                "value": "BAKER 49A2575V",
                "type": "str"
            },
            {
                "label": "SLB 51.4A2600V",
                "value": "SLB 51.4A2600V",
                "type": "str"
            },
            {
                "label": "N460PM115 2990V 3600RPM SGL CR0",
                "value": "N460PM115 2990V 3600RPM SGL CR0",
                "type": "str"
            },
            {
                "label": "N460PM145 3250V 3600RPM SGL CR0",
                "value": "N460PM145 3250V 3600RPM SGL CR0",
                "type": "str"
            },
            {
                "label": "N512PM320 3870V 3600RPM SGL CR0",
                "value": "N512PM320 3870V 3600RPM SGL CR0",
                "type": "str"
            },
            {
                "label": "N512PM480 4130V 3600RPM SGL CR0",
                "value": "N512PM480 4130V 3600RPM SGL CR0",
                "type": "str"
            },
            {
                "label": "N512PM235 3950V 3600RPM SGL CR0",
                "value": "N512PM235 3950V 3600RPM SGL CR0",
                "type": "str"
            },
            {
                "label": "N512PM295 4700V 3600RPM CR2",
                "value": "N512PM295 4700V 3600RPM CR2",
                "type": "str"
            },
            {
                "label": "N460PM145 3260V 3600RPM SGL",
                "value": "N460PM145 3260V 3600RPM SGL",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 3810,
        "y": 1780,
        "wires": [
            [
                "d6814492.90c268"
            ]
        ]
    },
    {
        "id": "1a32f855.c2c028",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Ramp Rate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Ramp_Rate",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1250,
        "wires": [
            [
                "7b0b7d11.ef94f4"
            ]
        ]
    },
    {
        "id": "e3905f2d.c95a2",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS CurRef Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_CurRef_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1290,
        "wires": [
            [
                "24f4f23.9e9be0e"
            ]
        ]
    },
    {
        "id": "c0a46c61.dc42",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Ramp Hold",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Ramp_Hold",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1330,
        "wires": [
            [
                "4830181d.e9bf78"
            ]
        ]
    },
    {
        "id": "1ed192c3.bfc6ad",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS HS Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_HS_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 1370,
        "wires": [
            [
                "c43a16af.f971f8"
            ]
        ]
    },
    {
        "id": "1a19e82d.8f39f8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS HS Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.HS_LS_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 1410,
        "wires": [
            [
                "8ddae80f.11ee78"
            ]
        ]
    },
    {
        "id": "ba617df3.9e4f1",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Min Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Min_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 1450,
        "wires": [
            [
                "5abae9dd.c7ad78"
            ]
        ]
    },
    {
        "id": "a46247f8.6b5118",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Ch. Dir. Freq.",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Ch_Dir_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1490,
        "wires": [
            [
                "c65b2507.1eed08"
            ]
        ]
    },
    {
        "id": "6b5988d9.5e0e88",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Fly Start Dly",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Fly_Start_Dly",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1530,
        "wires": [
            [
                "4c8c812a.398b9"
            ]
        ]
    },
    {
        "id": "40b0ee2.96d1d1",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Mtr Stall Dly",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Mtr_Stall_Dly",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1570,
        "wires": [
            [
                "745ed37.26d462c"
            ]
        ]
    },
    {
        "id": "cd4abd8a.4c59b",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Ramp Rate",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.LS_Ramp_Rate",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 1250,
        "wires": [
            []
        ]
    },
    {
        "id": "69d7ef79.c6018",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS CurRef Freq",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.LS_CurRef_Freq",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 1290,
        "wires": [
            []
        ]
    },
    {
        "id": "96db82a3.1ddb4",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Ramp Hold",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.LS_Ramp_Hold",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 1330,
        "wires": [
            []
        ]
    },
    {
        "id": "cf151366.60e73",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS HS Freq",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.LS_HS_Freq",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 1370,
        "wires": [
            []
        ]
    },
    {
        "id": "bea0d195.c7ba2",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS HS Freq",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.HS_LS_Freq",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 1410,
        "wires": [
            []
        ]
    },
    {
        "id": "b51d88ff.ef5998",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Min Freq",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.LS_Min_Freq",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 1450,
        "wires": [
            []
        ]
    },
    {
        "id": "2138aa9f.001906",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Ch. Dir. Freq.",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.LS_Ch_Dir_Freq",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 1490,
        "wires": [
            []
        ]
    },
    {
        "id": "12cfd19b.b82f2e",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Fly Start Dly",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.LS_Fly_Start_Dly",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 1530,
        "wires": [
            []
        ]
    },
    {
        "id": "560fd45e.767cdc",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Mtr Stall Dly",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.LS_Mtr_Stall_Dly",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 1570,
        "wires": [
            []
        ]
    },
    {
        "id": "3c732144.06b13e",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "HS Id Bandwith",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.HS_Id_Bandwith",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 1760,
        "wires": [
            [
                "dce82df4.12048"
            ]
        ]
    },
    {
        "id": "c6f7e0c2.65693",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "HS Iq Bandwith",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.HS_Iq_Bandwith",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 1800,
        "wires": [
            [
                "f803389.88f91c8"
            ]
        ]
    },
    {
        "id": "74e18be.f141b74",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "HS Spd Est Kp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.HS_Spd_Est_Kp",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 1840,
        "wires": [
            [
                "44b77597.ab174c"
            ]
        ]
    },
    {
        "id": "a382e6ae.b41588",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "HS Id Bandwith",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.HS_Id_Bandwith",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2550,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "abbf3d2a.6e7da",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "HS Iq Bandwith",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.HS_Iq_Bandwith",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2550,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "e2f1db4a.fea878",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "HS Spd Est Kp",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.HS_Spd_Est_Kp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2550,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "a9566671.523d38",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "label": "LS Torque Limit [%]",
        "tooltip": "",
        "group": "13baa6fa.5569a9",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 1610,
        "wires": [
            [
                "b974b01d.cfbb5"
            ]
        ]
    },
    {
        "id": "a13e706.ccdb19",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Torque Limit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Torque_Limit",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1610,
        "wires": [
            [
                "a9566671.523d38"
            ]
        ]
    },
    {
        "id": "b974b01d.cfbb5",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "LS Torque Limit",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.LS_Torque_Limit",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 1610,
        "wires": [
            []
        ]
    },
    {
        "id": "45d0fb82.ffcd44",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "Cable Length",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Cable_Length",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 2030,
        "wires": [
            [
                "f5f0f42c.099238"
            ]
        ]
    },
    {
        "id": "133ae82a.b6a158",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "mΩ/m",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.mOhms_m",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 2070,
        "wires": [
            [
                "57a5e4ed.c2432c"
            ]
        ]
    },
    {
        "id": "9ae2d969.d5dba8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "mH/m",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.mH_m",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 2110,
        "wires": [
            [
                "deda5dc1.fda29"
            ]
        ]
    },
    {
        "id": "c2687871.db7ae8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "Calibre AWG",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Calibre_AWG",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 2150,
        "wires": [
            [
                "5f92ad2e.445a74"
            ]
        ]
    },
    {
        "id": "ebb57eb2.bb1c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "Cable Length",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Cable_Length",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 2030,
        "wires": [
            []
        ]
    },
    {
        "id": "4ad6d480.e0967c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "mΩ/m",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.mOhms_m",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 2070,
        "wires": [
            []
        ]
    },
    {
        "id": "b53e7ff3.dc50f",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "mH/m",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.mH_m",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 2110,
        "wires": [
            []
        ]
    },
    {
        "id": "9fce6b89.48e478",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "Calibre AWG",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Calibre_AWG",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 2150,
        "wires": [
            []
        ]
    },
    {
        "id": "bb683181.4564b",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "54254b6e.789ca4",
        "name": "Tunning Select",
        "env": [
            {
                "name": "Parameter",
                "value": "2107",
                "type": "num"
            },
            {
                "name": "Datatype",
                "value": "DINT",
                "type": "str"
            }
        ],
        "x": 490,
        "y": 2080,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "afa5c201.2f248",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "group": "75fbd908.193868",
        "order": 16,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 2700,
        "y": 220,
        "wires": [
            [
                "743f0186.4b8f9",
                "b09b1a2b8790a0bc"
            ]
        ]
    },
    {
        "id": "743f0186.4b8f9",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Mtr NL Voltage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Mtr_NL_Voltage",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 220,
        "wires": [
            [
                "7527c6e0.3daf78"
            ]
        ]
    },
    {
        "id": "1cbf9dce.5bbb72",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Hertz",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Hertz",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 260,
        "wires": [
            [
                "db5ca676.d68768"
            ]
        ]
    },
    {
        "id": "24f18299.bd639e",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Amps",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Amps",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 300,
        "wires": [
            [
                "99cac53c.47c8b8"
            ]
        ]
    },
    {
        "id": "56473adc.bc2c04",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "RPM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.RPM",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 340,
        "wires": [
            [
                "55a31575.a4b83c"
            ]
        ]
    },
    {
        "id": "863f77e9.8dae48",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Mtr FL Voltage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Mtr_FL_Voltage",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 380,
        "wires": [
            [
                "854fa33f.3d50f"
            ]
        ]
    },
    {
        "id": "8b7e0eb6.80d92",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Poles",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Poles",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 420,
        "wires": [
            [
                "fc654a6d.5268d8"
            ]
        ]
    },
    {
        "id": "19b5942a.d0224c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Power",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 460,
        "wires": [
            [
                "b24c7597.1af458"
            ]
        ]
    },
    {
        "id": "9745de0b.84d6",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Power_Units",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Power_Units",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 500,
        "wires": [
            [
                "b88c61ed.9265f"
            ]
        ]
    },
    {
        "id": "7527c6e0.3daf78",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Mtr NL Voltage",
        "env": [
            {
                "name": "Parameter",
                "value": "2010",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 220,
        "wires": [
            [
                "caa71678.3a5088"
            ],
            []
        ]
    },
    {
        "id": "db5ca676.d68768",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Hertz",
        "env": [
            {
                "name": "Parameter",
                "value": "27",
                "type": "num"
            }
        ],
        "x": 3140,
        "y": 260,
        "wires": [
            [
                "beda2309.0d15f"
            ],
            []
        ]
    },
    {
        "id": "99cac53c.47c8b8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Amps",
        "env": [
            {
                "name": "Parameter",
                "value": "2012",
                "type": "num"
            }
        ],
        "x": 3140,
        "y": 300,
        "wires": [
            [
                "f54dc2c3.bffab"
            ],
            []
        ]
    },
    {
        "id": "55a31575.a4b83c",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "RPM",
        "env": [
            {
                "name": "Parameter",
                "value": "28",
                "type": "num"
            }
        ],
        "x": 3140,
        "y": 340,
        "wires": [
            [
                "828ccebb.964c1"
            ],
            []
        ]
    },
    {
        "id": "854fa33f.3d50f",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Mtr FL Voltage",
        "env": [
            {
                "name": "Parameter",
                "value": "2011",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 380,
        "wires": [
            [
                "45b89365.6d23cc"
            ],
            []
        ]
    },
    {
        "id": "fc654a6d.5268d8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Poles",
        "env": [
            {
                "name": "Parameter",
                "value": "31",
                "type": "num"
            },
            {
                "name": "Datatype",
                "value": "DINT",
                "type": "str"
            }
        ],
        "x": 3140,
        "y": 420,
        "wires": [
            [
                "2500666.093ae9a"
            ],
            []
        ]
    },
    {
        "id": "b24c7597.1af458",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Power",
        "env": [
            {
                "name": "Parameter",
                "value": "30",
                "type": "num"
            }
        ],
        "x": 3140,
        "y": 460,
        "wires": [
            [
                "4d817e3c.c961c"
            ],
            []
        ]
    },
    {
        "id": "b88c61ed.9265f",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Power_Units",
        "env": [
            {
                "name": "Parameter",
                "value": "29",
                "type": "num"
            },
            {
                "name": "Datatype",
                "value": "DINT",
                "type": "str"
            }
        ],
        "x": 3120,
        "y": 500,
        "wires": [
            [
                "813a133b.414c1"
            ],
            []
        ]
    },
    {
        "id": "ae2721d3.4bcd8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Ramp Rate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Ramp_Rate",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 1250,
        "wires": [
            [
                "282517c.f6243e8"
            ]
        ]
    },
    {
        "id": "c021296f.17dad8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS CurRef Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_CurRef_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 1290,
        "wires": [
            [
                "f45d7b96.216108"
            ]
        ]
    },
    {
        "id": "f39bbd3b.4769a",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Ramp Hold",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Ramp_Hold",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 1330,
        "wires": [
            [
                "d8d5aad8.a949b8"
            ]
        ]
    },
    {
        "id": "ebc56bb1.140698",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS HS Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_HS_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 1370,
        "wires": [
            [
                "39e86b5d.35b194"
            ]
        ]
    },
    {
        "id": "7f3e34cf.429e6c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS HS Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.HS_LS_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 1410,
        "wires": [
            [
                "b480a111.e4c9f"
            ]
        ]
    },
    {
        "id": "f35ddccf.5a35c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Min Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Min_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 1450,
        "wires": [
            [
                "ca86aaf7.79be48"
            ]
        ]
    },
    {
        "id": "16817136.af3cff",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Ch. Dir. Freq.",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Ch_Dir_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 1490,
        "wires": [
            [
                "cf8a9363.49c4d"
            ]
        ]
    },
    {
        "id": "23e3e38d.5a954c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Fly Start Dly",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Fly_Start_Dly",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 1530,
        "wires": [
            [
                "71e164ea.68de2c"
            ]
        ]
    },
    {
        "id": "df7917d4.57c688",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Mtr Stall Dly",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Mtr_Stall_Dly",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 1570,
        "wires": [
            [
                "9ef7c03b.b86bf"
            ]
        ]
    },
    {
        "id": "6e764326.6b1bbc",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Torque Limit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.LS_Torque_Limit",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 1610,
        "wires": [
            [
                "cc897f41.bb324"
            ]
        ]
    },
    {
        "id": "1f3d785b.d91428",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "group": "13baa6fa.5569a9",
        "order": 14,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 2700,
        "y": 1250,
        "wires": [
            [
                "ae2721d3.4bcd8",
                "6271ec419c9975fc"
            ]
        ]
    },
    {
        "id": "282517c.f6243e8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Ramp Rate",
        "env": [
            {
                "name": "Parameter",
                "value": "2051",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 1250,
        "wires": [
            [
                "6907fd4.8d31404"
            ],
            []
        ]
    },
    {
        "id": "f45d7b96.216108",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS CurRef Rate",
        "env": [
            {
                "name": "Parameter",
                "value": "2052",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 1290,
        "wires": [
            [
                "447308f.65180f8"
            ],
            []
        ]
    },
    {
        "id": "d8d5aad8.a949b8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Ramp Hold",
        "env": [
            {
                "name": "Parameter",
                "value": "2057",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 1330,
        "wires": [
            [
                "e26d490a.41f358"
            ],
            []
        ]
    },
    {
        "id": "39e86b5d.35b194",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS HS Freq",
        "env": [
            {
                "name": "Parameter",
                "value": "2053",
                "type": "num"
            }
        ],
        "x": 3120,
        "y": 1370,
        "wires": [
            [
                "b346d664.740438"
            ],
            []
        ]
    },
    {
        "id": "b480a111.e4c9f",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "HS LS Freq",
        "env": [
            {
                "name": "Parameter",
                "value": "2054",
                "type": "num"
            }
        ],
        "x": 3120,
        "y": 1410,
        "wires": [
            [
                "d24ccd06.fca8d"
            ],
            []
        ]
    },
    {
        "id": "ca86aaf7.79be48",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Min Freq",
        "env": [
            {
                "name": "Parameter",
                "value": "2055",
                "type": "num"
            }
        ],
        "x": 3120,
        "y": 1450,
        "wires": [
            [
                "5ae05e22.f0fdc"
            ],
            []
        ]
    },
    {
        "id": "cf8a9363.49c4d",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Ch. Dir. Freq.",
        "env": [
            {
                "name": "Parameter",
                "value": "2056",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 1490,
        "wires": [
            [
                "a8842cd8.32111"
            ],
            []
        ]
    },
    {
        "id": "71e164ea.68de2c",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Fly Start Dly",
        "env": [
            {
                "name": "Parameter",
                "value": "2058",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 1530,
        "wires": [
            [
                "a4a750ad.e20f3"
            ],
            []
        ]
    },
    {
        "id": "9ef7c03b.b86bf",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Mtr Stall Dly",
        "env": [
            {
                "name": "Parameter",
                "value": "2059",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 1570,
        "wires": [
            [
                "515762f0.f3981c"
            ],
            []
        ]
    },
    {
        "id": "cc897f41.bb324",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "LS Torque Limit",
        "env": [
            {
                "name": "Parameter",
                "value": "2050",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 1610,
        "wires": [
            [
                "c9e3c42b.034f48"
            ],
            []
        ]
    },
    {
        "id": "b863e443.3af7b8",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "",
        "group": "1c12ea7.7bc1e16",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 2750,
        "y": 1760,
        "wires": [
            [
                "8199e4ed.0bd9a8",
                "55372f1ea71702ea"
            ]
        ]
    },
    {
        "id": "8199e4ed.0bd9a8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "HS Id Bandwith",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.HS_Id_Bandwith",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 1760,
        "wires": [
            [
                "d2a77dbe.25c1b"
            ]
        ]
    },
    {
        "id": "6e86298c.770778",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "HS Iq Bandwith",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.HS_Iq_Bandwith",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 1800,
        "wires": [
            [
                "4fd20af4.d91884"
            ]
        ]
    },
    {
        "id": "e0303c1e.7edd9",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "HS Spd Est Kp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.HS_Spd_Est_Kp",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 1840,
        "wires": [
            [
                "6630c4bb.775bac"
            ]
        ]
    },
    {
        "id": "fa3568e9.0c3ec8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "Spd Reg BW",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Spd_Reg_BW",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2950,
        "y": 1880,
        "wires": [
            [
                "db0e9993.8974b8"
            ]
        ]
    },
    {
        "id": "d2a77dbe.25c1b",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "HS Id Bandwith",
        "env": [
            {
                "name": "Parameter",
                "value": "2063",
                "type": "num"
            }
        ],
        "x": 3160,
        "y": 1760,
        "wires": [
            [
                "91cb546d.d6f518"
            ],
            []
        ]
    },
    {
        "id": "4fd20af4.d91884",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "HS Iq Bandwith",
        "env": [
            {
                "name": "Parameter",
                "value": "2065",
                "type": "num"
            }
        ],
        "x": 3160,
        "y": 1800,
        "wires": [
            [
                "20a0c8c5.d444d8"
            ],
            []
        ]
    },
    {
        "id": "6630c4bb.775bac",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "HS Spd Est Kp",
        "env": [
            {
                "name": "Parameter",
                "value": "2068",
                "type": "num"
            }
        ],
        "x": 3160,
        "y": 1840,
        "wires": [
            [
                "9eb9ee4d.8a5ee"
            ],
            []
        ]
    },
    {
        "id": "db0e9993.8974b8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "Spd Reg BW",
        "env": [
            {
                "name": "Parameter",
                "value": "636",
                "type": "num"
            }
        ],
        "x": 3170,
        "y": 1880,
        "wires": [
            [
                "a9bbcb5f.75e628"
            ],
            []
        ]
    },
    {
        "id": "c222c852.50c558",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "",
        "group": "4d236281.ace7dc",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 2700,
        "y": 2030,
        "wires": [
            [
                "1c6ede71.3c4732",
                "7cda2e346e20ca45"
            ]
        ]
    },
    {
        "id": "1c6ede71.3c4732",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "Cable Length",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Cable_Length",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 2030,
        "wires": [
            [
                "bb3a93fd.1b707"
            ]
        ]
    },
    {
        "id": "a0f6257c.44c1b8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "mΩ/m",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.mOhms_m",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 2070,
        "wires": [
            [
                "fce229b.6ed04d8"
            ]
        ]
    },
    {
        "id": "dbd07ace.b5eec8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "mH/m",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.mH_m",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 2110,
        "wires": [
            [
                "949a4063.906a9"
            ]
        ]
    },
    {
        "id": "bb3a93fd.1b707",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "Cable Length",
        "env": [
            {
                "name": "Parameter",
                "value": "2040",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 2030,
        "wires": [
            [
                "2dc3ae2.b4b4252"
            ],
            []
        ]
    },
    {
        "id": "fce229b.6ed04d8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "mΩ/m",
        "env": [
            {
                "name": "Parameter",
                "value": "2041",
                "type": "num"
            }
        ],
        "x": 3140,
        "y": 2070,
        "wires": [
            [
                "a1620c10.be3e7"
            ],
            []
        ]
    },
    {
        "id": "949a4063.906a9",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "mH/m",
        "env": [
            {
                "name": "Parameter",
                "value": "2042",
                "type": "num"
            }
        ],
        "x": 3140,
        "y": 2110,
        "wires": [
            [
                "c2e28f90.5f874"
            ],
            []
        ]
    },
    {
        "id": "86aa229e.4b6ab",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Send Loop control",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.LoopControl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 540,
        "wires": [
            [
                "d17d055e.734f88"
            ]
        ]
    },
    {
        "id": "d17d055e.734f88",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Loop control",
        "env": [
            {
                "name": "Parameter",
                "value": "2087",
                "type": "num"
            },
            {
                "name": "Datatype",
                "value": "DINT",
                "type": "str"
            }
        ],
        "x": 3120,
        "y": 540,
        "wires": [
            [
                "edc3de2b.7764d"
            ],
            []
        ]
    },
    {
        "id": "7b7ca039.67f56",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "",
        "label": "Tensión Primario [V]",
        "tooltip": "",
        "group": "65440464.5a5b5c",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 2300,
        "wires": [
            [
                "e66dff2b.a7dd8"
            ]
        ]
    },
    {
        "id": "6498086b.9f9a68",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "",
        "label": "Tensión Secundario [V]",
        "tooltip": "",
        "group": "65440464.5a5b5c",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2260,
        "y": 2340,
        "wires": [
            [
                "ff92d86d.df5e68"
            ]
        ]
    },
    {
        "id": "9bf778b2.624758",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "",
        "label": "KVA Nominal [KVA]",
        "tooltip": "",
        "group": "65440464.5a5b5c",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 2380,
        "wires": [
            [
                "95131597.1e69e8"
            ]
        ]
    },
    {
        "id": "343b6f0c.a164f",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "",
        "label": "Impedancia [%]",
        "tooltip": "",
        "group": "65440464.5a5b5c",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2240,
        "y": 2420,
        "wires": [
            [
                "faf58aaf.e821f8"
            ]
        ]
    },
    {
        "id": "ea303938.a1b5d8",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "",
        "label": "Ralación X/Z",
        "tooltip": "",
        "group": "65440464.5a5b5c",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2230,
        "y": 2460,
        "wires": [
            [
                "516fa65f.6a1c98"
            ]
        ]
    },
    {
        "id": "cdffc0da.22a1a",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "",
        "label": "Desface [º]",
        "tooltip": "",
        "group": "65440464.5a5b5c",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2230,
        "y": 2500,
        "wires": [
            [
                "e0c9e81f.251cc8"
            ]
        ]
    },
    {
        "id": "2f0cd90c.938d76",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Tensión Primario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Tension_Primario",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 2300,
        "wires": [
            [
                "7b7ca039.67f56"
            ]
        ]
    },
    {
        "id": "f33acc87.bb25e",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Tensión Secundario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Tension_Secundario",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 2340,
        "wires": [
            [
                "6498086b.9f9a68"
            ]
        ]
    },
    {
        "id": "45410815.f7dda8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "KVA Nominal",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.KVA_Nominal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 2380,
        "wires": [
            [
                "9bf778b2.624758"
            ]
        ]
    },
    {
        "id": "def7c04e.c8b96",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Impedancia",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Impedancia",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 2420,
        "wires": [
            [
                "343b6f0c.a164f"
            ]
        ]
    },
    {
        "id": "51483786.1c2ad8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Xfmr X Z Ratio",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ralacion_X_Z",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 2460,
        "wires": [
            [
                "ea303938.a1b5d8"
            ]
        ]
    },
    {
        "id": "39c3c44b.cc30dc",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Desface",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Desface",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 2500,
        "wires": [
            [
                "cdffc0da.22a1a"
            ]
        ]
    },
    {
        "id": "e66dff2b.a7dd8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Tensión Primario",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Tension_Primario",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2490,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "ff92d86d.df5e68",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Tensión Secundario",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Tension_Secundario",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2490,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "95131597.1e69e8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "KVA Nominal",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.KVA_Nominal",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "faf58aaf.e821f8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Impedancia",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Impedancia",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "516fa65f.6a1c98",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Xfmr X Z Ratio",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Ralacion_X_Z",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "e0c9e81f.251cc8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Desface",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Desface",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "cbd2d3fc.af02e",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "group": "65440464.5a5b5c",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 2700,
        "y": 2300,
        "wires": [
            [
                "ffa28ddc.d23fc",
                "e3c99a130078517c"
            ]
        ]
    },
    {
        "id": "ffa28ddc.d23fc",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Tensión Primario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Tension_Primario",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 2300,
        "wires": [
            [
                "587ffe16.63ee7"
            ]
        ]
    },
    {
        "id": "15fc1e52.e7f6c2",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Tensión Secundario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Tension_Secundario",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 2340,
        "wires": [
            [
                "2ffbd36c.c2cacc"
            ]
        ]
    },
    {
        "id": "946844fc.d8dc68",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "KVA Nominal",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.KVA_Nominal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 2380,
        "wires": [
            [
                "ccb52a42.9a64c8"
            ]
        ]
    },
    {
        "id": "3c0d8e06.367122",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Desface",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Desface",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2890,
        "y": 2500,
        "wires": [
            [
                "a2b77052.10374"
            ]
        ]
    },
    {
        "id": "587ffe16.63ee7",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Xfmr Primary",
        "env": [
            {
                "name": "Parameter",
                "value": "2032",
                "type": "num"
            }
        ],
        "x": 3120,
        "y": 2300,
        "wires": [
            [
                "de27c84a.defcd8"
            ],
            []
        ]
    },
    {
        "id": "2ffbd36c.c2cacc",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Xfmr Secondary",
        "env": [
            {
                "name": "Parameter",
                "value": "2033",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 2340,
        "wires": [
            [
                "43d398b6.0feef8"
            ],
            []
        ]
    },
    {
        "id": "ccb52a42.9a64c8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Xfmr Rated KVA",
        "env": [
            {
                "name": "Parameter",
                "value": "2034",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 2380,
        "wires": [
            [
                "30635b5b.fe2734"
            ],
            []
        ]
    },
    {
        "id": "7fa2f785.01b918",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Xfmr Impedance",
        "env": [
            {
                "name": "Parameter",
                "value": "2035",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 2420,
        "wires": [
            [
                "6161c997.a416c8"
            ],
            []
        ]
    },
    {
        "id": "e9df39ce.6be8d8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Xfmr X Z Ratio",
        "env": [
            {
                "name": "Parameter",
                "value": "2036",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 2460,
        "wires": [
            [
                "df936049.05cc6"
            ],
            []
        ]
    },
    {
        "id": "a2b77052.10374",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Xfmr Phase Shift",
        "env": [
            {
                "name": "Parameter",
                "value": "2038",
                "type": "num"
            }
        ],
        "x": 3100,
        "y": 2500,
        "wires": [
            [
                "b02ed6c.d535028"
            ],
            []
        ]
    },
    {
        "id": "2bd65955.58afc6",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Impedancia",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Impedancia",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 2420,
        "wires": [
            [
                "7fa2f785.01b918"
            ]
        ]
    },
    {
        "id": "a85fb5ca.b44918",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Xfmr X Z Ratio",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ralacion_X_Z",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 2460,
        "wires": [
            [
                "e9df39ce.6be8d8"
            ]
        ]
    },
    {
        "id": "8200abc2.f87818",
        "type": "ui_dropdown",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Frecuencia",
        "label": "Frecuencia",
        "tooltip": "",
        "place": "Select option",
        "group": "65440464.5a5b5c",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "60Hz",
                "value": 1,
                "type": "num"
            },
            {
                "label": "50Hz",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 2230,
        "y": 2540,
        "wires": [
            [
                "9cd1b87b.a684f8"
            ]
        ]
    },
    {
        "id": "d949483f.6f4b18",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Frecuencia",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Frecuencia",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 2540,
        "wires": [
            [
                "8200abc2.f87818"
            ]
        ]
    },
    {
        "id": "9cd1b87b.a684f8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Frecuencia",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Frecuencia",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "5f074c.ea3398b4",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Frecuencia",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Frecuencia",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 2540,
        "wires": [
            [
                "57ecef09.5048c"
            ]
        ]
    },
    {
        "id": "57ecef09.5048c",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "Frequency",
        "env": [
            {
                "name": "Parameter",
                "value": "2037",
                "type": "num"
            },
            {
                "name": "Datatype",
                "value": "DINT",
                "type": "str"
            }
        ],
        "x": 3120,
        "y": 2540,
        "wires": [
            [
                "f4b66ac0.43fc28"
            ],
            []
        ]
    },
    {
        "id": "c0cd9ee1.f138c",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Ld Sat 10%",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 320,
        "wires": [
            [
                "89ce92c3.63338"
            ]
        ]
    },
    {
        "id": "68032ab5.936c34",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Ld Sat 25%",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 440,
        "wires": [
            [
                "218b3f86.c346"
            ]
        ]
    },
    {
        "id": "76d227a1.4092a8",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Ld Sat 50%",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 560,
        "wires": [
            [
                "1ca78a39.c747d6"
            ]
        ]
    },
    {
        "id": "4e777453.fab6ec",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Ld Sat 100%",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 680,
        "wires": [
            [
                "14ac4ee2.f8ead1"
            ]
        ]
    },
    {
        "id": "30dd0597.abe6aa",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Ld Sat 150%",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 800,
        "wires": [
            [
                "600ba037.f6e12"
            ]
        ]
    },
    {
        "id": "4d1c67aa.dc2248",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Lq Sat 10%",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 1040,
        "wires": [
            [
                "265502ba.24d3fe"
            ]
        ]
    },
    {
        "id": "c04c9d7b.5b36c",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Lq Sat 25%",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 1160,
        "wires": [
            [
                "6adb755c.44760c"
            ]
        ]
    },
    {
        "id": "2431a353.9e0c8c",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Lq Sat 50%",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 1280,
        "wires": [
            [
                "af470457.282ff8"
            ]
        ]
    },
    {
        "id": "b4b87be6.ac2648",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Lq Sat 100%",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 1400,
        "wires": [
            [
                "a688bec7.25003"
            ]
        ]
    },
    {
        "id": "44bd86cb.3ea668",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Lq Sat 150%",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 1520,
        "wires": [
            [
                "b0861b20.d4a078"
            ]
        ]
    },
    {
        "id": "afa764bf.961b98",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Ld No Load",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 200,
        "wires": [
            [
                "5ef05ed0.a303c"
            ]
        ]
    },
    {
        "id": "1a469fe3.9dc9c",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "label": "Lq No Load",
        "tooltip": "",
        "group": "6bc484bb.848a6c",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 3920,
        "y": 920,
        "wires": [
            [
                "bae26ad7.a83a68"
            ]
        ]
    },
    {
        "id": "853ee1e8.4131",
        "type": "ui_dropdown",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Frecuencia PWM",
        "label": "",
        "tooltip": "",
        "place": "Frecuencia PWM",
        "group": "6bc484bb.848a6c",
        "order": 14,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "2 kHz",
                "value": 2,
                "type": "num"
            },
            {
                "label": "4 kHz",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 3940,
        "y": 1640,
        "wires": [
            [
                "7b5ffe1a.15acc"
            ]
        ]
    },
    {
        "id": "48b8327f.02362c",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "group": "6bc484bb.848a6c",
        "order": 17,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 4330,
        "y": 200,
        "wires": [
            [
                "a2deff1c.93535",
                "487147d15f5c304a"
            ]
        ]
    },
    {
        "id": "a297078a.2cb578",
        "type": "debug",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4570,
        "y": 1870,
        "wires": []
    },
    {
        "id": "d70a59a7.2e1c68",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Ld No Load\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 200,
        "wires": [
            [
                "afa764bf.961b98"
            ]
        ]
    },
    {
        "id": "c14cd8c3.11ee38",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Ld Sat 10 Pcnt\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 320,
        "wires": [
            [
                "c0cd9ee1.f138c"
            ]
        ]
    },
    {
        "id": "d813c0ef.52e79",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Ld Sat 25 Pcnt\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 440,
        "wires": [
            [
                "68032ab5.936c34"
            ]
        ]
    },
    {
        "id": "6c2b016d.007b7",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Ld Sat 50 Pcnt\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 560,
        "wires": [
            [
                "76d227a1.4092a8"
            ]
        ]
    },
    {
        "id": "2e79c9c3.0a8ab6",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Ld Sat 100 Pcnt\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 680,
        "wires": [
            [
                "4e777453.fab6ec"
            ]
        ]
    },
    {
        "id": "d0a6d29e.312d2",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Ld Sat 150 Pcnt\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 800,
        "wires": [
            [
                "30dd0597.abe6aa"
            ]
        ]
    },
    {
        "id": "2fe72b39.af4dc4",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Lq Sat 25 Pcnt\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 1160,
        "wires": [
            [
                "c04c9d7b.5b36c"
            ]
        ]
    },
    {
        "id": "76086326.77e1cc",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Lq No Load\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 920,
        "wires": [
            [
                "1a469fe3.9dc9c"
            ]
        ]
    },
    {
        "id": "6d167b.64ffd984",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Lq Sat 10 Pcnt\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 1040,
        "wires": [
            [
                "4d1c67aa.dc2248"
            ]
        ]
    },
    {
        "id": "7aba77f9.b83958",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Lq Sat 50 Pcnt\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 1280,
        "wires": [
            [
                "2431a353.9e0c8c"
            ]
        ]
    },
    {
        "id": "943d4c3f.8b4fc",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Lq Sat 100 Pcnt\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 1400,
        "wires": [
            [
                "b4b87be6.ac2648"
            ]
        ]
    },
    {
        "id": "4e32371e.e2c948",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Lq Sat 150 Pcnt\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3730,
        "y": 1520,
        "wires": [
            [
                "44bd86cb.3ea668"
            ]
        ]
    },
    {
        "id": "ac5fb5b5.f22398",
        "type": "complete",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "scope": [
            "4c00f1aa.f0c6d"
        ],
        "uncaught": false,
        "x": 3510,
        "y": 200,
        "wires": [
            [
                "d70a59a7.2e1c68",
                "c14cd8c3.11ee38",
                "d813c0ef.52e79",
                "6c2b016d.007b7",
                "2e79c9c3.0a8ab6",
                "d0a6d29e.312d2",
                "76086326.77e1cc",
                "6d167b.64ffd984",
                "2fe72b39.af4dc4",
                "7aba77f9.b83958",
                "943d4c3f.8b4fc",
                "4e32371e.e2c948"
            ]
        ]
    },
    {
        "id": "bca3caea.1077d8",
        "type": "complete",
        "z": "43b51d90.0b47f4",
        "g": "365d864c.8c19ca",
        "name": "",
        "scope": [
            "4c00f1aa.f0c6d"
        ],
        "uncaught": false,
        "x": 1780,
        "y": 600,
        "wires": [
            [
                "19f2cc6b8799a89d",
                "229b82a9.6cb0fe",
                "7005eb09.6914a4",
                "b78bd570.359c38",
                "380f82f0.cf6c0e",
                "57d246fb.480188",
                "b9cd680b.1fd608",
                "63dc45d3.9b57ac",
                "6f87bde8b1a083c8",
                "aca2c323a793fb22",
                "59d388ef8c967338"
            ]
        ]
    },
    {
        "id": "c51d3efd.f4e56",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "",
        "property": "#:(memoryOnly)::Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3530,
        "y": 1640,
        "wires": [
            [
                "2f8f8eca.ba0612",
                "61f79ae5.eefeb4",
                "67b6ee74.1c4a4",
                "fcdcf329.63bc3",
                "497d94c.bdc1a6c",
                "c999db30.1d3468",
                "f298c6dd.5083b8",
                "cb1fc440.3cff48",
                "ae0588b7.1dc7d8",
                "195d27f8.7db898",
                "ab07e36a.c22f7",
                "4e92e4f1.bce65c",
                "deb023ab.58e51"
            ]
        ]
    },
    {
        "id": "11379727.11b049",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Configuración VSD",
        "links": [
            "97407954.a004c8",
            "89e59280.db7f"
        ],
        "x": 3445,
        "y": 1640,
        "wires": [
            [
                "c51d3efd.f4e56"
            ]
        ]
    },
    {
        "id": "2f8f8eca.ba0612",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld No Load",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_No_Load",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3720,
        "y": 240,
        "wires": [
            [
                "afa764bf.961b98"
            ]
        ]
    },
    {
        "id": "61f79ae5.eefeb4",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld Sat 10 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_Sat_10_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 360,
        "wires": [
            [
                "c0cd9ee1.f138c"
            ]
        ]
    },
    {
        "id": "67b6ee74.1c4a4",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld Sat 25 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_Sat_25_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 480,
        "wires": [
            [
                "68032ab5.936c34"
            ]
        ]
    },
    {
        "id": "fcdcf329.63bc3",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld Sat 50 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_Sat_50_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 600,
        "wires": [
            [
                "76d227a1.4092a8"
            ]
        ]
    },
    {
        "id": "497d94c.bdc1a6c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld Sat 100 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_Sat_100_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 720,
        "wires": [
            [
                "4e777453.fab6ec"
            ]
        ]
    },
    {
        "id": "c999db30.1d3468",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld Sat 150 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_Sat_150_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 840,
        "wires": [
            [
                "30dd0597.abe6aa"
            ]
        ]
    },
    {
        "id": "f298c6dd.5083b8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq No Load",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_No_Load",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3720,
        "y": 960,
        "wires": [
            [
                "1a469fe3.9dc9c"
            ]
        ]
    },
    {
        "id": "cb1fc440.3cff48",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq Sat 10 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_Sat_10_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 1080,
        "wires": [
            [
                "4d1c67aa.dc2248"
            ]
        ]
    },
    {
        "id": "ae0588b7.1dc7d8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq Sat 25 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_Sat_25_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 1200,
        "wires": [
            [
                "c04c9d7b.5b36c"
            ]
        ]
    },
    {
        "id": "195d27f8.7db898",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq Sat 50 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_Sat_50_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 1320,
        "wires": [
            [
                "2431a353.9e0c8c"
            ]
        ]
    },
    {
        "id": "ab07e36a.c22f7",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq Sat 100 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_Sat_100_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 1440,
        "wires": [
            [
                "b4b87be6.ac2648"
            ]
        ]
    },
    {
        "id": "4e92e4f1.bce65c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq Sat 150 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_Sat_150_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 1560,
        "wires": [
            [
                "44bd86cb.3ea668"
            ]
        ]
    },
    {
        "id": "5ef05ed0.a303c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld No Load",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Ld_No_Load",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4120,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "89ce92c3.63338",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld Sat 10 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Ld_Sat_10_Pcnt",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "218b3f86.c346",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld Sat 25 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Ld_Sat_25_Pcnt",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "1ca78a39.c747d6",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld Sat 50 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Ld_Sat_50_Pcnt",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "14ac4ee2.f8ead1",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld Sat 100 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Ld_Sat_100_Pcnt",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "600ba037.f6e12",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Ld Sat 150 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Ld_Sat_150_Pcnt",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "bae26ad7.a83a68",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq No Load",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Lq_No_Load",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4120,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "265502ba.24d3fe",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq Sat 10 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Lq_Sat_10_Pcnt",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "6adb755c.44760c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq Sat 25 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Lq_Sat_25_Pcnt",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "af470457.282ff8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq Sat 50 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Lq_Sat_50_Pcnt",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "a688bec7.25003",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq Sat 100 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Lq_Sat_100_Pcnt",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "b0861b20.d4a078",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "Lq Sat 150 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Lq_Sat_150_Pcnt",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "deb023ab.58e51",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "PWM Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.PWM_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3720,
        "y": 1640,
        "wires": [
            [
                "853ee1e8.4131"
            ]
        ]
    },
    {
        "id": "7b5ffe1a.15acc",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4af99851.bcfb28",
        "name": "PWM Freq",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.PWM_Freq",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4120,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "a2deff1c.93535",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld No Load",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_No_Load",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4520,
        "y": 200,
        "wires": [
            [
                "2978f575.d7200a"
            ]
        ]
    },
    {
        "id": "70cf390d.c5d878",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld Sat 10 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_Sat_10_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 240,
        "wires": [
            [
                "d90dfe81.b3cd8"
            ]
        ]
    },
    {
        "id": "66203a9.e0f74c4",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld Sat 25 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_Sat_25_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 280,
        "wires": [
            [
                "3e376c3a.fed3c4"
            ]
        ]
    },
    {
        "id": "54e04245.45a71c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld Sat 50 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_Sat_50_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 320,
        "wires": [
            [
                "c1c11f53.9f28b"
            ]
        ]
    },
    {
        "id": "a96921f8.2d297",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld Sat 100 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_Sat_100_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 360,
        "wires": [
            [
                "fe4cb2b6.9aa45"
            ]
        ]
    },
    {
        "id": "83dc64fd.2716d8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld Sat 150 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Ld_Sat_150_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 400,
        "wires": [
            [
                "7189cd97.69abc4"
            ]
        ]
    },
    {
        "id": "eccf049.e4737f8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq No Load",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_No_Load",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4520,
        "y": 440,
        "wires": [
            [
                "54d0530c.1bd45c"
            ]
        ]
    },
    {
        "id": "aa5d1a4e.f133c8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq Sat 10 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_Sat_10_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 480,
        "wires": [
            [
                "b25672f5.b0e48"
            ]
        ]
    },
    {
        "id": "92796a6e.3f2aa8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq Sat 25 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_Sat_25_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 520,
        "wires": [
            [
                "163b5dca.a43f02"
            ]
        ]
    },
    {
        "id": "1431de59.1732b2",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq Sat 50 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_Sat_50_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 560,
        "wires": [
            [
                "6f7317bf.168328"
            ]
        ]
    },
    {
        "id": "5a36e9b9.a20668",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq Sat 100 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_Sat_100_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 600,
        "wires": [
            [
                "74a0601c.5b8d4"
            ]
        ]
    },
    {
        "id": "65ee9c58.6d2aa4",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq Sat 150 Pcnt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Lq_Sat_150_Pcnt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 640,
        "wires": [
            [
                "a6c62c42.d33a6"
            ]
        ]
    },
    {
        "id": "bc9c2d06.cbf2",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "PWM Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.PWM_Freq",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4520,
        "y": 680,
        "wires": [
            [
                "44fb2423.875f7c"
            ]
        ]
    },
    {
        "id": "2978f575.d7200a",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld No Load",
        "env": [
            {
                "name": "Parameter",
                "value": "2015",
                "type": "num"
            }
        ],
        "x": 4740,
        "y": 200,
        "wires": [
            [
                "153fa58.ba59b5b"
            ],
            []
        ]
    },
    {
        "id": "d90dfe81.b3cd8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld Sat 10 Pcnt",
        "env": [
            {
                "name": "Parameter",
                "value": "2020",
                "type": "num"
            }
        ],
        "x": 4730,
        "y": 240,
        "wires": [
            [
                "369317f.d62bee8"
            ],
            []
        ]
    },
    {
        "id": "3e376c3a.fed3c4",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld Sat 25 Pcnt",
        "env": [
            {
                "name": "Parameter",
                "value": "2021",
                "type": "num"
            }
        ],
        "x": 4730,
        "y": 280,
        "wires": [
            [
                "b5914c17.a76a7"
            ],
            []
        ]
    },
    {
        "id": "c1c11f53.9f28b",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld Sat 50 Pcnt",
        "env": [
            {
                "name": "Parameter",
                "value": "2022",
                "type": "num"
            }
        ],
        "x": 4730,
        "y": 320,
        "wires": [
            [
                "ccb636f4.cf6b58"
            ],
            []
        ]
    },
    {
        "id": "fe4cb2b6.9aa45",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld Sat 100 Pcnt",
        "env": [
            {
                "name": "Parameter",
                "value": "2023",
                "type": "num"
            }
        ],
        "x": 4730,
        "y": 360,
        "wires": [
            [
                "b65ac1d.386484"
            ],
            []
        ]
    },
    {
        "id": "7189cd97.69abc4",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Ld Sat 150 Pcnt",
        "env": [
            {
                "name": "Parameter",
                "value": "2024",
                "type": "num"
            }
        ],
        "x": 4730,
        "y": 400,
        "wires": [
            [
                "99da96b7.007268"
            ],
            []
        ]
    },
    {
        "id": "54d0530c.1bd45c",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq No Load",
        "env": [
            {
                "name": "Parameter",
                "value": "2016",
                "type": "num"
            }
        ],
        "x": 4740,
        "y": 440,
        "wires": [
            [
                "bf2b565b.691fb8"
            ],
            []
        ]
    },
    {
        "id": "b25672f5.b0e48",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq Sat 10 Pcnt",
        "env": [
            {
                "name": "Parameter",
                "value": "2025",
                "type": "num"
            }
        ],
        "x": 4730,
        "y": 480,
        "wires": [
            [
                "ae74f8b0.f90d68"
            ],
            []
        ]
    },
    {
        "id": "163b5dca.a43f02",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq Sat 25 Pcnt",
        "env": [
            {
                "name": "Parameter",
                "value": "2026",
                "type": "num"
            }
        ],
        "x": 4730,
        "y": 520,
        "wires": [
            [
                "a98cf89e.3f41c8"
            ],
            []
        ]
    },
    {
        "id": "6f7317bf.168328",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq Sat 50 Pcnt",
        "env": [
            {
                "name": "Parameter",
                "value": "2027",
                "type": "num"
            }
        ],
        "x": 4730,
        "y": 560,
        "wires": [
            [
                "3e674474.0027cc"
            ],
            []
        ]
    },
    {
        "id": "74a0601c.5b8d4",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq Sat 100 Pcnt",
        "env": [
            {
                "name": "Parameter",
                "value": "2028",
                "type": "num"
            }
        ],
        "x": 4730,
        "y": 600,
        "wires": [
            [
                "babbfa5a.e55e98"
            ],
            []
        ]
    },
    {
        "id": "a6c62c42.d33a6",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "Lq Sat 150 Pcnt",
        "env": [
            {
                "name": "Parameter",
                "value": "2029",
                "type": "num"
            }
        ],
        "x": 4730,
        "y": 640,
        "wires": [
            [
                "7f64c136.0e4f7"
            ],
            []
        ]
    },
    {
        "id": "44fb2423.875f7c",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "PWM Frequency",
        "env": [
            {
                "name": "Parameter",
                "value": "38",
                "type": "num"
            }
        ],
        "x": 4720,
        "y": 680,
        "wires": [
            [
                "ed2f479a.b6db28"
            ],
            []
        ]
    },
    {
        "id": "ee0c9166.6012f",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Brand Selected",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.PMM_Mtr.Brand_Selected",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 700,
        "wires": [
            [
                "c7ac18ee.59a518"
            ]
        ]
    },
    {
        "id": "c7ac18ee.59a518",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Brand",
        "rules": [
            {
                "t": "set",
                "p": "C2S.PMM_Mtr.Brand",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3140,
        "y": 700,
        "wires": [
            [
                "97ab591ffc2044fc"
            ]
        ]
    },
    {
        "id": "de5b8de.ac8e57",
        "type": "complete",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "",
        "scope": [
            "d6814492.90c268"
        ],
        "uncaught": false,
        "x": 3510,
        "y": 2130,
        "wires": [
            [
                "16584a.4bbef7b7"
            ]
        ]
    },
    {
        "id": "64698b78.be6ca4",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "caa71678.3a5088"
        ],
        "x": 2745,
        "y": 260,
        "wires": [
            [
                "1cbf9dce.5bbb72"
            ]
        ]
    },
    {
        "id": "5c21db77.38e264",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "beda2309.0d15f"
        ],
        "x": 2745,
        "y": 300,
        "wires": [
            [
                "24f18299.bd639e"
            ]
        ]
    },
    {
        "id": "2ed9b06d.cb93",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "f54dc2c3.bffab"
        ],
        "x": 2745,
        "y": 340,
        "wires": [
            [
                "56473adc.bc2c04"
            ]
        ]
    },
    {
        "id": "c665f457.098dd8",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "828ccebb.964c1"
        ],
        "x": 2745,
        "y": 380,
        "wires": [
            [
                "863f77e9.8dae48"
            ]
        ]
    },
    {
        "id": "9f259535.982c38",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "45b89365.6d23cc"
        ],
        "x": 2745,
        "y": 420,
        "wires": [
            [
                "8b7e0eb6.80d92"
            ]
        ]
    },
    {
        "id": "8f382bd3.ee7d88",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "2500666.093ae9a"
        ],
        "x": 2745,
        "y": 460,
        "wires": [
            [
                "19b5942a.d0224c"
            ]
        ]
    },
    {
        "id": "90affdcc.d8c46",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "4d817e3c.c961c"
        ],
        "x": 2745,
        "y": 500,
        "wires": [
            [
                "9745de0b.84d6"
            ]
        ]
    },
    {
        "id": "5d7f867.cd65f78",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "813a133b.414c1",
            "18d54720f2fe40c1",
            "4951d5535ac2416b"
        ],
        "x": 2745,
        "y": 540,
        "wires": [
            [
                "86aa229e.4b6ab"
            ]
        ]
    },
    {
        "id": "32fbb07d.5fdd8",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "22341ae01ccb0b7c"
        ],
        "x": 2745,
        "y": 700,
        "wires": [
            [
                "ee0c9166.6012f"
            ]
        ]
    },
    {
        "id": "caa71678.3a5088",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "64698b78.be6ca4",
            "aa730b91.5646d8"
        ],
        "x": 3225,
        "y": 220,
        "wires": []
    },
    {
        "id": "beda2309.0d15f",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "5c21db77.38e264",
            "aa730b91.5646d8"
        ],
        "x": 3225,
        "y": 260,
        "wires": []
    },
    {
        "id": "f54dc2c3.bffab",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "2ed9b06d.cb93",
            "aa730b91.5646d8"
        ],
        "x": 3225,
        "y": 300,
        "wires": []
    },
    {
        "id": "828ccebb.964c1",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "c665f457.098dd8"
        ],
        "x": 3225,
        "y": 340,
        "wires": []
    },
    {
        "id": "45b89365.6d23cc",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "9f259535.982c38",
            "aa730b91.5646d8"
        ],
        "x": 3225,
        "y": 380,
        "wires": []
    },
    {
        "id": "2500666.093ae9a",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "8f382bd3.ee7d88",
            "aa730b91.5646d8"
        ],
        "x": 3225,
        "y": 420,
        "wires": []
    },
    {
        "id": "4d817e3c.c961c",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "90affdcc.d8c46",
            "aa730b91.5646d8"
        ],
        "x": 3225,
        "y": 460,
        "wires": []
    },
    {
        "id": "813a133b.414c1",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "5d7f867.cd65f78",
            "aa730b91.5646d8"
        ],
        "x": 3225,
        "y": 500,
        "wires": []
    },
    {
        "id": "edc3de2b.7764d",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Evento escritura VSD",
        "links": [
            "aa730b91.5646d8",
            "f2c07387c6f5e240"
        ],
        "x": 3225,
        "y": 540,
        "wires": []
    },
    {
        "id": "279bdd90.fb2742",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "bd17e5b9.9261f8",
        "name": "Escritura",
        "func": "var indexList   = context.get(\"indexList\",\"memoryOnly\")||[];\nvar rcList      = context.get(\"rcList\",\"memoryOnly\")||[];\nvar sum         = 0;\n\n// Indexar data\nif(indexList.indexOf(msg.parameter)== -1){\n    indexList.push(msg.parameter);\n    rcList.push(msg.rc.code == null ? 1 : msg.rc.code);\n}\n\n// Reiniciar Listas\nif(msg.payload == \"reset\"){\n\n    // Sumar elementos de la lista rcList\n    rcList.forEach(element => sum=sum+element);\n    node.status({fill:\"green\",shape:\"dot\",text:sum});\n\n    // Limpiar contexto\n    context.set(\"indexList\",[],\"memoryOnly\");\n    context.set(\"rcList\",[],\"memoryOnly\");\n    \n    if(sum != 0){\n        msg.payload = \"Error de escritura\";\n        \n    }\n    else{\n        msg.payload = \"Escritura exitosa\";\n    }\n    return msg;\n}\n\n// Actualizar contexto\ncontext.set(\"indexList\",indexList,\"memoryOnly\");\ncontext.set(\"rcList\",rcList,\"memoryOnly\");\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3860,
        "y": 2390,
        "wires": [
            [
                "73dc2505.42413c"
            ]
        ]
    },
    {
        "id": "97664a1c.3d18a8",
        "type": "trigger",
        "z": "43b51d90.0b47f4",
        "g": "bd17e5b9.9261f8",
        "name": "",
        "op1": "0",
        "op2": "reset",
        "op1type": "num",
        "op2type": "str",
        "duration": "4",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3720,
        "y": 2390,
        "wires": [
            [
                "279bdd90.fb2742"
            ]
        ]
    },
    {
        "id": "97d12c4e.c1f6",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "bd17e5b9.9261f8",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3530,
        "y": 2390,
        "wires": [
            [
                "97664a1c.3d18a8"
            ]
        ]
    },
    {
        "id": "d91115b3.73d618",
        "type": "delay",
        "z": "43b51d90.0b47f4",
        "g": "bd17e5b9.9261f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 3550,
        "y": 2430,
        "wires": [
            [
                "97664a1c.3d18a8"
            ]
        ]
    },
    {
        "id": "73dc2505.42413c",
        "type": "ui_toast",
        "z": "43b51d90.0b47f4",
        "g": "bd17e5b9.9261f8",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 4030,
        "y": 2390,
        "wires": []
    },
    {
        "id": "aa730b91.5646d8",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "bd17e5b9.9261f8",
        "name": "Evento escritura VSD",
        "links": [
            "caa71678.3a5088",
            "beda2309.0d15f",
            "f54dc2c3.bffab",
            "828ccebb.964c1",
            "45b89365.6d23cc",
            "2500666.093ae9a",
            "4d817e3c.c961c",
            "813a133b.414c1",
            "6907fd4.8d31404",
            "447308f.65180f8",
            "e26d490a.41f358",
            "b346d664.740438",
            "d24ccd06.fca8d",
            "5ae05e22.f0fdc",
            "a8842cd8.32111",
            "a4a750ad.e20f3",
            "515762f0.f3981c",
            "c9e3c42b.034f48",
            "91cb546d.d6f518",
            "20a0c8c5.d444d8",
            "9eb9ee4d.8a5ee",
            "a9bbcb5f.75e628",
            "2dc3ae2.b4b4252",
            "a1620c10.be3e7",
            "c2e28f90.5f874",
            "de27c84a.defcd8",
            "43d398b6.0feef8",
            "30635b5b.fe2734",
            "6161c997.a416c8",
            "df936049.05cc6",
            "b02ed6c.d535028",
            "f4b66ac0.43fc28",
            "153fa58.ba59b5b",
            "369317f.d62bee8",
            "b5914c17.a76a7",
            "ccb636f4.cf6b58",
            "b65ac1d.386484",
            "99da96b7.007268",
            "bf2b565b.691fb8",
            "ae74f8b0.f90d68",
            "a98cf89e.3f41c8",
            "3e674474.0027cc",
            "babbfa5a.e55e98",
            "7f64c136.0e4f7",
            "ed2f479a.b6db28",
            "edc3de2b.7764d",
            "5c0cd8be862826b8",
            "bbc093139403e3cf",
            "22341ae01ccb0b7c"
        ],
        "x": 3425,
        "y": 2390,
        "wires": [
            [
                "97d12c4e.c1f6",
                "d91115b3.73d618"
            ]
        ]
    },
    {
        "id": "6907fd4.8d31404",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "15a2e258.50303e"
        ],
        "x": 3225,
        "y": 1250,
        "wires": []
    },
    {
        "id": "447308f.65180f8",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "6c05251d.3cc84c"
        ],
        "x": 3225,
        "y": 1290,
        "wires": []
    },
    {
        "id": "e26d490a.41f358",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "d8621f59.3cffc"
        ],
        "x": 3225,
        "y": 1330,
        "wires": []
    },
    {
        "id": "b346d664.740438",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "55810d2a.c80474"
        ],
        "x": 3225,
        "y": 1370,
        "wires": []
    },
    {
        "id": "d24ccd06.fca8d",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "334eb42.adf5b4c"
        ],
        "x": 3225,
        "y": 1410,
        "wires": []
    },
    {
        "id": "5ae05e22.f0fdc",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "d50bec.189cd418"
        ],
        "x": 3225,
        "y": 1450,
        "wires": []
    },
    {
        "id": "a8842cd8.32111",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "23626d5b.56d2d2"
        ],
        "x": 3225,
        "y": 1490,
        "wires": []
    },
    {
        "id": "a4a750ad.e20f3",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "db5662ed.a16e4"
        ],
        "x": 3225,
        "y": 1530,
        "wires": []
    },
    {
        "id": "515762f0.f3981c",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "1d1061cb.2b143e"
        ],
        "x": 3225,
        "y": 1570,
        "wires": []
    },
    {
        "id": "c9e3c42b.034f48",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "e674f6d18b55af83"
        ],
        "x": 3225,
        "y": 1610,
        "wires": []
    },
    {
        "id": "15a2e258.50303e",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "6907fd4.8d31404"
        ],
        "x": 2745,
        "y": 1290,
        "wires": [
            [
                "c021296f.17dad8"
            ]
        ]
    },
    {
        "id": "6c05251d.3cc84c",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "447308f.65180f8"
        ],
        "x": 2745,
        "y": 1330,
        "wires": [
            [
                "f39bbd3b.4769a"
            ]
        ]
    },
    {
        "id": "d8621f59.3cffc",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "e26d490a.41f358"
        ],
        "x": 2745,
        "y": 1370,
        "wires": [
            [
                "ebc56bb1.140698"
            ]
        ]
    },
    {
        "id": "55810d2a.c80474",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "b346d664.740438"
        ],
        "x": 2745,
        "y": 1410,
        "wires": [
            [
                "7f3e34cf.429e6c"
            ]
        ]
    },
    {
        "id": "334eb42.adf5b4c",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "d24ccd06.fca8d"
        ],
        "x": 2745,
        "y": 1450,
        "wires": [
            [
                "f35ddccf.5a35c"
            ]
        ]
    },
    {
        "id": "d50bec.189cd418",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "5ae05e22.f0fdc"
        ],
        "x": 2745,
        "y": 1490,
        "wires": [
            [
                "16817136.af3cff"
            ]
        ]
    },
    {
        "id": "23626d5b.56d2d2",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "a8842cd8.32111"
        ],
        "x": 2745,
        "y": 1530,
        "wires": [
            [
                "23e3e38d.5a954c"
            ]
        ]
    },
    {
        "id": "db5662ed.a16e4",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "a4a750ad.e20f3"
        ],
        "x": 2745,
        "y": 1570,
        "wires": [
            [
                "df7917d4.57c688"
            ]
        ]
    },
    {
        "id": "1d1061cb.2b143e",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "515762f0.f3981c"
        ],
        "x": 2745,
        "y": 1610,
        "wires": [
            [
                "6e764326.6b1bbc"
            ]
        ]
    },
    {
        "id": "91cb546d.d6f518",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "3d6f0452.d8f0fc"
        ],
        "x": 3275,
        "y": 1760,
        "wires": []
    },
    {
        "id": "20a0c8c5.d444d8",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "8c80ee18.d43d2"
        ],
        "x": 3275,
        "y": 1800,
        "wires": []
    },
    {
        "id": "9eb9ee4d.8a5ee",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "56007926.5024e8"
        ],
        "x": 3275,
        "y": 1840,
        "wires": []
    },
    {
        "id": "a9bbcb5f.75e628",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "e674f6d18b55af83",
            "149595f046931340"
        ],
        "x": 3275,
        "y": 1880,
        "wires": []
    },
    {
        "id": "3d6f0452.d8f0fc",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "",
        "links": [
            "91cb546d.d6f518"
        ],
        "x": 2795,
        "y": 1800,
        "wires": [
            [
                "6e86298c.770778"
            ]
        ]
    },
    {
        "id": "8c80ee18.d43d2",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "",
        "links": [
            "20a0c8c5.d444d8"
        ],
        "x": 2795,
        "y": 1840,
        "wires": [
            [
                "e0303c1e.7edd9"
            ]
        ]
    },
    {
        "id": "56007926.5024e8",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "",
        "links": [
            "9eb9ee4d.8a5ee"
        ],
        "x": 2795,
        "y": 1880,
        "wires": [
            [
                "fa3568e9.0c3ec8"
            ]
        ]
    },
    {
        "id": "2dc3ae2.b4b4252",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "fb3775bd.41b018"
        ],
        "x": 3225,
        "y": 2030,
        "wires": []
    },
    {
        "id": "a1620c10.be3e7",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "fd4063c.445afa"
        ],
        "x": 3225,
        "y": 2070,
        "wires": []
    },
    {
        "id": "c2e28f90.5f874",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "e674f6d18b55af83"
        ],
        "x": 3225,
        "y": 2110,
        "wires": []
    },
    {
        "id": "fb3775bd.41b018",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "",
        "links": [
            "2dc3ae2.b4b4252"
        ],
        "x": 2745,
        "y": 2070,
        "wires": [
            [
                "a0f6257c.44c1b8"
            ]
        ]
    },
    {
        "id": "fd4063c.445afa",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "",
        "links": [
            "a1620c10.be3e7"
        ],
        "x": 2745,
        "y": 2110,
        "wires": [
            [
                "dbd07ace.b5eec8"
            ]
        ]
    },
    {
        "id": "de27c84a.defcd8",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "ed55550c.a9e878",
            "f94bb78206b6e905"
        ],
        "x": 3225,
        "y": 2300,
        "wires": []
    },
    {
        "id": "43d398b6.0feef8",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "846ec779.d5b4a8",
            "f94bb78206b6e905"
        ],
        "x": 3225,
        "y": 2340,
        "wires": []
    },
    {
        "id": "30635b5b.fe2734",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "39ee5ad0.f26776",
            "f94bb78206b6e905"
        ],
        "x": 3225,
        "y": 2380,
        "wires": []
    },
    {
        "id": "6161c997.a416c8",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "4de35d21.2223c4",
            "f94bb78206b6e905"
        ],
        "x": 3225,
        "y": 2420,
        "wires": []
    },
    {
        "id": "df936049.05cc6",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "85f7b858.bdbea8",
            "f94bb78206b6e905"
        ],
        "x": 3225,
        "y": 2460,
        "wires": []
    },
    {
        "id": "b02ed6c.d535028",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "d78b7a3f.686b58",
            "f94bb78206b6e905"
        ],
        "x": 3225,
        "y": 2500,
        "wires": []
    },
    {
        "id": "f4b66ac0.43fc28",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "e674f6d18b55af83",
            "f94bb78206b6e905"
        ],
        "x": 3225,
        "y": 2540,
        "wires": []
    },
    {
        "id": "ed55550c.a9e878",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "de27c84a.defcd8"
        ],
        "x": 2745,
        "y": 2340,
        "wires": [
            [
                "15fc1e52.e7f6c2"
            ]
        ]
    },
    {
        "id": "846ec779.d5b4a8",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "43d398b6.0feef8"
        ],
        "x": 2745,
        "y": 2380,
        "wires": [
            [
                "946844fc.d8dc68"
            ]
        ]
    },
    {
        "id": "39ee5ad0.f26776",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "30635b5b.fe2734"
        ],
        "x": 2745,
        "y": 2420,
        "wires": [
            [
                "2bd65955.58afc6"
            ]
        ]
    },
    {
        "id": "4de35d21.2223c4",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "6161c997.a416c8"
        ],
        "x": 2745,
        "y": 2460,
        "wires": [
            [
                "a85fb5ca.b44918"
            ]
        ]
    },
    {
        "id": "85f7b858.bdbea8",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "df936049.05cc6"
        ],
        "x": 2745,
        "y": 2500,
        "wires": [
            [
                "3c0d8e06.367122"
            ]
        ]
    },
    {
        "id": "d78b7a3f.686b58",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "b02ed6c.d535028"
        ],
        "x": 2745,
        "y": 2540,
        "wires": [
            [
                "5f074c.ea3398b4"
            ]
        ]
    },
    {
        "id": "153fa58.ba59b5b",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "bb5bfb8c.ba5108"
        ],
        "x": 4845,
        "y": 200,
        "wires": []
    },
    {
        "id": "369317f.d62bee8",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "c12e9bd1.f6c148"
        ],
        "x": 4845,
        "y": 240,
        "wires": []
    },
    {
        "id": "b5914c17.a76a7",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "42553824.67bda8"
        ],
        "x": 4845,
        "y": 280,
        "wires": []
    },
    {
        "id": "ccb636f4.cf6b58",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "8106ac05.7996"
        ],
        "x": 4845,
        "y": 320,
        "wires": []
    },
    {
        "id": "b65ac1d.386484",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "1f5a5605.0e961a"
        ],
        "x": 4845,
        "y": 360,
        "wires": []
    },
    {
        "id": "99da96b7.007268",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "56ad5dac.23dfd4"
        ],
        "x": 4845,
        "y": 400,
        "wires": []
    },
    {
        "id": "bf2b565b.691fb8",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "21e4ac73.634a74"
        ],
        "x": 4845,
        "y": 440,
        "wires": []
    },
    {
        "id": "ae74f8b0.f90d68",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "5a35d66c.5a19f8"
        ],
        "x": 4845,
        "y": 480,
        "wires": []
    },
    {
        "id": "a98cf89e.3f41c8",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "32f13493.0df5ac"
        ],
        "x": 4845,
        "y": 520,
        "wires": []
    },
    {
        "id": "3e674474.0027cc",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "62306322.3aaeec"
        ],
        "x": 4845,
        "y": 560,
        "wires": []
    },
    {
        "id": "babbfa5a.e55e98",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "f98edab7.69c4a8"
        ],
        "x": 4845,
        "y": 600,
        "wires": []
    },
    {
        "id": "7f64c136.0e4f7",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "4f348ef0.41c4b"
        ],
        "x": 4845,
        "y": 640,
        "wires": []
    },
    {
        "id": "ed2f479a.b6db28",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "aa730b91.5646d8",
            "e674f6d18b55af83"
        ],
        "x": 4845,
        "y": 680,
        "wires": []
    },
    {
        "id": "bb5bfb8c.ba5108",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "153fa58.ba59b5b"
        ],
        "x": 4375,
        "y": 240,
        "wires": [
            [
                "70cf390d.c5d878"
            ]
        ]
    },
    {
        "id": "c12e9bd1.f6c148",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "369317f.d62bee8"
        ],
        "x": 4375,
        "y": 280,
        "wires": [
            [
                "66203a9.e0f74c4"
            ]
        ]
    },
    {
        "id": "42553824.67bda8",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "b5914c17.a76a7"
        ],
        "x": 4375,
        "y": 320,
        "wires": [
            [
                "54e04245.45a71c"
            ]
        ]
    },
    {
        "id": "8106ac05.7996",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "ccb636f4.cf6b58"
        ],
        "x": 4375,
        "y": 360,
        "wires": [
            [
                "a96921f8.2d297"
            ]
        ]
    },
    {
        "id": "1f5a5605.0e961a",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "b65ac1d.386484"
        ],
        "x": 4375,
        "y": 400,
        "wires": [
            [
                "83dc64fd.2716d8"
            ]
        ]
    },
    {
        "id": "56ad5dac.23dfd4",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "99da96b7.007268"
        ],
        "x": 4375,
        "y": 440,
        "wires": [
            [
                "eccf049.e4737f8"
            ]
        ]
    },
    {
        "id": "21e4ac73.634a74",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "bf2b565b.691fb8"
        ],
        "x": 4375,
        "y": 480,
        "wires": [
            [
                "aa5d1a4e.f133c8"
            ]
        ]
    },
    {
        "id": "5a35d66c.5a19f8",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "ae74f8b0.f90d68"
        ],
        "x": 4375,
        "y": 520,
        "wires": [
            [
                "92796a6e.3f2aa8"
            ]
        ]
    },
    {
        "id": "32f13493.0df5ac",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "a98cf89e.3f41c8"
        ],
        "x": 4375,
        "y": 560,
        "wires": [
            [
                "1431de59.1732b2"
            ]
        ]
    },
    {
        "id": "62306322.3aaeec",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "3e674474.0027cc"
        ],
        "x": 4375,
        "y": 600,
        "wires": [
            [
                "5a36e9b9.a20668"
            ]
        ]
    },
    {
        "id": "f98edab7.69c4a8",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "babbfa5a.e55e98"
        ],
        "x": 4375,
        "y": 640,
        "wires": [
            [
                "65ee9c58.6d2aa4"
            ]
        ]
    },
    {
        "id": "4f348ef0.41c4b",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "7f64c136.0e4f7"
        ],
        "x": 4375,
        "y": 680,
        "wires": [
            [
                "bc9c2d06.cbf2"
            ]
        ]
    },
    {
        "id": "978a0bd9172de45f",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "BORETS 45A3440V",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Parámetro\":27,\"Descripción\":\"Motor NP Hz\",\"Valor\":120},{\"Parámetro\":28,\"Descripción\":\"Motor NP RPM\",\"Valor\":3600},{\"Parámetro\":30,\"Descripción\":\"Motor NP Power\",\"Valor\":300},{\"Parámetro\":31,\"Descripción\":\"Motor Poles\",\"Valor\":4},{\"Parámetro\":2010,\"Descripción\":\"Mtr NL Voltage\",\"Valor\":2292},{\"Parámetro\":2011,\"Descripción\":\"Mtr FL Voltage\",\"Valor\":3440},{\"Parámetro\":2012,\"Descripción\":\"MtrNormalDutyAmp\",\"Valor\":45},{\"Parámetro\":2013,\"Descripción\":\"Stator Resistance\",\"Valor\":1.35},{\"Parámetro\":2014,\"Descripción\":\"Total kgm2\",\"Valor\":0.16},{\"Parámetro\":2015,\"Descripción\":\"Ld No Load\",\"Valor\":46.2},{\"Parámetro\":2016,\"Descripción\":\"Lq No Load\",\"Valor\":127.05},{\"Parámetro\":2017,\"Descripción\":\"Mtr Efficiency\",\"Valor\":93},{\"Parámetro\":2020,\"Descripción\":\"Ld Sat 10 Pcnt\",\"Valor\":95},{\"Parámetro\":2021,\"Descripción\":\"Ld Sat 25 Pcnt\",\"Valor\":88},{\"Parámetro\":2022,\"Descripción\":\"Ld Sat 50 Pcnt\",\"Valor\":81},{\"Parámetro\":2023,\"Descripción\":\"Ld Sat 100 Pcnt\",\"Valor\":74},{\"Parámetro\":2024,\"Descripción\":\"Ld Sat 150 Pcnt\",\"Valor\":73},{\"Parámetro\":2025,\"Descripción\":\"Lq Sat 10 Pcnt\",\"Valor\":88},{\"Parámetro\":2026,\"Descripción\":\"Lq Sat 25 Pcnt\",\"Valor\":74},{\"Parámetro\":2027,\"Descripción\":\"Lq Sat 50 Pcnt\",\"Valor\":59},{\"Parámetro\":2028,\"Descripción\":\"Lq Sat 100 Pcnt\",\"Valor\":51},{\"Parámetro\":2029,\"Descripción\":\"Lq Sat 150 Pcnt\",\"Valor\":51}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3910,
        "y": 1910,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "1eb3abc782ede49a",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "BAKER 49A2575V",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Parámetro\":27,\"Descripción\":\"Motor NP Hz\",\"Valor\":120},{\"Parámetro\":28,\"Descripción\":\"Motor NP RPM\",\"Valor\":3600},{\"Parámetro\":30,\"Descripción\":\"Motor NP Power\",\"Valor\":250},{\"Parámetro\":31,\"Descripción\":\"Motor Poles\",\"Valor\":4},{\"Parámetro\":2010,\"Descripción\":\"Mtr NL Voltage\",\"Valor\":2178},{\"Parámetro\":2011,\"Descripción\":\"Mtr FL Voltage\",\"Valor\":2575},{\"Parámetro\":2012,\"Descripción\":\"MtrNormalDutyAmp\",\"Valor\":49},{\"Parámetro\":2013,\"Descripción\":\"Stator Resistance\",\"Valor\":2.17},{\"Parámetro\":2014,\"Descripción\":\"Total kgm2\",\"Valor\":0.056},{\"Parámetro\":2015,\"Descripción\":\"Ld No Load\",\"Valor\":20.395},{\"Parámetro\":2016,\"Descripción\":\"Lq No Load\",\"Valor\":28.333},{\"Parámetro\":2017,\"Descripción\":\"Mtr Efficiency\",\"Valor\":92},{\"Parámetro\":2020,\"Descripción\":\"Ld Sat 10 Pcnt\",\"Valor\":99},{\"Parámetro\":2021,\"Descripción\":\"Ld Sat 25 Pcnt\",\"Valor\":96},{\"Parámetro\":2022,\"Descripción\":\"Ld Sat 50 Pcnt\",\"Valor\":90},{\"Parámetro\":2023,\"Descripción\":\"Ld Sat 100 Pcnt\",\"Valor\":76},{\"Parámetro\":2024,\"Descripción\":\"Ld Sat 150 Pcnt\",\"Valor\":72},{\"Parámetro\":2025,\"Descripción\":\"Lq Sat 10 Pcnt\",\"Valor\":99},{\"Parámetro\":2026,\"Descripción\":\"Lq Sat 25 Pcnt\",\"Valor\":96},{\"Parámetro\":2027,\"Descripción\":\"Lq Sat 50 Pcnt\",\"Valor\":89},{\"Parámetro\":2028,\"Descripción\":\"Lq Sat 100 Pcnt\",\"Valor\":72},{\"Parámetro\":2029,\"Descripción\":\"Lq Sat 150 Pcnt\",\"Valor\":64}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3900,
        "y": 1950,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "3f3a83c71b2f5a67",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "78a8be83.7018c",
        "name": "SLB 51.4A2600V",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Parámetro\":27,\"Descripción\":\"Motor NP Hz\",\"Valor\":50},{\"Parámetro\":28,\"Descripción\":\"Motor NP RPM\",\"Valor\":3000},{\"Parámetro\":30,\"Descripción\":\"Motor NP Power\",\"Valor\":200},{\"Parámetro\":31,\"Descripción\":\"Motor Poles\",\"Valor\":2},{\"Parámetro\":2010,\"Descripción\":\"Mtr NL Voltage\",\"Valor\":2080},{\"Parámetro\":2011,\"Descripción\":\"Mtr FL Voltage\",\"Valor\":2600},{\"Parámetro\":2012,\"Descripción\":\"MtrNormalDutyAmp\",\"Valor\":51.4},{\"Parámetro\":2013,\"Descripción\":\"Stator Resistance\",\"Valor\":1.15},{\"Parámetro\":2014,\"Descripción\":\"Total kgm2\",\"Valor\":0.115},{\"Parámetro\":2015,\"Descripción\":\"Ld No Load\",\"Valor\":29.6},{\"Parámetro\":2016,\"Descripción\":\"Lq No Load\",\"Valor\":52.4},{\"Parámetro\":2017,\"Descripción\":\"Mtr Efficiency\",\"Valor\":92},{\"Parámetro\":2020,\"Descripción\":\"Ld Sat 10 Pcnt\",\"Valor\":96},{\"Parámetro\":2021,\"Descripción\":\"Ld Sat 25 Pcnt\",\"Valor\":91},{\"Parámetro\":2022,\"Descripción\":\"Ld Sat 50 Pcnt\",\"Valor\":82},{\"Parámetro\":2023,\"Descripción\":\"Ld Sat 100 Pcnt\",\"Valor\":67},{\"Parámetro\":2024,\"Descripción\":\"Ld Sat 150 Pcnt\",\"Valor\":52},{\"Parámetro\":2025,\"Descripción\":\"Lq Sat 10 Pcnt\",\"Valor\":94},{\"Parámetro\":2026,\"Descripción\":\"Lq Sat 25 Pcnt\",\"Valor\":86},{\"Parámetro\":2027,\"Descripción\":\"Lq Sat 50 Pcnt\",\"Valor\":75},{\"Parámetro\":2028,\"Descripción\":\"Lq Sat 100 Pcnt\",\"Valor\":58},{\"Parámetro\":2029,\"Descripción\":\"Lq Sat 150 Pcnt\",\"Valor\":42}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3900,
        "y": 1990,
        "wires": [
            [
                "e743a599.f2f618"
            ]
        ]
    },
    {
        "id": "b09b1a2b8790a0bc",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "898b50d28d329e1e"
        ],
        "x": 2695,
        "y": 280,
        "wires": []
    },
    {
        "id": "97ab591ffc2044fc",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "e674f6d18b55af83"
        ],
        "x": 2705,
        "y": 740,
        "wires": []
    },
    {
        "id": "6271ec419c9975fc",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "44ee5bb3.49b264",
        "name": "",
        "links": [
            "898b50d28d329e1e"
        ],
        "x": 2705,
        "y": 1310,
        "wires": []
    },
    {
        "id": "55372f1ea71702ea",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "efe6d3f.f10193",
        "name": "",
        "links": [
            "898b50d28d329e1e"
        ],
        "x": 2755,
        "y": 1820,
        "wires": []
    },
    {
        "id": "7cda2e346e20ca45",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "826b087f.5615a8",
        "name": "",
        "links": [
            "898b50d28d329e1e"
        ],
        "x": 2705,
        "y": 2090,
        "wires": []
    },
    {
        "id": "e3c99a130078517c",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "baaa353b.511268",
        "name": "",
        "links": [
            "898b50d28d329e1e"
        ],
        "x": 2705,
        "y": 2360,
        "wires": []
    },
    {
        "id": "487147d15f5c304a",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "9f627758.670cd8",
        "name": "",
        "links": [
            "898b50d28d329e1e"
        ],
        "x": 4335,
        "y": 260,
        "wires": []
    },
    {
        "id": "47d4911e4ea82005",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "54254b6e.789ca4",
        "name": "Disabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 2140,
        "wires": [
            [
                "291937e923ec846c"
            ]
        ]
    },
    {
        "id": "291937e923ec846c",
        "type": "ui_dropdown",
        "z": "43b51d90.0b47f4",
        "g": "54254b6e.789ca4",
        "name": "Estado Sintonización",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "5bbc6e36.6f635",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Ready",
                "value": 0,
                "type": "num"
            },
            {
                "label": "CurRegGains",
                "value": 1,
                "type": "num"
            },
            {
                "label": "NoLoadVolt",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Aborted",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "x": 600,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "a56650d20cbb0e90",
        "type": "inject",
        "z": "43b51d90.0b47f4",
        "g": "54254b6e.789ca4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#:(memoryOnly)::C2S.Tunning_Select",
        "payloadType": "global",
        "x": 210,
        "y": 2140,
        "wires": [
            [
                "47d4911e4ea82005"
            ]
        ]
    },
    {
        "id": "34d023e6cfc76baf",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "54254b6e.789ca4",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 135,
        "y": 2180,
        "wires": [
            [
                "26320c2147a2f648"
            ]
        ]
    },
    {
        "id": "26320c2147a2f648",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "54254b6e.789ca4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 2180,
        "wires": [
            [
                "47d4911e4ea82005"
            ]
        ]
    },
    {
        "id": "3b69a862993ee94f",
        "type": "inject",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "LoopControl",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "C2S.Motor_Control.Nameplate.LoopControl",
        "payloadType": "global",
        "x": 2880,
        "y": 740,
        "wires": [
            [
                "9b58f7c59517e634"
            ]
        ]
    },
    {
        "id": "9b58f7c59517e634",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "property": "C2S.Motor_Control.Nameplate.LoopControl",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "#:(memoryOnly)::C2S.Implicit.PMM_OL_Select",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3020,
        "y": 740,
        "wires": [
            [
                "42771e59be201413"
            ]
        ]
    },
    {
        "id": "6d578eea713357b0",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Send Loop control",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.LoopControl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 780,
        "wires": [
            [
                "75e582863a4f60b7"
            ]
        ]
    },
    {
        "id": "75e582863a4f60b7",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Loop control",
        "env": [
            {
                "name": "Parameter",
                "value": "2087",
                "type": "num"
            },
            {
                "name": "Datatype",
                "value": "DINT",
                "type": "str"
            }
        ],
        "x": 3080,
        "y": 780,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "42771e59be201413",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "property": "C2S.Motor_Control.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "PMM",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3140,
        "y": 740,
        "wires": [
            [
                "6d578eea713357b0"
            ]
        ]
    },
    {
        "id": "19f2cc6b8799a89d",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Mtr Efficiency\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 380,
        "wires": [
            [
                "b8a561cb8ccefea8"
            ]
        ]
    },
    {
        "id": "8730df877455bf91",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Stator Resistance",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Stator_Resistance",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 660,
        "wires": [
            [
                "302ec7ea295a297b"
            ]
        ]
    },
    {
        "id": "3dd25f58f5e4d540",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Mtr Efficiency",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Mtr_Efficiency",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 620,
        "wires": [
            [
                "b20e4f163400933a"
            ]
        ]
    },
    {
        "id": "d2b98dd2b82097dc",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Total kgm2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Total_kgm2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 580,
        "wires": [
            [
                "cc8a2c6b9280aaba"
            ]
        ]
    },
    {
        "id": "f2c07387c6f5e240",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "18d54720f2fe40c1",
            "4951d5535ac2416b",
            "edc3de2b.7764d"
        ],
        "x": 2745,
        "y": 580,
        "wires": [
            [
                "d2b98dd2b82097dc"
            ]
        ]
    },
    {
        "id": "543a9fecad88de6b",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "18d54720f2fe40c1",
            "4951d5535ac2416b",
            "5c0cd8be862826b8"
        ],
        "x": 2745,
        "y": 620,
        "wires": [
            [
                "3dd25f58f5e4d540"
            ]
        ]
    },
    {
        "id": "99bd60527766f478",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "",
        "links": [
            "18d54720f2fe40c1",
            "4951d5535ac2416b",
            "bbc093139403e3cf"
        ],
        "x": 2745,
        "y": 660,
        "wires": [
            [
                "8730df877455bf91"
            ]
        ]
    },
    {
        "id": "cc8a2c6b9280aaba",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Total kgm2",
        "env": [
            {
                "name": "Parameter",
                "value": "2014",
                "type": "num"
            }
        ],
        "x": 3120,
        "y": 580,
        "wires": [
            [
                "5c0cd8be862826b8"
            ],
            []
        ]
    },
    {
        "id": "b20e4f163400933a",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Mtr Efficiency",
        "env": [
            {
                "name": "Parameter",
                "value": "2017",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 620,
        "wires": [
            [
                "bbc093139403e3cf"
            ],
            []
        ]
    },
    {
        "id": "302ec7ea295a297b",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Stator Resistnce",
        "env": [
            {
                "name": "Parameter",
                "value": "2013",
                "type": "num"
            }
        ],
        "x": 3110,
        "y": 660,
        "wires": [
            [
                "22341ae01ccb0b7c"
            ],
            []
        ]
    },
    {
        "id": "5c0cd8be862826b8",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Evento escritura VSD",
        "links": [
            "aa730b91.5646d8",
            "543a9fecad88de6b"
        ],
        "x": 3225,
        "y": 580,
        "wires": []
    },
    {
        "id": "bbc093139403e3cf",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Evento escritura VSD",
        "links": [
            "aa730b91.5646d8",
            "99bd60527766f478"
        ],
        "x": 3225,
        "y": 620,
        "wires": []
    },
    {
        "id": "22341ae01ccb0b7c",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "e5ce125e.59232",
        "name": "Evento escritura VSD",
        "links": [
            "aa730b91.5646d8",
            "32fbb07d.5fdd8"
        ],
        "x": 3225,
        "y": 660,
        "wires": []
    },
    {
        "id": "106ca9e625394352",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "IM",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PMM",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 2320,
        "wires": [
            [
                "9cdf3802172b71cc"
            ],
            [
                "a28622130c14789d"
            ]
        ]
    },
    {
        "id": "1b6d3ebacefe3d37",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "links": [
            "8a17d991.081178",
            "805762db.d27b7"
        ],
        "x": 955,
        "y": 2320,
        "wires": []
    },
    {
        "id": "9cdf3802172b71cc",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "IM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"group\":{   \t        \"hide\":[\"Configuración_VSD_NavPMM\",\t                \"Configuración_VSD_Datos_de_motor\",\t                \"Configuración_VSD_NavAjustesRef\",\t                \"Configuración_VSD_Frecuencia_LS\",\t                \"Configuración_VSD_Reg._Velocidad\",\t                \"Configuración_VSD_Sintonización\",\t                \"Configuración_VSD_Datos_de_transformador\",\t                \"Configuración_VSD_Datos_Filtro-Cable\",\t                \"Configuración_VSD_NavDatos_de_motor\",\t                \"Configuración_VSD_Curvas_de_saturación\"\t        ],\t        \"show\":[\"Configuración_VSD_NavIM\"]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 2300,
        "wires": [
            [
                "1b6d3ebacefe3d37",
                "2860f506c52efbc2"
            ]
        ]
    },
    {
        "id": "a28622130c14789d",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "d": true,
        "g": "0474082dbe49e1c2",
        "name": "PMM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"group\":{   \t        \"hide\":[\"Configuración_VSD_NavIM\",\t                \"Configuración_VSD_Placa_de_motor\",\t                \"Configuración_VSD_Voltios_Hertz\",\t                \"Configuración_VSD_Relación_de_Transformación\"\t        ],\t        \"show\":[\"Configuración_VSD_NavPMM\"]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 2340,
        "wires": [
            [
                "1b6d3ebacefe3d37",
                "63243c41273cf7d9"
            ]
        ]
    },
    {
        "id": "434bc2a7ef4648fe",
        "type": "ui_template",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "group": "131a527672e0b4a0",
        "name": "Menú PMM",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n    \n  </head>\n  <body>\n    <!-- Navigation bar -->\n    <nav>\n      <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n        <a class=\"nav-item nav-link active\" id=\"nav-DatosMotor-tab\" data-toggle=\"tab\" href=\"#nav-DatosMotor\" role=\"tab\" aria-controls=\"nav-DatosMotor\" aria-selected=\"true\" ng-click=\"send({payload:DatosMotor()})\">Datos de motor</a>\n        <a class=\"nav-item nav-link\" id=\"nav-RampsLimits-tab\" data-toggle=\"tab\" href=\"#nav-RampsLimits\" role=\"tab\" aria-controls=\"nav-RampsLimits\" aria-selected=\"false\" ng-click=\"send({payload:RampsLimits()})\">Rampas y Límites</a>\n        <a class=\"nav-item nav-link\" id=\"nav-DatosFiltroCable-tab\" data-toggle=\"tab\" href=\"#nav-DatosFiltroCable\" role=\"tab\" aria-controls=\"nav-DatosFiltroCable\" aria-selected=\"false\" ng-click=\"send({payload:DatosFiltroCable()})\">Datos Filtro/Cable</a>\n        <a class=\"nav-item nav-link\" id=\"nav-DatosTX-tab\" data-toggle=\"tab\" href=\"#nav-DatosTX\" role=\"tab\" aria-controls=\"nav-DatosTX\" aria-selected=\"false\" ng-click=\"send({payload:DatosTX()})\">Datos TX</a>\n        <a class=\"nav-item nav-link\" id=\"nav-AjustesRefuerzo-tab\" data-toggle=\"tab\" href=\"#nav-AjustesRefuerzo\" role=\"tab\" aria-controls=\"nav-AjustesRefuerzo\" aria-selected=\"false\" ng-click=\"send({payload:AjustesRefuerzo()})\">Ajuste de Refuerzo</a>\n      </div>\n    </nav>\n\n    <script>\n        this.scope.DatosMotor = function() { return \"DatosMotor\"; };\n        this.scope.RampsLimits = function() { return \"RampsLimits\"; };\n        this.scope.AjustesRefuerzo = function() { return \"AjustesRefuerzo\"; };\n        this.scope.DatosTX = function() { return \"DatosTX\"; };\n        this.scope.DatosFiltroCable = function() { return \"DatosFiltroCable\"; };\n        \n    </script>\n    \n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n  </body>\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 400,
        "y": 2600,
        "wires": [
            [
                "e47d9aae66b9b7ad"
            ]
        ]
    },
    {
        "id": "e47d9aae66b9b7ad",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "PMM",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "DatosMotor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RampsLimits",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DatosTX",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DatosFiltroCable",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AjustesRefuerzo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 620,
        "y": 2600,
        "wires": [
            [
                "cceaec3f0ca53e04"
            ],
            [
                "57d065564d629038"
            ],
            [
                "8ae59eea10204a4f"
            ],
            [
                "d2853f7de9a85224"
            ],
            [
                "9d0fffcb9a325d70"
            ]
        ]
    },
    {
        "id": "57d065564d629038",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Ramps y Límites",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Configuración_VSD_Datos_de_motor\",\t                \"Configuración_VSD_NavAjustesRef\",\t                \"Configuración_VSD_Frecuencia_LS\",\t                \"Configuración_VSD_Reg._Velocidad\",\t                \"Configuración_VSD_Sintonización\",\t                \"Configuración_VSD_Datos_de_transformador\",\t                \"Configuración_VSD_Datos_Filtro-Cable\",\t                \"Configuración_VSD_NavDatos_de_motor\",\t                \"Configuración_VSD_Curvas_de_saturación\"],\t       \"show\":[ \"Configuración_VSD_Rampas\",\t                \"Configuración_VSD_Límites\",\t                \"Configuración_VSD_Rampa_prolongada\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 2560,
        "wires": [
            [
                "f95e46ccd8ac066d"
            ]
        ]
    },
    {
        "id": "f95e46ccd8ac066d",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "links": [
            "8a17d991.081178",
            "805762db.d27b7"
        ],
        "x": 1025,
        "y": 2560,
        "wires": []
    },
    {
        "id": "19c4a03f21911a68",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "links": [
            "c8b332bad477e957",
            "37e10dd1.2d4812",
            "d84564ddc8ed83bf"
        ],
        "x": 1135,
        "y": 2280,
        "wires": []
    },
    {
        "id": "2860f506c52efbc2",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "name",
                "pt": "msg",
                "to": "Configuración VSD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2280,
        "wires": [
            [
                "19c4a03f21911a68"
            ]
        ]
    },
    {
        "id": "63243c41273cf7d9",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "name",
                "pt": "msg",
                "to": "Configuración VSD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2360,
        "wires": [
            [
                "cb8e42aa56a6b2ce"
            ]
        ]
    },
    {
        "id": "cb8e42aa56a6b2ce",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "links": [
            "4afcbaac77839321"
        ],
        "x": 1135,
        "y": 2360,
        "wires": []
    },
    {
        "id": "cceaec3f0ca53e04",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Placa de Motor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Configuración_VSD_NavAjustesRef\",\t                \"Configuración_VSD_Frecuencia_LS\",\t                \"Configuración_VSD_Reg._Velocidad\",\t                \"Configuración_VSD_Sintonización\",\t                \"Configuración_VSD_Rampas\",\t                \"Configuración_VSD_Límites\",\t                \"Configuración_VSD_Rampa_prolongada\",\t                \"Configuración_VSD_Datos_de_transformador\",\t                \"Configuración_VSD_Datos_Filtro-Cable\"],\t                \t       \"show\":[ \"Configuración_VSD_Datos_de_motor\",\t                \"Configuración_VSD_NavDatos_de_motor\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2520,
        "wires": [
            [
                "f95e46ccd8ac066d",
                "c71541cb5e570e62"
            ]
        ]
    },
    {
        "id": "4afcbaac77839321",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "links": [
            "cb8e42aa56a6b2ce"
        ],
        "x": 655,
        "y": 2520,
        "wires": [
            [
                "cceaec3f0ca53e04"
            ]
        ]
    },
    {
        "id": "9d0fffcb9a325d70",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Ajustes de refuerzo",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Configuración_VSD_Datos_de_motor\",\t                \"Configuración_VSD_Rampas\",\t                \"Configuración_VSD_Límites\",\t                \"Configuración_VSD_Rampa_prolongada\",\t                \"Configuración_VSD_Datos_de_transformador\",\t                \"Configuración_VSD_Datos_Filtro-Cable\",\t                \"Configuración_VSD_NavDatos_de_motor\",\t                \"Configuración_VSD_Curvas_de_saturación\"],\t       \"show\":[ \"Configuración_VSD_NavAjustesRef\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 2680,
        "wires": [
            [
                "f95e46ccd8ac066d",
                "20ba747923598475"
            ]
        ]
    },
    {
        "id": "f21eae2ca8cf2e94",
        "type": "ui_template",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "group": "7dbed15a02aec33a",
        "name": "NavAjustesRef",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n    \n  </head>\n  <body>\n    <!-- Navigation bar -->\n    <nav>\n      <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n        <a class=\"nav-item nav-link active\" id=\"nav-FreqLS-tab\" data-toggle=\"tab\" href=\"#nav-FreqLS\" role=\"tab\" aria-controls=\"nav-FreqLS\" aria-selected=\"true\" ng-click=\"send({payload:FreqLS()})\">Frecuencia LS</a>\n        <a class=\"nav-item nav-link\" id=\"nav-RegVel-tab\" data-toggle=\"tab\" href=\"#nav-RegVel\" role=\"tab\" aria-controls=\"nav-RegVel\" aria-selected=\"false\" ng-click=\"send({payload:RegVel()})\">Reg. Velocidad</a>\n        <a class=\"nav-item nav-link\" id=\"nav-Sintonizacion-tab\" data-toggle=\"tab\" href=\"#nav-Sintonizacion\" role=\"tab\" aria-controls=\"nav-Sintonizacion\" aria-selected=\"false\" ng-click=\"send({payload:Sintonizacion()})\">Sintonización</a>\n      </div>\n    </nav>\n\n    <script>\n        this.scope.FreqLS = function() { return \"FreqLS\"; };\n        this.scope.RegVel = function() { return \"RegVel\"; };\n        this.scope.Sintonizacion = function() { return \"Sintonizacion\"; };\n    </script>\n    \n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n  </body>\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 410,
        "y": 2760,
        "wires": [
            [
                "f16f772e573fd5ce"
            ]
        ]
    },
    {
        "id": "f16f772e573fd5ce",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Ajustes",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FreqLS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RegVel",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Sintonizacion",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 2760,
        "wires": [
            [
                "20ba747923598475"
            ],
            [
                "6b796b9d0ec051e0"
            ],
            [
                "9d2e714d2884e2b7"
            ]
        ]
    },
    {
        "id": "20ba747923598475",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Freq LS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"group\":{   \t        \"hide\":[\t                \"Configuración_VSD_Reg._Velocidad\",\t                \"Configuración_VSD_Sintonización\"],\t        \"show\":[\t                \"Configuración_VSD_Frecuencia_LS\"\t        ]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 2720,
        "wires": [
            [
                "3cbd8b298714a327"
            ]
        ]
    },
    {
        "id": "3cbd8b298714a327",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "links": [
            "8a17d991.081178",
            "805762db.d27b7"
        ],
        "x": 1025,
        "y": 2800,
        "wires": []
    },
    {
        "id": "6b796b9d0ec051e0",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Reg. Velocidad",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"group\":{   \t        \"hide\":[\t                \"Configuración_VSD_Frecuencia_LS\",\t                \"Configuración_VSD_Sintonización\"],\t        \"show\":[\t                \"Configuración_VSD_Reg._Velocidad\"\t        ]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2760,
        "wires": [
            [
                "3cbd8b298714a327"
            ]
        ]
    },
    {
        "id": "9d2e714d2884e2b7",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Sintonización",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"group\":{   \t        \"hide\":[\t                \"Configuración_VSD_Frecuencia_LS\",\t                \"Configuración_VSD_Reg._Velocidad\"],\t        \"show\":[\t                \"Configuración_VSD_Sintonización\"\t        ]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2800,
        "wires": [
            [
                "3cbd8b298714a327"
            ]
        ]
    },
    {
        "id": "8ae59eea10204a4f",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Datos TX",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Configuración_VSD_NavAjustesRef\",\t                \"Configuración_VSD_Frecuencia_LS\",\t                \"Configuración_VSD_Reg._Velocidad\",\t                \"Configuración_VSD_Sintonización\",\t                \"Configuración_VSD_Rampas\",\t                \"Configuración_VSD_Límites\",\t                \"Configuración_VSD_Rampa_prolongada\",\t                \"Configuración_VSD_Datos_de_motor\",\t                \"Configuración_VSD_Datos_Filtro-Cable\",\t                \"Configuración_VSD_NavDatos_de_motor\",\t                \"Configuración_VSD_Curvas_de_saturación\"],\t                \t       \"show\":[ \"Configuración_VSD_Datos_de_transformador\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 2600,
        "wires": [
            [
                "f95e46ccd8ac066d"
            ]
        ]
    },
    {
        "id": "d2853f7de9a85224",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Datos Filtro-Cable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Configuración_VSD_Datos_de_motor\",\t                \"Configuración_VSD_Rampas\",\t                \"Configuración_VSD_Límites\",\t                \"Configuración_VSD_Rampa_prolongada\",\t                \"Configuración_VSD_Datos_de_transformador\",\t                \"Configuración_VSD_NavAjustesRef\",\t                \"Configuración_VSD_NavAjustesRef\",\t                \"Configuración_VSD_Frecuencia_LS\",\t                \"Configuración_VSD_Reg._Velocidad\",\t                \"Configuración_VSD_Sintonización\",\t                \"Configuración_VSD_NavDatos_de_motor\",\t                \"Configuración_VSD_Curvas_de_saturación\"],\t       \"show\":[ \"Configuración_VSD_Datos_Filtro-Cable\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 2640,
        "wires": [
            [
                "f95e46ccd8ac066d"
            ]
        ]
    },
    {
        "id": "58b74f02b3f60b0c",
        "type": "ui_dropdown",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Seleccione el tipo de motor",
        "group": "9bfa57e13e5326f8",
        "order": 2,
        "width": "10",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Motor de Inducción [IM]",
                "value": "IM",
                "type": "str"
            },
            {
                "label": "Motor de imanes permanentes [PMM]",
                "value": "PMM",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 600,
        "y": 2320,
        "wires": [
            [
                "106ca9e625394352",
                "f407b78dc23fb32c"
            ]
        ]
    },
    {
        "id": "f407b78dc23fb32c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Tipo motor",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Type",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "9cba57eb85267c36",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Type",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2310,
        "wires": [
            [
                "58b74f02b3f60b0c"
            ]
        ]
    },
    {
        "id": "d4daabe197993fa3",
        "type": "ui_template",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "group": "1db3fea4fdfc1236",
        "name": "Nav Datos de motor",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n    \n  </head>\n  <body>\n    <!-- Navigation bar -->\n    <nav>\n      <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n        <a class=\"nav-item nav-link active\" id=\"nav-Datos_Placa-tab\" data-toggle=\"tab\" href=\"#nav-Datos_Placa\" role=\"tab\" aria-controls=\"nav-Datos_Placa\" aria-selected=\"true\" ng-click=\"send({payload:Datos_Placa()})\">Datos de placa</a>\n        <a class=\"nav-item nav-link\" id=\"nav-CurvSat-tab\" data-toggle=\"tab\" href=\"#nav-CurvSat\" role=\"tab\" aria-controls=\"nav-CurvSat\" aria-selected=\"false\" ng-click=\"send({payload:CurvSat()})\">Curvas de saturación</a>\n      </div>\n    </nav>\n\n    <script>\n        this.scope.Datos_Placa = function() { return \"Datos_Placa\"; };\n        this.scope.CurvSat = function() { return \"CurvSat\"; };\n    </script>\n    \n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n  </body>\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 430,
        "y": 2460,
        "wires": [
            [
                "563a90fe780ab40a"
            ]
        ]
    },
    {
        "id": "563a90fe780ab40a",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Ajustes",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "CurvSat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Datos_Placa",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 2460,
        "wires": [
            [
                "d5a3c6290a63030e"
            ],
            [
                "c71541cb5e570e62"
            ]
        ]
    },
    {
        "id": "c71541cb5e570e62",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Datos de Placa",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Configuración_VSD_Curvas_de_saturación\"],\"show\":[\"Configuración_VSD_Datos_de_motor\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2480,
        "wires": [
            [
                "f95e46ccd8ac066d"
            ]
        ]
    },
    {
        "id": "d5a3c6290a63030e",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "Curvas de saturación",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Configuración_VSD_Curvas_de_saturación\"],\"hide\":[\"Configuración_VSD_Datos_de_motor\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 2440,
        "wires": [
            [
                "f95e46ccd8ac066d"
            ]
        ]
    },
    {
        "id": "623b79c2b0162bc6",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "links": [
            "89e59280.db7f"
        ],
        "x": 295,
        "y": 2600,
        "wires": [
            [
                "434bc2a7ef4648fe"
            ]
        ]
    },
    {
        "id": "5c27d2c5.3f268c",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "label": "Tensión de arranque (V)",
        "tooltip": "",
        "group": "c9a29e84.68bd",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "Accel",
        "x": 610,
        "y": 1500,
        "wires": [
            [
                "9bfa59cc.d6a398"
            ]
        ]
    },
    {
        "id": "9bfa59cc.d6a398",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Start_Acc_Boost",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Volts_per_Hertz.Start_Acc_Boost",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "c1afba0d.22f5d8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Start_Acc_Boost",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Volts_per_Hertz.Start_Acc_Boost",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1500,
        "wires": [
            [
                "5c27d2c5.3f268c"
            ]
        ]
    },
    {
        "id": "9b007129.593e9",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "label": "Tensión de ruptura (V)",
        "tooltip": "",
        "group": "c9a29e84.68bd",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Accel",
        "x": 620,
        "y": 1700,
        "wires": [
            [
                "a7e937e4.d19518"
            ]
        ]
    },
    {
        "id": "a7e937e4.d19518",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Break_Voltage",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Volts_per_Hertz.Break_Voltage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "64263ab2.3a9e04",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Break_Voltage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Volts_per_Hertz.Break_Voltage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1700,
        "wires": [
            [
                "9b007129.593e9"
            ]
        ]
    },
    {
        "id": "d290dc22.ecd03",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "label": "Frecuencia de ruptura (Hz)",
        "tooltip": "",
        "group": "c9a29e84.68bd",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Accel",
        "x": 600,
        "y": 1800,
        "wires": [
            [
                "454c0be8.b02024"
            ]
        ]
    },
    {
        "id": "454c0be8.b02024",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Break_Frequecy",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Volts_per_Hertz.Break_Frequecy",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "370e9542.6d045a",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Break_Frequecy",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Volts_per_Hertz.Break_Frequecy",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1800,
        "wires": [
            [
                "d290dc22.ecd03"
            ]
        ]
    },
    {
        "id": "5a72c82c.208f48",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "label": "Corriente límite Drive (A)",
        "tooltip": "",
        "group": "c9a29e84.68bd",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Accel",
        "x": 610,
        "y": 1900,
        "wires": [
            [
                "1e07455b.07cd1b"
            ]
        ]
    },
    {
        "id": "1e07455b.07cd1b",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Current_Limit",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Volts_per_Hertz.Current_Limit",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "b732c4f9.4ad3d8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Current_Limit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Volts_per_Hertz.Current_Limit",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1900,
        "wires": [
            [
                "5a72c82c.208f48"
            ]
        ]
    },
    {
        "id": "5f577028.557e7",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Tensión No Load [V]",
        "tooltip": "",
        "group": "75fbd908.193868",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2270,
        "y": 260,
        "wires": [
            [
                "fa8770e0.5ba6c"
            ]
        ]
    },
    {
        "id": "3953f1bb.50451e",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Frecuencia [Hz]",
        "tooltip": "",
        "group": "75fbd908.193868",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 580,
        "wires": [
            [
                "20770ad6.360126"
            ]
        ]
    },
    {
        "id": "9dba3a50.d46e18",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Corriente [A]",
        "tooltip": "",
        "group": "75fbd908.193868",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2240,
        "y": 660,
        "wires": [
            [
                "dfc8c65e.fc6888"
            ]
        ]
    },
    {
        "id": "55a026b4.1e22e8",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Frecuencia [RPM]",
        "tooltip": "",
        "group": "75fbd908.193868",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2260,
        "y": 740,
        "wires": [
            [
                "4d993a72.a00f14"
            ]
        ]
    },
    {
        "id": "72f3a6fe.cd65f8",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Tensión Full Load [V]",
        "tooltip": "",
        "group": "75fbd908.193868",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2270,
        "y": 820,
        "wires": [
            [
                "f18f1d1d.95aa8"
            ]
        ]
    },
    {
        "id": "8cff052d.eb3db8",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Polos",
        "tooltip": "",
        "group": "75fbd908.193868",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2220,
        "y": 900,
        "wires": [
            [
                "726836a6.0b5fd8"
            ]
        ]
    },
    {
        "id": "c15387aa.a8fd08",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Potencia",
        "tooltip": "",
        "group": "75fbd908.193868",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2230,
        "y": 980,
        "wires": [
            [
                "8c893b5b.fc9f88"
            ]
        ]
    },
    {
        "id": "f1718aa1.686ed8",
        "type": "ui_dropdown",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "U. Potencia",
        "tooltip": "",
        "place": "",
        "group": "75fbd908.193868",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HP",
                "value": 0,
                "type": "num"
            },
            {
                "label": "kW",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 2240,
        "y": 1060,
        "wires": [
            [
                "6b14338e.f1e85c"
            ]
        ]
    },
    {
        "id": "fa8770e0.5ba6c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr NL Voltage",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Mtr_NL_Voltage",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "20770ad6.360126",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Hertz",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Hertz",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "dfc8c65e.fc6888",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Amps",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Amps",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4d993a72.a00f14",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "RPM",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.RPM",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "f18f1d1d.95aa8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr FL Voltage",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Mtr_FL_Voltage",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2490,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "726836a6.0b5fd8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Poles",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Poles",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "8c893b5b.fc9f88",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Power",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Power",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "6b14338e.f1e85c",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Power_Units",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.Power_Units",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "229b82a9.6cb0fe",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Mtr NL Voltage\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 220,
        "wires": [
            [
                "5f577028.557e7"
            ]
        ]
    },
    {
        "id": "7005eb09.6914a4",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Mtr FL Voltage\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 780,
        "wires": [
            [
                "72f3a6fe.cd65f8"
            ]
        ]
    },
    {
        "id": "b78bd570.359c38",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "var Req = \"MtrNormalDutyAmp\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 620,
        "wires": [
            [
                "9dba3a50.d46e18"
            ]
        ]
    },
    {
        "id": "380f82f0.cf6c0e",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Motor NP RPM\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 700,
        "wires": [
            [
                "55a026b4.1e22e8"
            ]
        ]
    },
    {
        "id": "57d246fb.480188",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Motor Poles\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 860,
        "wires": [
            [
                "8cff052d.eb3db8"
            ]
        ]
    },
    {
        "id": "b9cd680b.1fd608",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Motor NP Power\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 940,
        "wires": [
            [
                "c15387aa.a8fd08"
            ]
        ]
    },
    {
        "id": "63dc45d3.9b57ac",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "/*var Req = \"Motor NP Power\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}*/\nmsg.payload = 0;\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 1020,
        "wires": [
            [
                "f1718aa1.686ed8"
            ]
        ]
    },
    {
        "id": "1245e207.7afbce",
        "type": "ui_dropdown",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Control",
        "tooltip": "",
        "place": "",
        "group": "75fbd908.193868",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Normal",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Vacío",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 2230,
        "y": 1100,
        "wires": [
            [
                "38a439e7.694806"
            ]
        ]
    },
    {
        "id": "38a439e7.694806",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "LoopControl",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.LoopControl",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "d9b1483f.eb0558",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Loop control",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.LoopControl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1100,
        "wires": [
            [
                "1245e207.7afbce"
            ]
        ]
    },
    {
        "id": "ce3075a3.4468d8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Power_Units",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Power_Units",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1060,
        "wires": [
            [
                "f1718aa1.686ed8"
            ]
        ]
    },
    {
        "id": "cb0406fe.9aeec8",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Power",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 980,
        "wires": [
            [
                "c15387aa.a8fd08"
            ]
        ]
    },
    {
        "id": "e4edf7a1.385598",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Poles",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Poles",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 900,
        "wires": [
            [
                "8cff052d.eb3db8"
            ]
        ]
    },
    {
        "id": "1b750968.faca77",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr FL Voltage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Mtr_FL_Voltage",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 820,
        "wires": [
            [
                "72f3a6fe.cd65f8"
            ]
        ]
    },
    {
        "id": "ba948f27.d0eb6",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "RPM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.RPM",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 740,
        "wires": [
            [
                "55a026b4.1e22e8"
            ]
        ]
    },
    {
        "id": "8e1478d3.1bbd28",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Amps",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Amps",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 660,
        "wires": [
            [
                "9dba3a50.d46e18"
            ]
        ]
    },
    {
        "id": "1fb6db03.b00575",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Hertz",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.Hertz",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 580,
        "wires": [
            [
                "3953f1bb.50451e"
            ]
        ]
    },
    {
        "id": "f14f9c67.b050f",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr NL Voltage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Mtr_NL_Voltage",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 260,
        "wires": [
            [
                "5f577028.557e7"
            ]
        ]
    },
    {
        "id": "6f87bde8b1a083c8",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Motor NP Hz\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 540,
        "wires": [
            [
                "3953f1bb.50451e"
            ]
        ]
    },
    {
        "id": "b8a561cb8ccefea8",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Eficiencia [%]",
        "tooltip": "",
        "group": "75fbd908.193868",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 400,
        "wires": [
            [
                "2050d2bbce658501"
            ]
        ]
    },
    {
        "id": "5c5e8fa89a38b688",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Resistencia estator [Ω]",
        "tooltip": "",
        "group": "75fbd908.193868",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2270,
        "y": 490,
        "wires": [
            [
                "fadba50d6fb6bf88"
            ]
        ]
    },
    {
        "id": "241b96f16c7fb471",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "label": "Inercia [kg.m2]",
        "tooltip": "",
        "group": "75fbd908.193868",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "10",
        "topic": "",
        "x": 2250,
        "y": 340,
        "wires": [
            [
                "16bf7c77de194650"
            ]
        ]
    },
    {
        "id": "16bf7c77de194650",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Total kgm2",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Total_kgm2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "fadba50d6fb6bf88",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Stator Resistance",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Stator_Resistance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2490,
        "y": 490,
        "wires": [
            []
        ]
    },
    {
        "id": "aca2c323a793fb22",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Total kgm2\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 300,
        "wires": [
            [
                "241b96f16c7fb471"
            ]
        ]
    },
    {
        "id": "782cd3d9bdeb2c48",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Total kgm2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Total_kgm2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 340,
        "wires": [
            [
                "241b96f16c7fb471"
            ]
        ]
    },
    {
        "id": "59d388ef8c967338",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr MBS Req",
        "func": "var Req = \"Stator Resistance\";\nfor(var i=0; i<msg.payload.length; i+=1){\n    if(msg.payload[i][\"Descripción\"] == Req){\n        msg.payload = msg.payload[i][\"Valor\"];\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 460,
        "wires": [
            [
                "5c5e8fa89a38b688"
            ]
        ]
    },
    {
        "id": "fdde2c2ca8e4de95",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Stator Resistance",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Stator_Resistance",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 500,
        "wires": [
            [
                "5c5e8fa89a38b688"
            ]
        ]
    },
    {
        "id": "2050d2bbce658501",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr Efficiency",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Mtr_Efficiency",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "607ddb92b1c4b838",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Mtr Efficiency",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Mtr_Efficiency",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 420,
        "wires": [
            [
                "b8a561cb8ccefea8"
            ]
        ]
    },
    {
        "id": "d1b70a55.083b88",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "Placa de Motor,rampas y lim",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Configuración_VSD_Voltios_Hertz\",\t                \"Configuración_VSD_Rampa_prolongada\",\t                \"Configuración_VSD_Relación_de_Transformación\",\t                \"Configuración_VSD_CajaReductora\",\t                \"Configuración_VSD_Control_de_motor\"],\t                \t       \"show\":[ \"Configuración_VSD_Placa_de_motor\",\t                \"Configuración_VSD_Rampas\",\t                \"Configuración_VSD_Límites\",\t                \"Configuración_VSD_Nav-tab\"]\t       \t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 520,
        "wires": [
            [
                "6b0e4d29.b19b14"
            ]
        ]
    },
    {
        "id": "8c735cd0.645ef",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "MotorVelocidad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RefuerzoTx",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CajaReductora",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 510,
        "y": 570,
        "wires": [
            [
                "d1b70a55.083b88"
            ],
            [
                "4b5ddde8.f05d24"
            ],
            [
                "c1e4f00f3ccb67bc"
            ]
        ]
    },
    {
        "id": "3333030b.c56a6c",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "group": "e6368c98d211b3a1",
        "name": "Menú IM",
        "order": 2,
        "width": "16",
        "height": "1",
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-PlacaMotor-tab\" data-toggle=\"tab\" href=\"#nav-PlacaMotor\"\n                role=\"tab\" aria-controls=\"nav-PlacaMotor\" aria-selected=\"true\"\n                ng-click=\"send({payload:Motor()})\">Motor, rampas y límites</a>\n            <a class=\"nav-item nav-link\" id=\"nav-RampsLimits-tab\" data-toggle=\"tab\" href=\"#nav-RampsLimits\" role=\"tab\"\n                aria-controls=\"nav-RampsLimits\" aria-selected=\"false\" ng-click=\"send({payload:RefuerzoTx()})\">Refuerzo y transformador</a>\n            <a class=\"nav-item nav-link\" id=\"nav-CajaReductora-tab\" data-toggle=\"tab\" href=\"#nav-CajaReductora\" role=\"tab\"\n                aria-controls=\"nav-CajaReductora\" aria-selected=\"false\" ng-click=\"send({payload:CajaReductora()})\">Caja Reductora</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Motor = function() { return \"MotorVelocidad\"; };\n        this.scope.RefuerzoTx = function() { return \"RefuerzoTx\"; };\n        this.scope.CajaReductora = function() { return \"CajaReductora\"; };\n        \n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n</body>\n\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 570,
        "wires": [
            [
                "8c735cd0.645ef",
                "980eb62d2bc87e1c"
            ]
        ]
    },
    {
        "id": "4b5ddde8.f05d24",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "Ajustes de Refuerzo",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Configuración_VSD_Rampas\",\t                \"Configuración_VSD_Placa_de_motor\",\t                \"Configuración_VSD_Límites\",\t                \"Configuración_VSD_Rampa_prolongada\",\t                \"Configuración_VSD_Control_de_motor\",\t                \"Configuración_VSD_CajaReductora\",\t                \"Configuración_VSD_Nav-tab\"],\t       \"show\":[ \"Configuración_VSD_Voltios_Hertz\",\t                \"Configuración_VSD_Relación_de_Transformación\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 560,
        "wires": [
            [
                "6b0e4d29.b19b14"
            ]
        ]
    },
    {
        "id": "6b0e4d29.b19b14",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "Motor IM",
        "links": [
            "805762db.d27b7",
            "8a17d991.081178"
        ],
        "x": 895,
        "y": 560,
        "wires": []
    },
    {
        "id": "95c97983.71d388",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "property": "C2S.Motor_Control.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "PMM",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 2330,
        "wires": [
            [
                "9cba57eb85267c36"
            ],
            [
                "481a8ff2.e2ec1"
            ]
        ]
    },
    {
        "id": "481a8ff2.e2ec1",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "default",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 2350,
        "wires": [
            [
                "58b74f02b3f60b0c"
            ]
        ]
    },
    {
        "id": "ec341205.42507",
        "type": "ui_text_input",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "",
        "label": "Corriente nominal",
        "tooltip": "",
        "group": "aa8453cf.6d05a",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 620,
        "y": 100,
        "wires": [
            [
                "ca8a89a5.fe94a8"
            ]
        ]
    },
    {
        "id": "f45a1830.4aa818",
        "type": "ui_text_input",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "",
        "label": "% Bypass",
        "tooltip": "",
        "group": "aa8453cf.6d05a",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "% Bypass",
        "x": 590,
        "y": 180,
        "wires": [
            [
                "e00ed097.2bcdd"
            ]
        ]
    },
    {
        "id": "ca8a89a5.fe94a8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "F.A. Corriente nominal",
        "rules": [
            {
                "t": "set",
                "p": "Filtro_armonicos.Corriente_nominal",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "6101e2c0.41d6fc",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "F.A. Corriente bypass",
        "rules": [
            {
                "t": "set",
                "p": "Filtro_armonicos.Corriente_bypass",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e00ed097.2bcdd",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "F.A. % bypass",
        "rules": [
            {
                "t": "set",
                "p": "Filtro_armonicos.Porcentaje_bypass",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 180,
        "wires": [
            [
                "2bfa63f5.c92f2c"
            ]
        ]
    },
    {
        "id": "2bfa63f5.c92f2c",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "Cálculo Corriente",
        "func": "var CN          = flow.get('Filtro_armonicos.Corriente_nominal')||0;\nif(msg.topic !='Corriente Bypass'){\n    msg.payload = parseInt(CN*msg.payload/100);\n    msg.topic = '% Bypass';\n    return msg;\n}\nreturn;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 180,
        "wires": [
            [
                "ed030ba5.58dbe8"
            ]
        ]
    },
    {
        "id": "c8ee6da5.6ba99",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "Inicializar F.A",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 195,
        "y": 140,
        "wires": [
            [
                "927a90e3.4b638",
                "e652eb79.a623b8",
                "e9bea53b.440a68",
                "fbfce46a.370cb8"
            ]
        ]
    },
    {
        "id": "927a90e3.4b638",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "F.A. Corriente nominal",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Filtro_armonicos.Corriente_nominal",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 100,
        "wires": [
            [
                "ec341205.42507"
            ]
        ]
    },
    {
        "id": "e652eb79.a623b8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "F.A. Corriente bypass",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Filtro_armonicos.Corriente_bypass",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "% Bypass",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 140,
        "wires": [
            [
                "868cefce.6694a"
            ]
        ]
    },
    {
        "id": "e9bea53b.440a68",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "F.A. Corriente bypass",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Filtro_armonicos.Porcentaje_bypass",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Corriente Bypass",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 180,
        "wires": [
            [
                "f45a1830.4aa818"
            ]
        ]
    },
    {
        "id": "a8dc214e.b7f56",
        "type": "inject",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "927a90e3.4b638",
                "e652eb79.a623b8",
                "e9bea53b.440a68",
                "fbfce46a.370cb8"
            ]
        ]
    },
    {
        "id": "c13d5700.feaa78",
        "type": "ui_text_input",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "",
        "label": "Tiempo muerto Bypass (s)",
        "tooltip": "",
        "group": "aa8453cf.6d05a",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 650,
        "y": 220,
        "wires": [
            [
                "fd850cd.624c2f"
            ]
        ]
    },
    {
        "id": "fd850cd.624c2f",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "F.A. Tiempo muerto",
        "rules": [
            {
                "t": "set",
                "p": "Filtro_armonicos.Tiempo_muerto",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "fbfce46a.370cb8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "F.A. Corriente bypass",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Filtro_armonicos.Tiempo_muerto",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "c13d5700.feaa78"
            ]
        ]
    },
    {
        "id": "e63ca624.4a94a8",
        "type": "ui_button",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "",
        "group": "aa8453cf.6d05a",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Habilitar bypass",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 760,
        "y": 300,
        "wires": [
            [
                "d558f19d.c5be2"
            ]
        ]
    },
    {
        "id": "fda9d1c0.d590d",
        "type": "ui_button",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "",
        "group": "aa8453cf.6d05a",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Deshabilitar bypass",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 770,
        "y": 340,
        "wires": [
            [
                "4402b8da.a316d8"
            ]
        ]
    },
    {
        "id": "d558f19d.c5be2",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "Habilitar",
        "rules": [
            {
                "t": "set",
                "p": "Filtro_armonicos.Habilitar",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "4402b8da.a316d8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "Deshabilitar",
        "rules": [
            {
                "t": "set",
                "p": "Filtro_armonicos.Habilitar",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "4d97afba.4dc4d",
        "type": "complete",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "",
        "scope": [
            "d558f19d.c5be2",
            "4402b8da.a316d8"
        ],
        "uncaught": false,
        "x": 280,
        "y": 300,
        "wires": [
            [
                "5888eaa2.e36944"
            ]
        ]
    },
    {
        "id": "5888eaa2.e36944",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "",
        "property": "Filtro_armonicos.Habilitar",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "97a2a505.e43258",
                "ad49eac5.1a3bb8"
            ],
            [
                "6f110bb3.d5a3c4",
                "1bfae043.076ad"
            ]
        ]
    },
    {
        "id": "97a2a505.e43258",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "False",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 260,
        "wires": [
            [
                "e63ca624.4a94a8"
            ]
        ]
    },
    {
        "id": "ad49eac5.1a3bb8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 300,
        "wires": [
            [
                "fda9d1c0.d590d"
            ]
        ]
    },
    {
        "id": "1bfae043.076ad",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 340,
        "wires": [
            [
                "e63ca624.4a94a8"
            ]
        ]
    },
    {
        "id": "6f110bb3.d5a3c4",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "False",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 380,
        "wires": [
            [
                "fda9d1c0.d590d"
            ]
        ]
    },
    {
        "id": "b2d8bf8c.b4036",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "Bypass filtro armónicos",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 335,
        "y": 340,
        "wires": [
            [
                "5888eaa2.e36944"
            ]
        ]
    },
    {
        "id": "ed030ba5.58dbe8",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1200,
        "y": 180,
        "wires": [
            [
                "6101e2c0.41d6fc",
                "868cefce.6694a"
            ]
        ]
    },
    {
        "id": "868cefce.6694a",
        "type": "ui_text",
        "z": "7a89175c.90f6a8",
        "g": "71fd37.e2a532c8",
        "group": "aa8453cf.6d05a",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Corriente Bypass:",
        "format": "{{msg.payload}}A",
        "layout": "row-spread",
        "x": 620,
        "y": 140,
        "wires": []
    },
    {
        "id": "d4a5a008.b6ca1",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "566c907c.70175",
        "name": "Filtro de armónicos",
        "func": "var Corriente = flow.get('Filtro_armonicos.Corriente_bypass')||0;\nvar payload = msg.payload;\nmsg.payload = TON(parseFloat(msg.payload) >= Corriente ? true:false,msg.delay);\nnode.status({fill:msg.payload === true? 'red':'green',shape:\"dot\",text: parseFloat(payload)+\" >= \"+Corriente });\nreturn msg;\n\nfunction TON(val,delay){\n    var Ant = context.get(\"Anterior\")||false;\n    // Actualizar el contexto\n    context.set(\"Anterior\", val);\n    //Flanco de subida\n    if(val === true && Ant === false){\n        context.set(\"RefTime\", Date.now());\n    }\n    else if(val === true && Ant === true){\n        if(Date.now() - context.get(\"RefTime\") >= delay*1000){\n            return true;\n        }\n    }\n    return false;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 490,
        "wires": [
            [
                "65bec257.67c89c"
            ]
        ]
    },
    {
        "id": "5fa7bbbb.7ded74",
        "type": "inject",
        "z": "7a89175c.90f6a8",
        "g": "566c907c.70175",
        "name": "Corriente de entrada",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "delay",
                "v": "Filtro_armonicos.Tiempo_muerto",
                "vt": "flow"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#:(memoryOnly)::C2S.Implicit.Output_Current",
        "payloadType": "global",
        "x": 210,
        "y": 490,
        "wires": [
            [
                "d4a5a008.b6ca1",
                "a344ac6f.b0fa4"
            ]
        ]
    },
    {
        "id": "117f9d35.ea0683",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "566c907c.70175",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IO.Functions.DO.HF.Status",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 470,
        "wires": [
            []
        ]
    },
    {
        "id": "65bec257.67c89c",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "566c907c.70175",
        "name": "Filtro Habilitado?",
        "property": "Filtro_armonicos.Habilitar",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 490,
        "wires": [
            [
                "117f9d35.ea0683"
            ],
            [
                "f1503b0b.316be8"
            ]
        ]
    },
    {
        "id": "f1503b0b.316be8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "566c907c.70175",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IO.Functions.DO.HF.Status",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 510,
        "wires": [
            []
        ]
    },
    {
        "id": "a344ac6f.b0fa4",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "566c907c.70175",
        "name": "Limites",
        "func": "var Load = global.get(\"Protections.Load\");\nmsg.control = {'min':Load.LL.Setpoint, 'max':Load.HH.Setpoint};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 540,
        "wires": [
            [
                "dc337b1c.735738"
            ]
        ]
    },
    {
        "id": "dc337b1c.735738",
        "type": "ui_level",
        "z": "7a89175c.90f6a8",
        "g": "566c907c.70175",
        "group": "aa8453cf.6d05a",
        "order": 4,
        "width": 4,
        "height": 3,
        "name": "Corriente de entrada actual",
        "label": "Corriente Actual",
        "colorHi": "#00b33c",
        "colorWarn": "#00b33c",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "A",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "2",
        "animations": "soft",
        "shape": 2,
        "colorschema": "valuedriven",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "0.9",
        "fontValue": "3",
        "fontSmall": "0.9",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 590,
        "y": 540,
        "wires": []
    },
    {
        "id": "2499f70f.806ab8",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "EntradasDigitales",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EntradasAnalogicas",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SalidasDigitales",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SalidasAnalogicas",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FiltroArmonicos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 550,
        "y": 840,
        "wires": [
            [
                "c1f7c147.2e2dd"
            ],
            [
                "98ed183e.8031b8"
            ],
            [
                "950ebf98.9385d"
            ],
            [
                "8916af0a.61064"
            ],
            [
                "8c4c4846.6ea308"
            ]
        ]
    },
    {
        "id": "461615d3.efcb8c",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "group": "e342ea29.f4f318",
        "name": "Menu E/S",
        "order": 1,
        "width": "16",
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:EntradasDigitales()})\">Entradas Dig.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:EntradasAnalogicas()})\">Entradas Ana.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasDigitales()})\">Salidas Dig.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:FiltroArmonicos()})\">Filtro armónicos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasAnalogicas()})\">Salidas Ana.</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.EntradasDigitales = function() { return \"EntradasDigitales\"; };\n        this.scope.EntradasAnalogicas = function() { return \"EntradasAnalogicas\"; };\n        this.scope.SalidasDigitales = function() { return \"SalidasDigitales\"; };\n        this.scope.SalidasAnalogicas = function() { return \"SalidasAnalogicas\"; };\n        this.scope.FiltroArmonicos = function() { return \"FiltroArmonicos\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 840,
        "wires": [
            [
                "2499f70f.806ab8",
                "4fb7354230af86db"
            ]
        ]
    },
    {
        "id": "c1f7c147.2e2dd",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "Entradas digitales",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Entradas_y_Salidas_Configuración_E.A.\",\t                \"Entradas_y_Salidas_Información_del_canal_E.A.\",\t                \"Entradas_y_Salidas_Configuración_S.D.\",\t                \"Entradas_y_Salidas_Información_del_canal_S.D.\",\t                \"Entradas_y_Salidas_Configuración_S.A.\",\t                \"Entradas_y_Salidas_Información_del_canal_S.A.\",\t                \"Entradas_y_Salidas_FiltroArmonicos\"],\t       \"show\":[ \"Entradas_y_Salidas_Nav_Bar\",\t                \"Entradas_y_Salidas_Configuración_E.D.\",\t                \"Entradas_y_Salidas_Información_del_canal_E.D.\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 780,
        "wires": [
            [
                "b0a2cd1a.ab273"
            ]
        ]
    },
    {
        "id": "98ed183e.8031b8",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "Entradas analógicas",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Entradas_y_Salidas_Configuración_E.D.\",\t                \"Entradas_y_Salidas_Información_del_canal_E.D.\",\t                \"Entradas_y_Salidas_Configuración_S.D.\",\t                \"Entradas_y_Salidas_Información_del_canal_S.D.\",\t                \"Entradas_y_Salidas_Configuración_S.A.\",\t                \"Entradas_y_Salidas_Información_del_canal_S.A.\",\t                \"Entradas_y_Salidas_FiltroArmonicos\"],\t       \"show\":[ \"Entradas_y_Salidas_Nav_Bar\",\t                \"Entradas_y_Salidas_Configuración_E.A.\",\t                \"Entradas_y_Salidas_Información_del_canal_E.A.\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 820,
        "wires": [
            [
                "b0a2cd1a.ab273"
            ]
        ]
    },
    {
        "id": "950ebf98.9385d",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "Salidas digitales",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Entradas_y_Salidas_Configuración_E.A.\",\t                \"Entradas_y_Salidas_Información_del_canal_E.A.\",\t                \"Entradas_y_Salidas_Configuración_E.D.\",\t                \"Entradas_y_Salidas_Información_del_canal_E.D.\",\t                \"Entradas_y_Salidas_Configuración_S.A.\",\t                \"Entradas_y_Salidas_Información_del_canal_S.A.\",\t                \"Entradas_y_Salidas_FiltroArmonicos\"],\t       \"show\":[ \"Entradas_y_Salidas_Nav_Bar\",\t                \"Entradas_y_Salidas_Configuración_S.D.\",\t                \"Entradas_y_Salidas_Información_del_canal_S.D.\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 860,
        "wires": [
            [
                "b0a2cd1a.ab273"
            ]
        ]
    },
    {
        "id": "8916af0a.61064",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "Salidas analógicas",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Entradas_y_Salidas_Configuración_E.A.\",\t                \"Entradas_y_Salidas_Información_del_canal_E.A.\",\t                \"Entradas_y_Salidas_Configuración_S.D.\",\t                \"Entradas_y_Salidas_Información_del_canal_S.D.\",\t                \"Entradas_y_Salidas_Configuración_E.D.\",\t                \"Entradas_y_Salidas_Información_del_canal_E.D.\",\t                \"Entradas_y_Salidas_FiltroArmonicos\"],\t       \"show\":[ \"Entradas_y_Salidas_Nav_Bar\",\t                \"Entradas_y_Salidas_Configuración_S.A.\",\t                \"Entradas_y_Salidas_Información_del_canal_S.A.\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 900,
        "wires": [
            [
                "b0a2cd1a.ab273"
            ]
        ]
    },
    {
        "id": "b0a2cd1a.ab273",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "Menú Entradas/Salidas SWCPRO",
        "links": [
            "8a17d991.081178",
            "805762db.d27b7"
        ],
        "x": 895,
        "y": 860,
        "wires": []
    },
    {
        "id": "f470fc15.8b31e8",
        "type": "ui_dropdown",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "label": "Función",
        "tooltip": "",
        "place": "--",
        "group": "9457c46f.d710c8",
        "order": 8,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Start",
                "value": "Start",
                "type": "str"
            },
            {
                "label": "Stop",
                "value": "Stop",
                "type": "str"
            },
            {
                "label": "Reset",
                "value": "Reset",
                "type": "str"
            },
            {
                "label": "Stop ESD",
                "value": "Stop ESD",
                "type": "str"
            },
            {
                "label": "Disparo alto nivel de aceite SUT",
                "value": "Disparo alto nivel de aceite SUT",
                "type": "str"
            },
            {
                "label": "Disparo alta temperatura SUT",
                "value": "Disparo alta temperatura SUT",
                "type": "str"
            },
            {
                "label": "Alarma alta temperatura SUT",
                "value": "Alarma alta temperatura SUT",
                "type": "str"
            },
            {
                "label": "Alarma bajo nivel de aceite SUT",
                "value": "Alarma bajo nivel de aceite SUT",
                "type": "str"
            },
            {
                "label": "Disparo bajo bajo nivel de aceite SUT",
                "value": "Disparo bajo bajo nivel de aceite SUT",
                "type": "str"
            },
            {
                "label": "Disparo Valvula sobrepresión SUT",
                "value": "Disparo válvula sobre-presión SUT",
                "type": "str"
            },
            {
                "label": "Alarma DPS",
                "value": "Alarma DPS",
                "type": "str"
            },
            {
                "label": "Disparo alta temperatura filtros",
                "value": "Disparo alta temperatura filtros",
                "type": "str"
            },
            {
                "label": "Disparo alta presión THP",
                "value": "Disparo alta presión THP",
                "type": "str"
            },
            {
                "label": "Disparo sobre tensión SUT",
                "value": "Disparo sobre-tensión SUT",
                "type": "str"
            },
            {
                "label": "ESD Remoto",
                "value": "ESD Remoto",
                "type": "str"
            },
            {
                "label": "Disparo puerta abierta",
                "value": "Disparo puerta abierta",
                "type": "str"
            },
            {
                "label": "Protección térmica de motor",
                "value": "Protección térmica de motor",
                "type": "str"
            },
            {
                "label": "Monitoreo",
                "value": "Monitoreo",
                "type": "str"
            },
            {
                "label": "Disparo shutdown SCC",
                "value": "Disparo shutdown SCC",
                "type": "str"
            },
            {
                "label": "Disparo baja presión en la troncal",
                "value": "Disparo baja presión en la troncal",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 720,
        "y": 740,
        "wires": [
            [
                "cb3f9a14.d22ae"
            ]
        ]
    },
    {
        "id": "d671f08c.fac63",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ED_Config.Canal",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "cb3f9a14.d22ae",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ED_Config.Funcion",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "ae41ae78.9752e8",
        "type": "ui_button",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "group": "9457c46f.d710c8",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Configurar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "ED_Config",
        "payloadType": "flow",
        "topic": "",
        "x": 830,
        "y": 1090,
        "wires": [
            [
                "523b81e3.a07f",
                "f4ae677093cfe747",
                "c1aa521337e30c76"
            ]
        ]
    },
    {
        "id": "d6e3de24.2cb928",
        "type": "ui_dropdown",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "label": "Tipo",
        "tooltip": "",
        "place": "--",
        "group": "9457c46f.d710c8",
        "order": 5,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "NC",
                "value": "NC",
                "type": "str"
            },
            {
                "label": "NO",
                "value": "NO",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 710,
        "y": 790,
        "wires": [
            [
                "3a1ce2e8.4d1856"
            ]
        ]
    },
    {
        "id": "3a1ce2e8.4d1856",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ED_Config.TipoInstrumento",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 790,
        "wires": [
            []
        ]
    },
    {
        "id": "523b81e3.a07f",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal",
        "property": "payload.Canal",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "8",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "9",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "10",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "11",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "12",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "13",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "14",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "15",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "16",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "17",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "18",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "19",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "20",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "21",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "22",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "23",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "24",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "25",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "26",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "27",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 20,
        "x": 990,
        "y": 1090,
        "wires": [
            [
                "3ba9978d.7a9e38"
            ],
            [
                "52006668.0c28b8"
            ],
            [
                "cb4b75c1.8fff18"
            ],
            [
                "ed19269a.1fe5a8"
            ],
            [
                "100713b.4d5176c"
            ],
            [
                "bde3d14e.e6be"
            ],
            [
                "9f2f8e14.328968"
            ],
            [
                "f6f9d9a1.224f48"
            ],
            [
                "6abcbd22.e3abec"
            ],
            [
                "f831d635.e4d04"
            ],
            [
                "e38c9f19.aa8ea"
            ],
            [
                "1b2731e4.61a096"
            ],
            [
                "8802186f.daff38"
            ],
            [
                "5df67e9b.9bd0e8"
            ],
            [
                "8e13fa8a.d674a"
            ],
            [
                "5304b7de65486472"
            ],
            [
                "b40da20f.064d88"
            ],
            [
                "19774c3b.a5ad2c"
            ],
            [
                "6dcec406.d1258c"
            ],
            [
                "808ade40.bbd5d8"
            ]
        ]
    },
    {
        "id": "89414bbc.a5514",
        "type": "ui_dropdown",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "label": "Canal",
        "tooltip": "",
        "place": "--",
        "group": "9457c46f.d710c8",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "8",
                "value": 8,
                "type": "num"
            },
            {
                "label": "9",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 710,
        "y": 840,
        "wires": [
            [
                "d671f08c.fac63"
            ]
        ]
    },
    {
        "id": "3ba9978d.7a9e38",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal8",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal8.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal8.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 710,
        "wires": [
            []
        ]
    },
    {
        "id": "52006668.0c28b8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal9",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal9.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal9.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 750,
        "wires": [
            []
        ]
    },
    {
        "id": "cb4b75c1.8fff18",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal10",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal10.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal10.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 790,
        "wires": [
            []
        ]
    },
    {
        "id": "ed19269a.1fe5a8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal11",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal11.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal11.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 830,
        "wires": [
            []
        ]
    },
    {
        "id": "100713b.4d5176c",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal12",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal12.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal12.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 870,
        "wires": [
            []
        ]
    },
    {
        "id": "bde3d14e.e6be",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal13",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal13.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal13.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 910,
        "wires": [
            []
        ]
    },
    {
        "id": "9f2f8e14.328968",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal14",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal14.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal14.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 950,
        "wires": [
            []
        ]
    },
    {
        "id": "f6f9d9a1.224f48",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal15",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal15.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal15.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 990,
        "wires": [
            []
        ]
    },
    {
        "id": "6abcbd22.e3abec",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal16",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal16.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal16.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1030,
        "wires": [
            []
        ]
    },
    {
        "id": "a4d364a6.229fd8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Funciones",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 730,
        "wires": [
            []
        ]
    },
    {
        "id": "a8d5423e.4c7098",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Cargar configuración del canal",
        "func": "var Canal = flow.get('ED_Config').Canal||null;\nvar ES = flow.get('ES')||null;\n\n// Concatenar Canal\nvar Canalmsg = \"Canal\" + Canal;\n\n// Responder\nvar Resp = ES.ED[Canalmsg];\nmsg.payload = \"Canal no configurado\";\n\nif(typeof Resp !== 'undefined'){\n    msg.Funcion = {'payload':Resp.Funcion};\n    msg.Tipo = {'payload':Resp.Tipo};\n    \n}\nelse{\n    msg.Funcion = {'payload':\"Canal no configurado\"};\n    msg.Tipo =  {'payload':\"Ninguno\"};\n}\n\nreturn [msg.Funcion, msg.Tipo];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 770,
        "wires": [
            [
                "f470fc15.8b31e8"
            ],
            [
                "d6e3de24.2cb928"
            ]
        ]
    },
    {
        "id": "c07fb278.4e5528",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Borrar configuración del canal",
        "func": "var Canal   = flow.get('ED_Config').Canal||null;\nvar ES      = flow.get('ES')||null;\n\n// Concatenar Canal\nvar Canalmsg = \"Canal\" + Canal;\n\n// Borrar propiedad\ndelete ES.ED[Canalmsg];\n\n// Cargar nueva configuración\nflow.set('ES',ES);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 1090,
        "wires": []
    },
    {
        "id": "10200c7c.83f54c",
        "type": "ui_button",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "group": "9457c46f.d710c8",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Borrar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "ES_Config",
        "payloadType": "flow",
        "topic": "",
        "x": 370,
        "y": 1100,
        "wires": [
            [
                "c07fb278.4e5528",
                "f4ae677093cfe747",
                "c1aa521337e30c76"
            ]
        ]
    },
    {
        "id": "12432895.b1026f",
        "type": "complete",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Seleccionar canal",
        "scope": [
            "d671f08c.fac63",
            "c07fb278.4e5528"
        ],
        "uncaught": false,
        "x": 210,
        "y": 810,
        "wires": [
            [
                "a8d5423e.4c7098"
            ]
        ]
    },
    {
        "id": "bdbcd347.d56d4",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Vector de Funciones ED",
        "func": "var ES = flow.get(\"ES\");\nvar Funcion = [];\nvar Lista_Funciones = {};\n\nvar Canal = [4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27];\n\nfor(var i=0; i<Canal.length; i++){\n    \n    // Concatenar el texto del canal\n    Canalmsg = 'Canal' + Canal[i];\n    \n    // Generar el vector con todas las posibles opciones de configuración\n    if( typeof ES.ED[Canalmsg] !== 'undefined'){\n        \n        // Lista Completa\n        Lista_Funciones[Canal[i]] = ES.ED[Canalmsg].Funcion;\n        \n        // Lista Simple\n        if(Funcion.find(element => element == ES.ED[Canalmsg].Funcion) !== ES.ED[Canalmsg].Funcion ){\n            Funcion.push(ES.ED[Canalmsg].Funcion);\n        }\n    }\n    else{\n        delete Lista_Funciones[Canal[i]];\n    }\n    \n}\n\nmsg.payload = {\n    'Lista_Simple':Funcion,\n    'Lista_Completa':Lista_Funciones\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 730,
        "wires": [
            [
                "a4d364a6.229fd8"
            ]
        ]
    },
    {
        "id": "b8809fb9.73dba",
        "type": "complete",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Configurar Canal",
        "scope": [
            "3ba9978d.7a9e38",
            "52006668.0c28b8",
            "cb4b75c1.8fff18",
            "ed19269a.1fe5a8",
            "100713b.4d5176c",
            "bde3d14e.e6be",
            "9f2f8e14.328968",
            "f6f9d9a1.224f48",
            "6abcbd22.e3abec",
            "c07fb278.4e5528",
            "f831d635.e4d04",
            "e38c9f19.aa8ea",
            "1b2731e4.61a096",
            "8802186f.daff38",
            "5df67e9b.9bd0e8",
            "8e13fa8a.d674a",
            "7b4b99bf.119ac8",
            "b40da20f.064d88",
            "19774c3b.a5ad2c",
            "6dcec406.d1258c",
            "808ade40.bbd5d8"
        ],
        "uncaught": false,
        "x": 210,
        "y": 770,
        "wires": [
            [
                "a8d5423e.4c7098",
                "bdbcd347.d56d4"
            ]
        ]
    },
    {
        "id": "f831d635.e4d04",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal17",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal17.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal17.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1070,
        "wires": [
            []
        ]
    },
    {
        "id": "e38c9f19.aa8ea",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal18",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal18.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal18.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1110,
        "wires": [
            []
        ]
    },
    {
        "id": "1b2731e4.61a096",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal19",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal19.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal19.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1150,
        "wires": [
            []
        ]
    },
    {
        "id": "8802186f.daff38",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal20",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal20.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal20.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1190,
        "wires": [
            []
        ]
    },
    {
        "id": "5df67e9b.9bd0e8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal21",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal21.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal21.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1230,
        "wires": [
            []
        ]
    },
    {
        "id": "8e13fa8a.d674a",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal22",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal22.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal23.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1270,
        "wires": [
            []
        ]
    },
    {
        "id": "b40da20f.064d88",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal24",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal24.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal24.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1350,
        "wires": [
            []
        ]
    },
    {
        "id": "19774c3b.a5ad2c",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal25",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal25.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal25.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1390,
        "wires": [
            []
        ]
    },
    {
        "id": "6dcec406.d1258c",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal26",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal26.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal26.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1430,
        "wires": [
            []
        ]
    },
    {
        "id": "808ade40.bbd5d8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal27",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal27.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal27.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1470,
        "wires": [
            []
        ]
    },
    {
        "id": "e7978310592e6ac7",
        "type": "ui_table",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "group": "89c29882.24ba28",
        "name": "",
        "order": 1,
        "width": "9",
        "height": "6",
        "columns": [
            {
                "field": "Canales",
                "title": "#",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Funciones",
                "title": "Funcion",
                "width": "68%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Tipo",
                "title": "Tipo",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 850,
        "y": 1130,
        "wires": []
    },
    {
        "id": "9a3c55637b414564",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "ED",
        "func": "var Canal   = flow.get('ES');\n\nvar Funciones   = [];\nvar TipoIO      = [];\nvar Values      = [];\n\n// Entradas Digitales\nvar otro = [8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];\n\nfor(var i = 0; i<otro.length; i++){\n    var index= 'Canal'+otro[i];\n    if(typeof Canal.ED[index] != 'undefined'){\n        Funciones.push(Canal.ED[index].Funcion);\n        TipoIO.push(Canal.ED[index].Tipo);\n    }\n    else{\n        Funciones.push('Ninguno');\n        TipoIO.push('--');\n    }\n}\nvar data    = {};\nmsg.payload   = [];\nfor(var j = 0; j<otro.length; j++){\n    data = {\n        'Canales': otro[j], \n        'Funciones':Funciones[j],\n        'Tipo': TipoIO[j]\n    }\n    msg.payload.push(data);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 1130,
        "wires": [
            [
                "e7978310592e6ac7"
            ]
        ]
    },
    {
        "id": "f4ae677093cfe747",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 550,
        "y": 1130,
        "wires": [
            [
                "9a3c55637b414564"
            ]
        ]
    },
    {
        "id": "d19e40a5.abcfe",
        "type": "inject",
        "z": "51296ca5.0c0cb4",
        "name": "100 ms",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "Channel",
        "payloadType": "env",
        "x": 110,
        "y": 70,
        "wires": [
            [
                "c9b9512f.10fa"
            ]
        ]
    },
    {
        "id": "c9b9512f.10fa",
        "type": "function",
        "z": "51296ca5.0c0cb4",
        "name": "DI",
        "func": "var DI      = env.get(\"Channel\");\nvar Req     = 'IO.DI.'+DI;\nmsg.payload = global.get(Req,'memoryOnly');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 70,
        "wires": [
            []
        ]
    },
    {
        "id": "54c12847.319f98",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 8",
        "env": [
            {
                "name": "Channel",
                "value": "8",
                "type": "num"
            }
        ],
        "x": 170,
        "y": 1560,
        "wires": [
            [
                "f9b834a1.6c5a5"
            ]
        ]
    },
    {
        "id": "6f336942.c58e1",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1560,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "f9b834a1.6c5a5",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal8",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal8",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1560,
        "wires": [
            [
                "6f336942.c58e1"
            ]
        ]
    },
    {
        "id": "eb6bdff7.d5569",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 9",
        "env": [
            {
                "name": "Channel",
                "value": "9",
                "type": "num"
            }
        ],
        "x": 170,
        "y": 1610,
        "wires": [
            [
                "ec7a14d8.fa5698"
            ]
        ]
    },
    {
        "id": "c20e1b92.e56e1",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 10",
        "env": [
            {
                "name": "Channel",
                "value": "10",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 1660,
        "wires": [
            [
                "c52f7d3.c8a3"
            ]
        ]
    },
    {
        "id": "d17c3c2d.965de",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 11",
        "env": [
            {
                "name": "Channel",
                "value": "11",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 1710,
        "wires": [
            [
                "c9d88b91.5f83a8"
            ]
        ]
    },
    {
        "id": "dab82b8f.e880b",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 12",
        "env": [
            {
                "name": "Channel",
                "value": "12",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 1760,
        "wires": [
            [
                "f06a62d1.ada4d8"
            ]
        ]
    },
    {
        "id": "3134cc67.a5a254",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 13",
        "env": [
            {
                "name": "Channel",
                "value": "13",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 1810,
        "wires": [
            [
                "fc8213b0.f28cc"
            ]
        ]
    },
    {
        "id": "af3144a8.4a3b3",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 14",
        "env": [
            {
                "name": "Channel",
                "value": "14",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 1860,
        "wires": [
            [
                "77508f33.45f12"
            ]
        ]
    },
    {
        "id": "31a64605.74157a",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 15",
        "env": [
            {
                "name": "Channel",
                "value": "15",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 1910,
        "wires": [
            [
                "5287952b.dbba9c"
            ]
        ]
    },
    {
        "id": "30fc350c.0aa69a",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 16",
        "env": [
            {
                "name": "Channel",
                "value": "16",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 1960,
        "wires": [
            [
                "74448153.b8033"
            ]
        ]
    },
    {
        "id": "1a4ccb.26b08336",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 17",
        "env": [
            {
                "name": "Channel",
                "value": "17",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2010,
        "wires": [
            [
                "b4155087.d0ca4"
            ]
        ]
    },
    {
        "id": "4908d8f6.97f228",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 18",
        "env": [
            {
                "name": "Channel",
                "value": "18",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2060,
        "wires": [
            [
                "e6312c67.27e8d"
            ]
        ]
    },
    {
        "id": "ec7a14d8.fa5698",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal9",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal9",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1610,
        "wires": [
            [
                "95c053ae2c019985"
            ]
        ]
    },
    {
        "id": "c52f7d3.c8a3",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal10",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal10",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1660,
        "wires": [
            [
                "2e2cf12086edcf86"
            ]
        ]
    },
    {
        "id": "c9d88b91.5f83a8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal11",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal11",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1710,
        "wires": [
            [
                "4fe80e167740fe3b"
            ]
        ]
    },
    {
        "id": "f06a62d1.ada4d8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal12",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal12",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1760,
        "wires": [
            [
                "700f09d5af266f7c"
            ]
        ]
    },
    {
        "id": "fc8213b0.f28cc",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal13",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal13",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1810,
        "wires": [
            [
                "6f0d221e3a45b687"
            ]
        ]
    },
    {
        "id": "77508f33.45f12",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal14",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal14",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1860,
        "wires": [
            [
                "1849f3aa0476fa69"
            ]
        ]
    },
    {
        "id": "5287952b.dbba9c",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal15",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal15",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1910,
        "wires": [
            [
                "66e2a95ab2027f24"
            ]
        ]
    },
    {
        "id": "74448153.b8033",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal16",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal16",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1960,
        "wires": [
            [
                "cf7f1dbc82e6cdf6"
            ]
        ]
    },
    {
        "id": "b4155087.d0ca4",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal17",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal17",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2010,
        "wires": [
            [
                "a6e1ec9e8b26c3a0"
            ]
        ]
    },
    {
        "id": "e6312c67.27e8d",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal18",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal18",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2060,
        "wires": [
            [
                "5df2ddef493d23fe"
            ]
        ]
    },
    {
        "id": "88f57863.f4af9",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 19",
        "env": [
            {
                "name": "Channel",
                "value": "19",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2110,
        "wires": [
            [
                "72a989b1.85998"
            ]
        ]
    },
    {
        "id": "72a989b1.85998",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal19",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal19",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2110,
        "wires": [
            [
                "4e13729b39b53a93"
            ]
        ]
    },
    {
        "id": "45e8974.fb42ee8",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 21",
        "env": [
            {
                "name": "Channel",
                "value": "21",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2210,
        "wires": [
            [
                "44fff4a7.060ba4"
            ]
        ]
    },
    {
        "id": "44fff4a7.060ba4",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal21",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal21",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2210,
        "wires": [
            [
                "8d447a4ef7c4cb60"
            ]
        ]
    },
    {
        "id": "baae080a.c182c8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal20",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal20",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2160,
        "wires": [
            [
                "7597b324654286f9"
            ]
        ]
    },
    {
        "id": "1561ad43.605253",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 20",
        "env": [
            {
                "name": "Channel",
                "value": "20",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2160,
        "wires": [
            [
                "baae080a.c182c8"
            ]
        ]
    },
    {
        "id": "761da194.76fb",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 22",
        "env": [
            {
                "name": "Channel",
                "value": "22",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2260,
        "wires": [
            [
                "cb551b9a.bd13d"
            ]
        ]
    },
    {
        "id": "cb551b9a.bd13d",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal22",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal22",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2260,
        "wires": [
            [
                "6f3178a650d8f715"
            ]
        ]
    },
    {
        "id": "e046565b.c4feb",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 23",
        "env": [
            {
                "name": "Channel",
                "value": "23",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2310,
        "wires": [
            [
                "83de296d.53474"
            ]
        ]
    },
    {
        "id": "83de296d.53474",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal23",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal23",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2310,
        "wires": [
            [
                "2269e10b0b7231d8"
            ]
        ]
    },
    {
        "id": "747e1688.393e4",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 24",
        "env": [
            {
                "name": "Channel",
                "value": "24",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2360,
        "wires": [
            [
                "fc2a5e3c.ff192"
            ]
        ]
    },
    {
        "id": "a8ab9da7.503428",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 25",
        "env": [
            {
                "name": "Channel",
                "value": "25",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2410,
        "wires": [
            [
                "c8299c5c.f6ad3"
            ]
        ]
    },
    {
        "id": "ef75c8ee.09e148",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 26",
        "env": [
            {
                "name": "Channel",
                "value": "26",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2460,
        "wires": [
            [
                "aa0dd7ec.1d1e5"
            ]
        ]
    },
    {
        "id": "92dda540.64d698",
        "type": "subflow:51296ca5.0c0cb4",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Canal 27",
        "env": [
            {
                "name": "Channel",
                "value": "27",
                "type": "num"
            }
        ],
        "x": 180,
        "y": 2510,
        "wires": [
            [
                "f18a3b7c.1aad6"
            ]
        ]
    },
    {
        "id": "fc2a5e3c.ff192",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal24",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal16",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2360,
        "wires": [
            [
                "3f9c85c8e9580550"
            ]
        ]
    },
    {
        "id": "c8299c5c.f6ad3",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal25",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal25",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2410,
        "wires": [
            [
                "d84e84fdd737275b"
            ]
        ]
    },
    {
        "id": "aa0dd7ec.1d1e5",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal26",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal26",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2460,
        "wires": [
            [
                "4548acf8d88fcc50"
            ]
        ]
    },
    {
        "id": "f18a3b7c.1aad6",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Canal27",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Config",
                "pt": "msg",
                "to": "ES.ED.Canal27",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2510,
        "wires": [
            [
                "514d5ed34a685fd8"
            ]
        ]
    },
    {
        "id": "dd9a0d3d.ab8378",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 2600,
        "wires": [
            [
                "737d9189cedc73ed"
            ]
        ]
    },
    {
        "id": "28e01967.4859fe",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 2650,
        "wires": [
            [
                "079b06c4d753c468"
            ]
        ]
    },
    {
        "id": "27a840fd.42a858",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 2700,
        "wires": [
            [
                "dc7c0e6833d4017c"
            ]
        ]
    },
    {
        "id": "ac563b4d.79d9b8",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 480,
        "y": 2700,
        "wires": [
            [
                "27a840fd.42a858"
            ]
        ]
    },
    {
        "id": "ef425222.75e11",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 480,
        "y": 2650,
        "wires": [
            [
                "28e01967.4859fe"
            ]
        ]
    },
    {
        "id": "a08074ff.25fb48",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 480,
        "y": 2600,
        "wires": [
            [
                "dd9a0d3d.ab8378"
            ]
        ]
    },
    {
        "id": "d1863a1.a519248",
        "type": "inject",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": "30",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 190,
        "y": 2600,
        "wires": [
            [
                "a2a2a85e.6d85f",
                "b1aedb71852e9755",
                "658c36cbd748534d"
            ]
        ]
    },
    {
        "id": "d72d7948.167a58",
        "type": "ui_dropdown",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "label": "Canal",
        "tooltip": "",
        "place": "--",
        "group": "42b2cabf.0c7ea4",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "AN0",
                "value": "AN0",
                "type": "str"
            },
            {
                "label": "AN1",
                "value": "AN1",
                "type": "str"
            },
            {
                "label": "AN2",
                "value": "AN2",
                "type": "str"
            },
            {
                "label": "AN3",
                "value": "AN3",
                "type": "str"
            },
            {
                "label": "AN4",
                "value": "AN4",
                "type": "str"
            },
            {
                "label": "AN5",
                "value": "AN5",
                "type": "str"
            },
            {
                "label": "AN6",
                "value": "AN6",
                "type": "str"
            },
            {
                "label": "AN7",
                "value": "AN7",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 2550,
        "y": 710,
        "wires": [
            [
                "1c9beea7.9ae659"
            ]
        ]
    },
    {
        "id": "e59fb555.39dfe8",
        "type": "ui_dropdown",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "label": "Función",
        "tooltip": "",
        "place": "--",
        "group": "42b2cabf.0c7ea4",
        "order": 5,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "PRESION INTAKE",
                "value": "PRESION_INTAKE",
                "type": "str"
            },
            {
                "label": "PRESION DISCHARGE",
                "value": "PRESION_DISCHARGE",
                "type": "str"
            },
            {
                "label": "PRESION CASING",
                "value": "PRESION_CASING",
                "type": "str"
            },
            {
                "label": "PRESION CABEZA THP",
                "value": "PRESION_CABEZA_THP",
                "type": "str"
            },
            {
                "label": "TEMPERATURA CABEZA THT",
                "value": "TEMPERATURA_CABEZA_THT",
                "type": "str"
            },
            {
                "label": "TEMPERATURA INTAKE",
                "value": "TEMPERATURA_INTAKE",
                "type": "str"
            },
            {
                "label": "TEMPERATURA DISCHARGE",
                "value": "TEMPERATURA_DISCHARGE",
                "type": "str"
            },
            {
                "label": "TEMPERATURA MOTOR",
                "value": "TEMPERATURA_MOTOR",
                "type": "str"
            },
            {
                "label": "REFERENCIA REMOTA (Hz)",
                "value": "REFERENCIA_REMOTA",
                "type": "str"
            },
            {
                "label": "CT TRANSFORMADOR ELEVADOR",
                "value": "CT_TRANSFORMADOR_ELEVADOR",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 2540,
        "y": 760,
        "wires": [
            [
                "fab6cd4c.25aec"
            ]
        ]
    },
    {
        "id": "334cfa5.6777406",
        "type": "ui_text_input",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "label": "Rango Min",
        "tooltip": "",
        "group": "42b2cabf.0c7ea4",
        "order": 8,
        "width": "4",
        "height": "1",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2550,
        "y": 810,
        "wires": [
            [
                "bafbe273.306aa8"
            ]
        ]
    },
    {
        "id": "bcbad123.d96408",
        "type": "ui_text_input",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "label": "Rango Max",
        "tooltip": "",
        "group": "42b2cabf.0c7ea4",
        "order": 11,
        "width": "4",
        "height": "1",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2550,
        "y": 860,
        "wires": [
            [
                "14396baf.99d41c"
            ]
        ]
    },
    {
        "id": "5eef4cc4.48bc2c",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "Vector de Funciones AN",
        "func": "var ES = flow.get(\"ES\");\nvar Funcion = [];\nvar Lista_Funciones = {};\n\nvar Canal = ['AN0','AN1','AN2','AN3','AN4','AN5','AN6','AN7'];\n\nfor(var i=0; i<Canal.length; i++){\n    \n    // Generar el vector con todas las posibles opciones de configuración\n    if( typeof ES.EA[Canal[i]] !== 'undefined'){\n        \n        // Lista Completa\n        Lista_Funciones[Canal[i]] = ES.EA[Canal[i]].Funcion;\n        \n        // Lista Simple\n        if(Funcion.find(element => element == ES.EA[Canal[i]].Funcion) !== ES.EA[Canal[i]].Funcion ){\n            Funcion.push(ES.EA[Canal[i]].Funcion);\n        }\n    }\n    else{\n        delete Lista_Funciones[Canal[i]];\n    }\n    \n}\n\nmsg.payload = {\n    'Lista_Simple':Funcion,\n    'Lista_Completa':Lista_Funciones\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2260,
        "y": 790,
        "wires": [
            [
                "5322e804.acbe18"
            ]
        ]
    },
    {
        "id": "5322e804.acbe18",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ES.EA.Funciones",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2260,
        "y": 830,
        "wires": [
            []
        ]
    },
    {
        "id": "82e33d5e.1187b",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "Cargar configuración del canal",
        "func": "var Canal = flow.get('EA_Config').Canal||null;\nvar ES = flow.get('ES')||null;\n\nmsg.payload = \"Canal no configurado\";\n\n//msg.payload = ES.EA[Canal].Rango;\n//return msg;\n\nif(typeof ES.EA[Canal] !== 'undefined'){\n    msg.Funcion =  {'payload':ES.EA[Canal].Funcion};\n    msg.RangoMin = {'payload':ES.EA[Canal].Rango_Min};\n    msg.RangoMax = {'payload':ES.EA[Canal].Rango_Max};\n}\nelse{\n    msg.Funcion = {'payload':\"Canal no configurado\"};\n    msg.RangoMin =  {'payload':null};\n    msg.RangoMax = {'payload': null};\n}\n\nreturn [msg.Funcion, msg.RangoMin, msg.RangoMax];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2280,
        "y": 880,
        "wires": [
            [
                "e59fb555.39dfe8"
            ],
            [
                "334cfa5.6777406"
            ],
            [
                "bcbad123.d96408"
            ]
        ]
    },
    {
        "id": "88918c98.f333",
        "type": "ui_button",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "group": "42b2cabf.0c7ea4",
        "order": 15,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Borrar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "ES_Config",
        "payloadType": "flow",
        "topic": "",
        "x": 1940,
        "y": 990,
        "wires": [
            [
                "b70a0946.953d7",
                "1b0e6f453fe679e8"
            ]
        ]
    },
    {
        "id": "b70a0946.953d7",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "Borrar configuración del canal",
        "func": "var Canal   = flow.get('EA_Config').Canal||null;\nvar ES      = flow.get('ES')||null;\n\n// Borrar propiedad\ndelete ES.EA[Canal];\n\n// Cargar nueva configuración\nflow.set('ES',ES);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2280,
        "y": 930,
        "wires": []
    },
    {
        "id": "6393896c.e0efd",
        "type": "complete",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "Seleccionar canal",
        "scope": [
            "bb031d32.09f76",
            "1c9beea7.9ae659",
            "c9557dde.602ce8",
            "ee89b28c.cce778",
            "5bac8f8f.62b8e",
            "e433c433.141818",
            "c0af715a.2d774",
            "33588963.6948d6",
            "9b7b0b9e.5f7dd",
            "842f214f.04ba7"
        ],
        "uncaught": false,
        "x": 1990,
        "y": 880,
        "wires": [
            [
                "82e33d5e.1187b"
            ]
        ]
    },
    {
        "id": "bb031d32.09f76",
        "type": "ui_button",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "group": "42b2cabf.0c7ea4",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Configurar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "EA_Config",
        "payloadType": "flow",
        "topic": "",
        "x": 2700,
        "y": 950,
        "wires": [
            [
                "3b6c080b.f3913",
                "1b0e6f453fe679e8"
            ]
        ]
    },
    {
        "id": "1c9beea7.9ae659",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "EA_Config.Canal",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2730,
        "y": 710,
        "wires": [
            []
        ]
    },
    {
        "id": "fab6cd4c.25aec",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "EA_Config.Funcion",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2740,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "3b6c080b.f3913",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "property": "payload.Canal",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "AN0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AN1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AN2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AN3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AN4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AN5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AN6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AN7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 2850,
        "y": 950,
        "wires": [
            [
                "c9557dde.602ce8"
            ],
            [
                "ee89b28c.cce778"
            ],
            [
                "5bac8f8f.62b8e"
            ],
            [
                "e433c433.141818"
            ],
            [
                "c0af715a.2d774"
            ],
            [
                "33588963.6948d6"
            ],
            [
                "9b7b0b9e.5f7dd"
            ],
            [
                "842f214f.04ba7"
            ]
        ]
    },
    {
        "id": "ee89b28c.cce778",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "AN1",
        "rules": [
            {
                "t": "set",
                "p": "ES.EA.AN1.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN1.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN1.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "bafbe273.306aa8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "EA_Config.Rango_Min",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2770,
        "y": 810,
        "wires": [
            []
        ]
    },
    {
        "id": "14396baf.99d41c",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "EA_Config.Rango_Max",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2770,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "974d273f.d93b38",
        "type": "complete",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "Configuración AN Completa",
        "scope": [
            "b70a0946.953d7",
            "ee89b28c.cce778",
            "5bac8f8f.62b8e",
            "e433c433.141818",
            "c0af715a.2d774",
            "c9557dde.602ce8",
            "33588963.6948d6",
            "9b7b0b9e.5f7dd",
            "842f214f.04ba7"
        ],
        "uncaught": false,
        "x": 1960,
        "y": 840,
        "wires": [
            [
                "5eef4cc4.48bc2c",
                "82e33d5e.1187b"
            ]
        ]
    },
    {
        "id": "5bac8f8f.62b8e",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "AN2",
        "rules": [
            {
                "t": "set",
                "p": "ES.EA.AN2.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN2.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN2.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "e433c433.141818",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "AN3",
        "rules": [
            {
                "t": "set",
                "p": "ES.EA.AN3.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN3.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN3.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "c0af715a.2d774",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "AN4",
        "rules": [
            {
                "t": "set",
                "p": "ES.EA.AN4.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN4.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN4.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "c9557dde.602ce8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "AN0",
        "rules": [
            {
                "t": "set",
                "p": "ES.EA.AN0.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN0.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN0.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "33588963.6948d6",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "AN5",
        "rules": [
            {
                "t": "set",
                "p": "ES.EA.AN5.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN5.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN5.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "9b7b0b9e.5f7dd",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "AN6",
        "rules": [
            {
                "t": "set",
                "p": "ES.EA.AN6.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN6.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN6.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "842f214f.04ba7",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "AN7",
        "rules": [
            {
                "t": "set",
                "p": "ES.EA.AN7.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN7.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.EA.AN7.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "5c9b452a467b8d49",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "EA",
        "func": "Canal   = flow.get('ES');\nIO      = global.get('IO','memoryOnly');\n\nvar Funciones   = [];\nvar Minimo      = [];\nvar Maximo      = [];\n\n// Entradas Analogicas\nvar otro = [0,1,2,3];\n\nfor(var i = 0; i<otro.length; i++){\n    var index= 'AN'+otro[i];\n    if(typeof Canal.EA[index] != 'undefined'){\n        Funciones.push(Canal.EA[index].Funcion);\n        Minimo.push(Canal.EA[index].Rango_Min);\n        Maximo.push(Canal.EA[index].Rango_Max);\n    }\n    else{\n        Funciones.push('Ninguno');\n        Minimo.push('--');\n        Maximo.push('--');\n    }\n}\nvar data    = {};\nmsg.payload = [];\nfor(var j = 0; j<otro.length; j++){\n    data = {\n        'Canales'   : otro[j], \n        'Funciones' : Funciones[j],\n        'Minimos'   : Minimo[j],\n        'Maximos'   : Maximo[j]  \n    }\n    msg.payload.push(data);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2600,
        "y": 990,
        "wires": [
            [
                "c4e78fbf68f418d3"
            ]
        ]
    },
    {
        "id": "1b0e6f453fe679e8",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2470,
        "y": 990,
        "wires": [
            [
                "5c9b452a467b8d49"
            ]
        ]
    },
    {
        "id": "c4e78fbf68f418d3",
        "type": "ui_table",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "group": "4a58744b.a270cc",
        "name": "",
        "order": 1,
        "width": "9",
        "height": "7",
        "columns": [
            {
                "field": "Canales",
                "title": "#",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Funciones",
                "title": "Función",
                "width": "55%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Minimos",
                "title": "Mín.",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Maximos",
                "title": "Máx.",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 2720,
        "y": 990,
        "wires": []
    },
    {
        "id": "1b6da6d12918e8a2",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 2365,
        "y": 1020,
        "wires": [
            [
                "1b0e6f453fe679e8"
            ]
        ]
    },
    {
        "id": "3d932183.a9966e",
        "type": "function",
        "z": "4973034f.ff5fac",
        "name": "AI",
        "func": "var AI      = env.get(\"Channel\");\nvar Req     = 'IO.AI.'+AI;\nmsg.payload = global.get(Req,'memoryOnly');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 30,
        "wires": [
            []
        ]
    },
    {
        "id": "cde14508.520038",
        "type": "inject",
        "z": "4973034f.ff5fac",
        "name": "500 ms",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Channel",
        "payloadType": "env",
        "x": 100,
        "y": 30,
        "wires": [
            [
                "3d932183.a9966e"
            ]
        ]
    },
    {
        "id": "3a88048e.fa8db4",
        "type": "subflow:4973034f.ff5fac",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN0",
        "env": [
            {
                "name": "Channel",
                "value": "0",
                "type": "num"
            }
        ],
        "x": 1890,
        "y": 1220,
        "wires": [
            [
                "878b6c3a.00eaf"
            ]
        ]
    },
    {
        "id": "1e5a15c3.d3674a",
        "type": "subflow:4973034f.ff5fac",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN1",
        "env": [
            {
                "name": "Channel",
                "value": "1",
                "type": "num"
            }
        ],
        "x": 1890,
        "y": 1270,
        "wires": [
            [
                "3adbec4e.aae574"
            ]
        ]
    },
    {
        "id": "1ac9ed41.2b8e73",
        "type": "subflow:4973034f.ff5fac",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN2",
        "env": [
            {
                "name": "Channel",
                "value": "2",
                "type": "num"
            }
        ],
        "x": 1890,
        "y": 1320,
        "wires": [
            [
                "a220e289.3ca13"
            ]
        ]
    },
    {
        "id": "de32c3da.8ba478",
        "type": "subflow:4973034f.ff5fac",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN3",
        "env": [
            {
                "name": "Channel",
                "value": "3",
                "type": "num"
            }
        ],
        "x": 1890,
        "y": 1370,
        "wires": [
            [
                "bbd8841e.d88cf8"
            ]
        ]
    },
    {
        "id": "e4db17d9.6120e",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Normalizar/Escalizar",
        "func": "var EA = flow.get('ES').EA || null;\nvar canal = msg.topic;\nvar b = null;\nvar min = null;\nvar max = null;\n\nif(typeof EA[canal] !== 'undefined'){\n    if(typeof EA[canal].Rango_Min !== 'undefined' && EA[canal].Rango_Min !== null){\n        min = parseFloat(EA[canal].Rango_Min);\n    }\n    if(typeof EA[canal].Rango_Max !== \"undefined\" && EA[canal].Rango_Max !== null){\n        max = parseFloat(EA[canal].Rango_Max);\n    }\n    if(min !== null && max !== null){\n        b = [min,max];\n    } \n}\n\n// Valor a mapear\n//var value = Object.values(msg.payload)[0];\nvar value = msg.payload\n// Rango del valor a mapear\nvar a = [200,1009];\n\n// Mapeo\nif(b !== null ){\n    var t = (b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]));\n    // Saturación\n    if(t > b[1]){    t = b[1];}\n    else if(t < b[0]){ t = b[0];}\n    // Asignar payload\n    msg.payload = parseFloat(t.toFixed(3));\n}\nelse{\n    // Asignar payload\n    msg.payload = 0;\n}\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2180,
        "y": 1220,
        "wires": [
            [
                "f8aba240.950148",
                "957a71c9.d6fe98"
            ]
        ]
    },
    {
        "id": "878b6c3a.00eaf",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN0",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AN0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "function",
                "pt": "msg",
                "to": "ES.EA.AN0.Funcion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1220,
        "wires": [
            [
                "e4db17d9.6120e"
            ]
        ]
    },
    {
        "id": "3adbec4e.aae574",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN1",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AN1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "function",
                "pt": "msg",
                "to": "ES.EA.AN1.Funcion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1270,
        "wires": [
            [
                "18c47ba8.228914"
            ]
        ]
    },
    {
        "id": "a220e289.3ca13",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN2",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AN2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "function",
                "pt": "msg",
                "to": "ES.EA.AN2.Funcion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1320,
        "wires": [
            [
                "3df4fb63.5f8cbc"
            ]
        ]
    },
    {
        "id": "bbd8841e.d88cf8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN3",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AN3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "function",
                "pt": "msg",
                "to": "ES.EA.AN3.Funcion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1370,
        "wires": [
            [
                "cf4ce76f.283b48"
            ]
        ]
    },
    {
        "id": "147f9005.665838",
        "type": "subflow:4973034f.ff5fac",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN4",
        "env": [
            {
                "name": "Channel",
                "value": "4",
                "type": "num"
            }
        ],
        "x": 1890,
        "y": 1420,
        "wires": [
            [
                "b93fb769.b2bb28"
            ]
        ]
    },
    {
        "id": "37869600.1de64a",
        "type": "subflow:4973034f.ff5fac",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN5",
        "env": [
            {
                "name": "Channel",
                "value": "5",
                "type": "num"
            }
        ],
        "x": 1890,
        "y": 1470,
        "wires": [
            [
                "2061f379.d14bbc"
            ]
        ]
    },
    {
        "id": "25cc95aa.4ffc02",
        "type": "subflow:4973034f.ff5fac",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN6",
        "env": [
            {
                "name": "Channel",
                "value": "6",
                "type": "num"
            }
        ],
        "x": 1890,
        "y": 1520,
        "wires": [
            [
                "3497868c.810b82"
            ]
        ]
    },
    {
        "id": "ef4e68b2.e60838",
        "type": "subflow:4973034f.ff5fac",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN7",
        "env": [
            {
                "name": "Channel",
                "value": "7",
                "type": "num"
            }
        ],
        "x": 1890,
        "y": 1570,
        "wires": [
            [
                "f2fd3d81.a906d"
            ]
        ]
    },
    {
        "id": "b93fb769.b2bb28",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN4",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AN4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "function",
                "pt": "msg",
                "to": "ES.EA.AN4.Funcion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1420,
        "wires": [
            [
                "3e5019c8.17d316"
            ]
        ]
    },
    {
        "id": "2061f379.d14bbc",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN5",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AN5",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "function",
                "pt": "msg",
                "to": "ES.EA.AN5.Funcion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1470,
        "wires": [
            [
                "3854e43c.ec8264"
            ]
        ]
    },
    {
        "id": "3497868c.810b82",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN6",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AN6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "function",
                "pt": "msg",
                "to": "ES.EA.AN6.Funcion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1520,
        "wires": [
            [
                "a7252de6.c8312"
            ]
        ]
    },
    {
        "id": "f2fd3d81.a906d",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "AN7",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AN7",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "function",
                "pt": "msg",
                "to": "ES.EA.AN7.Funcion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1570,
        "wires": [
            [
                "88f2ffd7.25d348"
            ]
        ]
    },
    {
        "id": "f8aba240.950148",
        "type": "debug",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2410,
        "y": 1220,
        "wires": []
    },
    {
        "id": "18c47ba8.228914",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Normalizar/Escalizar",
        "func": "var EA = flow.get('ES').EA || null;\nvar canal = msg.topic;\nvar b = null;\nvar min = null;\nvar max = null;\n\nif(typeof EA[canal] !== 'undefined'){\n    if(typeof EA[canal].Rango_Min !== 'undefined' && EA[canal].Rango_Min !== null){\n        min = parseFloat(EA[canal].Rango_Min);\n    }\n    if(typeof EA[canal].Rango_Max !== \"undefined\" && EA[canal].Rango_Max !== null){\n        max = parseFloat(EA[canal].Rango_Max);\n    }\n    if(min !== null && max !== null){\n        b = [min,max];\n    } \n}\n\n// Valor a mapear\n//var value = Object.values(msg.payload)[0];\nvar value = msg.payload\n// Rango del valor a mapear [0,5] señal eléctrica.\nvar a = [200,1009];\n\n// Mapeo\nif(b !== null ){\n    var t = b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n    // Saturación\n    if(t > b[1]){    t = b[1];}\n    else if(t < b[0]){ t = b[0];}\n    // Asignar payload\n    msg.payload = parseFloat(t.toFixed(3));\n}\nelse{\n    // Asignar payload\n    msg.payload = 0;\n}\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2180,
        "y": 1270,
        "wires": [
            [
                "f8aba240.950148",
                "957a71c9.d6fe98"
            ]
        ]
    },
    {
        "id": "3df4fb63.5f8cbc",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Normalizar/Escalizar",
        "func": "var EA = flow.get('ES').EA || null;\nvar canal = msg.topic;\nvar b = null;\nvar min = null;\nvar max = null;\n\nif(typeof EA[canal] !== 'undefined'){\n    if(typeof EA[canal].Rango_Min !== 'undefined' && EA[canal].Rango_Min !== null){\n        min = parseFloat(EA[canal].Rango_Min);\n    }\n    if(typeof EA[canal].Rango_Max !== \"undefined\" && EA[canal].Rango_Max !== null){\n        max = parseFloat(EA[canal].Rango_Max);\n    }\n    if(min !== null && max !== null){\n        b = [min,max];\n    } \n}\n\n// Valor a mapear\n//var value = Object.values(msg.payload)[0];\nvar value = msg.payload\n// Rango del valor a mapear [0,5] señal eléctrica.\nvar a = [200,1009];\n\n// Mapeo\nif(b !== null ){\n    var t = b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n    // Saturación\n    if(t > b[1]){    t = b[1];}\n    else if(t < b[0]){ t = b[0];}\n    // Asignar payload\n    msg.payload = parseFloat(t.toFixed(3));\n}\nelse{\n    // Asignar payload\n    msg.payload = 0;\n}\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2180,
        "y": 1320,
        "wires": [
            [
                "f8aba240.950148",
                "957a71c9.d6fe98"
            ]
        ]
    },
    {
        "id": "cf4ce76f.283b48",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Normalizar/Escalizar",
        "func": "var EA = flow.get('ES').EA || null;\nvar canal = msg.topic;\nvar b = null;\nvar min = null;\nvar max = null;\n\nif(typeof EA[canal] !== 'undefined'){\n    if(typeof EA[canal].Rango_Min !== 'undefined' && EA[canal].Rango_Min !== null){\n        min = parseFloat(EA[canal].Rango_Min);\n    }\n    if(typeof EA[canal].Rango_Max !== \"undefined\" && EA[canal].Rango_Max !== null){\n        max = parseFloat(EA[canal].Rango_Max);\n    }\n    if(min !== null && max !== null){\n        b = [min,max];\n    } \n}\n\n// Valor a mapear\n//var value = Object.values(msg.payload)[0];\nvar value = msg.payload\n// Rango del valor a mapear [0,5] señal eléctrica.\nvar a = [200,1009];\n\n// Mapeo\nif(b !== null ){\n    var t = b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n    // Saturación\n    if(t > b[1]){    t = b[1];}\n    else if(t < b[0]){ t = b[0];}\n    // Asignar payload\n    msg.payload = parseFloat(t.toFixed(3));\n}\nelse{\n    // Asignar payload\n    msg.payload = 0;\n}\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2180,
        "y": 1370,
        "wires": [
            [
                "f8aba240.950148",
                "957a71c9.d6fe98"
            ]
        ]
    },
    {
        "id": "3e5019c8.17d316",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Normalizar/Escalizar",
        "func": "var EA = flow.get('ES').EA || null;\nvar canal = msg.topic;\nvar b = null;\nvar min = null;\nvar max = null;\n\nif(typeof EA[canal] !== 'undefined'){\n    if(typeof EA[canal].Rango_Min !== 'undefined' && EA[canal].Rango_Min !== null){\n        min = parseFloat(EA[canal].Rango_Min);\n    }\n    if(typeof EA[canal].Rango_Max !== \"undefined\" && EA[canal].Rango_Max !== null){\n        max = parseFloat(EA[canal].Rango_Max);\n    }\n    if(min !== null && max !== null){\n        b = [min,max];\n    } \n}\n\n// Valor a mapear\n//var value = Object.values(msg.payload)[0];\nvar value = msg.payload\n// Rango del valor a mapear [0,5] señal eléctrica.\nvar a = [200,1009];\n\n// Mapeo\nif(b !== null ){\n    var t = b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n    // Saturación\n    if(t > b[1]){    t = b[1];}\n    else if(t < b[0]){ t = b[0];}\n    // Asignar payload\n    msg.payload = parseFloat(t.toFixed(3));\n}\nelse{\n    // Asignar payload\n    msg.payload = 0;\n}\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2180,
        "y": 1420,
        "wires": [
            [
                "f8aba240.950148",
                "957a71c9.d6fe98"
            ]
        ]
    },
    {
        "id": "3854e43c.ec8264",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Normalizar/Escalizar",
        "func": "var EA = flow.get('ES').EA || null;\nvar canal = msg.topic;\nvar b = null;\nvar min = null;\nvar max = null;\n\nif(typeof EA[canal] !== 'undefined'){\n    if(typeof EA[canal].Rango_Min !== 'undefined' && EA[canal].Rango_Min !== null){\n        min = parseFloat(EA[canal].Rango_Min);\n    }\n    if(typeof EA[canal].Rango_Max !== \"undefined\" && EA[canal].Rango_Max !== null){\n        max = parseFloat(EA[canal].Rango_Max);\n    }\n    if(min !== null && max !== null){\n        b = [min,max];\n    } \n}\n\n// Valor a mapear\n//var value = Object.values(msg.payload)[0];\nvar value = msg.payload\n// Rango del valor a mapear [0,5] señal eléctrica.\nvar a = [200,1009];\n\n// Mapeo\nif(b !== null ){\n    var t = b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n    // Saturación\n    if(t > b[1]){    t = b[1];}\n    else if(t < b[0]){ t = b[0];}\n    // Asignar payload\n    msg.payload = parseFloat(t.toFixed(3));\n}\nelse{\n    // Asignar payload\n    msg.payload = 0;\n}\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2180,
        "y": 1470,
        "wires": [
            [
                "f8aba240.950148",
                "957a71c9.d6fe98"
            ]
        ]
    },
    {
        "id": "a7252de6.c8312",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Normalizar/Escalizar",
        "func": "var EA = flow.get('ES').EA || null;\nvar canal = msg.topic;\nvar b = null;\nvar min = null;\nvar max = null;\n\nif(typeof EA[canal] !== 'undefined'){\n    if(typeof EA[canal].Rango_Min !== 'undefined' && EA[canal].Rango_Min !== null){\n        min = parseFloat(EA[canal].Rango_Min);\n    }\n    if(typeof EA[canal].Rango_Max !== \"undefined\" && EA[canal].Rango_Max !== null){\n        max = parseFloat(EA[canal].Rango_Max);\n    }\n    if(min !== null && max !== null){\n        b = [min,max];\n    } \n}\n\n// Valor a mapear\n//var value = Object.values(msg.payload)[0];\nvar value = msg.payload\n// Rango del valor a mapear [0,5] señal eléctrica.\nvar a = [200,1009];\n\n// Mapeo\nif(b !== null ){\n    var t = b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n    // Saturación\n    if(t > b[1]){    t = b[1];}\n    else if(t < b[0]){ t = b[0];}\n    // Asignar payload\n    msg.payload = parseFloat(t.toFixed(3));\n}\nelse{\n    // Asignar payload\n    msg.payload = 0;\n}\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2180,
        "y": 1520,
        "wires": [
            [
                "f8aba240.950148",
                "957a71c9.d6fe98"
            ]
        ]
    },
    {
        "id": "88f2ffd7.25d348",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Normalizar/Escalizar",
        "func": "var EA = flow.get('ES').EA || null;\nvar canal = msg.topic;\nvar b = null;\nvar min = null;\nvar max = null;\n\nif(typeof EA[canal] !== 'undefined'){\n    if(typeof EA[canal].Rango_Min !== 'undefined' && EA[canal].Rango_Min !== null){\n        min = parseFloat(EA[canal].Rango_Min);\n    }\n    if(typeof EA[canal].Rango_Max !== \"undefined\" && EA[canal].Rango_Max !== null){\n        max = parseFloat(EA[canal].Rango_Max);\n    }\n    if(min !== null && max !== null){\n        b = [min,max];\n    } \n}\n\n// Valor a mapear\n//var value = Object.values(msg.payload)[0];\nvar value = msg.payload\n// Rango del valor a mapear [0,5] señal eléctrica.\nvar a = [200,1009];\n\n// Mapeo\nif(b !== null ){\n    var t = b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n    // Saturación\n    if(t > b[1]){    t = b[1];}\n    else if(t < b[0]){ t = b[0];}\n    // Asignar payload\n    msg.payload = parseFloat(t.toFixed(3));\n}\nelse{\n    // Asignar payload\n    msg.payload = 0;\n}\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2180,
        "y": 1570,
        "wires": [
            [
                "f8aba240.950148",
                "957a71c9.d6fe98"
            ]
        ]
    },
    {
        "id": "1d28383f.f01808",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Temperatura de descarga",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.AI[\"Temperatura de descarga\"]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2950,
        "y": 1390,
        "wires": [
            []
        ]
    },
    {
        "id": "62212e6.f902cd",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Temperatura de entrada",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.AI[\"Temperatura de entrada\"]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2950,
        "y": 1350,
        "wires": [
            []
        ]
    },
    {
        "id": "c861991c.b55738",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Presión de descarga",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.AI[\"Presión de descarga\"]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 1310,
        "wires": [
            []
        ]
    },
    {
        "id": "cd379a79.9a98",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Presión de entrada",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.AI[\"Presión de entrada\"]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 1270,
        "wires": [
            []
        ]
    },
    {
        "id": "957a71c9.d6fe98",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Ruteo de señales",
        "property": "function",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PRESION_INTAKE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PRESION_DISCHARGE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TEMPERATURA_INTAKE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TEMPERATURA_DISCHARGE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TEMPERATURA_MOTOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PRESION_CASING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PRESION_CABEZA_THP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TEMPERATURA_CABEZA_THT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CT_TRANSFORMADOR_ELEVADOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REFERENCIA_REMOTA",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 11,
        "x": 2640,
        "y": 1610,
        "wires": [
            [
                "cd379a79.9a98"
            ],
            [
                "c861991c.b55738"
            ],
            [
                "62212e6.f902cd"
            ],
            [
                "1d28383f.f01808"
            ],
            [
                "736848aa.a139b"
            ],
            [
                "613538c3.5a6e2"
            ],
            [
                "ac13eab3.b694b8"
            ],
            [
                "8fdf8ee9.0bd3d"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "61bfc03.335464",
        "type": "inject",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": "30",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2430,
        "y": 1260,
        "wires": [
            [
                "55eb0949.d6d6c8",
                "5162edc5.fd86ec",
                "98d887d0.c0b08",
                "a4715132.442a68",
                "67b09cbc.c12944",
                "5acff31a.72921c",
                "5ae9830f.47b96c",
                "e944556b.827528"
            ]
        ]
    },
    {
        "id": "55eb0949.d6d6c8",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Limpiar PIntake",
        "func": "var ES = Object.values(flow.get(\"ES.EA.Funciones.Lista_Simple\"));\nvar status = ES.indexOf(\"PRESION_INTAKE\");\n\nif(status != -1){\n    return;\n} \nelse{\n    return {'payload':0};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2630,
        "y": 1220,
        "wires": [
            [
                "cd379a79.9a98"
            ]
        ]
    },
    {
        "id": "5162edc5.fd86ec",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Limpiar PDischarge",
        "func": "var ES = Object.values(flow.get(\"ES.EA.Funciones.Lista_Simple\"));\nvar status = ES.indexOf(\"PRESION_DISCHARGE\");\n\nif(status != -1){\n    return;\n} \nelse{\n    return {'payload':0};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2640,
        "y": 1260,
        "wires": [
            [
                "c861991c.b55738"
            ]
        ]
    },
    {
        "id": "98d887d0.c0b08",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Limpiar TIntake",
        "func": "var ES = Object.values(flow.get(\"ES.EA.Funciones.Lista_Simple\"));\nvar status = ES.indexOf(\"TEMPERATURA_INTAKE\");\n\nif(status != -1){\n    return;\n} \nelse{\n    return {'payload':0};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2630,
        "y": 1300,
        "wires": [
            [
                "62212e6.f902cd"
            ]
        ]
    },
    {
        "id": "a4715132.442a68",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Limpiar TDischarge",
        "func": "var ES = Object.values(flow.get(\"ES.EA.Funciones.Lista_Simple\"));\nvar status = ES.indexOf(\"TEMPERATURA_DISCHARGE\");\n\nif(status != -1){\n    return;\n} \nelse{\n    return {'payload':0};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2640,
        "y": 1340,
        "wires": [
            [
                "1d28383f.f01808"
            ]
        ]
    },
    {
        "id": "736848aa.a139b",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Temperatura de motor",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.AI[\"Temperatura de motor\"]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 1430,
        "wires": [
            []
        ]
    },
    {
        "id": "67b09cbc.c12944",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Limpiar TMotor",
        "func": "var ES = Object.values(flow.get(\"ES.EA.Funciones.Lista_Simple\"));\nvar status = ES.indexOf(\"TEMPERATURA_MOTOR\");\n\nif(status != -1){\n    return;\n} \nelse{\n    return {'payload':0};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2630,
        "y": 1380,
        "wires": [
            [
                "736848aa.a139b"
            ]
        ]
    },
    {
        "id": "613538c3.5a6e2",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Presión de casing",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.AI[\"Presión de casing\"]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 1470,
        "wires": [
            []
        ]
    },
    {
        "id": "5acff31a.72921c",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Limpiar PCasing",
        "func": "var ES = Object.values(flow.get(\"ES.EA.Funciones.Lista_Simple\"));\nvar status = ES.indexOf(\"PRESION_CASING\");\n\nif(status != -1){\n    return;\n} \nelse{\n    return {'payload':0};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2630,
        "y": 1420,
        "wires": [
            [
                "613538c3.5a6e2"
            ]
        ]
    },
    {
        "id": "5ae9830f.47b96c",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Limpiar PCabezaTHP",
        "func": "var ES = Object.values(flow.get(\"ES.EA.Funciones.Lista_Simple\"));\nvar status = ES.indexOf(\"PRESION_CABEZA_THP\");\n\nif(status != -1){\n    return;\n} \nelse{\n    return {'payload':0};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2650,
        "y": 1460,
        "wires": [
            [
                "ac13eab3.b694b8"
            ]
        ]
    },
    {
        "id": "ac13eab3.b694b8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Presión de cabeza THP",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.AI[\"Presión de cabeza THP\"]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2950,
        "y": 1510,
        "wires": [
            []
        ]
    },
    {
        "id": "e944556b.827528",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Limpiar TCabezaTHT",
        "func": "var ES = Object.values(flow.get(\"ES.EA.Funciones.Lista_Simple\"));\nvar status = ES.indexOf(\"TEMPERATURA_CABEZA_THT\");\n\nif(status != -1){\n    return;\n} \nelse{\n    return {'payload':0};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2650,
        "y": 1500,
        "wires": [
            [
                "8fdf8ee9.0bd3d"
            ]
        ]
    },
    {
        "id": "8fdf8ee9.0bd3d",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "Temperatura de cabeza THT",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.AI[\"Temperatura de cabeza THT\"]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 1550,
        "wires": [
            []
        ]
    },
    {
        "id": "fbfdc632.b7ce48",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal32",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal32.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal32.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 2910,
        "wires": [
            []
        ]
    },
    {
        "id": "46eea134.b469d",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal33",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal33.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal33.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 2950,
        "wires": [
            []
        ]
    },
    {
        "id": "a08e63a7.f53368",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal34",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal34.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal34.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 2990,
        "wires": [
            []
        ]
    },
    {
        "id": "7cb731aa.76fe4",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal35",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal35.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal35.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 3030,
        "wires": [
            []
        ]
    },
    {
        "id": "f4b0d9f.1a26428",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal36",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal36.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal36.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 3070,
        "wires": [
            []
        ]
    },
    {
        "id": "9f3404ba.ce1bf",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal37",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal37.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal37.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 3110,
        "wires": [
            []
        ]
    },
    {
        "id": "80ada9ce.dd6e78",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal38",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal38.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal38.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 3150,
        "wires": [
            []
        ]
    },
    {
        "id": "81ed1f96.efd728",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal39",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal39.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal39.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 3190,
        "wires": [
            []
        ]
    },
    {
        "id": "180718a5.baba87",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal40",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal40.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal40.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 3230,
        "wires": [
            []
        ]
    },
    {
        "id": "eccd3519.8cb2d",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal41",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal41.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal41.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 3270,
        "wires": [
            []
        ]
    },
    {
        "id": "abe29ed.1fc52e",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal42",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal42.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal42.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 3310,
        "wires": [
            []
        ]
    },
    {
        "id": "8595327d.ba485",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal43",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Canal43.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SD.Canal43.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 3350,
        "wires": [
            []
        ]
    },
    {
        "id": "57c4ecc7.38c9ac",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Canal",
        "property": "payload.Canal",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "32",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "33",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "34",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "35",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "36",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "37",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "38",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "39",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "40",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "41",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "42",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "43",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 12,
        "x": 1030,
        "y": 3110,
        "wires": [
            [
                "fbfdc632.b7ce48"
            ],
            [
                "46eea134.b469d"
            ],
            [
                "a08e63a7.f53368"
            ],
            [
                "7cb731aa.76fe4"
            ],
            [
                "f4b0d9f.1a26428"
            ],
            [
                "9f3404ba.ce1bf"
            ],
            [
                "80ada9ce.dd6e78"
            ],
            [
                "81ed1f96.efd728"
            ],
            [
                "180718a5.baba87"
            ],
            [
                "eccd3519.8cb2d"
            ],
            [
                "abe29ed.1fc52e"
            ],
            [
                "8595327d.ba485"
            ]
        ]
    },
    {
        "id": "5476c23f.573384",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "SD_Config.TipoInstrumento",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 2990,
        "wires": [
            []
        ]
    },
    {
        "id": "9f6b3c9b.c3ac28",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "SD_Config.Funcion",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "c29f37e6.63b16",
        "type": "ui_dropdown",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "label": "Función",
        "tooltip": "",
        "place": "--",
        "group": "999747fd.0e43c8",
        "order": 8,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "CILA2S en marcha",
                "value": "CILA2S en marcha",
                "type": "str"
            },
            {
                "label": "Falla general",
                "value": "Falla general",
                "type": "str"
            },
            {
                "label": "Bypass filtro de armónicos",
                "value": "Bypass filtro de armónicos",
                "type": "str"
            },
            {
                "label": "Disparo breaker módulo ESD",
                "value": "Disparo breaker módulo ESD",
                "type": "str"
            },
            {
                "label": "Simulación",
                "value": "Simulación",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 2940,
        "wires": [
            [
                "9f6b3c9b.c3ac28",
                "ab1db35992368238"
            ]
        ]
    },
    {
        "id": "c373d753.396418",
        "type": "ui_dropdown",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "label": "Tipo",
        "tooltip": "",
        "place": "--",
        "group": "999747fd.0e43c8",
        "order": 5,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Normalmente cerrada",
                "value": "NC",
                "type": "str"
            },
            {
                "label": "Normalmente abierta",
                "value": "NO",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 2990,
        "wires": [
            [
                "5476c23f.573384"
            ]
        ]
    },
    {
        "id": "512df90.8039408",
        "type": "ui_button",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "group": "999747fd.0e43c8",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Configurar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "SD_Config",
        "payloadType": "flow",
        "topic": "",
        "x": 860,
        "y": 3110,
        "wires": [
            [
                "57c4ecc7.38c9ac",
                "7f496609020b2c65",
                "290e6a8105e84287"
            ]
        ]
    },
    {
        "id": "90e165b4.870ae",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Borrar configuración del canal",
        "func": "var Canal   = flow.get('SD_Config').Canal||null;\nvar ES      = flow.get('ES')||null;\n\n// Concatenar Canal\nvar Canalmsg = \"Canal\" + Canal;\n\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:Canalmsg});\n\n// Borrar propiedad\ndelete ES.SD[Canalmsg];\n\n// Cargar nueva configuración\nflow.set('ES',ES);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 3090,
        "wires": []
    },
    {
        "id": "dc847f0d.6c9988",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Cargar configuración del canal",
        "func": "var Canal = flow.get('SD_Config').Canal||null;\nvar ES = flow.get('ES')||null;\n\n// Concatenar Canal\nvar Canalmsg = \"Canal\" + Canal;\n\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:Canalmsg});\n\n// Responder\nvar Resp = ES.SD[Canalmsg];\nmsg.payload = \"Canal no configurado\";\n\nif(typeof Resp !== 'undefined'){\n    msg.Funcion = {'payload':Resp.Funcion};\n    msg.Tipo = {'payload':Resp.Tipo};\n    \n}\nelse{\n    msg.Funcion = {'payload':\"Canal no configurado\"};\n    msg.Tipo =  {'payload':\"Ninguno\"};\n}\n\nreturn [msg.Funcion, msg.Tipo];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 2960,
        "wires": [
            [
                "c29f37e6.63b16"
            ],
            [
                "c373d753.396418"
            ]
        ]
    },
    {
        "id": "1534fa6c.e8a65e",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "SD_Config.Canal",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 2890,
        "wires": [
            []
        ]
    },
    {
        "id": "d0dec1ce.b76b2",
        "type": "ui_dropdown",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "label": "Canal",
        "tooltip": "",
        "place": "--",
        "group": "999747fd.0e43c8",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 720,
        "y": 2890,
        "wires": [
            [
                "1534fa6c.e8a65e"
            ]
        ]
    },
    {
        "id": "92cb81f5.08589",
        "type": "complete",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Conf SD Completa",
        "scope": [
            "fbfdc632.b7ce48",
            "46eea134.b469d",
            "a08e63a7.f53368",
            "7cb731aa.76fe4",
            "f4b0d9f.1a26428",
            "9f3404ba.ce1bf",
            "80ada9ce.dd6e78",
            "81ed1f96.efd728",
            "180718a5.baba87",
            "eccd3519.8cb2d",
            "abe29ed.1fc52e",
            "8595327d.ba485",
            "512df90.8039408",
            "90e165b4.870ae",
            "1534fa6c.e8a65e"
        ],
        "uncaught": false,
        "x": 210,
        "y": 2960,
        "wires": [
            [
                "dc847f0d.6c9988",
                "8c81df12.73e348"
            ]
        ]
    },
    {
        "id": "83d6f70d.fe31c",
        "type": "ui_button",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "group": "999747fd.0e43c8",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Borrar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "ES_Config",
        "payloadType": "flow",
        "topic": "",
        "x": 270,
        "y": 3150,
        "wires": [
            [
                "90e165b4.870ae",
                "7f496609020b2c65",
                "290e6a8105e84287"
            ]
        ]
    },
    {
        "id": "8c81df12.73e348",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Vector de Funciones SD",
        "func": "var ES = flow.get(\"ES\");\nvar Funcion = [];\nvar Lista_Funciones = {};\n\nvar Canal = [32,33,34,35,36,36,38,39,40,41,42,43];\n\nfor(var i=0; i<Canal.length; i++){\n    \n    // Concatenar el texto del canal\n    Canalmsg = 'Canal' + Canal[i];\n    \n    // Generar el vector con todas las posibles opciones de configuración\n    if( typeof ES.SD[Canalmsg] !== 'undefined'){\n        \n        // Lista Completa\n        Lista_Funciones[Canal[i]] = ES.SD[Canalmsg].Funcion;\n        \n        // Lista Simple\n        if(Funcion.find(element => element == ES.SD[Canalmsg].Funcion) !== ES.SD[Canalmsg].Funcion ){\n            Funcion.push(ES.SD[Canalmsg].Funcion);\n        }\n    }\n    else{\n        delete Lista_Funciones[Canal[i]];\n    }\n    \n}\n\nmsg.payload = {\n    'Lista_Simple':Funcion,\n    'Lista_Completa':Lista_Funciones\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 3010,
        "wires": [
            [
                "e8f6e11a.ede6c8"
            ]
        ]
    },
    {
        "id": "e8f6e11a.ede6c8",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ES.SD.Funciones",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 3050,
        "wires": [
            []
        ]
    },
    {
        "id": "bd7dd23a7e43554f",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "DO",
        "func": "Canal   = flow.get('ES');\nIO      = global.get('IO','memoryOnly');\n\nvar Funciones   = [];\nvar TipoIO      = [];\nvar Values      = [];\n\n// Entradas Digitales\nvar otro = [32,33,34,35,36,37,38,39];\n\nfor(var i = 0; i<otro.length; i++){\n    var index= 'Canal'+otro[i];\n    if(typeof Canal.SD[index] != 'undefined'){\n        Funciones.push(Canal.SD[index].Funcion);\n        TipoIO.push(Canal.SD[index].Tipo);\n\n    }\n    else{\n        Funciones.push('Ninguno');\n        TipoIO.push('--');\n    }\n}\nvar data    = {};\nmsg.payload   = [];\nfor(var j = 0; j<otro.length; j++){\n    data = {\n        'Canales': otro[j], \n        'Funciones':Funciones[j],\n        'Tipo': TipoIO[j]\n    }\n    msg.payload.push(data);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 3220,
        "wires": [
            [
                "637ff0465e23b3ff"
            ]
        ]
    },
    {
        "id": "7f496609020b2c65",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 540,
        "y": 3150,
        "wires": [
            [
                "bd7dd23a7e43554f"
            ]
        ]
    },
    {
        "id": "637ff0465e23b3ff",
        "type": "ui_table",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "group": "f099a646.bd5eb8",
        "name": "",
        "order": 1,
        "width": "9",
        "height": 7,
        "columns": [
            {
                "field": "Canales",
                "title": "#",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Funciones",
                "title": "Funcion",
                "width": "75%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Tipo",
                "title": "Tipo",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 890,
        "y": 3220,
        "wires": []
    },
    {
        "id": "7b0b3baff810e681",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 445,
        "y": 3180,
        "wires": [
            [
                "7f496609020b2c65"
            ]
        ]
    },
    {
        "id": "d148ba09.e15568",
        "type": "ui_dropdown",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "label": "Canal",
        "tooltip": "",
        "place": "--",
        "group": "2d9cedce.ac17c2",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "O1",
                "value": "AO1",
                "type": "str"
            },
            {
                "label": "O2",
                "value": "AO2",
                "type": "str"
            },
            {
                "label": "O3",
                "value": "AO3",
                "type": "str"
            },
            {
                "label": "O4",
                "value": "AO4",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 1600,
        "y": 2960,
        "wires": [
            [
                "9524b437.51c5c"
            ]
        ]
    },
    {
        "id": "6cbf6e38.5582a",
        "type": "ui_dropdown",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "label": "Función",
        "tooltip": "",
        "place": "--",
        "group": "2d9cedce.ac17c2",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Frecuencia de salida C2S",
                "value": "Frecuencia de salida C2S",
                "type": "str"
            },
            {
                "label": "Corriente de salida",
                "value": "Corriente de salida",
                "type": "str"
            },
            {
                "label": "Tensión de salida",
                "value": "Tensión de salida",
                "type": "str"
            },
            {
                "label": "Potencia de salida",
                "value": "Potencia de salida",
                "type": "str"
            },
            {
                "label": "Tensión de motor",
                "value": "Tensión de motor",
                "type": "str"
            },
            {
                "label": "Referencia de velocidad",
                "value": "Referencia de velocidad",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 2070,
        "y": 2890,
        "wires": [
            [
                "2cf5ef28.2fd368"
            ]
        ]
    },
    {
        "id": "a045d09a.22bef8",
        "type": "ui_text_input",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "label": "Rango Min",
        "tooltip": "",
        "group": "2d9cedce.ac17c2",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "x": 2080,
        "y": 2940,
        "wires": [
            [
                "fff0ee98.0c9fd"
            ]
        ]
    },
    {
        "id": "d7be28ca.8c1d88",
        "type": "ui_text_input",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "label": "Rango Max",
        "tooltip": "",
        "group": "2d9cedce.ac17c2",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "x": 2080,
        "y": 2990,
        "wires": [
            [
                "41c6ba6a.16e404"
            ]
        ]
    },
    {
        "id": "cb7712ba.8aa1d",
        "type": "ui_button",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "group": "2d9cedce.ac17c2",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Configurar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "SA_Config",
        "payloadType": "flow",
        "topic": "",
        "x": 2240,
        "y": 3070,
        "wires": [
            [
                "73f3e36f.fef6e4"
            ]
        ]
    },
    {
        "id": "9524b437.51c5c",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "SA_Config.Canal",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "2cf5ef28.2fd368",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "SA_Config.Funcion",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 2890,
        "wires": [
            []
        ]
    },
    {
        "id": "fff0ee98.0c9fd",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "SA_Config.Rango_Min",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2300,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "41c6ba6a.16e404",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "SA_Config.Rango_Max",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2300,
        "y": 2990,
        "wires": [
            []
        ]
    },
    {
        "id": "73f3e36f.fef6e4",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "property": "payload.Canal",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "AO1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AO2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AO3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AO4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 2380,
        "y": 3070,
        "wires": [
            [
                "fa663982.7376"
            ],
            [
                "be444b62.9432f"
            ],
            [
                "a5b71e52.d0332"
            ],
            [
                "bb5e3162.6feb9"
            ]
        ]
    },
    {
        "id": "fa663982.7376",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "O1",
        "rules": [
            {
                "t": "set",
                "p": "ES.SA.AO1.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SA.AO1.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SA.AO1.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 3000,
        "wires": [
            []
        ]
    },
    {
        "id": "be444b62.9432f",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "O2",
        "rules": [
            {
                "t": "set",
                "p": "ES.SA.AO2.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SA.AO2.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SA.AO2.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "84039f9a.8536f8",
        "type": "ui_text",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "group": "7821f022.e6285",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Función",
        "label": "Función:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 2070,
        "y": 3030,
        "wires": []
    },
    {
        "id": "f387b0e2.5c86a",
        "type": "ui_text",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "group": "7821f022.e6285",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "Rango Min",
        "label": "Rango mínimo:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 2080,
        "y": 3070,
        "wires": []
    },
    {
        "id": "994eeb00.d47c4",
        "type": "ui_text",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "group": "7821f022.e6285",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Rango Max",
        "label": "Rango máximo:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 2080,
        "y": 3110,
        "wires": []
    },
    {
        "id": "3624bfe8.d588",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "Cargar configuración del canal",
        "func": "var Canal = flow.get('SA_Config').Canal||null;\nvar ES = flow.get('ES')||null;\n\nmsg.payload = \"Canal no configurado\";\n\n//msg.payload = ES.EA[Canal].Rango;\n//return msg;\n\nif(typeof ES.SA[Canal] !== 'undefined'){\n    msg.Funcion =  {'payload':ES.SA[Canal].Funcion};\n    msg.RangoMin = {'payload':ES.SA[Canal].Rango_Min};\n    msg.RangoMax = {'payload':ES.SA[Canal].Rango_Max};\n}\nelse{\n    msg.Funcion = {'payload':\"Canal no configurado\"};\n    msg.RangoMin =  {'payload':null};\n    msg.RangoMax = {'payload': null};\n}\n\nreturn [msg.Funcion, msg.RangoMin, msg.RangoMax];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1800,
        "y": 3010,
        "wires": [
            [
                "84039f9a.8536f8",
                "6cbf6e38.5582a"
            ],
            [
                "f387b0e2.5c86a",
                "a045d09a.22bef8"
            ],
            [
                "994eeb00.d47c4",
                "d7be28ca.8c1d88"
            ]
        ]
    },
    {
        "id": "1cd134f3.04fc43",
        "type": "complete",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "Configuración SA Completa",
        "scope": [
            "9524b437.51c5c",
            "fa663982.7376",
            "be444b62.9432f",
            "b23d1104.2e7b8",
            "a5b71e52.d0332",
            "bb5e3162.6feb9"
        ],
        "uncaught": false,
        "x": 1530,
        "y": 3010,
        "wires": [
            [
                "3624bfe8.d588"
            ]
        ]
    },
    {
        "id": "1850d240.8ce4c6",
        "type": "ui_button",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "",
        "group": "7821f022.e6285",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Borrar configuración",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "ES_Config",
        "payloadType": "flow",
        "topic": "",
        "x": 1550,
        "y": 3060,
        "wires": [
            [
                "b23d1104.2e7b8"
            ]
        ]
    },
    {
        "id": "b23d1104.2e7b8",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "Borrar configuración del canal",
        "func": "var Canal   = flow.get('SA_Config').Canal||null;\nvar ES      = flow.get('ES')||null;\n\n// Borrar propiedad\ndelete ES.SA[Canal];\n\n// Cargar nueva configuración\nflow.set('ES',ES);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1800,
        "y": 3060,
        "wires": []
    },
    {
        "id": "a5b71e52.d0332",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "O3",
        "rules": [
            {
                "t": "set",
                "p": "ES.SA.AO3.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SA.AO3.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SA.AO3.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "bb5e3162.6feb9",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f6e2a6e0.47efb8",
        "name": "O4",
        "rules": [
            {
                "t": "set",
                "p": "ES.SA.AO4.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SA.AO4.Rango_Min",
                "pt": "flow",
                "to": "payload.Rango_Min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.SA.AO4.Rango_Max",
                "pt": "flow",
                "to": "payload.Rango_Max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "d52f2cd1.ac7d18",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IO.AO.AO4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 3480,
        "wires": [
            []
        ]
    },
    {
        "id": "d39a12de.5d991",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IO.AO.AO3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 3390,
        "wires": [
            []
        ]
    },
    {
        "id": "3986e0cf.5e4f78",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IO.AO.AO2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 3300,
        "wires": [
            []
        ]
    },
    {
        "id": "65ad9b0d.6b12ac",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IO.AO.AO1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 3210,
        "wires": [
            []
        ]
    },
    {
        "id": "f4e358da.4d49",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "toFixed(2)",
        "func": "if(typeof msg.payload != 'undefined'){\n    msg.payload = (msg.payload).toFixed(2);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1800,
        "y": 3210,
        "wires": [
            [
                "65ad9b0d.6b12ac"
            ]
        ]
    },
    {
        "id": "e105d502.4aeb1",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "toFixed(2)",
        "func": "if(typeof msg.payload != 'undefined'){\n    msg.payload = (msg.payload).toFixed(2);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1800,
        "y": 3300,
        "wires": [
            [
                "3986e0cf.5e4f78"
            ]
        ]
    },
    {
        "id": "bc63c380.fb7a78",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "toFixed(2)",
        "func": "if(typeof msg.payload != 'undefined'){\n    msg.payload = (msg.payload).toFixed(2);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1800,
        "y": 3390,
        "wires": [
            [
                "d39a12de.5d991"
            ]
        ]
    },
    {
        "id": "5cb767da.98178",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "toFixed(2)",
        "func": "if(typeof msg.payload != 'undefined'){\n    msg.payload = (msg.payload).toFixed(2);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1800,
        "y": 3480,
        "wires": [
            [
                "d52f2cd1.ac7d18"
            ]
        ]
    },
    {
        "id": "2713f52d.0666ea",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "AO4",
        "func": "var AO  = flow.get('ES.SA.AO4')||null;\nvar C2S = global.get('C2S','memoryOnly')||null;\nvar Mtr = global.get('Motor_Control','memoryOnly');\n\n//valores de simulación\nvar boton = flow.get(\"SA_Config.SimulacionBoton4\",\"memoryOnly\")||false;\nvar valor = flow.get(\"SA_Config.SimulacionValor4\",\"memoryOnly\")||4;\n\nif(boton == true){\n    msg.payload = parseInt(valor)*10000;\n    return msg;\n}else{\n    //Objeto con las funciones del CILA2S\n    var FuncionC2S = {\n        \"Frecuencia de salida C2S\":     C2S != null ? C2S.Output_Frequency:0,\n        \"Corriente de salida\":          C2S != null ? C2S.Output_Current:0, \n        \"Tensión de salida\":            C2S != null ? C2S.Output_Voltage:0,\n        \"Potencia de salida\":           C2S != null ? C2S.Output_Power:0,\n        \"Tensión de motor\":             Mtr != null ? Mtr.Voltage:0,\n        \"Referencia de velocidad\":      C2S != null ? C2S.Commanded_SpdRef:0\n    }\n    if(typeof AO!= 'undefined' && AO!= null){\n        msg.payload = parseInt(Escalizar([AO.Rango_Min,AO.Rango_Max],FuncionC2S[AO.Funcion])*10000);\n        node.status({fill:\"green\",shape:\"dot\",text:[AO.Rango_Min,AO.Rango_Max]+\" \"+FuncionC2S[AO.Funcion] +\" \"+msg.payload});\n    }\n    else{\n        node.status({fill:\"gray\",shape:\"dot\",text:\"--\"});\n        msg.payload = 0;\n    \n    }\n    return msg;\n    \n}\n\n\nfunction Escalizar(a,value){\n    var b = [4,20];\n    // Mapeo\n    if(b !== null && typeof a[0] == 'number' && typeof a[1] == 'number' ){\n        var t = b[0] + ((Math.abs(value) - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n        // Saturación\n        if(t > b[1]){    \n            t = b[1];\n        }\n        else if(t < b[0]){ \n            t = b[0];\n        }\n        // Asignar payload\n        return t;\n    }\n    else {\n        // Asignar payload\n        return 0;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1650,
        "y": 3520,
        "wires": [
            [
                "5cb767da.98178"
            ]
        ],
        "inputLabels": [
            "Activar función"
        ],
        "outputLabels": [
            "Canal32"
        ]
    },
    {
        "id": "b5293ad6.80a578",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "AO3",
        "func": "var AO  = flow.get('ES.SA.AO3')||null;\nvar C2S = global.get('C2S','memoryOnly')||null;\nvar Mtr = global.get('Motor_Control','memoryOnly');\n//valores de simulación\nvar boton = flow.get(\"SA_Config.SimulacionBoton3\",\"memoryOnly\")||false;\nvar valor = flow.get(\"SA_Config.SimulacionValor3\",\"memoryOnly\")||4;\n\nif(boton == true){\n    msg.payload = parseInt(valor)*10000;\n    return msg;\n}else{\n    \n    //Objeto con las funciones del CILA2S\n    var FuncionC2S = {\n        \"Frecuencia de salida C2S\":     C2S != null ? C2S.Output_Frequency:0,\n        \"Corriente de salida\":          C2S != null ? C2S.Output_Current:0, \n        \"Tensión de salida\":            C2S != null ? C2S.Output_Voltage:0,\n        \"Potencia de salida\":           C2S != null ? C2S.Output_Power:0,\n        \"Tensión de motor\":             Mtr != null ? Mtr.Voltage:0,\n        \"Referencia de velocidad\":      C2S != null ? C2S.Commanded_SpdRef:0\n    }\n    if(typeof AO!= 'undefined' && AO!= null){\n        msg.payload = parseInt(Escalizar([AO.Rango_Min,AO.Rango_Max],FuncionC2S[AO.Funcion])*10000);\n        node.status({fill:\"green\",shape:\"dot\",text:[AO.Rango_Min,AO.Rango_Max]+\" \"+FuncionC2S[AO.Funcion] +\" \"+msg.payload});\n    }\n    else{\n        node.status({fill:\"gray\",shape:\"dot\",text:\"--\"});\n        msg.payload = 0;\n    \n    }\n    return msg;\n}\n\n\nfunction Escalizar(a,value){\n    var b = [4,20];\n    // Mapeo\n    if(b !== null && typeof a[0] == 'number' && typeof a[1] == 'number' ){\n        var t = b[0] + ((Math.abs(value) - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n        // Saturación\n        if(t > b[1]){    \n            t = b[1];\n        }\n        else if(t < b[0]){ \n            t = b[0];\n        }\n        // Asignar payload\n        return t;\n    }\n    else {\n        // Asignar payload\n        return 0;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1650,
        "y": 3430,
        "wires": [
            [
                "bc63c380.fb7a78"
            ]
        ],
        "inputLabels": [
            "Activar función"
        ],
        "outputLabels": [
            "Canal32"
        ]
    },
    {
        "id": "f3e2dee0.b212f",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "AO2",
        "func": "var AO  = flow.get('ES.SA.AO2')||null;\nvar C2S = global.get('C2S','memoryOnly')||null;\nvar Mtr = global.get('Motor_Control','memoryOnly');\n\n//valores de simulación\nvar boton = flow.get(\"SA_Config.SimulacionBoton2\",\"memoryOnly\")||false;\nvar valor = flow.get(\"SA_Config.SimulacionValor2\",\"memoryOnly\")||4;\n\nif(boton == true){\n    msg.payload = parseInt(valor)*10000;\n    return msg;\n}else{\n    //Objeto con las funciones del CILA2S\n    var FuncionC2S = {\n        \"Frecuencia de salida C2S\":     C2S != null ? C2S.Output_Frequency:0,\n        \"Corriente de salida\":          C2S != null ? C2S.Output_Current:0, \n        \"Tensión de salida\":            C2S != null ? C2S.Output_Voltage:0,\n        \"Potencia de salida\":           C2S != null ? C2S.Output_Power:0,\n        \"Tensión de motor\":             Mtr != null ? Mtr.Voltage:0,\n        \"Referencia de velocidad\":      C2S != null ? C2S.Commanded_SpdRef:0\n    }\n    if(typeof AO!= 'undefined' && AO!= null){\n        msg.payload = parseInt(Escalizar([AO.Rango_Min,AO.Rango_Max],FuncionC2S[AO.Funcion])*10000);\n        node.status({fill:\"green\",shape:\"dot\",text:[AO.Rango_Min,AO.Rango_Max]+\" \"+FuncionC2S[AO.Funcion] +\" \"+msg.payload});\n    }\n    else{\n        node.status({fill:\"gray\",shape:\"dot\",text:\"--\"});\n        msg.payload = 0;\n    \n    }\n    return msg;\n}\n\n\nfunction Escalizar(a,value){\n    var b = [4,20];\n    // Mapeo\n    if(b !== null && typeof a[0] == 'number' && typeof a[1] == 'number' ){\n        var t = b[0] + ((Math.abs(value) - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n        // Saturación\n        if(t > b[1]){    \n            t = b[1];\n        }\n        else if(t < b[0]){ \n            t = b[0];\n        }\n        // Asignar payload\n        return t;\n    }\n    else {\n        // Asignar payload\n        return 0;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1650,
        "y": 3340,
        "wires": [
            [
                "e105d502.4aeb1",
                "6f5153fc.5881dc"
            ]
        ],
        "inputLabels": [
            "Activar función"
        ],
        "outputLabels": [
            "Canal32"
        ]
    },
    {
        "id": "bbf3ce81.a5335",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "AO1",
        "func": "var AO  = flow.get('ES.SA.AO1')||null;\nvar C2S = global.get('C2S','memoryOnly')||null;\nvar Mtr = global.get('Motor_Control','memoryOnly');\n//valores de simulación\nvar boton = flow.get(\"SA_Config.SimulacionBoton1\",\"memoryOnly\")||false;\nvar valor = flow.get(\"SA_Config.SimulacionValor1\",\"memoryOnly\")||4;\n//SA_Config.SimulacionValor1\nif(boton == true){\n    msg.payload = parseInt(valor)*10000;\n    return msg;\n}else{\n    //Objeto con las funciones del CILA2S\n    var FuncionC2S = {\n        \"Frecuencia de salida C2S\":     C2S != null ? C2S.Output_Frequency:0,\n        \"Corriente de salida\":          C2S != null ? C2S.Output_Current:0, \n        \"Tensión de salida\":            C2S != null ? C2S.Output_Voltage:0,\n        \"Potencia de salida\":           C2S != null ? C2S.Output_Power:0,\n        \"Tensión de motor\":             Mtr != null ? Mtr.Voltage:0,\n        \"Referencia de velocidad\":      C2S != null ? C2S.Commanded_SpdRef:0\n    }\n    if(typeof AO!= 'undefined' && AO!= null){\n        msg.payload = parseInt(Escalizar([AO.Rango_Min,AO.Rango_Max],FuncionC2S[AO.Funcion])*10000);\n        node.status({fill:\"green\",shape:\"dot\",text:[AO.Rango_Min,AO.Rango_Max]+\" \"+FuncionC2S[AO.Funcion] +\" \"+msg.payload});\n    }\n    else{\n        node.status({fill:\"gray\",shape:\"dot\",text:\"--\"});\n        msg.payload = 0;\n    \n    }\n    return msg;\n}\n\n\n\n\nfunction Escalizar(a,value){\n    var b = [4,20];\n    // Mapeo\n    if(b !== null && typeof a[0] == 'number' && typeof a[1] == 'number' ){\n        var t = b[0] + ((Math.abs(value) - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n        // Saturación\n        if(t > b[1]){    \n            t = b[1];\n        }\n        else if(t < b[0]){ \n            t = b[0];\n        }\n        // Asignar payload\n        return t;\n    }\n    else {\n        // Asignar payload\n        return 0;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1650,
        "y": 3250,
        "wires": [
            [
                "f4e358da.4d49",
                "ac5611e0.f1126"
            ]
        ],
        "inputLabels": [
            "Activar función"
        ],
        "outputLabels": [
            "Canal32"
        ]
    },
    {
        "id": "3b90925b.82939e",
        "type": "inject",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1480,
        "y": 3250,
        "wires": [
            [
                "bbf3ce81.a5335",
                "f3e2dee0.b212f",
                "b5293ad6.80a578",
                "2713f52d.0666ea"
            ]
        ]
    },
    {
        "id": "4a46db90.05ea4c",
        "type": "catch",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "Error de Escritura Salidas analógicas",
        "scope": [
            "d39014af.b8b38",
            "4fe65381.a042fc",
            "1650d337.420e6d",
            "c295a41b.c17618"
        ],
        "uncaught": false,
        "x": 1580,
        "y": 3570,
        "wires": [
            [
                "23ebaedc.4ea2ba"
            ]
        ]
    },
    {
        "id": "23ebaedc.4ea2ba",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1790,
        "y": 3570,
        "wires": [
            [
                "10966509.4f25e3"
            ]
        ]
    },
    {
        "id": "10966509.4f25e3",
        "type": "debug",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 3570,
        "wires": []
    },
    {
        "id": "eed2c392.531d68",
        "type": "debug",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1940,
        "y": 3260,
        "wires": []
    },
    {
        "id": "ac5611e0.f1126",
        "type": "pccc out",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "endpoint": "e9d237aaf9318e74",
        "variable": "AO1",
        "name": "",
        "x": 1780,
        "y": 3250,
        "wires": []
    },
    {
        "id": "6f5153fc.5881dc",
        "type": "pccc out",
        "z": "7a89175c.90f6a8",
        "g": "edfe6c51.d89c68",
        "endpoint": "e9d237aaf9318e74",
        "variable": "AO2",
        "name": "",
        "x": 1780,
        "y": 3340,
        "wires": []
    },
    {
        "id": "9c034468.c6cea",
        "type": "ui_text",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "group": "2d9cedce.ac17c2",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "",
        "format": "Simulación AO1",
        "layout": "row-center",
        "x": 2190,
        "y": 3210,
        "wires": []
    },
    {
        "id": "a43b5e16.f2f1c",
        "type": "ui_switch",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "ON AO1",
        "label": "",
        "tooltip": "",
        "group": "2d9cedce.ac17c2",
        "order": 16,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 2200,
        "y": 3250,
        "wires": [
            [
                "f9db0dde.a8fef"
            ]
        ]
    },
    {
        "id": "df3cfb7a.40f0c",
        "type": "ui_slider",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "",
        "label": "AO 1",
        "tooltip": "",
        "group": "2d9cedce.ac17c2",
        "order": 17,
        "width": 5,
        "height": 1,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "min": "4",
        "max": "20",
        "step": 1,
        "x": 2220,
        "y": 3300,
        "wires": [
            [
                "62b54556.f80694",
                "3f0d31a8.92e6d6"
            ]
        ]
    },
    {
        "id": "f9db0dde.a8fef",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "saveBoton",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SA_Config.SimulacionBoton1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2380,
        "y": 3250,
        "wires": [
            []
        ]
    },
    {
        "id": "62b54556.f80694",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "Visualizar",
        "func": "var boton = flow.get(\"SA_Config.SimulacionBoton1\",\"memoryOnly\")||false;\nvar valor = msg.payload;\nif(boton == true){\n    msg.payload = valor;\n    return msg;\n}else{\n    msg.payload = \"OFF\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2370,
        "y": 3300,
        "wires": [
            [
                "af7bcd62.060f7"
            ]
        ]
    },
    {
        "id": "3f0d31a8.92e6d6",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "saveValue",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SA_Config.SimulacionValor1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2370,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "1a44e8c1.d5f3ef",
        "type": "ui_switch",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "ON AO2",
        "label": "",
        "tooltip": "",
        "group": "7821f022.e6285",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 2210,
        "y": 3390,
        "wires": [
            [
                "348a92f6.f6e64e",
                "b9d1e79f.6df258"
            ]
        ]
    },
    {
        "id": "348a92f6.f6e64e",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "saveBoton",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SA_Config.SimulacionBoton2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2380,
        "y": 3390,
        "wires": [
            []
        ]
    },
    {
        "id": "b9d1e79f.6df258",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "resetText",
        "func": "var estado = msg.payload;//adquiere el valor del swicth\nif(estado == false){\n    msg.payload = \"OFF\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nvar estado = false;",
        "finalize": "",
        "x": 2370,
        "y": 3430,
        "wires": [
            [
                "ab756585.f8d38"
            ]
        ]
    },
    {
        "id": "a2785f6.327baa",
        "type": "inject",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "inicial",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2220,
        "y": 3430,
        "wires": [
            [
                "b9d1e79f.6df258"
            ]
        ]
    },
    {
        "id": "628521d7.5f7cf",
        "type": "ui_slider",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "",
        "label": "AO 2",
        "tooltip": "",
        "group": "7821f022.e6285",
        "order": 8,
        "width": 5,
        "height": 1,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "min": "4",
        "max": "20",
        "step": 1,
        "x": 2240,
        "y": 3480,
        "wires": [
            [
                "141d3991.af4366"
            ]
        ]
    },
    {
        "id": "141d3991.af4366",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "name": "saveValue",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SA_Config.SimulacionValor2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2370,
        "y": 3480,
        "wires": [
            []
        ]
    },
    {
        "id": "ab756585.f8d38",
        "type": "ui_text",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "group": "7821f022.e6285",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "2",
        "label": "",
        "format": "{{msg.payload}} mA",
        "layout": "col-center",
        "x": 2520,
        "y": 3430,
        "wires": []
    },
    {
        "id": "af7bcd62.060f7",
        "type": "ui_text",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "group": "2d9cedce.ac17c2",
        "order": 20,
        "width": 3,
        "height": 1,
        "name": "1",
        "label": "",
        "format": "{{msg.payload}} mA",
        "layout": "col-center",
        "x": 2520,
        "y": 3300,
        "wires": []
    },
    {
        "id": "8c4c4846.6ea308",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "Filtro armónicos",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Entradas_y_Salidas_Configuración_E.A.\",\t                \"Entradas_y_Salidas_Información_del_canal_E.A.\",\t                \"Entradas_y_Salidas_Configuración_S.D.\",\t                \"Entradas_y_Salidas_Información_del_canal_S.D.\",\t                \"Entradas_y_Salidas_Configuración_E.D.\",\t                \"Entradas_y_Salidas_Información_del_canal_E.D.\",\t                \"Entradas_y_Salidas_Configuración_S.A.\",\t                \"Entradas_y_Salidas_Información_del_canal_S.A.\"],\t       \"show\":[ \"Entradas_y_Salidas_Nav_Bar\",\t                \"Entradas_y_Salidas_FiltroArmonicos\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 940,
        "wires": [
            [
                "b0a2cd1a.ab273"
            ]
        ]
    },
    {
        "id": "7e42111d.6ffa3",
        "type": "ui_text",
        "z": "7a89175c.90f6a8",
        "g": "a00ff6e2dc632d87",
        "group": "7821f022.e6285",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "",
        "format": "Simulación AO2",
        "layout": "row-center",
        "x": 2360,
        "y": 3210,
        "wires": []
    },
    {
        "id": "de8f2e2a.cab36",
        "type": "ui_toast",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SI",
        "cancel": "NO",
        "raw": false,
        "topic": "",
        "name": "Descargar Eventos",
        "x": 1040,
        "y": 330,
        "wires": [
            [
                "ba2695ff.6d9548"
            ]
        ]
    },
    {
        "id": "37820ee5.859272",
        "type": "ui_text",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "group": "91f407cc.9e95a8",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "USB",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 600,
        "y": 310,
        "wires": []
    },
    {
        "id": "9562fc1.ada0d",
        "type": "comment",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "Memorias USB",
        "info": "",
        "x": 190,
        "y": 280,
        "wires": []
    },
    {
        "id": "8f26d964.56a778",
        "type": "watch",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "files": "/media/bcgrp",
        "recursive": false,
        "x": 180,
        "y": 320,
        "wires": [
            [
                "8102dc0f.63d08",
                "88dcdbf8.24dc88",
                "febace6d.62f9c"
            ]
        ]
    },
    {
        "id": "8102dc0f.63d08",
        "type": "exec",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "command": "df /dev/sda1",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 370,
        "y": 370,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "45ba8097.f74b1",
        "type": "ui_button",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "group": "91f407cc.9e95a8",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Expulsar USB",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1190,
        "y": 420,
        "wires": [
            [
                "8db0f092.83eb9"
            ]
        ]
    },
    {
        "id": "8db0f092.83eb9",
        "type": "exec",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "command": "sudo eject /dev/sdb1/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1430,
        "y": 420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "febace6d.62f9c",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "USB_Drive",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "88dcdbf8.24dc88",
        "type": "exec",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "command": "cd /media/bcpgrp && ls",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 320,
        "wires": [
            [
                "37820ee5.859272",
                "8f928b10.7d7368",
                "b67add6d.8a94a"
            ],
            [],
            []
        ]
    },
    {
        "id": "8f48d1f2.ceb62",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "Eventos",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿Desea descargar los eventos?",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Dispositivo USB encontrado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 330,
        "wires": [
            [
                "de8f2e2a.cab36"
            ]
        ]
    },
    {
        "id": "8f928b10.7d7368",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "directory",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 350,
        "wires": [
            [
                "96e2b8dbe394949c"
            ]
        ]
    },
    {
        "id": "b67add6d.8a94a",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "none",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 420,
        "wires": [
            [
                "bd43bd09.9aab9"
            ]
        ]
    },
    {
        "id": "bd43bd09.9aab9",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "Eventos",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Dispositivo USB Expulsado",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Dispositivo USB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 420,
        "wires": [
            [
                "f8f6d7e7.a66d88"
            ]
        ]
    },
    {
        "id": "f8f6d7e7.a66d88",
        "type": "ui_toast",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "USB Expulsada",
        "x": 890,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ba2695ff.6d9548",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SI",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1220,
        "y": 330,
        "wires": [
            [
                "90b649a5.3b9fa8",
                "249b4bda.1f1dd4"
            ],
            [
                "249b4bda.1f1dd4"
            ]
        ]
    },
    {
        "id": "90b649a5.3b9fa8",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "Descargar Eventos Out",
        "links": [
            "a6d197ee.394348"
        ],
        "x": 1345,
        "y": 290,
        "wires": []
    },
    {
        "id": "588cbae4.e05ae4",
        "type": "ui_toast",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SI",
        "cancel": "NO",
        "raw": false,
        "topic": "",
        "name": "Descargar Alarmas",
        "x": 1560,
        "y": 330,
        "wires": [
            [
                "9be46ec.495559"
            ]
        ]
    },
    {
        "id": "249b4bda.1f1dd4",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "Alarmas",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿Desea descargar el archivo de alarmas?",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Dispositivo USB encontrado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 330,
        "wires": [
            [
                "588cbae4.e05ae4"
            ]
        ]
    },
    {
        "id": "9be46ec.495559",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SI",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1720,
        "y": 330,
        "wires": [
            [
                "6faf6e85.a53ad",
                "0fd3e2e27d9d0b07"
            ],
            [
                "0fd3e2e27d9d0b07"
            ]
        ]
    },
    {
        "id": "6faf6e85.a53ad",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "Descargar Alarmas Out",
        "links": [
            "c42f5649.4492d8"
        ],
        "x": 1815,
        "y": 290,
        "wires": []
    },
    {
        "id": "ed649516.fdb838",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "Smart Datalogger®",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿Desea descargar los archivos de Smart Datalogger®?",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Dispositivo USB encontrado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 340,
        "wires": [
            [
                "864a29df26985766"
            ]
        ]
    },
    {
        "id": "bc78207d.aabd4",
        "type": "ui_toast",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SI",
        "cancel": "NO",
        "raw": false,
        "topic": "",
        "name": "Descargar Datalogger",
        "x": 2720,
        "y": 380,
        "wires": [
            [
                "85d73faa.116d8"
            ]
        ]
    },
    {
        "id": "85d73faa.116d8",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SI",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2890,
        "y": 380,
        "wires": [
            [
                "ecf97624.7b4b68"
            ],
            []
        ]
    },
    {
        "id": "7b1a1485.ef152c",
        "type": "exec",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "command": "sudo cp -R /home/bcpgrp/node_modules/Datalogger ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3320,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ecf97624.7b4b68",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "CP Directory",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "+++/Datalogger",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "USB_Drive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 380,
        "wires": [
            [
                "7b1a1485.ef152c"
            ]
        ]
    },
    {
        "id": "5d023264.f9da5c",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "name": "Events",
        "func": "var event   = flow.get('Events')||[];\nvar id      = flow.get('id')||0;\nvar date    = new Date();\n\n// Date\nvar year    = date.getFullYear();\nvar month   = date.getMonth()+1;\nvar day     = date.getDate();\n\n//Time\nvar hours   = date.getHours();\nvar minutes = date.getMinutes();\nvar seconds = date.getSeconds();\n\nif (parseInt(seconds)<10) seconds = \"0\"+seconds;\nif (parseInt(minutes) < 10) minutes = \"0\" + minutes;\n\nmsg.payload={\n            'no':id,\n            'fecha':month+'/'+day+'/'+year,\n            'hora':hours+':'+minutes+':'+seconds,\n            'evento':msg.payload\n}\n\n// Adjuntar evento\nevent.unshift(msg.payload);\n\n// Limitar número de eventos\nevent = event.slice(0,99);\n\n// Guardar eventos en el contexto\nflow.set('Events',event);\n\n// incrementar ID de evento\nid++\n\n// Reiniciar ID\nif(id==1000){id=0;}\nflow.set('id',id);\n\nmsg.payload = event;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 80,
        "wires": [
            [
                "07fdea154e1be602"
            ]
        ]
    },
    {
        "id": "2da816b7.b2be9a",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "name": "Eventos",
        "links": [
            "6d40adaa.11d2c4",
            "fd9df9f7.0350c8",
            "dfb7f37b.99931",
            "62b08bc.a787d74",
            "db1e9db0.6840e",
            "f99e70c8.70126",
            "272a4804.a55718",
            "1b0e4b2b.ecf4e5",
            "2e60217a.d7bbae",
            "49449801.c79e48",
            "66f58a7.5c16574",
            "40bc37d4.aa90f8",
            "d700627b.d176a",
            "e7f735765911a4d7",
            "1045d8d0.faf6d7",
            "d819c89.12f6638",
            "bf08332fad815da4",
            "b8f6d05216308f2f",
            "5b523df343832e42",
            "7c549260263926de",
            "a6537492cee742bb",
            "5de1f62eeac3700c",
            "ea0a3cc6e4d6537a",
            "33cf5bad91b4412f",
            "bd92a3ae5f6e2f10",
            "2aa31c125e8aa8f1",
            "9b11a2d4e3432956",
            "ea1cf5c958c8fbd1",
            "ae81aa320575e993",
            "de596228ce0351bb",
            "fce9ca29ea26c2ca",
            "7c2016e7007063f4",
            "f0a7aa49a0a74635",
            "c5a0c9bb05f67779",
            "3c6233b7580fdd3b",
            "88d14fc4446fc3c6",
            "fdc68848fdaa926f",
            "4b38c31b6019dbbd",
            "d2bf0a88cc35bf5f",
            "cb0c215187dec002",
            "906f6c90b95e81f4",
            "6e4f3aa97716a07f",
            "44c1195dcc60d5f0",
            "3484e5233d4f23d3",
            "8d09e1a980457df1",
            "346a6c0d781748eb",
            "fb18fc5d2d9efad1",
            "bb5a0d783e5dca2d",
            "95637e8c.f75fe",
            "971e052f5f27f92d",
            "787d322ad05bb119",
            "783a6580e8c8fde8",
            "7763c3f3.af1d6c",
            "97b2eb182dd8a393",
            "a3e0a5db4f30662d",
            "36c70d85dac8cd26",
            "a23f03173b0301cb",
            "20a33011be6557f7"
        ],
        "x": 175,
        "y": 80,
        "wires": [
            [
                "5d023264.f9da5c"
            ]
        ]
    },
    {
        "id": "3114e207.ca335e",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Events",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "+++/Eventos/Eventos.csv",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "USB_Drive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 160,
        "wires": [
            [
                "2fbf43b6.2f889c"
            ]
        ]
    },
    {
        "id": "b5c74953.41a018",
        "type": "file",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 840,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2fbf43b6.2f889c",
        "type": "csv",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "no,fecha,hora,evento",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 720,
        "y": 160,
        "wires": [
            [
                "b5c74953.41a018"
            ]
        ]
    },
    {
        "id": "7f9ef622.6d0448",
        "type": "ui_table",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "group": "96dbaa88.715ef8",
        "name": "Eventos",
        "order": 1,
        "width": "16",
        "height": "11",
        "columns": [
            {
                "field": "no",
                "title": "No",
                "width": "10%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "fecha",
                "title": "Fecha",
                "width": "15%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "hora",
                "title": "Hora",
                "width": "15%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "evento",
                "title": "Evento",
                "width": "55%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 690,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a6d197ee.394348",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "name": "Descargar Eventos In",
        "links": [
            "90b649a5.3b9fa8"
        ],
        "x": 455,
        "y": 160,
        "wires": [
            [
                "3114e207.ca335e"
            ]
        ]
    },
    {
        "id": "d9650a0e.03ed98",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "31895ea6.22f372",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alarms",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "+++/Alarmas/Alarmas.csv",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "USB_Drive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 160,
        "wires": [
            [
                "f161b281.6743b"
            ]
        ]
    },
    {
        "id": "fdc0f6ae.24f238",
        "type": "file",
        "z": "e7088c4e.cc6b4",
        "g": "31895ea6.22f372",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1660,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3013b30c.31a45c",
        "type": "trigger",
        "z": "e7088c4e.cc6b4",
        "g": "31895ea6.22f372",
        "name": "",
        "op1": "1",
        "op2": "2",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1070,
        "y": 120,
        "wires": [
            [
                "f9b9d7a57c57d25e"
            ]
        ]
    },
    {
        "id": "f161b281.6743b",
        "type": "csv",
        "z": "e7088c4e.cc6b4",
        "g": "31895ea6.22f372",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "no,fecha,hora,alarma",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1540,
        "y": 160,
        "wires": [
            [
                "fdc0f6ae.24f238"
            ]
        ]
    },
    {
        "id": "dafe5a37.3d7818",
        "type": "ui_table",
        "z": "e7088c4e.cc6b4",
        "g": "31895ea6.22f372",
        "group": "42e65bd9.26fdf4",
        "name": "Alarmas",
        "order": 1,
        "width": "16",
        "height": "11",
        "columns": [
            {
                "field": "no",
                "title": "No",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "fecha",
                "title": "Fecha",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "hora",
                "title": "Hora",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "alarma",
                "title": "Alarma",
                "width": "58%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1430,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8eacc47.e177438",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "31895ea6.22f372",
        "name": "Alarmas",
        "links": [
            "4e8f42ac.3431ac",
            "c099945b.08bf98",
            "0136783bb78db2e2",
            "6d0c3c367c64344a",
            "86f805b5cb28bb05",
            "b1b1ab91f6ce9a0f",
            "5dea5f3a2e3fb369",
            "02637e406d6ed608",
            "61b7325ebb260248"
        ],
        "x": 1005,
        "y": 80,
        "wires": [
            [
                "8493b2ad.8a07f"
            ]
        ]
    },
    {
        "id": "8493b2ad.8a07f",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "31895ea6.22f372",
        "name": "Alarms",
        "func": "var Alarm   = flow.get('Alarms')||[];\nvar id      = flow.get('id')||0;\nvar date    = new Date();\n\n// Date\nvar year    = date.getFullYear();\nvar month   = date.getMonth()+1;\nvar day     = date.getDate();\n\n//Time\nvar hours   = date.getHours();\nvar minutes = date.getMinutes();\nvar seconds = date.getSeconds();\n\nif (parseInt(seconds) < 10) seconds = \"0\" + seconds;\nif (parseInt(minutes) < 10) minutes = \"0\" + minutes;\n\nmsg.payload={\n            'no':id,\n            'fecha':month+'/'+day+'/'+year,\n            'hora':hours+':'+minutes+':'+seconds,\n            'alarma':msg.payload\n}\n\nAlarm.unshift(msg.payload);\n\n// Limitar número de alarmas\nAlarm = Alarm.slice(0,99);\n\nflow.set('Alarms',Alarm);\n\nid++\n// Reiniciar ID\nif(id==1000){id=0;}\n\nflow.set('id',id);\nmsg.payload = Alarm;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 80,
        "wires": [
            [
                "f9b9d7a57c57d25e"
            ]
        ]
    },
    {
        "id": "980848c8.d90ec8",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "31895ea6.22f372",
        "name": "Actualizar Alarmas In",
        "links": [
            "f7333c0a.a70d3",
            "c98bd2dc.e9d39"
        ],
        "x": 975,
        "y": 120,
        "wires": [
            [
                "3013b30c.31a45c"
            ]
        ]
    },
    {
        "id": "c42f5649.4492d8",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "31895ea6.22f372",
        "name": "Descargar Alarmas In",
        "links": [
            "6faf6e85.a53ad"
        ],
        "x": 1279,
        "y": 160,
        "wires": [
            [
                "d9650a0e.03ed98"
            ]
        ]
    },
    {
        "id": "4ea7eb06.9f2174",
        "type": "csv",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1900,
        "y": 610,
        "wires": [
            [
                "d4815689f3a8cac7"
            ]
        ]
    },
    {
        "id": "7e0625da.a5746c",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Creación de archivo",
        "func": "var PQA = global.get(\"PQA.Real_Time_Parameters\", 'memoryOnly') || [];\nvar C2S = global.get(\"C2S.Implicit\", 'memoryOnly') || [];\nvar ComStatus = global.get(\"C2S.Comunicacion_Drive\", 'memoryOnly') || false;\nvar DownHoleData = global.get('Process_data.DHS', 'memoryOnly') || [];\n\nvar date = new Date();\n\n// Date\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\n\n//Time\nvar hours = date.getHours();\nvar minutes = date.getMinutes();\nvar seconds = date.getSeconds();\n\nmsg.payload = {\n    'fecha_hora': year + '/' + month + '/' + day + \" \" + hours + ':' + minutes + ':' + seconds,\n    'Frequency': PQA != null && typeof PQA.Frequency != 'undefined' ? parseFloat(PQA.Frequency).toFixed(1) : \"--\",\n    'Phase_1_Voltage': PQA != null && typeof PQA.Phase_1_Voltage != 'undefined' ? parseFloat(PQA.Phase_1_Voltage).toFixed(1) : \"--\",\n    'Phase_2_Voltage': PQA != null && typeof PQA.Phase_2_Voltage != 'undefined' ? parseFloat(PQA.Phase_2_Voltage).toFixed(1) : \"--\",\n    'Phase_3_Voltage': PQA != null && typeof PQA.Phase_3_Voltage != 'undefined' ? parseFloat(PQA.Phase_3_Voltage).toFixed(1) : \"--\",\n    'Average_Phase_Voltage': PQA != null && typeof PQA.Average_Phase_Voltage != 'undefined' ? parseFloat(PQA.Average_Phase_Voltage).toFixed(1) : \"--\",\n    'Line_Voltage_1_2': PQA != null && typeof PQA.Line_Voltage_1_2 != 'undefined' ? parseFloat(PQA.Line_Voltage_1_2).toFixed(1) : \"--\",\n    'Line_Voltage_2_3': PQA != null && typeof PQA.Line_Voltage_2_3 != 'undefined' ? parseFloat(PQA.Line_Voltage_2_3).toFixed(1) : \"--\",\n    'Line_Voltage_3_1': PQA != null && typeof PQA.Line_Voltage_3_1 != 'undefined' ? parseFloat(PQA.Line_Voltage_3_1).toFixed(1) : \"--\",\n    'Average_Line_Voltage': PQA != null && typeof PQA.Average_Line_Voltage != 'undefined' ? parseFloat(PQA.Average_Line_Voltage).toFixed(1) : \"--\",\n    'Total_Phase_A_Current': PQA != null && typeof PQA.Total_Phase_A_Current != 'undefined' ? parseFloat(PQA.Total_Phase_A_Current).toFixed(1) : \"--\",\n    'Total_Phase_B_Current': PQA != null && typeof PQA.Total_Phase_B_Current != 'undefined' ? parseFloat(PQA.Total_Phase_B_Current).toFixed(1) : \"--\",\n    'Total_Phase_C_Current': PQA != null && typeof PQA.Total_Phase_C_Current != 'undefined' ? parseFloat(PQA.Total_Phase_C_Current).toFixed(1) : \"--\",\n    'Neutral_Current': PQA != null && typeof PQA.Neutral_Current != 'undefined' ? parseFloat(PQA.Neutral_Current).toFixed(1) : \"--\",\n    'Phase_A_Power': PQA != null && typeof PQA.Phase_A_Power != 'undefined' ? parseFloat(PQA.Phase_A_Power).toFixed(1) : \"--\",\n    'Phase_B_Power': PQA != null && typeof PQA.Phase_B_Power != 'undefined' ? parseFloat(PQA.Phase_B_Power).toFixed(1) : \"--\",\n    'Phase_C_Power': PQA != null && typeof PQA.Phase_C_Power != 'undefined' ? parseFloat(PQA.Phase_C_Power).toFixed(1) : \"--\",\n    'Total_System_Power': PQA != null && typeof PQA.Total_System_Power != 'undefined' ? parseFloat(PQA.Total_System_Power).toFixed(1) : \"--\",\n    'Phase_A_Reactive_Power': PQA != null && typeof PQA.Phase_A_Reactive_Power != 'undefined' ? parseFloat(PQA.Phase_A_Reactive_Power).toFixed(1) : \"--\",\n    'Phase_B_Reactive_Power': PQA != null && typeof PQA.Phase_B_Reactive_Power != 'undefined' ? parseFloat(PQA.Phase_B_Reactive_Power).toFixed(1) : \"--\",\n    'Phase_C_Reactive_Power': PQA != null && typeof PQA.Phase_C_Reactive_Power != 'undefined' ? parseFloat(PQA.Phase_C_Reactive_Power).toFixed(1) : \"--\",\n    'Phase_A_Apparent_Power': PQA != null && typeof PQA.Phase_A_Apparent_Power != 'undefined' ? parseFloat(PQA.Phase_A_Apparent_Power).toFixed(1) : \"--\",\n    'Phase_B_Apparent_Power': PQA != null && typeof PQA.Phase_B_Apparent_Power != 'undefined' ? parseFloat(PQA.Phase_B_Apparent_Power).toFixed(1) : \"--\",\n    'Phase_C_Apparent_Power': PQA != null && typeof PQA.Phase_C_Apparent_Power != 'undefined' ? parseFloat(PQA.Phase_C_Apparent_Power).toFixed(1) : \"--\",\n    'Output_Frequency': C2S != null && typeof C2S.Output_Frequency != 'undefined' ? parseFloat(C2S.Output_Frequency).toFixed(1) : \"--\",\n    'Output_Current': C2S != null && typeof C2S.Output_Current != 'undefined' ? parseFloat(C2S.Output_Current).toFixed(1) : \"--\",\n    'Output_Voltage': C2S != null && typeof C2S.Output_Voltage != 'undefined' ? parseFloat(C2S.Output_Voltage).toFixed(1) : \"--\",\n    'Output_Power': C2S != null && typeof C2S.Output_Power != 'undefined' ? parseFloat(C2S.Output_Power).toFixed(1) : \"--\",\n    'Power_Factor': C2S != null && typeof C2S.Power_Factor != 'undefined' ? parseFloat(C2S.Power_Factor).toFixed(1) : \"--\",\n    'Bus_DC_Volts': C2S != null && typeof C2S.Bus_DC_Volts != 'undefined' ? parseFloat(C2S.Bus_DC_Volts).toFixed(1) : \"--\",\n    'Drive_Temp_C': C2S != null && typeof C2S.Drive_Temp_C != 'undefined' ? parseFloat(C2S.Drive_Temp_C).toFixed(1) : \"--\",\n    'Elapsed_Run_Time': C2S != null && typeof C2S.Elapsed_Run_Time != 'undefined' ? parseFloat(C2S.Elapsed_Run_Time).toFixed(1) : \"--\",\n    'Last_Fault_Code': C2S != null && typeof C2S.Last_Fault_Code != 'undefined' ? parseFloat(C2S.Last_Fault_Code).toFixed(1) : \"--\",\n    'Presión de entrada': DownHoleData != null && typeof DownHoleData[\"Presión de entrada\"] != 'undefined' ? parseFloat(DownHoleData[\"Presión de entrada\"]).toFixed(0) : \"--\",\n    'Presión de descarga': DownHoleData != null && typeof DownHoleData[\"Presión de descarga\"] != 'undefined' ? parseFloat(DownHoleData[\"Presión de descarga\"]).toFixed(0) : \"--\",\n    'Temperatura de entrada': DownHoleData != null && typeof DownHoleData[\"Temperatura de entrada\"] != 'undefined' ? parseFloat(DownHoleData[\"Temperatura de entrada\"]).toFixed(1) : \"--\",\n    'Temperatura de descarga': DownHoleData != null && typeof DownHoleData[\"Temperatura de descarga\"] != 'undefined' ? parseFloat(DownHoleData[\"Temperatura de descarga\"]).toFixed(1) : \"--\",\n    'Temperatura de motor': DownHoleData != null && typeof DownHoleData[\"Temperatura de motor\"] != 'undefined' ? parseFloat(DownHoleData[\"Temperatura de motor\"]).toFixed(1) : \"--\",\n    'Vibración en X': DownHoleData != null && typeof DownHoleData[\"Vibración X\"] != 'undefined' ? parseFloat(DownHoleData[\"Vibración X\"]).toFixed(2) : \"--\",\n    'Vibración en Z': DownHoleData != null && typeof DownHoleData[\"Vibración Z\"] != 'undefined' ? parseFloat(DownHoleData[\"Vibración Z\"]).toFixed(2) : \"--\",\n    'Corriente de fuga': DownHoleData != null && typeof DownHoleData[\"Corriente de fuga\"] != 'undefined' ? parseFloat(DownHoleData[\"Corriente de fuga\"]).toFixed(1) : \"--\"\n}\n\n// Archivo\nmsg.columns = Object.keys(msg.payload).toString();\nif (ComStatus)\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 610,
        "wires": [
            [
                "ccef2ff8.d103a"
            ]
        ]
    },
    {
        "id": "ccef2ff8.d103a",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "+++/Datalogger/***.csv",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "/home/bcpgrp/node_modules",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "***",
                "fromt": "str",
                "to": "Nombre_Archivo_Datalogger",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 610,
        "wires": [
            [
                "4ea7eb06.9f2174"
            ]
        ]
    },
    {
        "id": "4a152bf2.aedbf4",
        "type": "file",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2460,
        "y": 610,
        "wires": [
            []
        ]
    },
    {
        "id": "ac8dba55.436ca8",
        "type": "ui_button",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Activar",
        "group": "b006ff9.8805c",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Activar datalogger",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 260,
        "y": 610,
        "wires": [
            [
                "3b3e865c.e649aa",
                "7e9f72bb.cc0ccc"
            ]
        ]
    },
    {
        "id": "b92820bf.a85cd",
        "type": "ui_dropdown",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "label": "Unidad de tiempo",
        "tooltip": "",
        "place": "Seleccione",
        "group": "a41af5be.52be18",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Segundos",
                "value": "Segundos",
                "type": "str"
            },
            {
                "label": "Minutos",
                "value": "Minutos",
                "type": "str"
            },
            {
                "label": "Horas",
                "value": "Horas",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 660,
        "y": 950,
        "wires": [
            [
                "7409201c.daf43",
                "458b1cd4.6b15f4"
            ]
        ]
    },
    {
        "id": "53de6e8d.a41ec",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "label": "Tasa de muestreo",
        "tooltip": "",
        "group": "a41af5be.52be18",
        "order": 3,
        "width": "3",
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 660,
        "y": 840,
        "wires": [
            [
                "793ef4d5.ef60dc",
                "458b1cd4.6b15f4"
            ]
        ]
    },
    {
        "id": "7409201c.daf43",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Datalogger.Units",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 950,
        "wires": [
            []
        ]
    },
    {
        "id": "793ef4d5.ef60dc",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Datalogger.Magnitude",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "556daeb1.5f8c4",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Datalogger.Rate_Data",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "458b1cd4.6b15f4",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Calculate_Rate",
        "func": "var Datalogger = global.get(\"Datalogger\");\n\nif (typeof Datalogger != 'undefined' && Datalogger.Units === 'Segundos')\n    {\n        msg.payload = Datalogger.Magnitude;\n    }\n\nelse if (typeof Datalogger != 'undefined' && Datalogger.Units === 'Minutos')\n    {\n        msg.payload = Datalogger.Magnitude*60;\n    }\n\nelse if (typeof Datalogger != 'undefined' && Datalogger.Units === 'Horas')\n    {\n        msg.payload = Datalogger.Magnitude*3600;\n    }\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 900,
        "wires": [
            [
                "556daeb1.5f8c4"
            ]
        ]
    },
    {
        "id": "c16175a3.4e3dc8",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 610,
        "y": 560,
        "wires": [
            [
                "6e2e57d6.1acb68"
            ]
        ]
    },
    {
        "id": "6e2e57d6.1acb68",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Datalogger.Activated",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 610,
        "wires": [
            [
                "a88b1b0d.338558"
            ]
        ]
    },
    {
        "id": "c0a93ee0.0bece",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Datalogger Activo ?",
        "property": "Datalogger.Activated",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 700,
        "wires": [
            [
                "a88b1b0d.338558"
            ]
        ]
    },
    {
        "id": "bb20b02b.93fbf",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Datalogger.Flag",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 660,
        "wires": [
            [
                "6e2e57d6.1acb68"
            ]
        ]
    },
    {
        "id": "87d327f9.2d5698",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 770,
        "y": 700,
        "wires": [
            [
                "c0a93ee0.0bece"
            ]
        ]
    },
    {
        "id": "a5965533.262318",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 610,
        "y": 700,
        "wires": [
            [
                "bb20b02b.93fbf",
                "bb20b02b.93fbf"
            ]
        ]
    },
    {
        "id": "8b735152.e0f1d",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Tomar muestra true",
        "property": "payload.TakeSample",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1340,
        "y": 610,
        "wires": [
            [
                "7e0625da.a5746c"
            ]
        ]
    },
    {
        "id": "a88b1b0d.338558",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Bandera tomar muestra",
        "func": "// Leer varibables del contexto\nvar Rate = global.get(\"Datalogger.Rate_Data\");\nvar enable1 = global.get(\"Datalogger.Activated\");\nvar Bandera = flow.get(\"Datalogger.Flag\") || false;\nvar FechaFinal = context.get(\"FinalDate\") || \"\";\n\n// Definiciones\nvar TakeSample = false;\nvar CurrentDate = new Date();\n\nif (enable1 === true){\n    if (Bandera === false ){\n        var DateString = CurrentDate.toString();\n        FechaFinal = new Date(DateString);\n        FechaFinal.setSeconds( FechaFinal.getSeconds() + Rate);\n        context.set(\"FinalDate\",FechaFinal);\n        Bandera = true;   \n        TakeSample = false;\n    }\n    else {\n        if (CurrentDate >= FechaFinal){\n            TakeSample = true;\n            Bandera = false;\n        }\n    }\n    msg.payload = {\n        'Current'   : CurrentDate,\n        'Final'     : FechaFinal,\n        'TakeSample': TakeSample\n    }\n}\n\nflow.set(\"Datalogger.Flag\",Bandera);\nnode.status({fill:\"red\",shape:\"ring\",text:\"Bandera: \"+Bandera+\" Fecha: \"+FechaFinal});\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 610,
        "wires": [
            [
                "8b735152.e0f1d"
            ]
        ]
    },
    {
        "id": "1770e069.fa06e",
        "type": "ui_button",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Desactivar",
        "group": "b006ff9.8805c",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Desactivar datalogger",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "",
        "x": 260,
        "y": 650,
        "wires": [
            [
                "c2a083b6.80ece",
                "acd83647.191f48"
            ]
        ]
    },
    {
        "id": "a1296c3e.0467d",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Datalogger.Magnitude",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 840,
        "wires": [
            [
                "53de6e8d.a41ec"
            ]
        ]
    },
    {
        "id": "7fcfdd93.ac45a4",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Datalogger.Units",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 950,
        "wires": [
            [
                "b92820bf.a85cd"
            ]
        ]
    },
    {
        "id": "15d31797.55bf88",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Initial",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 450,
        "y": 890,
        "wires": [
            [
                "a1296c3e.0467d",
                "7fcfdd93.ac45a4"
            ]
        ]
    },
    {
        "id": "96675df9.60de8",
        "type": "ui_ui_control",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "events": "change",
        "x": 160,
        "y": 890,
        "wires": [
            [
                "65c0afcd.8388"
            ]
        ]
    },
    {
        "id": "65c0afcd.8388",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Datalogger",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 890,
        "wires": [
            [
                "a1296c3e.0467d",
                "7fcfdd93.ac45a4"
            ]
        ]
    },
    {
        "id": "70eee707.21eb08",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "ToTrue",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 560,
        "wires": [
            [
                "89541385.7f5a6"
            ]
        ]
    },
    {
        "id": "3b3e865c.e649aa",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "ToFalse",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 560,
        "wires": [
            [
                "ac8dba55.436ca8",
                "70eee707.21eb08"
            ]
        ]
    },
    {
        "id": "89541385.7f5a6",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "DescativarToTrue_Out",
        "links": [
            "bc74ae1c.8050f"
        ],
        "x": 505,
        "y": 560,
        "wires": []
    },
    {
        "id": "bc74ae1c.8050f",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "DescativarToTrue_In",
        "links": [
            "89541385.7f5a6",
            "2ffd423b.f2a4ae"
        ],
        "x": 135,
        "y": 650,
        "wires": [
            [
                "1770e069.fa06e"
            ]
        ]
    },
    {
        "id": "7d3c0e90.bc175",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "ActivateToTrue_Out",
        "links": [
            "64bd474c.8651a8",
            "b498c216.d75a3",
            "b7dd79e1.1a6908"
        ],
        "x": 505,
        "y": 700,
        "wires": []
    },
    {
        "id": "64bd474c.8651a8",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "ActivateToTrue_In",
        "links": [
            "7d3c0e90.bc175",
            "e3de11a.525d4f"
        ],
        "x": 135,
        "y": 610,
        "wires": [
            [
                "ac8dba55.436ca8"
            ]
        ]
    },
    {
        "id": "c2a083b6.80ece",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "ToFalse",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 700,
        "wires": [
            [
                "e19ab68f.2ca7d8",
                "1770e069.fa06e"
            ]
        ]
    },
    {
        "id": "e19ab68f.2ca7d8",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "ToTrue",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 700,
        "wires": [
            [
                "7d3c0e90.bc175"
            ]
        ]
    },
    {
        "id": "7e9f72bb.cc0ccc",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "StartDatalogger_Out",
        "links": [
            "f125f8dc.4fc0e8"
        ],
        "x": 405,
        "y": 610,
        "wires": []
    },
    {
        "id": "f125f8dc.4fc0e8",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "StartDatalogger_In",
        "links": [
            "7e9f72bb.cc0ccc",
            "0ccc179696cadb08"
        ],
        "x": 635,
        "y": 610,
        "wires": [
            [
                "6e2e57d6.1acb68"
            ]
        ]
    },
    {
        "id": "acd83647.191f48",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "StopDatalogger_Out",
        "links": [
            "ac947de3.26a6d",
            "70da6b8c3ca0227f"
        ],
        "x": 405,
        "y": 650,
        "wires": []
    },
    {
        "id": "ac947de3.26a6d",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "StopDatalogger_In",
        "links": [
            "acd83647.191f48"
        ],
        "x": 635,
        "y": 660,
        "wires": [
            [
                "bb20b02b.93fbf"
            ]
        ]
    },
    {
        "id": "3300d502.d9f2da",
        "type": "ui_dropdown",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "label": "Creación de Archivo",
        "tooltip": "",
        "place": "Seleccione",
        "group": "a41af5be.52be18",
        "order": 5,
        "width": "5",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Diario",
                "value": "Diario",
                "type": "str"
            },
            {
                "label": "Semanal",
                "value": "Semanal",
                "type": "str"
            },
            {
                "label": "Mensual",
                "value": "Mensual",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 1110,
        "y": 560,
        "wires": [
            [
                "669ee12e.3c9e4",
                "4c30ceb7.d240a"
            ]
        ]
    },
    {
        "id": "669ee12e.3c9e4",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Diario, semanal, mensual",
        "func": "var Well = global.get(\"Nombre_Pozo\")||\"--\";\nvar date    = new Date();\n// Date\nvar year    = date.getFullYear();\nvar month   = date.getMonth()+1;\nvar day     = date.getDate();\n\n//Time\nvar hours   = date.getHours();\nvar minutes = date.getMinutes();\nvar seconds = date.getSeconds();\n\n// Asignar nombre de archivo\nif(msg.payload == 'Diario'){\n    msg.filename = Well+' '+day+'-'+month+'-'+year;\n}\nelse if(msg.payload == 'Semanal'){\n    var week;\n    if(day<=8){week=1;}\n    else if(day<=16){week=2;}\n    else if(day<=24){week=3;}\n    else {week=4;}\n    msg.filename = Well+' Semana_'+week+'-'+month+'-'+year;\n}\nelse if(msg.payload == 'Mensual'){\n    msg.filename = Well+' '+month+'-'+year;\n}\nflow.set(\"Nombre_Archivo_Datalogger\",msg.filename);\ndelete msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1340,
        "y": 560,
        "wires": [
            [
                "882afa67.5605e8"
            ]
        ]
    },
    {
        "id": "bedc0725.f22738",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Datalogger",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 1085,
        "y": 720,
        "wires": [
            [
                "b9ed60ab.26f43"
            ]
        ]
    },
    {
        "id": "3c51eaef.2751d6",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "property": "Datalogger.Activated",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1290,
        "y": 720,
        "wires": [
            [
                "6b7af496.0913bc"
            ],
            [
                "4cb76011.15326"
            ]
        ]
    },
    {
        "id": "e3de11a.525d4f",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Datalogger Activated",
        "links": [
            "64bd474c.8651a8"
        ],
        "x": 1575,
        "y": 660,
        "wires": []
    },
    {
        "id": "2ffd423b.f2a4ae",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Datalogger deactivate",
        "links": [
            "bc74ae1c.8050f"
        ],
        "x": 1575,
        "y": 780,
        "wires": []
    },
    {
        "id": "4cb76011.15326",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "ToFalse",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 780,
        "wires": [
            [
                "2ffd423b.f2a4ae",
                "a222d060.87b67"
            ]
        ]
    },
    {
        "id": "6b7af496.0913bc",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "ToFalse",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 660,
        "wires": [
            [
                "e3de11a.525d4f",
                "b59d2d9c.bc7c8"
            ]
        ]
    },
    {
        "id": "5c0f44f8.2977bc",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1270,
        "y": 660,
        "wires": [
            [
                "6b7af496.0913bc"
            ]
        ]
    },
    {
        "id": "b59d2d9c.bc7c8",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "ToTrue",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 700,
        "wires": [
            [
                "2ffd423b.f2a4ae"
            ]
        ]
    },
    {
        "id": "a222d060.87b67",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "ToTrue",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 740,
        "wires": [
            [
                "e3de11a.525d4f"
            ]
        ]
    },
    {
        "id": "27ab586e.ff3e28",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1270,
        "y": 780,
        "wires": [
            [
                "4cb76011.15326"
            ]
        ]
    },
    {
        "id": "4c30ceb7.d240a",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Datalogger.Archive",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "4e129740.b3ea78",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Datalogger",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 795,
        "y": 560,
        "wires": [
            [
                "a28ff141.b8c37"
            ]
        ]
    },
    {
        "id": "a28ff141.b8c37",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Datalogger.Archive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 560,
        "wires": [
            [
                "3300d502.d9f2da"
            ]
        ]
    },
    {
        "id": "b9ed60ab.26f43",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Flag",
        "rules": [
            {
                "t": "set",
                "p": "Datalogger.Flag",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 720,
        "wires": [
            [
                "3c51eaef.2751d6"
            ]
        ]
    },
    {
        "id": "882afa67.5605e8",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 560,
        "wires": [
            [
                "4ea7eb06.9f2174"
            ]
        ]
    },
    {
        "id": "890323f.ee684e",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "group": "33c417e4.ee9778",
        "name": "Menu Eventos y alarmas",
        "order": 1,
        "width": "16",
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:Eventos()})\">Eventos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:Alarmas()})\">Alarmas</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-EntradasAnalogicas\" role=\"tab\"\n                aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\" ng-click=\"send({payload:PQA()})\">PQA</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:Datalogger()})\">Datalogger</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Eventos = function() { return \"Eventos\"; };\n        this.scope.Alarmas = function() { return \"Alarmas\"; };\n        this.scope.Datalogger = function() { return \"Datalogger\"; };\n        this.scope.PQA = function() { return \"PQA\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 530,
        "y": 1180,
        "wires": [
            [
                "3031a06c.c602b",
                "ba6763dbf23cbb5a"
            ]
        ]
    },
    {
        "id": "3031a06c.c602b",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Eventos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Alarmas",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Datalogger",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PQA",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 710,
        "y": 1200,
        "wires": [
            [
                "c2e14be8.387158"
            ],
            [
                "2f580b82.d69ec4"
            ],
            [
                "dcd696d0.332638"
            ],
            [
                "cd2627ac2843f441"
            ]
        ]
    },
    {
        "id": "21e4fb07.22d804",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "f3c2e7cf.5ed158",
        "name": "User Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::UserStatus",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 790,
        "wires": [
            [
                "8e762cce.be81"
            ]
        ]
    },
    {
        "id": "c404a6e9.ffda18",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "a80677cf.4274c8",
        "name": "Admin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Admin Loged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1020,
        "wires": [
            [
                "cb232372.b3dee"
            ]
        ]
    },
    {
        "id": "7dfbde1e.e4b5b",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "a80677cf.4274c8",
        "name": "Operator",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Operator Loged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 980,
        "wires": [
            [
                "cb232372.b3dee"
            ]
        ]
    },
    {
        "id": "6d40adaa.11d2c4",
        "type": "link out",
        "z": "3af652c9.6f9bee",
        "g": "a80677cf.4274c8",
        "name": "Usuario",
        "links": [
            "59e817c2.295b38",
            "40c12bb3.ead9f4"
        ],
        "x": 1225,
        "y": 990,
        "wires": []
    },
    {
        "id": "8e762cce.be81",
        "type": "switch",
        "z": "3af652c9.6f9bee",
        "g": "f3c2e7cf.5ed158",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 400,
        "y": 790,
        "wires": [
            [
                "33c5f16c.c8a5ae",
                "8effe1fe.bacd6",
                "7dfbde1e.e4b5b",
                "f8489c5a6d52f42a"
            ],
            [
                "42f85e00.83b314",
                "98a9b5d4.5e5608",
                "c404a6e9.ffda18",
                "f8489c5a6d52f42a"
            ],
            [
                "41b82348a8ab40a8",
                "c1672804cba19e98",
                "ba206124b4c1fb5e",
                "f8489c5a6d52f42a"
            ],
            [
                "8edea7ae.674088",
                "ffad1340.f8a3b",
                "ecd73acb6f9a9a0a"
            ]
        ]
    },
    {
        "id": "8edea7ae.674088",
        "type": "link out",
        "z": "3af652c9.6f9bee",
        "g": "64ff74e5.f4c53c",
        "name": "No user Out",
        "links": [
            "dd807959.9e5a08",
            "bf656c1e.ff84",
            "40b58948.5d5a48"
        ],
        "x": 655,
        "y": 520,
        "wires": []
    },
    {
        "id": "33c5f16c.c8a5ae",
        "type": "link out",
        "z": "3af652c9.6f9bee",
        "g": "64ff74e5.f4c53c",
        "name": "Admin Out",
        "links": [
            "5cc2d788.18b678",
            "ba3ec3f7.7f116",
            "b87d8378.fe2aa",
            "6f2053fa.77020c"
        ],
        "x": 655,
        "y": 560,
        "wires": []
    },
    {
        "id": "42f85e00.83b314",
        "type": "link out",
        "z": "3af652c9.6f9bee",
        "g": "64ff74e5.f4c53c",
        "name": "Oper Out",
        "links": [
            "30e13f64.16c0d",
            "ba3ec3f7.7f116",
            "b87d8378.fe2aa",
            "6f2053fa.77020c"
        ],
        "x": 655,
        "y": 600,
        "wires": []
    },
    {
        "id": "fbd8c1e9.7d493",
        "type": "link in",
        "z": "3af652c9.6f9bee",
        "g": "f3c2e7cf.5ed158",
        "name": "Acciones de usuario",
        "links": [
            "3e1d1fb3.3f52a",
            "ad87cee4.7dbb5",
            "f0c186466f456fd2"
        ],
        "x": 585,
        "y": 710,
        "wires": [
            [
                "ffad1340.f8a3b"
            ]
        ]
    },
    {
        "id": "ffad1340.f8a3b",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "be55ea76.ed4478",
        "name": "No user",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 730,
        "wires": [
            [
                "d1a73825.d89578",
                "9913875f5cc5f0f2"
            ]
        ]
    },
    {
        "id": "8effe1fe.bacd6",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "be55ea76.ed4478",
        "name": "Admin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Oper",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 770,
        "wires": [
            [
                "d1a73825.d89578",
                "9913875f5cc5f0f2"
            ]
        ]
    },
    {
        "id": "98a9b5d4.5e5608",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "be55ea76.ed4478",
        "name": "Admin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Admin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 810,
        "wires": [
            [
                "d1a73825.d89578",
                "9913875f5cc5f0f2"
            ]
        ]
    },
    {
        "id": "d1a73825.d89578",
        "type": "ui_text",
        "z": "3af652c9.6f9bee",
        "g": "be55ea76.ed4478",
        "group": "a706ea3d.b7fbc8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Usuario actual:",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 900,
        "y": 740,
        "wires": []
    },
    {
        "id": "8f64c5d0.2e2de8",
        "type": "function",
        "z": "2657da37.013b66",
        "name": "Login Autentication",
        "func": "//Get user data from flow context\nvar user            = flow.get(\"user\")|| \"null\";\nvar password        = flow.get(\"password\")||\"null\";\n\n//User status\nvar UserStatus = global.get(\"UserStatus\",\"memoryOnly\")||0;\n\n// Admin user\nvar AdminUser       = \"slacol\";\nvar AdminPassword   = \"1278\";\n\n// Operator user\nvar OperUser        = \"Oper\";\nvar OperPassword    = \"5321\";\n\n// root user\nvar rootUser = \"root\";\nvar rootPassword = \"1009\";\n\nif(!UserStatus){\n    \n    // Acceso Nivel 1\n    if(user == AdminUser && password == AdminPassword){\n        global.set(\"UserStatus\", 2,\"memoryOnly\");\n        msg.name = \"Admin\";\n        msg.userstatus = \"Sesión iniciada\"\n    }\n    // Acceso Nivel 2\n    else if(user == OperUser && password == OperPassword){\n        global.set(\"UserStatus\", 1,\"memoryOnly\");\n        msg.name = \"Operator\";\n        msg.userstatus = \"Sesión iniciada\"\n    }\n    // Acceso Nivel root\n    else if (user == rootUser && password == rootPassword) {\n        global.set(\"UserStatus\", 3, \"memoryOnly\");\n        msg.name = \"root\";\n        msg.userstatus = \"Sesión iniciada\"\n    }\n    else{\n        msg.error = \"Usuario o contraseña incorrectos: Por favor llene los campos nuevamente\";\n    }\n}\nelse{\n    msg.error = \"Usuario activo, por favor cierre sesión primero\";\n}\n\nmsg.payload = global.get(\"UserStatus\",\"memoryOnly\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 110,
        "wires": [
            [
                "a516f6f7.9f9d28",
                "80a4c506.a81c78",
                "1c0ced5.0f93b13"
            ]
        ]
    },
    {
        "id": "51d00666.b504b8",
        "type": "ui_toast",
        "z": "2657da37.013b66",
        "position": "top right",
        "displayTime": "3",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1050,
        "y": 40,
        "wires": []
    },
    {
        "id": "a516f6f7.9f9d28",
        "type": "switch",
        "z": "2657da37.013b66",
        "name": "Error",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 40,
        "wires": [
            [
                "a6a652a5.1b0aa"
            ]
        ]
    },
    {
        "id": "a6a652a5.1b0aa",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 40,
        "wires": [
            [
                "51d00666.b504b8"
            ]
        ]
    },
    {
        "id": "80a4c506.a81c78",
        "type": "switch",
        "z": "2657da37.013b66",
        "name": "Name",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "2a0bc418.e8756c"
            ]
        ]
    },
    {
        "id": "2a0bc418.e8756c",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "name: userstatus",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "name",
                "fromt": "str",
                "to": "name",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "userstatus",
                "fromt": "str",
                "to": "userstatus",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 80,
        "wires": [
            [
                "b7161c3b.bb7ad"
            ]
        ]
    },
    {
        "id": "b7161c3b.bb7ad",
        "type": "ui_toast",
        "z": "2657da37.013b66",
        "position": "top right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1050,
        "y": 80,
        "wires": []
    },
    {
        "id": "aa47304a.d40cf",
        "type": "ui_toast",
        "z": "2657da37.013b66",
        "position": "top right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 570,
        "y": 230,
        "wires": []
    },
    {
        "id": "1c0ced5.0f93b13",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::UserStatus",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "7ac7e5a3.05d60c",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "Logout",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "null",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "flow",
                "to": "null",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::UserStatus",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "userstatus",
                "pt": "msg",
                "to": "Sesión cerrada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sesión cerrada",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 150,
        "wires": [
            [
                "1c0ced5.0f93b13",
                "aa47304a.d40cf"
            ]
        ]
    },
    {
        "id": "f771788a.2843f8",
        "type": "switch",
        "z": "2657da37.013b66",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "user",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "password",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Iniciar sesión",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Cerrar sesión",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 130,
        "y": 90,
        "wires": [
            [
                "9804cbde.aea688"
            ],
            [
                "2ae89933.84dea6"
            ],
            [
                "8f64c5d0.2e2de8"
            ],
            [
                "7ac7e5a3.05d60c"
            ]
        ]
    },
    {
        "id": "9804cbde.aea688",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 30,
        "wires": [
            []
        ]
    },
    {
        "id": "2ae89933.84dea6",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "password",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 70,
        "wires": [
            []
        ]
    },
    {
        "id": "df6fb5ca.5f8af8",
        "type": "subflow:2657da37.013b66",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "Usuario",
        "env": [],
        "x": 1370,
        "y": 160,
        "wires": [
            [
                "cf6714f4.9f00d8"
            ]
        ],
        "inputLabels": [
            "Input msg"
        ],
        "outputLabels": [
            "Output msg"
        ]
    },
    {
        "id": "28cd79fb.3dcae6",
        "type": "ui_button",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "group": "a706ea3d.b7fbc8",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Cerrar sesión",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "Cerrar sesión",
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "df6fb5ca.5f8af8",
                "e067a1921f82df48"
            ]
        ]
    },
    {
        "id": "2066be8e.5c6832",
        "type": "ui_text_input",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "label": "Nombre de usuario",
        "tooltip": "",
        "group": "a706ea3d.b7fbc8",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "1",
        "topic": "user",
        "x": 1170,
        "y": 230,
        "wires": [
            [
                "df6fb5ca.5f8af8"
            ]
        ]
    },
    {
        "id": "e04fbd1c.98ffe",
        "type": "ui_button",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "group": "a706ea3d.b7fbc8",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Iniciar sesión",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Iniciar sesión",
        "x": 1190,
        "y": 270,
        "wires": [
            [
                "df6fb5ca.5f8af8"
            ]
        ]
    },
    {
        "id": "2ffa7be0.763644",
        "type": "ui_text_input",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "label": "Contraseña",
        "tooltip": "",
        "group": "a706ea3d.b7fbc8",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "password",
        "delay": "1",
        "topic": "password",
        "x": 1190,
        "y": 190,
        "wires": [
            [
                "df6fb5ca.5f8af8"
            ]
        ]
    },
    {
        "id": "be50258c.07bb98",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 120,
        "wires": [
            [
                "1595def7.d11251"
            ]
        ]
    },
    {
        "id": "6e26c35e.a97f8c",
        "type": "delay",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 480,
        "y": 160,
        "wires": [
            [
                "1595def7.d11251"
            ]
        ]
    },
    {
        "id": "1595def7.d11251",
        "type": "trigger",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "op1": "0",
        "op2": "Close",
        "op1type": "num",
        "op2type": "str",
        "duration": "15",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 670,
        "y": 120,
        "wires": [
            [
                "affdacff.6646c"
            ]
        ]
    },
    {
        "id": "affdacff.6646c",
        "type": "switch",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Close",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 120,
        "wires": [
            [
                "3a348318.fe982c"
            ]
        ]
    },
    {
        "id": "51d66341.8ee0fc",
        "type": "link in",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 365,
        "y": 140,
        "wires": [
            [
                "be50258c.07bb98",
                "6e26c35e.a97f8c"
            ]
        ]
    },
    {
        "id": "3a348318.fe982c",
        "type": "switch",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 120,
        "wires": [
            [
                "977882cd.4483a"
            ]
        ]
    },
    {
        "id": "c2e14be8.387158",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "menu usuario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Eventos_y_Datalog_Alarmas\",\t                \"Eventos_y_Datalog_Settings\",\t                \"Eventos_y_Datalog_PQAevents\",\t                \"Eventos_y_Datalog_Smart_Datalogger®\",\t                \"Eventos_y_Datalog_Buttons\"],\t       \"show\":[ \"Eventos_y_Datalog_Nav_Bar_User\",\t                \"Eventos_y_Datalog_Eventos\",\t                \"Eventos_y_Datalog_Memorias_USB\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1140,
        "wires": [
            [
                "c98bd2dc.e9d39"
            ]
        ]
    },
    {
        "id": "c98bd2dc.e9d39",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "Menú Entradas/Salidas SWCPRO",
        "links": [
            "8a17d991.081178",
            "980848c8.d90ec8",
            "abfef4e5.b7f448",
            "320aa1af1a983da1"
        ],
        "x": 1215,
        "y": 1180,
        "wires": []
    },
    {
        "id": "2f580b82.d69ec4",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "menu usuario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Eventos_y_Datalog_Eventos\",\t                \"Eventos_y_Datalog_Settings\",\t                \"Eventos_y_Datalog_PQAevents\",\t                \"Eventos_y_Datalog_Smart_Datalogger®\",\t                \"Eventos_y_Datalog_Buttons\"],\t       \"show\":[ \"Eventos_y_Datalog_Nav_Bar_User\",\t                \"Eventos_y_Datalog_Alarmas\",\t                \"Eventos_y_Datalog_Memorias_USB\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1180,
        "wires": [
            [
                "c98bd2dc.e9d39"
            ]
        ]
    },
    {
        "id": "312d9def.84df32",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "menu usuario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Eventos_y_Datalog_Eventos\",\t                \"Eventos_y_Datalog_Alarmas\",\t                \"Eventos_y_Datalog_Memorias_USB\",\t                \"Eventos_y_Datalog_PQAevents\"\t                ],\t       \"show\":[ \"Eventos_y_Datalog_Nav_Bar_User\",\t                \"Eventos_y_Datalog_Settings\",\t                \"Eventos_y_Datalog_Smart_Datalogger®\",\t                \"Eventos_y_Datalog_Buttons\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1220,
        "wires": [
            [
                "c98bd2dc.e9d39"
            ]
        ]
    },
    {
        "id": "9b0b3358.5ac42",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 75,
        "y": 1040,
        "wires": [
            [
                "6c6bc8b9.ccf248"
            ]
        ]
    },
    {
        "id": "6c6bc8b9.ccf248",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 160,
        "y": 1040,
        "wires": [
            [
                "24868425.cac96c",
                "e3dba22f.3fd21"
            ]
        ]
    },
    {
        "id": "501b4196.e2e16",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "links": [
            "51579afe.51eb14",
            "d9e918f.b47e7e8",
            "9acb8447.7a7a98",
            "38a73d64.5af212",
            "984b7042.907f4",
            "f796f5cc.fb7898",
            "4a3a2387d414149a",
            "c27cb084a6f62baf"
        ],
        "x": 225,
        "y": 570,
        "wires": [
            [
                "bc51637eae51a6ea"
            ]
        ]
    },
    {
        "id": "83065c59.d13dc",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "delete",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 550,
        "wires": [
            [
                "26677beb.cdb794"
            ]
        ]
    },
    {
        "id": "26677beb.cdb794",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "user?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 550,
        "wires": [
            [
                "420eb07c.41ee3"
            ],
            [
                "a3099110.2b922"
            ]
        ]
    },
    {
        "id": "a3099110.2b922",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 580,
        "wires": [
            [
                "a5c1b515.63bb98"
            ]
        ]
    },
    {
        "id": "420eb07c.41ee3",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "tipodearranque",
        "property": "#:(memoryOnly)::Input.Navigation.ComandOper",
        "propertyType": "global",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 760,
        "y": 540,
        "wires": [
            [
                "47eecc9b022b2242"
            ],
            [
                "a3099110.2b922"
            ]
        ]
    },
    {
        "id": "2705e4ec.6d650c",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "name": "Data show",
        "func": "var numdec = 1;\nvar unidad = \"Hz\";\nif(typeof msg.payload == 'number' ){\n    msg.payload = parseFloat(msg.payload.toFixed(numdec));\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 1040,
        "wires": [
            [
                "7358889e25a9730b"
            ]
        ]
    },
    {
        "id": "cf6714f4.9f00d8",
        "type": "switch",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "nivel usuario",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1520,
        "y": 160,
        "wires": [
            [
                "e14b4549.f7e448"
            ],
            [
                "e14b4549.f7e448"
            ],
            [
                "e14b4549.f7e448"
            ],
            [
                "bb4f29c8.aa7e88",
                "ca6aa931.930ae8"
            ]
        ]
    },
    {
        "id": "d547e2d2.48e7b",
        "type": "link in",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "4372d5a0.d338dc",
            "bb4f29c8.aa7e88"
        ],
        "x": 155,
        "y": 330,
        "wires": [
            [
                "9226d68a.21c148"
            ]
        ]
    },
    {
        "id": "93b28ffa.83d6a",
        "type": "switch",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "login?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "gte",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 330,
        "wires": [
            [
                "d13ee029.db027",
                "ea307c20.921bb"
            ],
            [
                "1aeb057.5ff60fb",
                "9ec2fc99.b8d92"
            ]
        ]
    },
    {
        "id": "9226d68a.21c148",
        "type": "switch",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "Usuario",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Usuario",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 330,
        "wires": [
            [
                "ea3b2578.9471a8"
            ]
        ]
    },
    {
        "id": "9ec2fc99.b8d92",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 400,
        "wires": [
            [
                "7b0bc601.5d8048"
            ]
        ]
    },
    {
        "id": "d13ee029.db027",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 270,
        "wires": [
            [
                "c42260f.7383fa"
            ]
        ]
    },
    {
        "id": "1aeb057.5ff60fb",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "28cd79fb.3dcae6"
            ]
        ]
    },
    {
        "id": "ea307c20.921bb",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 310,
        "wires": [
            [
                "28cd79fb.3dcae6"
            ]
        ]
    },
    {
        "id": "710c23d.a8063dc",
        "type": "inject",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 500,
        "y": 270,
        "wires": [
            [
                "d13ee029.db027"
            ]
        ]
    },
    {
        "id": "c42260f.7383fa",
        "type": "delay",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 900,
        "y": 270,
        "wires": [
            [
                "e04fbd1c.98ffe",
                "2066be8e.5c6832",
                "2ffa7be0.763644"
            ]
        ]
    },
    {
        "id": "7b0bc601.5d8048",
        "type": "delay",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 900,
        "y": 350,
        "wires": [
            [
                "e04fbd1c.98ffe",
                "2066be8e.5c6832",
                "2ffa7be0.763644"
            ]
        ]
    },
    {
        "id": "423ba16e.29911",
        "type": "link in",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "bb4f29c8.aa7e88"
        ],
        "x": 835,
        "y": 310,
        "wires": [
            [
                "6ddd2f34.2b638"
            ]
        ]
    },
    {
        "id": "6ddd2f34.2b638",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "delete",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 310,
        "wires": [
            [
                "2ffa7be0.763644",
                "2066be8e.5c6832"
            ]
        ]
    },
    {
        "id": "ea3b2578.9471a8",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "delete",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 330,
        "wires": [
            [
                "93b28ffa.83d6a"
            ]
        ]
    },
    {
        "id": "977882cd.4483a",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cerrar sesión",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 120,
        "wires": [
            [
                "df6fb5ca.5f8af8"
            ]
        ]
    },
    {
        "id": "bb4f29c8.aa7e88",
        "type": "link out",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "8a17d991.081178",
            "423ba16e.29911",
            "d547e2d2.48e7b"
        ],
        "x": 1655,
        "y": 240,
        "wires": []
    },
    {
        "id": "673a44a4224904a9",
        "type": "pccc out",
        "z": "1fbf295f73cccb97",
        "endpoint": "e9d237aaf9318e74",
        "variable": "PF755T_SpeedReference",
        "name": "",
        "x": 620,
        "y": 60,
        "wires": []
    },
    {
        "id": "eb883084.7d28d",
        "type": "function",
        "z": "1fbf295f73cccb97",
        "name": "Scale",
        "func": "msg.payload = Math.abs(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 60,
        "wires": [
            [
                "e86e44e2339ed2bc",
                "673a44a4224904a9"
            ]
        ]
    },
    {
        "id": "e814c62e3cef2e85",
        "type": "change",
        "z": "1fbf295f73cccb97",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Last_Reference.Source",
                "pt": "global",
                "to": "Topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "d21e2c47.59925",
        "type": "function",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "INT to BIN Buffer",
        "func": "var buffer = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\nvar temp = msg.payload;\nvar i = buffer.length\n\nwhile(temp > 0){\n    if(temp % 2 === 0){\n        buffer[i] = 0;\n    }\n    else{\n        buffer[i] = 1;\n    }\n    \n    i--;\n    temp = Math.floor(temp / 2);\n}\nmsg.payload = buffer.reverse();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 310,
        "wires": [
            [
                "36d8209f.12d38"
            ]
        ]
    },
    {
        "id": "36d8209f.12d38",
        "type": "function",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "Drive_Status",
        "func": "msg.payload = {\n    \"Run_Ready\"         :msg.payload[0],\n    \"Active\"            :msg.payload[1],\n    \"Command_dir\"       :msg.payload[2],\n    \"Actual_dir\"        :msg.payload[3],\n    \"Accel\"             :msg.payload[4],\n    \"Decel\"             :msg.payload[5],\n    \"Alarm\"             :msg.payload[6],\n    \"Fault\"             :msg.payload[7],\n    \"At_Setpt_Spd\"      :msg.payload[8]\n}\nglobal.set(\"C2S.Drive_Status\",msg.payload, 'memoryOnly');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 310,
        "wires": [
            [
                "838adacf.15be18"
            ]
        ]
    },
    {
        "id": "838adacf.15be18",
        "type": "function",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "Status Function",
        "func": "//Calling global variables\nvar Active = global.get(\"C2S.Drive_Status.Active\", 'memoryOnly') || 0;\nvar Alarm = global.get(\"C2S.Drive_Status.Alarm\", 'memoryOnly') || 0;\nvar Fault = global.get(\"C2S.Drive_Status.Fault\", 'memoryOnly') || 0;\nvar Accel = global.get(\"C2S.Drive_Status.Accel\", 'memoryOnly') || 0;\nvar Decel = global.get(\"C2S.Drive_Status.Decel\", 'memoryOnly') || 0;\nvar Comm = global.get(\"C2S.Comunicacion_Drive\", 'memoryOnly');\nvar Prot = global.get(\"Protections.RFlag\", 'memoryOnly');\nvar delay = flow.get(\"Rearranque_delay\", \"memoryOnly\") || null;\nvar FallaGeneral = global.get(\"IO.Functions.DO['Falla general']\", 'memoryOnly') || false;\nvar CommSts = global.get(\"IO.Functions.CommSts\", 'memoryOnly') || false;\n\nif (!Comm) {\n    msg.payload = \"Falla de comunicación drive\";\n}\nelse if ((delay != null) && (delay > 0)) {\n    msg.payload = \"Re-arranque en: \" + parseInt(delay / 1000) + \" s\";\n    flow.set(\"Rearranque_delay\", delay - 500, 'memoryOnly');\n}\nelse if (Fault) {\n    msg.payload = \"FALLA de variador!\";\n}\nelse if (Prot) {\n    msg.payload = \"FALLA de protección!\";\n}\nelse if (FallaGeneral) {\n    msg.payload = \"Falla general\";\n}\nelse if (CommSts) {\n    msg.payload = \"Falla communicación I/O\";\n}\nelse if (Alarm) {\n    msg.payload = \"ALARMA!\";\n}\nelse if (Active) {\n    if (Accel) {\n        msg.payload = \"ACTIVO Acelerando\";\n    }\n    else if (Decel) {\n        msg.payload = \"ACTIVO Desacelerando\";\n    }\n    else {\n        msg.payload = \"ACTIVO\";\n    }\n}\nelse {\n    msg.payload = \"DETENIDO\";\n}\nnode.status({ fill: \"green\", shape: \"dot\", text: Fault });\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 310,
        "wires": [
            [
                "f16815630fb5bc06",
                "0215c9c0562ad541"
            ]
        ]
    },
    {
        "id": "8fdf7c75.8bd9d",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "Obtener Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Status_Word",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 310,
        "wires": [
            [
                "d21e2c47.59925"
            ]
        ]
    },
    {
        "id": "21bfe70d.8d67a8",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "Lectura Datos C2S",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::C2S.Implicit",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 350,
        "wires": [
            []
        ]
    },
    {
        "id": "6c83c496.5eb8ec",
        "type": "pccc in",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "endpoint": "a3d1f2c7.5fe22",
        "mode": "all",
        "variable": "PF755T_DLReading_0",
        "diff": false,
        "name": "",
        "x": 170,
        "y": 310,
        "wires": [
            [
                "d105f996.05fde8"
            ]
        ]
    },
    {
        "id": "d105f996.05fde8",
        "type": "function",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "Interpretar comunicación",
        "func": "// variables para configuración de la polea\nvar PoleaGrande = global.get(\"C2S.Motor_Control.Nameplate.PoleaGrande\") || 0;\nvar PoleaPequena = global.get(\"C2S.Motor_Control.Nameplate.PoleaPequena\") || 0;\nvar RGB = global.get(\"C2S.Motor_Control.Nameplate.RGB\") || 0;\nvar RPM = global.get(\"C2S.Motor_Control.Nameplate.RPM\") || 0;\nvar HertzMotor = global.get(\"C2S.Motor_Control.Nameplate.Hertz\") || 0;\n\n// variables tomadas desde el VSD\nvar Commanded_SpdRef = parseFloat(msg.payload.Commanded_SpdRef);\nvar Output_Frequency = parseFloat(msg.payload.Output_Frequency);\n\nif ((PoleaGrande != 0) && (RGB != 0) && (RPM != 0) && HertzMotor != 0) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"Configurado\" });\n    var relSRP2 = RPM * PoleaPequena\n    if (relSRP2 != 0) {//ejecute si la relacion de SRP2 está correcta\n        var spm = (Commanded_SpdRef * RPM * PoleaPequena) / (PoleaGrande * RGB * HertzMotor);\n        var spmActual = (Output_Frequency * RPM * PoleaPequena) / (PoleaGrande * RGB * HertzMotor);\n    }\n\n}\nelse {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"NoConfigurado\" });\n}\n\nmsg.payload = {\n    'Status_Word': Float2Int(msg.payload.Status_Word),\n    'Output_Frequency': Output_Frequency,\n    'Commanded_SpdRef': Commanded_SpdRef,\n    'Output_Current': parseFloat(msg.payload.Output_Current),\n    'Output_Voltage': parseFloat(msg.payload.Output_Voltage),\n    'Output_Power': parseFloat(msg.payload.Output_Power),\n    'Power_Factor': parseFloat(msg.payload.Power_Factor),\n    'Bus_DC_Volts': parseFloat(msg.payload.Bus_DC_Volts),\n    'Elapsed_Run_Time': parseFloat(msg.payload.Elapsed_Run_Time),\n    'Drive_Temp_C': parseFloat(msg.payload.Drive_Temp_C),\n    'Last_Fault_Code': Float2Int(msg.payload.Last_Fault_Code),\n    'Elapsed_kWH': parseFloat(msg.payload.Elapsed_kWH * 1000),\n    'spm': spm,\n    'spmActual': spmActual\n}\n\ncontext.set(\"PoleaGrande\", PoleaGrande, \"memoryOnly\");\ncontext.set(\"RGB\", RGB, \"memoryOnly\");\ncontext.set(\"RPM\", RPM, \"memoryOnly\");\ncontext.set(\"HertzMotor\", HertzMotor, \"memoryOnly\");\ncontext.set(\"Commanded_SpdRef\", Commanded_SpdRef, \"memoryOnly\");\ncontext.set(\"Output_Frequency\", Output_Frequency, \"memoryOnly\");\ncontext.set(\"spm\", spm, \"memoryOnly\");\ncontext.set(\"spmActual\", spmActual, \"memoryOnly\");\n\nreturn msg;\n\nfunction Float2Int(payload) {\n    const getHex = i => ('00' + i.toString(16)).slice(-2);\n    var view = new DataView(new ArrayBuffer(4)),\n        result;\n    view.setFloat32(0, payload);\n    result = Array\n        .apply(null, { length: 4 })\n        .map((_, i) => getHex(view.getUint8(i)))\n        .join('');\n    return parseInt(result, 16);\n}\n//Fuente: https://stackoverflow.com/questions/47164675/convert-float-to-32bit-hex-string-in-javascript\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 310,
        "wires": [
            [
                "8fdf7c75.8bd9d",
                "21bfe70d.8d67a8"
            ]
        ]
    },
    {
        "id": "b5432e18.1b297",
        "type": "pccc out",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "endpoint": "e9d237aaf9318e74",
        "variable": "CommandWord",
        "name": "",
        "x": 1360,
        "y": 220,
        "wires": []
    },
    {
        "id": "e7869ca8.ae27c",
        "type": "switch",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "Active?",
        "property": "#:(memoryOnly)::Drive_Status.Active",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1140,
        "y": 220,
        "wires": [
            [
                "b5432e18.1b297",
                "50944dad750778ed"
            ]
        ]
    },
    {
        "id": "5479100e.249ec",
        "type": "function",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "Stop Cmd",
        "func": "//v = new DataView(new ArrayBuffer(4));\nmsg.payload = 5393;\n//msg.payload = msg.payload.toString(16);\n//v.setUint32(0, '0x'+ msg.payload);\n//node.status({fill:\"green\",shape:\"dot\",text:v.getFloat32(0)});\n\n//msg.payload = v.getFloat32(0);\n\nreturn msg;\n\n// Fuentes:\n// https://stackoverflow.com/questions/41635908/node-red-parsing-json-data-and-converting-it-into-binary\n// https://stackoverflow.com/questions/49221045/javascript-hexadecimal-string-to-ieee-754-floating-point",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 220,
        "wires": [
            [
                "e7869ca8.ae27c"
            ]
        ]
    },
    {
        "id": "bd99b4e3.36dc18",
        "type": "pccc out",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "endpoint": "e9d237aaf9318e74",
        "variable": "TimeOut",
        "name": "",
        "x": 1160,
        "y": 130,
        "wires": []
    },
    {
        "id": "c30439cc.4bcb68",
        "type": "delay",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 940,
        "y": 90,
        "wires": [
            [
                "bd99b4e3.36dc18"
            ]
        ]
    },
    {
        "id": "205ad8ee.53daf8",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "20",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "20",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 90,
        "wires": [
            [
                "c30439cc.4bcb68"
            ]
        ]
    },
    {
        "id": "2aab0f68.d1ce8",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 130,
        "wires": [
            [
                "bd99b4e3.36dc18"
            ]
        ]
    },
    {
        "id": "89596b07.c81a88",
        "type": "delay",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 820,
        "y": 170,
        "wires": [
            [
                "5479100e.249ec"
            ]
        ]
    },
    {
        "id": "223b4301.94d90c",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Status_TimeOut",
                "pt": "flow",
                "to": "status.text",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "28a5f644.25dfba",
        "type": "switch",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "",
        "property": "#:(memoryOnly)::Status_TimeOut",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "20",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 150,
        "wires": [
            [
                "2aab0f68.d1ce8",
                "205ad8ee.53daf8",
                "89596b07.c81a88"
            ]
        ]
    },
    {
        "id": "c743079b.f42c28",
        "type": "function",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "Arranque del Drive",
        "func": "if(msg.payload == 'online'){\n    context.set('status',true,'memoryOnly');\n    node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\n    return msg;\n}\nelse if(msg.payload != 'online'){\n    context.set('status',false,'memoryOnly');\n    node.status({fill:\"red\",shape:\"dot\",text:msg.payload});\n    return;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 110,
        "wires": [
            [
                "89596b07.c81a88",
                "2aab0f68.d1ce8",
                "205ad8ee.53daf8"
            ]
        ]
    },
    {
        "id": "c9f9bcf4.df756",
        "type": "status",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "Status Drive",
        "scope": [
            "bd99b4e3.36dc18"
        ],
        "x": 140,
        "y": 190,
        "wires": [
            [
                "223b4301.94d90c"
            ]
        ]
    },
    {
        "id": "f315fa9c.1185c8",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "5s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 150,
        "wires": [
            [
                "28a5f644.25dfba"
            ]
        ]
    },
    {
        "id": "707fd695.b69b88",
        "type": "rbe",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 460,
        "y": 110,
        "wires": [
            [
                "c743079b.f42c28"
            ]
        ]
    },
    {
        "id": "13543f21.6950c1",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "status.text",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 110,
        "wires": [
            [
                "707fd695.b69b88"
            ]
        ]
    },
    {
        "id": "94c309f0.3ce088",
        "type": "status",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "Status Drive",
        "scope": [
            "6c83c496.5eb8ec"
        ],
        "x": 140,
        "y": 110,
        "wires": [
            [
                "13543f21.6950c1"
            ]
        ]
    },
    {
        "id": "50944dad750778ed",
        "type": "delay",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "c6cdb127fcc1677c"
            ]
        ]
    },
    {
        "id": "c6cdb127fcc1677c",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "8ed62712.fe2018",
        "name": "Evitar paro forzado Drive",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 180,
        "wires": [
            [
                "b5432e18.1b297"
            ]
        ]
    },
    {
        "id": "ca280181.090e2",
        "type": "subflow:c8b77ff3.ab501",
        "z": "dd18d94e.4b1408",
        "g": "3ae9fbe60d6132ea",
        "name": "",
        "env": [],
        "x": 460,
        "y": 680,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "56ac92ec57275087",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "g": "3ae9fbe60d6132ea",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Basic",
        "payload": "Start",
        "payloadType": "str",
        "x": 250,
        "y": 680,
        "wires": [
            [
                "ca280181.090e2"
            ]
        ]
    },
    {
        "id": "d7c5f9ec46c1ad01",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "g": "3ae9fbe60d6132ea",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Basic",
        "payload": "Stop",
        "payloadType": "str",
        "x": 250,
        "y": 720,
        "wires": [
            [
                "ca280181.090e2"
            ]
        ]
    },
    {
        "id": "0c82132c006f9e50",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "g": "3ae9fbe60d6132ea",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Basic",
        "payload": "Reset",
        "payloadType": "str",
        "x": 240,
        "y": 760,
        "wires": [
            [
                "ca280181.090e2"
            ]
        ]
    },
    {
        "id": "4bc9b58e.7b883c",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "3ae9fbe60d6132ea",
        "name": "Forward",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Direction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 800,
        "wires": [
            [
                "ca280181.090e2"
            ]
        ]
    },
    {
        "id": "dfd54bf68767ddc1",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "g": "3ae9fbe60d6132ea",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 120,
        "y": 800,
        "wires": [
            [
                "4bc9b58e.7b883c"
            ]
        ]
    },
    {
        "id": "98a11684d294d791",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "g": "3ae9fbe60d6132ea",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 120,
        "y": 840,
        "wires": [
            [
                "a553cb02d3dd2a37"
            ]
        ]
    },
    {
        "id": "a553cb02d3dd2a37",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "3ae9fbe60d6132ea",
        "name": "Reverse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Direction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 840,
        "wires": [
            [
                "ca280181.090e2"
            ]
        ]
    },
    {
        "id": "9166bbc5fd352f81",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "8c207e440fb46f33",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "C2S.IP",
                "pt": "global",
                "to": "192.168.2.10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "9f77b0d829ad914b",
        "type": "link in",
        "z": "dd18d94e.4b1408",
        "g": "8c207e440fb46f33",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 65,
        "y": 940,
        "wires": [
            [
                "9166bbc5fd352f81"
            ]
        ]
    },
    {
        "id": "51331ceadbceec6b",
        "type": "subflow:1fbf295f73cccb97",
        "z": "dd18d94e.4b1408",
        "name": "",
        "env": [],
        "x": 900,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "b1fa600f4dfe3973",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 690,
        "y": 760,
        "wires": [
            [
                "51331ceadbceec6b"
            ]
        ]
    },
    {
        "id": "64f14524182dbc4d",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "15",
        "payloadType": "num",
        "x": 690,
        "y": 800,
        "wires": [
            [
                "51331ceadbceec6b"
            ]
        ]
    },
    {
        "id": "479a7f168675a345",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 690,
        "y": 840,
        "wires": [
            [
                "51331ceadbceec6b"
            ]
        ]
    },
    {
        "id": "7a83870cc8bc5555",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25.371",
        "payloadType": "num",
        "x": 690,
        "y": 880,
        "wires": [
            [
                "51331ceadbceec6b"
            ]
        ]
    },
    {
        "id": "ea32976ff44ab826",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "name": "Status Drive Link In",
        "links": [
            "f16815630fb5bc06",
            "4d8114af67dce517",
            "b41db225cceb93c5"
        ],
        "x": 525,
        "y": 1000,
        "wires": [
            [
                "daa89a01.910de8"
            ]
        ]
    },
    {
        "id": "f16815630fb5bc06",
        "type": "link out",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "Status Drive Link Out",
        "links": [
            "ea32976ff44ab826"
        ],
        "x": 1285,
        "y": 310,
        "wires": []
    },
    {
        "id": "c46d6edd.69e92",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "Selección Sensor de Fondo",
        "label": "",
        "tooltip": "",
        "place": "",
        "group": "55a9eb4e.762c64",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Ninguno",
                "value": "Ninguno",
                "type": "str"
            },
            {
                "label": "Personalizado",
                "value": "Personalizado",
                "type": "str"
            },
            {
                "label": "Zenith",
                "value": "Zenith",
                "type": "str"
            },
            {
                "label": "Schlumberger",
                "value": "Schlumberger",
                "type": "str"
            },
            {
                "label": "GRC Scout",
                "value": "GRC Scout",
                "type": "str"
            },
            {
                "label": "Novomet",
                "value": "Novomet",
                "type": "str"
            },
            {
                "label": "Borets",
                "value": "Borets",
                "type": "str"
            },
            {
                "label": "Borets Spy-Pro-SPS-1500",
                "value": "Borets Spy-Pro-SPS-1500",
                "type": "str"
            },
            {
                "label": "Borets (Screen-Touch)",
                "value": "BoretsTouch",
                "type": "str"
            },
            {
                "label": "Spectrum",
                "value": "Spectrum",
                "type": "str"
            },
            {
                "label": "Sensorless®",
                "value": "Sensorless",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "DownholeSensor_Brand",
        "topicType": "str",
        "className": "",
        "x": 500,
        "y": 110,
        "wires": [
            [
                "cf1d2db4.cfc918",
                "a9eece6d2bcfed87"
            ]
        ]
    },
    {
        "id": "3accac1b.919a24",
        "type": "ui_text_input",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "ID Sensor de fondo",
        "label": "ID",
        "tooltip": "",
        "group": "55a9eb4e.762c64",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "ID_Downhole",
        "x": 470,
        "y": 160,
        "wires": [
            [
                "39c53f14.25a278"
            ]
        ]
    },
    {
        "id": "efaec9be.df9588",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Process_data.DHS.ID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "3accac1b.919a24"
            ]
        ]
    },
    {
        "id": "cf1d2db4.cfc918",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "Brand",
        "rules": [
            {
                "t": "set",
                "p": "Process_data.DHS.Brand_DHS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 110,
        "wires": [
            [
                "86ad5821826b4199"
            ]
        ]
    },
    {
        "id": "39c53f14.25a278",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "ID",
        "rules": [
            {
                "t": "set",
                "p": "Process_data.DHS.ID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "8ed3ce75.2bbb",
        "type": "complete",
        "z": "38e901f121b52acb",
        "g": "d84d4fbe.ee6ce",
        "name": "",
        "scope": [
            "cf1d2db4.cfc918"
        ],
        "uncaught": false,
        "x": 1020,
        "y": 510,
        "wires": [
            [
                "bde8b5e.8ff1e48"
            ]
        ]
    },
    {
        "id": "bde8b5e.8ff1e48",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "d84d4fbe.ee6ce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Process_data.DHS.MBSMap",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 510,
        "wires": [
            [
                "5500fe6d.2fbd18"
            ]
        ]
    },
    {
        "id": "5500fe6d.2fbd18",
        "type": "function",
        "z": "38e901f121b52acb",
        "g": "d84d4fbe.ee6ce",
        "name": "Objeto DHSData",
        "func": "var DHS = flow.get(\"DownholeSensor.MBSMap\");\nvar DownHoleData = {};\nfor(var i=0; i<DHS.length; i+=1){\n    DownHoleData[DHS[i].Descripción] = 0;\n}\nmsg.payload = {DownHoleData}\nglobal.set(\"Process_data.DHS\",DownHoleData,\"memoryOnly\");\nreturn;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1410,
        "y": 510,
        "wires": []
    },
    {
        "id": "feb905dc.b5207",
        "type": "link in",
        "z": "38e901f121b52acb",
        "g": "d84d4fbe.ee6ce",
        "name": "DHS Link In",
        "links": [
            "ad87cee4.7dbb5",
            "935b56e9d359332d"
        ],
        "x": 1075,
        "y": 550,
        "wires": [
            [
                "bde8b5e.8ff1e48"
            ]
        ]
    },
    {
        "id": "a7f0f525.ae1878",
        "type": "inject",
        "z": "38e901f121b52acb",
        "g": "d84d4fbe.ee6ce",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1200,
        "y": 550,
        "wires": [
            [
                "bde8b5e.8ff1e48"
            ]
        ]
    },
    {
        "id": "58d38a40.f1fd6c",
        "type": "inject",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "DHS",
        "props": [
            {
                "p": "DHS",
                "v": "Process_data.DHS",
                "vt": "global"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 1990,
        "y": 60,
        "wires": [
            [
                "d5c6e22e.5913a"
            ]
        ]
    },
    {
        "id": "d5c6e22e.5913a",
        "type": "function",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "Mensajes asíncronos Modbus",
        "func": "// Enviar mensajes de lectura Modbus de forma asíncrona\nfor(var i=0; i<msg.DHS.MBSMap.length; i+=1){\n    msg.payload = { \n        'fc':       msg.DHS.MBSMap[i][\"Tipo de registro\"] == \"HR\" ? 3:4, \n        'unitid':   msg.DHS.ID, \n        'address':  msg.DHS.MBSMap[i].Registro, \n        'quantity': 1\n    }\n    msg.topic   = msg.DHS.MBSMap[i][\"Descripción\"];\n    msg.factor  = msg.DHS.MBSMap[i][\"Multiplicador\"];\n    node.send(msg)\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2190,
        "y": 60,
        "wires": [
            [
                "ca39f80a814eaaa4"
            ]
        ]
    },
    {
        "id": "db2c3fd1.d4b6a",
        "type": "modbus-flex-getter",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "DHS RS485",
        "showStatusActivities": true,
        "showErrors": false,
        "logIOActivities": false,
        "server": "aeef0dfe.74e9c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "x": 2550,
        "y": 60,
        "wires": [
            [
                "30bc82a5.83883e",
                "75b2fd8d.98dbcc"
            ],
            []
        ]
    },
    {
        "id": "30bc82a5.83883e",
        "type": "function",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "Asingar Datos",
        "func": "var LostDHDflag = flow.get(\"LostDHDflag\", \"memoryOnly\") || false\nvar ConvTemp = global.get(\"DHSPerson.TemUnit\") || false;\nvar brand = global.get(\"Process_data.DHS.Brand_DHS\") || \"otro\";\nif (msg.payload !== \"\") {\n    var Data = global.get('Process_data.DHS', 'memoryOnly');\n    if (brand == \"Personalizado\" && ConvTemp && (msg.topic.includes(\"Temperatura\"))) Data[msg.topic] = parseFloat((((msg.payload[0] * msg.factor) * 1.8) + 32).toFixed(2));\n    else\n        Data[msg.topic] = parseFloat((msg.payload[0] * msg.factor).toFixed(2));\n    context.set('Data', Data, 'memoryOnly');\n    global.set(\"Process_data.DHS\", Data, 'memoryOnly')\n}\nif (msg.payload == \"\" && LostDHDflag) {\n    var Data = global.get('Process_data.DHS', 'memoryOnly');\n    Data[msg.topic] = 0;\n    context.set('Data', Data, 'memoryOnly');\n    global.set(\"Process_data.DHS\", Data, 'memoryOnly')\n}\n\nreturn;\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 60,
        "wires": []
    },
    {
        "id": "75b2fd8d.98dbcc",
        "type": "switch",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2680,
        "y": 120,
        "wires": [
            [
                "a6bc5916.f91728",
                "f198a750.0dc288",
                "9599bd03.2a1a5"
            ],
            [
                "2ef0e8e6.2d3508"
            ]
        ]
    },
    {
        "id": "5fde841b.216d14",
        "type": "ui_led",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "order": 1,
        "group": "8276e64d.c16508",
        "width": 0,
        "height": 0,
        "label": "Estado de comunicación: {{msg.payload}}",
        "labelPlacement": "right",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "En falla",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "Activa",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 2980,
        "y": 100,
        "wires": []
    },
    {
        "id": "a6bc5916.f91728",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Activa",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.DHS.Comm",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2830,
        "y": 100,
        "wires": [
            [
                "5fde841b.216d14"
            ]
        ]
    },
    {
        "id": "5b339a75.df7174",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "En falla",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.DHS.Comm",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3290,
        "y": 150,
        "wires": [
            [
                "5fde841b.216d14"
            ]
        ]
    },
    {
        "id": "ee057353c5c82042",
        "type": "catch",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "",
        "scope": [
            "d5c6e22e.5913a"
        ],
        "uncaught": false,
        "x": 2090,
        "y": 140,
        "wires": [
            [
                "03a3b206eac12d39"
            ]
        ]
    },
    {
        "id": "03a3b206eac12d39",
        "type": "debug",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 140,
        "wires": []
    },
    {
        "id": "6914a9b4.85f3c",
        "type": "function",
        "z": "38e901f121b52acb",
        "g": "48d282d70b9e72c9",
        "name": "Modbus sensor Number",
        "func": "\nif      (msg.payload == 'Zenith')                   {msg.payload = 3;}\nelse if (msg.payload == 'Schlumberger')             {msg.payload = 1;}\nelse if (msg.payload == \"GRC Scout\")                {msg.payload = 4;}\nelse if (msg.payload == 'Novomet')                  {msg.payload = 6;}\nelse if (msg.payload == 'Borets')                   {msg.payload = 7;}\nelse if (msg.payload == \"Borets Spy-Pro-SPS-1500\")  {msg.payload = 8;}\nelse if (msg.payload == \"Personalizado\")            {msg.payload = 10; }\nelse if (msg.payload == \"BoretsTouch\")            {msg.payload = 11; }\nelse if (msg.payload == \"Spectrum\")            {msg.payload = 12; }\nelse                                                {msg.payload = 5;}\n\nglobal.set(\"Process_data.DHS.Number\",msg.payload);\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2090,
        "y": 290,
        "wires": []
    },
    {
        "id": "b52f82cb1a7a7339",
        "type": "ui_table",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "group": "1b1afe53.beb8f2",
        "name": "",
        "order": 1,
        "width": "12",
        "height": "8",
        "columns": [
            {
                "field": "No",
                "title": "#",
                "width": "8 %",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Descripción",
                "title": "Descripción",
                "width": "30 %",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Tipo de dato",
                "title": "T. Dato",
                "width": "17 %",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Tipo de registro",
                "title": "MBS FC",
                "width": "17 %",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Registro",
                "title": "Registro",
                "width": "17 %",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Multiplicador",
                "title": "Mul",
                "width": "11 %",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1720,
        "y": 140,
        "wires": []
    },
    {
        "id": "94d4b0f6a1035ffd",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "Ninguno",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 60,
        "wires": [
            [
                "b52f82cb1a7a7339",
                "e8d9bf36189ddebb",
                "9f49be987339f818"
            ]
        ]
    },
    {
        "id": "74b80b74448a0b3f",
        "type": "complete",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "",
        "scope": [
            "cf1d2db4.cfc918"
        ],
        "uncaught": false,
        "x": 1020,
        "y": 180,
        "wires": [
            [
                "5278e06818418426"
            ]
        ]
    },
    {
        "id": "5278e06818418426",
        "type": "switch",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "DHS",
        "property": "Process_data.DHS.Brand_DHS",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Ninguno",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Personalizado",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Zenith",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schlumberger",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GRC Scout",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Novomet",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Borets",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Borets Spy-Pro-SPS-1500",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BoretsTouch",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Spectrum",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 1180,
        "y": 180,
        "wires": [
            [
                "94d4b0f6a1035ffd"
            ],
            [
                "4c67ee20325480a3"
            ],
            [
                "9e553fa95475d36d"
            ],
            [
                "aad1d8441babacb4"
            ],
            [
                "7beffe89e0d83774"
            ],
            [
                "a8053e3fc3891ec7"
            ],
            [
                "6577cdd1e1da10e7"
            ],
            [
                "c46b426ddcba3ca6"
            ],
            [
                "27d05faae193e4da"
            ],
            [
                "2aad8b543010b8e8"
            ]
        ]
    },
    {
        "id": "9e553fa95475d36d",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "Zenith",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"No\":1,\"Descripción\":\"Presión de entrada\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":0,\"Multiplicador\":0.1},{\"No\":2,\"Descripción\":\"Presión de descarga\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":1,\"Multiplicador\":0.1},{\"No\":3,\"Descripción\":\"Temperatura de entrada\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":2,\"Multiplicador\":0.1},{\"No\":4,\"Descripción\":\"Temperatura de motor\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":3,\"Multiplicador\":0.1},{\"No\":5,\"Descripción\":\"Vibración X\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":4,\"Multiplicador\":0.001},{\"No\":6,\"Descripción\":\"Vibración Z\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":5,\"Multiplicador\":0.001},{\"No\":7,\"Descripción\":\"Corriente de fuga\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":6,\"Multiplicador\":0.1}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 140,
        "wires": [
            [
                "b52f82cb1a7a7339",
                "e8d9bf36189ddebb"
            ]
        ]
    },
    {
        "id": "aad1d8441babacb4",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "Schlumberger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"No\":1,\"Descripción\":\"Presión de entrada\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":2136,\"Multiplicador\":0.1},{\"No\":2,\"Descripción\":\"Presión de descarga\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":2137,\"Multiplicador\":0.1},{\"No\":3,\"Descripción\":\"Temperatura de entrada\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":2139,\"Multiplicador\":0.1},{\"No\":4,\"Descripción\":\"Temperatura de motor\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":2140,\"Multiplicador\":0.1},{\"No\":5,\"Descripción\":\"Vibración X\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":2141,\"Multiplicador\":0.001},{\"No\":6,\"Descripción\":\"Corriente de fuga\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":2142,\"Multiplicador\":0.001}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 180,
        "wires": [
            [
                "b52f82cb1a7a7339",
                "e8d9bf36189ddebb"
            ]
        ]
    },
    {
        "id": "7beffe89e0d83774",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "GRC Scout",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"No\":1,\"Descripción\":\"Presión de entrada\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":1801,\"Multiplicador\":0.1},{\"No\":2,\"Descripción\":\"Presión de descarga\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":1802,\"Multiplicador\":0.1},{\"No\":3,\"Descripción\":\"Temperatura de entrada\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":1803,\"Multiplicador\":0.1},{\"No\":4,\"Descripción\":\"Temperatura de motor\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":1804,\"Multiplicador\":0.1},{\"No\":5,\"Descripción\":\"Vibración X\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":53,\"Multiplicador\":0.1},{\"No\":6,\"Descripción\":\"Vibración Z\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":54,\"Multiplicador\":0.1},{\"No\":7,\"Descripción\":\"Corriente de fuga\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":15,\"Multiplicador\":0.01}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 220,
        "wires": [
            [
                "b52f82cb1a7a7339",
                "e8d9bf36189ddebb"
            ]
        ]
    },
    {
        "id": "a8053e3fc3891ec7",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "Novomet",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"No\":1,\"Descripción\":\"Presión de entrada\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":38,\"Multiplicador\":0.1,\"Unidades\":\"psi\"},{\"No\":2,\"Descripción\":\"Presión de descarga\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":40,\"Multiplicador\":0.1,\"Unidades\":\"psi\"},{\"No\":3,\"Descripción\":\"Temperatura de entrada\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":37,\"Multiplicador\":0.1,\"Unidades\":\"ºC\"},{\"No\":4,\"Descripción\":\"Temperatura de descarga\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":39,\"Multiplicador\":0.1,\"Unidades\":\"ºC\"},{\"No\":5,\"Descripción\":\"Temperatura de motor\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":41,\"Multiplicador\":0.1,\"Unidades\":\"ºC\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 260,
        "wires": [
            [
                "b52f82cb1a7a7339",
                "e8d9bf36189ddebb"
            ]
        ]
    },
    {
        "id": "6577cdd1e1da10e7",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "Borets",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"No\":1,\"Descripción\":\"Presión de entrada\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"IR\",\"Registro\":1,\"Multiplicador\":0.1},{\"No\":2,\"Descripción\":\"Presión de descarga\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"IR\",\"Registro\":2,\"Multiplicador\":0.1},{\"No\":3,\"Descripción\":\"Temperatura de entrada\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"IR\",\"Registro\":4,\"Multiplicador\":0.1},{\"No\":4,\"Descripción\":\"Temperatura de motor\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"IR\",\"Registro\":5,\"Multiplicador\":0.1},{\"No\":5,\"Descripción\":\"Vibración X\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"IR\",\"Registro\":6,\"Multiplicador\":0.01},{\"No\":6,\"Descripción\":\"Vibración Z\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"IR\",\"Registro\":7,\"Multiplicador\":0.01}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 300,
        "wires": [
            [
                "b52f82cb1a7a7339",
                "e8d9bf36189ddebb"
            ]
        ]
    },
    {
        "id": "c46b426ddcba3ca6",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "Borets SPS1500",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"No\":1,\"Descripción\":\"Presión de entrada\",\"Tipo de dato\":\"LONG\",\"Tipo de registro\":\"HR\",\"Registro\":1007,\"Multiplicador\":0.1},{\"No\":2,\"Descripción\":\"Presión de descarga\",\"Tipo de dato\":\"LONG\",\"Tipo de registro\":\"HR\",\"Registro\":1011,\"Multiplicador\":0.1},{\"No\":3,\"Descripción\":\"Temperatura de entrada\",\"Tipo de dato\":\"LONG\",\"Tipo de registro\":\"HR\",\"Registro\":1009,\"Multiplicador\":0.1},{\"No\":4,\"Descripción\":\"Temperatura de descarga\",\"Tipo de dato\":\"LONG\",\"Tipo de registro\":\"HR\",\"Registro\":1013,\"Multiplicador\":0.1},{\"No\":5,\"Descripción\":\"Temperatura de motor\",\"Tipo de dato\":\"LONG\",\"Tipo de registro\":\"HR\",\"Registro\":1015,\"Multiplicador\":0.1},{\"No\":6,\"Descripción\":\"Vibración X\",\"Tipo de dato\":\"LONG\",\"Tipo de registro\":\"HR\",\"Registro\":1017,\"Multiplicador\":0.01},{\"No\":7,\"Descripción\":\"Vibración Z\",\"Tipo de dato\":\"LONG\",\"Tipo de registro\":\"HR\",\"Registro\":1021,\"Multiplicador\":0.01},{\"No\":8,\"Descripción\":\"Corriente de fuga\",\"Tipo de dato\":\"LONG\",\"Tipo de registro\":\"HR\",\"Registro\":1029,\"Multiplicador\":0.1}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 340,
        "wires": [
            [
                "b52f82cb1a7a7339",
                "e8d9bf36189ddebb"
            ]
        ]
    },
    {
        "id": "e8d9bf36189ddebb",
        "type": "json",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1630,
        "y": 180,
        "wires": [
            [
                "30f707ecbdeb2452"
            ]
        ]
    },
    {
        "id": "30f707ecbdeb2452",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "Mapa MBS",
        "rules": [
            {
                "t": "set",
                "p": "Process_data.DHS.MBSMap",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4f1871a965b65434",
        "type": "function",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "defDHS",
        "func": "var DHS = global.get(\"DownholeSensor.MBSMap\",\"file\");\nvar defDHS = typeof DHS == \"undefined\" ? true:false;\nif (defDHS) { return msg;}\nelse{return;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 60,
        "wires": [
            [
                "94d4b0f6a1035ffd"
            ]
        ]
    },
    {
        "id": "f63b600c8217e624",
        "type": "link in",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 1035,
        "y": 60,
        "wires": [
            [
                "4f1871a965b65434",
                "1d797f4ca9b83896"
            ]
        ]
    },
    {
        "id": "9f49be987339f818",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Ninguno",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1d797f4ca9b83896",
        "type": "delay",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1030,
        "y": 100,
        "wires": [
            [
                "5278e06818418426"
            ]
        ]
    },
    {
        "id": "521caa2fc4efa734",
        "type": "function",
        "z": "a52b5a046f4fd02f",
        "name": "Protection Function",
        "func": "// Setpoints\nvar Prot = env.get('protection')||\"test\";\nvar querySpHH   = \"Protections.\"+Prot+\".HH.Setpoint\";\nvar querySpH    = \"Protections.\"+Prot+\".H.Setpoint\";\nvar querySpL    = \"Protections.\"+Prot+\".L.Setpoint\";\nvar querySpLL   = \"Protections.\"+Prot+\".LL.Setpoint\";\n\nvar HHSetpoint  = global.get(querySpHH)||0;\nvar HSetpoint   = global.get(querySpH)||0;\nvar LSetpoint   = global.get(querySpL)||0;\nvar LLSetpoint  = global.get(querySpLL)||0;\n\n// Enablers\nvar queryEnHH   = \"Protections.\"+Prot+\".HH.EN\";\nvar queryEnH    = \"Protections.\"+Prot+\".H.EN\";\nvar queryEnL    = \"Protections.\"+Prot+\".L.EN\";\nvar queryEnLL   = \"Protections.\"+Prot+\".LL.EN\";\n\nvar HH_EN       = global.get(queryEnHH)||false;\nvar H_EN        = global.get(queryEnH)||false;\nvar L_EN        = global.get(queryEnL)||false;\nvar LL_EN       = global.get(queryEnLL)||false;\n\n// Death times\nvar queryDtHH   = \"Protections.\"+Prot+\".HH.DT\";\nvar queryDtH    = \"Protections.\"+Prot+\".H.DT\";\nvar queryDtL    = \"Protections.\"+Prot+\".L.DT\";\nvar queryDtLL   = \"Protections.\"+Prot+\".LL.DT\";\n\nvar HHDeathTime = global.get(queryDtHH)||0;\nvar HDeathTime  = global.get(queryDtH)||0;\nvar LDeathTime  = global.get(queryDtL)||0;\nvar LLDeathTime = global.get(queryDtLL)||0;\n\n// Value\nvar CurrentValue = msg.payload;\n\nif(CurrentValue >= HHSetpoint && HH_EN === true){\n    msg.disp = true;\n    msg.alrm = false;\n    msg.message = \"Trigger by HH Protection\";\n    msg.delay = HHDeathTime * 1000;\n}\nelse if(CurrentValue >= HSetpoint && H_EN === true){\n    msg.disp = false;\n    msg.alrm = true;\n    msg.message = \"Alarm by H Protection\";\n    msg.delay = HDeathTime * 1000;\n}\nelse if(CurrentValue <= LLSetpoint && LL_EN === true){\n    msg.disp = true;\n    msg.alrm = false;\n    msg.message = \"Trigger by LL Protection\"\n    msg.delay = LLDeathTime * 1000;\n}\nelse if(CurrentValue <= LSetpoint && L_EN === true){\n    msg.disp = false;\n    msg.alrm = true;\n    msg.message = \"Alarm by L Protection\";\n    msg.delay = LDeathTime * 1000;\n}\nelse{\n    msg.disp = false;\n    msg.alrm = false;\n    msg.message = \"Normal condition\";\n    msg.reset = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 170,
        "y": 40,
        "wires": [
            [
                "725c6e48ead1fe5a",
                "d33f0d4ace6f2356",
                "460a5e99a984d0a7",
                "f6688829e74f45a1"
            ]
        ]
    },
    {
        "id": "725c6e48ead1fe5a",
        "type": "function",
        "z": "a52b5a046f4fd02f",
        "name": "TON Disp",
        "func": "var Act = msg.disp;\nvar Ant = context.get(\"Anterior\")||false;\nvar Output = { \n    payload: false,\n    Mensaje: msg.message\n};\n\n// Actualizar el contexto\ncontext.set(\"Anterior\", Act);\n\n//Flanco de subida\nif(Act === true && Ant === false){\n    context.set(\"RefTime\", Date.now());\n}\nelse if(Act === true && Ant === true){\n    if(Date.now() - context.get(\"RefTime\") >= msg.delay){\n        Output.payload = true;\n    }\n}\nreturn Output;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 40,
        "wires": [
            [
                "adce111c58da3831"
            ]
        ]
    },
    {
        "id": "d33f0d4ace6f2356",
        "type": "function",
        "z": "a52b5a046f4fd02f",
        "name": "TON Alrm",
        "func": "var Act = msg.alrm;\nvar Ant = context.get(\"Anterior\")||false;\nvar Output = { \n    payload: false,\n    Mensaje: msg.message\n};\n\n// Actualizar el contexto\ncontext.set(\"Anterior\", Act);\n\n//Flanco de subida\nif(Act === true && Ant === false){\n    context.set(\"RefTime\", Date.now());\n}\nelse if(Act === true && Ant === true){\n    if(Date.now() - context.get(\"RefTime\") >= msg.delay){\n        Output.payload = true;\n    }\n}\nreturn Output;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 90,
        "wires": [
            [
                "4b0728825dcc1a38"
            ]
        ]
    },
    {
        "id": "460a5e99a984d0a7",
        "type": "change",
        "z": "a52b5a046f4fd02f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "a97a7264b55ad0b8"
            ]
        ]
    },
    {
        "id": "a97a7264b55ad0b8",
        "type": "switch",
        "z": "a52b5a046f4fd02f",
        "name": "Normal condition",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Normal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 140,
        "wires": [
            [
                "f1e9011884ce5ee9"
            ]
        ]
    },
    {
        "id": "d64f129a6c7d781a",
        "type": "function",
        "z": "a52b5a046f4fd02f",
        "name": "Protections HH/LL",
        "func": "var Prot        = env.get('protection') || \"test\";\nvar ProtESP     = {\n    Load: \"'Corriente VSD'\",\n    MotorLoad: \"Corriente de motor\",\n    THP: \"'THP'\",\n    THT: \"'THT'\",\n    VibrationGeneral: \"'Vibración general'\",\n    CurrentLeakage: \"'Corriente de fuga'\",\n    IntakePressure: \"'Presión de entrada'\",\n    DischargePressure: \"'Presión de descarga'\",\n    IntakeTemperature: \"'Temperatura de entrada'\",\n    MotorTemperature: \"'Temperatura de motor'\",\n    Voltage:\"'Tensión de entrada'\",\n    BusDC:\"'Bus DC'\",\n    DynamicFluidLevel: \"Nivel de fluido dinámico\"\n}\nif (msg.Mensaje == \"Trigger by HH Protection\"){\n    var dispQuery = \"Protections.\" + Prot + \".HH\";\n    msg.payload = \"Disparo por protección \" + ProtESP[Prot]+ \" HH\";\n    global.set(dispQuery, true, \"memoryOnly\");\n}\nelse if (msg.Mensaje == \"Trigger by LL Protection\"){\n    var dispQuery = \"Protections.\" + Prot + \".LL\";\n    msg.payload = \"Disparo por protección \" + ProtESP[Prot] + \" LL\";\n    global.set(dispQuery, true, \"memoryOnly\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f1e9011884ce5ee9",
        "type": "function",
        "z": "a52b5a046f4fd02f",
        "name": "Protections normal",
        "func": "var Prot        = env.get('protection') || \"test\";\n\nvar dispQuery = \"Protections.\" + Prot + \".HH\";\nglobal.set(dispQuery, false, \"memoryOnly\");\n\nvar dispQuery = \"Protections.\" + Prot + \".LL\";\nglobal.set(dispQuery, false, \"memoryOnly\");\n\nvar dispQuery = \"Protections.\" + Prot + \".H\";\nglobal.set(dispQuery, false, \"memoryOnly\");\n\nvar dispQuery = \"Protections.\" + Prot + \".L\";\nglobal.set(dispQuery, false, \"memoryOnly\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "910c697ecdb1a784",
        "type": "switch",
        "z": "a52b5a046f4fd02f",
        "name": "true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 90,
        "wires": [
            [
                "818e472f7d541380"
            ]
        ]
    },
    {
        "id": "4b0728825dcc1a38",
        "type": "rbe",
        "z": "a52b5a046f4fd02f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 520,
        "y": 90,
        "wires": [
            [
                "910c697ecdb1a784"
            ]
        ]
    },
    {
        "id": "adce111c58da3831",
        "type": "rbe",
        "z": "a52b5a046f4fd02f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 520,
        "y": 40,
        "wires": [
            [
                "b1769bb892f77012"
            ]
        ]
    },
    {
        "id": "b1769bb892f77012",
        "type": "switch",
        "z": "a52b5a046f4fd02f",
        "name": "true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 40,
        "wires": [
            [
                "d64f129a6c7d781a"
            ]
        ]
    },
    {
        "id": "f6688829e74f45a1",
        "type": "function",
        "z": "a52b5a046f4fd02f",
        "name": "Status",
        "func": "msg.payload = \" Status: \" + msg.message + \", Value: \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1083899a.1b4716",
        "type": "exec",
        "z": "11d568a7.09a5c7",
        "command": "vcgencmd measure_temp | egrep -o '[0-9]*\\.[0-9]*'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 80,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9cc3f117.42857",
        "type": "exec",
        "z": "11d568a7.09a5c7",
        "command": "vcgencmd measure_clock arm | egrep -o '[0-9]{0,10}' | sed -n '1!p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 140,
        "wires": [
            [
                "3228637d.9e937c"
            ],
            [],
            []
        ]
    },
    {
        "id": "3228637d.9e937c",
        "type": "function",
        "z": "11d568a7.09a5c7",
        "name": "MHz",
        "func": "msg.payload={payload: msg.payload/1000000};\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 130,
        "wires": [
            []
        ]
    },
    {
        "id": "deabf4e0.a1b7e8",
        "type": "comment",
        "z": "11d568a7.09a5c7",
        "name": "Solicitud de datos de temperatura y frecuencia de la CPU",
        "info": "",
        "x": 320,
        "y": 30,
        "wires": []
    },
    {
        "id": "798ac169.6edda",
        "type": "inject",
        "z": "4c43e2ae2d9aec48",
        "g": "e29eaee41e038edd",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "true",
                "vt": "bool"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "88ac83a3.561a3",
                "1cb59f89.cf5d7"
            ]
        ]
    },
    {
        "id": "88ac83a3.561a3",
        "type": "subflow:11d568a7.09a5c7",
        "z": "4c43e2ae2d9aec48",
        "d": true,
        "g": "e29eaee41e038edd",
        "name": "",
        "env": [],
        "x": 280,
        "y": 100,
        "wires": [
            [
                "4906fc64.1e6a14"
            ],
            [
                "d43fb27a.273b3"
            ]
        ]
    },
    {
        "id": "4906fc64.1e6a14",
        "type": "ui_level",
        "z": "4c43e2ae2d9aec48",
        "g": "e29eaee41e038edd",
        "group": "bbd73f04.32559",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "Temp. CPU",
        "label": "Temp. CPU",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "60",
        "segHigh": "70",
        "unit": "ºC",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "valuedriven",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "0.9",
        "fontValue": "",
        "fontSmall": "0.95",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "peaktime": 3000,
        "x": 440,
        "y": 70,
        "wires": []
    },
    {
        "id": "d43fb27a.273b3",
        "type": "ui_level",
        "z": "4c43e2ae2d9aec48",
        "g": "e29eaee41e038edd",
        "group": "bbd73f04.32559",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "Freq. CPU",
        "label": "Freq. CPU",
        "colorHi": "#e60000",
        "colorWarn": "#00b33c",
        "colorNormal": "#ff9900",
        "colorOff": "#595959",
        "min": 0,
        "max": "1500",
        "segWarn": "500",
        "segHigh": "1200",
        "unit": "MHz",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "0",
        "animations": "soft",
        "shape": 2,
        "colorschema": "valuedriven",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "0.9",
        "fontValue": "",
        "fontSmall": "0.95",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "peaktime": 3000,
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "1cb59f89.cf5d7",
        "type": "change",
        "z": "4c43e2ae2d9aec48",
        "g": "e29eaee41e038edd",
        "name": "Ping C2S",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ping -c 1 +++",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "C2S.IP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 170,
        "wires": [
            [
                "4aca35c3.0308ac"
            ]
        ]
    },
    {
        "id": "4aca35c3.0308ac",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "e29eaee41e038edd",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "0.5",
        "oldrc": false,
        "name": "",
        "x": 420,
        "y": 170,
        "wires": [
            [],
            [],
            [
                "bb03c26f.a7a22"
            ]
        ]
    },
    {
        "id": "bb03c26f.a7a22",
        "type": "rbe",
        "z": "4c43e2ae2d9aec48",
        "g": "e29eaee41e038edd",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 550,
        "y": 170,
        "wires": [
            [
                "bd579703.22d958"
            ]
        ]
    },
    {
        "id": "bd579703.22d958",
        "type": "switch",
        "z": "4c43e2ae2d9aec48",
        "g": "e29eaee41e038edd",
        "name": "",
        "property": "payload.message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Command failed:",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 170,
        "wires": [
            [
                "1478ddff.860e02"
            ],
            [
                "98ca0b1c.cda4f8"
            ]
        ]
    },
    {
        "id": "1478ddff.860e02",
        "type": "change",
        "z": "4c43e2ae2d9aec48",
        "g": "e29eaee41e038edd",
        "name": "Falla de comunicación",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::C2S.Comunicacion_Drive",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 150,
        "wires": [
            []
        ]
    },
    {
        "id": "98ca0b1c.cda4f8",
        "type": "change",
        "z": "4c43e2ae2d9aec48",
        "g": "e29eaee41e038edd",
        "name": "Comunicación Normal",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::C2S.Comunicacion_Drive",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "ec92d582.14aa18",
        "type": "inject",
        "z": "4c43e2ae2d9aec48",
        "g": "e2589faa.5b6d2",
        "name": "Arranque de sistema",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 200,
        "y": 310,
        "wires": [
            [
                "ad87cee4.7dbb5",
                "f0c186466f456fd2"
            ]
        ]
    },
    {
        "id": "ad87cee4.7dbb5",
        "type": "link out",
        "z": "4c43e2ae2d9aec48",
        "g": "e2589faa.5b6d2",
        "name": "Inicio Node-RED",
        "links": [
            "41414c01.67ae34",
            "3af4cca.ce68834",
            "ba8baeac.e028c",
            "f4208b50.a8abc8",
            "fbd8c1e9.7d493",
            "a146fd5d.dc194",
            "63e65a73.8cb0e4",
            "771cef6c.01352",
            "2a2c1e7e.8315e2",
            "faa1754f.28b418",
            "9206f485.85e898",
            "d1eb5972.c7ee38",
            "e8213157.b1599",
            "c1563df1.773bd",
            "7b0660a5.67eab",
            "47e5c17d.f308",
            "9ff75bfd.245638",
            "bedc0725.f22738",
            "4e129740.b3ea78",
            "273454d7.4d089c",
            "c9269ec0.0b874",
            "645af99b.4e8a38",
            "d0a19b38.893ab8",
            "366a2d5a.01dbf2",
            "ca41ebf5.6cdf28",
            "8ef5c8d6.524028",
            "b8c12e8b.715b2",
            "b7da3a44.60ff68",
            "1f64b646.6359aa",
            "a283dc1b.7c48f",
            "938aa2d6.74dae",
            "75954ddb.3b0f04",
            "da8d71fd.6a33c",
            "5e926cf.a17a594",
            "c92e244.7f686d8",
            "cd729508.733ad8",
            "6ca291a4.d57d7",
            "39dc61d6.38245e",
            "7ced728d.a743bc",
            "41395ba6.48d124",
            "9d7ce324.c64f6",
            "e6ef4f23.27ccf",
            "3ffc59.29e723a8",
            "577047bb.6519b8",
            "b275f5b2.e7e328",
            "73af0be0.8d91e4",
            "8c73338.8deb8d",
            "7c18d010.a2ff9",
            "65b39642.c7ada8",
            "ea1e3c9f.dc8c2",
            "6048b01f.b48ef",
            "a0463b75.cabb18",
            "25506b4e.d714c4",
            "6b5f7518.04fddc",
            "88d232ea.2ef4b",
            "b3c62075.a7822",
            "9315f673.0e6318",
            "51d2e767.639a98",
            "37528c32.e720c4",
            "1f5ba763.537da9",
            "78769808.230b18",
            "b225175.383e7e8",
            "a561ec59.a63d6",
            "8d16d48d.753ca8",
            "f9233058.fe67f",
            "a8eca441.f9a4b8",
            "39667d7d.270542",
            "4c96d1b1.d47ce",
            "5a6af288.d7b8dc",
            "64059ad.ade9764",
            "1708596a.fe0687",
            "ffb8c84.3759b38",
            "bbc4a09223787f04",
            "f63b600c8217e624",
            "34d023e6cfc76baf",
            "c879d75923fd70c6",
            "1b6da6d12918e8a2",
            "7b0b3baff810e681",
            "9f77b0d829ad914b",
            "5bc6ea61a6a8eef8",
            "688011751e4c91a7",
            "f56e0cf8144b9036",
            "a47bc1a79bec3f2a",
            "4eafac1d50c909bb",
            "dc288f1ea69df110",
            "30502daf05b7eeda",
            "1701a25e8d726d0c",
            "15819ab4a0dee1bd",
            "61e7fdf2ae5b9c9e",
            "28b9d8d4.780938",
            "66c4a9b8.ae31f8",
            "dbdd149d.067a48",
            "62bb2b3c35d813b0",
            "d386b3786418227b",
            "52a47189e8ce270b",
            "365d1eacfdb44888",
            "207e47295434b765",
            "59e9687f16bc8fc8",
            "6ce18e3ca0e6244c",
            "87546f4f362a24f5",
            "d685da5d5bb1ac2b",
            "9533a235ad8c4ef2",
            "f963e8b3d0b4560f",
            "be0449b35707404e",
            "fa8ed427a4d7aea2",
            "744ca6c9d01302bb",
            "d0000719b53a7a2e",
            "9380591e68aa6cfd",
            "7819bb96d43a4d64"
        ],
        "x": 335,
        "y": 310,
        "wires": []
    },
    {
        "id": "7abe043b.fb14fc",
        "type": "ui_ui_control",
        "z": "4c43e2ae2d9aec48",
        "g": "e9e93a2c.deeb18",
        "name": "",
        "events": "change",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "97407954.a004c8",
                "37f2db57.b831c4"
            ]
        ]
    },
    {
        "id": "97407954.a004c8",
        "type": "link out",
        "z": "4c43e2ae2d9aec48",
        "g": "e9e93a2c.deeb18",
        "name": "UI-Control Out",
        "links": [
            "1660e38d.24cefc",
            "938193ac.02d98",
            "8166c609.8e8328",
            "441e9860.ad6ed8",
            "2099abe.2850a54",
            "a0e88921.4ebe88",
            "fd328934.0ddd18",
            "23b2730.9c7eb8e",
            "645af99b.4e8a38",
            "476a789d.6fd428",
            "97494ae0.a13ca8",
            "4482dc9f.5ee144",
            "2b47642.2404d9c",
            "51d66341.8ee0fc",
            "d458c292.e2009",
            "abd57ed0.925e2",
            "eeb74e26.02437",
            "487b8eaa.36a75",
            "934e9a94.1a30a8",
            "8c5351d8.97256",
            "3dc16724.814948",
            "a72a1eba.19d99",
            "fb44ddcd.cf816",
            "1708596a.fe0687",
            "3df3dfb.cab992",
            "e68ea72b.2110d8",
            "2d483fd4.25515",
            "9b86ac38.62861",
            "ffb8c84.3759b38",
            "11a5dcd.037cc23",
            "1f5578b0.1b22d7",
            "39f53b43.0969b4",
            "11379727.11b049",
            "4e9a700dde1096cf",
            "aa73a11737c18f40",
            "39a7cf283ee8e264",
            "5ee4a60da483c541",
            "d35710bff3d93d90",
            "dc19234d7f6c1436",
            "dd0739fd9e6348e6",
            "014e809185179741",
            "3157c937b070fc59",
            "68f55546e9d05ca2",
            "e6b555ce2e13edc0",
            "9a4e1f31c48da3ad",
            "c982f81bb2232785",
            "657fc3784434945c",
            "8db3135a85f1fab1",
            "aeb29ded9a6b39dc",
            "e2ca1b42759cafd3",
            "8d74875ae734bcad",
            "925c128e0b095b5c",
            "0a7acbe98cc27eb5",
            "51e2ba8e9d633518",
            "c7137971c34bfda3",
            "f6c1e52be5a7e8ef",
            "adb1a0acdc299c85",
            "610f87e6c3ac9ed0",
            "a1c5e02a9d683eb4"
        ],
        "x": 335,
        "y": 440,
        "wires": []
    },
    {
        "id": "805762db.d27b7",
        "type": "link in",
        "z": "4c43e2ae2d9aec48",
        "g": "e9e93a2c.deeb18",
        "name": "UI-Control In",
        "links": [
            "502a7e8f.2ab2d",
            "9eea6118.7b917",
            "99ae3bc8.746f48",
            "1882018b.4d179e",
            "3296d851.080568",
            "1981cd18.e62913",
            "ea1ac6a6.fda178",
            "d795f048.456e2",
            "f7333c0a.a70d3",
            "b0a2cd1a.ab273",
            "fc7e2763.e00d48",
            "63ae6ad3.b07874",
            "e6e875a0.3f91d8",
            "651fde0c.6b2e9",
            "54a6e602.e31808",
            "534cb822.fca4b8",
            "762fd542.edc83c",
            "ae913734.6c7e48",
            "1b6d3ebacefe3d37",
            "f95e46ccd8ac066d",
            "3cbd8b298714a327",
            "bbac1abcf840bd8f",
            "82902d07cb7c62e8",
            "a7d2cd08afbd2e76",
            "fc47cb5558e17f7a",
            "11fab97f0376f949",
            "59195fbe9de6d8a5",
            "7b495ef4bbce99f7",
            "10d0df396dc90c03"
        ],
        "x": 95,
        "y": 440,
        "wires": [
            [
                "7abe043b.fb14fc"
            ]
        ]
    },
    {
        "id": "37f2db57.b831c4",
        "type": "change",
        "z": "4c43e2ae2d9aec48",
        "g": "e9e93a2c.deeb18",
        "name": "Pantalla",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegación.Pantalla",
                "pt": "global",
                "to": "name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegación.Tab",
                "pt": "global",
                "to": "tab",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f0c186466f456fd2",
        "type": "link out",
        "z": "4c43e2ae2d9aec48",
        "d": true,
        "g": "e2589faa.5b6d2",
        "name": "Inicio de sistema",
        "links": [
            "a146fd5d.dc194",
            "fbd8c1e9.7d493"
        ],
        "x": 335,
        "y": 350,
        "wires": []
    },
    {
        "id": "f8baefd81119f16d",
        "type": "subflow:a52b5a046f4fd02f",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "---------- Voltage ----------",
        "env": [
            {
                "name": "protection",
                "value": "Voltage",
                "type": "str"
            },
            {
                "name": "Topic",
                "value": "1",
                "type": "num"
            }
        ],
        "x": 2130,
        "y": 340,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "e5fc5b4881c0f9df",
        "type": "subflow:669c188.bd26ee8",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "Load",
        "env": [
            {
                "name": "protection",
                "value": "Load",
                "type": "str"
            }
        ],
        "x": 2210,
        "y": 390,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "233e4f7d69176554",
        "type": "subflow:a52b5a046f4fd02f",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "---------- BusDC ---------- ",
        "env": [
            {
                "name": "protection",
                "value": "BusDC",
                "type": "str"
            }
        ],
        "x": 2130,
        "y": 490,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "41c53a29993cf119",
        "type": "subflow:a52b5a046f4fd02f",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "--- VibrationGeneral ---",
        "env": [
            {
                "name": "protection",
                "value": "VibrationGeneral",
                "type": "str"
            }
        ],
        "x": 2130,
        "y": 640,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "63fb3c1006e10f66",
        "type": "subflow:a52b5a046f4fd02f",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "---- CurrentLeakage ----",
        "env": [
            {
                "name": "protection",
                "value": "CurrentLeakage",
                "type": "str"
            }
        ],
        "x": 2130,
        "y": 690,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "2af5d35f7e135f74",
        "type": "subflow:a52b5a046f4fd02f",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "---- IntakePressure ----",
        "env": [
            {
                "name": "protection",
                "value": "IntakePressure",
                "type": "str"
            }
        ],
        "x": 2190,
        "y": 740,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "e63d7c218dfa3131",
        "type": "subflow:a52b5a046f4fd02f",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "--- DischargePressure ---",
        "env": [
            {
                "name": "protection",
                "value": "DischargePressure",
                "type": "str"
            }
        ],
        "x": 2200,
        "y": 790,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "f96d74aeb0c6d7c9",
        "type": "subflow:a52b5a046f4fd02f",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "--- IntakeTemperature ---",
        "env": [
            {
                "name": "protection",
                "value": "IntakeTemperature",
                "type": "str"
            }
        ],
        "x": 2130,
        "y": 840,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "1fc2d5c8c31847d9",
        "type": "subflow:a52b5a046f4fd02f",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "--- MotorTemperature ---",
        "env": [
            {
                "name": "protection",
                "value": "MotorTemperature",
                "type": "str"
            }
        ],
        "x": 2130,
        "y": 890,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "f90c77cce78e8938",
        "type": "subflow:a52b5a046f4fd02f",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "- DischargeTemperature -",
        "env": [
            {
                "name": "protection",
                "value": "DischargeTemperature",
                "type": "str"
            }
        ],
        "x": 2130,
        "y": 940,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "38eb03411b2d00a4",
        "type": "inject",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": "45",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1610,
        "y": 680,
        "wires": [
            [
                "f939f41a8ca3bfbe"
            ]
        ]
    },
    {
        "id": "f939f41a8ca3bfbe",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "Datos protecciones",
        "func": "var Output_Current = global.get(\"C2S.Implicit.Output_Current\", 'memoryOnly') || 0;\n// Corriente de motor\nvar Rtx = global.get(\"C2S.RelTx\") || 1;\nvar MotorLoad = Output_Current / Rtx;\n\n// Protecciones PQA.\nvar Voltage = global.get(\"PQA.Real_Time_Parameters.Average_Line_Voltage\", 'memoryOnly') || 0;\nvar Selection = flow.get(\"proteccionSelec\", 'memoryOnly') || \"-\";\n\n// Protecciones Variador\nvar Load = global.get(\"C2S.Implicit.Output_Current\", 'memoryOnly') || 0;\nvar BusDC = global.get(\"C2S.Implicit.Bus_DC_Volts\", 'memoryOnly') || 0;\n\n// Protecciones Instrumentación\nvar THP = global.get(\"Process_data.AI['Presión de cabeza THP']\", 'memoryOnly') || 0;\nvar THT = global.get(\"Process_data.AI['Temperatura de cabeza THT']\", 'memoryOnly') || 0;\n\n// Sensor de Fondo\nvar Process_data = global.get(\"Process_data.DHS\", 'memoryOnly') || [];\nvar Vibration_X = typeof Process_data[\"Vibración X\"] != 'undefined' ? Process_data[\"Vibración X\"] : 0;\nvar Vibration_Z = typeof Process_data[\"Vibración Z\"] != 'undefined' ? Process_data[\"Vibración Z\"] : 0;\n\n//Protecciones Fondo\nvar Vibration_Gral = Vibration_X >= Vibration_Z ? Vibration_X : Vibration_Z;\nvar LeakageCurrent = typeof Process_data[\"Corriente de fuga\"] != 'undefined' ? Process_data[\"Corriente de fuga\"] : 0;\nvar IntakePressure = typeof Process_data[\"Presión de entrada\"] != 'undefined' ? Process_data[\"Presión de entrada\"] : 0;\nvar DischargePressure = typeof Process_data[\"Presión de descarga\"] != 'undefined' ? Process_data[\"Presión de descarga\"] : 0;\nvar IntakeTemperature = typeof Process_data[\"Temperatura de entrada\"] != 'undefined' ? Process_data[\"Temperatura de entrada\"] : 0;\nvar MotorTemperature = typeof Process_data[\"Temperatura de motor\"] != 'undefined' ? Process_data[\"Temperatura de motor\"] : 0;\nvar DischargeTemperature = typeof Process_data[\"Temperatura de descarga\"] != 'undefined' ? Process_data[\"Temperatura de descarga\"] : 0;\n\n//Protección Sensorless\nvar NFD = global.get(\"SENSORLESS.Nivel_de_fluido_inferido\",\"memoryOnly\")||0;\n\nvar CurrentValue;\nif (Selection == \"Voltage\") { CurrentValue = DecPlacces(Voltage, 2) + \" V\"; }\nelse if (Selection == \"Load\") { CurrentValue = DecPlacces(Load, 2) + \" A\"; }\nelse if (Selection == \"MotorLoad\") { CurrentValue = DecPlacces(MotorLoad, 2) + \" A\"; }\nelse if (Selection == \"BusDC\") { CurrentValue = DecPlacces(BusDC, 2) + \" V\"; }\nelse if (Selection == \"THP\") { CurrentValue = DecPlacces(THP, 2) + \" psi\"; }\nelse if (Selection == \"THT\") { CurrentValue = DecPlacces(THT, 2) + \" ºF\"; }\nelse if (Selection == \"VibrationGeneral\") { CurrentValue = DecPlacces(Vibration_Gral, 2) + \" G\"; }\nelse if (Selection == \"CurrentLeakage\") { CurrentValue = DecPlacces(LeakageCurrent, 2) + \" mA\"; }\nelse if (Selection == \"IntakePressure\") { CurrentValue = DecPlacces(IntakePressure, 2) + \" psi\"; }\nelse if (Selection == \"DischargePressure\") { CurrentValue = DecPlacces(DischargePressure, 2) + \" psi\"; }\nelse if (Selection == \"IntakeTemperature\") { CurrentValue = DecPlacces(IntakeTemperature, 2) + \" ºF\"; }\nelse if (Selection == \"MotorTemperature\") { CurrentValue = DecPlacces(MotorTemperature, 2) + \" ºF\"; }\nelse if (Selection == \"DischargeTemperature\") { CurrentValue = DecPlacces(DischargeTemperature, 2) + \" ºF\"; }\nelse if (Selection == \"DynamicFluidLevel\") { CurrentValue = DecPlacces(NFD, 1) + \"ft\"; }\nelse { CurrentValue = \"---\"; }\n\nreturn [\n    { payload: DecPlacces(Voltage, 1) },\n    { payload: DecPlacces(Load, 1) },\n    { payload: DecPlacces(MotorLoad, 1) },\n    { payload: DecPlacces(BusDC, 1) },\n    { payload: DecPlacces(THP, 2) },\n    { payload: DecPlacces(THT, 2) },\n    { payload: DecPlacces(Vibration_Gral, 3) },\n    { payload: DecPlacces(LeakageCurrent, 3) },\n    { payload: DecPlacces(IntakePressure, 1) },\n    { payload: DecPlacces(DischargePressure, 1) },\n    { payload: DecPlacces(IntakeTemperature, 1) },\n    { payload: DecPlacces(MotorTemperature, 1) },\n    { payload: DecPlacces(DischargeTemperature, 1) },\n    { payload: DecPlacces(NFD, 1) },\n    { payload: CurrentValue }\n];\n\nfunction DecPlacces(value, Places) {\n    return Math.abs(parseFloat(value.toFixed(Places)));\n}",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 680,
        "wires": [
            [
                "f8baefd81119f16d"
            ],
            [
                "20fa657d189a7cd8"
            ],
            [
                "c0793ecf8b698a86"
            ],
            [
                "233e4f7d69176554"
            ],
            [
                "412d39b3d6365e23"
            ],
            [
                "1a8c4a3f92c0ded2"
            ],
            [
                "41c53a29993cf119"
            ],
            [
                "63fb3c1006e10f66"
            ],
            [
                "11a3e1a0.57fb4e"
            ],
            [
                "2ed8536c3c3c63ad"
            ],
            [
                "f96d74aeb0c6d7c9"
            ],
            [
                "1fc2d5c8c31847d9"
            ],
            [
                "f90c77cce78e8938"
            ],
            [
                "8618be3dd8824ba7"
            ],
            [
                "1f703339.98e8cd"
            ]
        ],
        "inputLabels": [
            "True"
        ],
        "outputLabels": [
            "Voltage",
            "Load",
            "Bus DC",
            "THP",
            "THT",
            "Vibration",
            "Current Leakage",
            "Intake Pressure",
            "Discharge Pressure",
            "Intake Temperature",
            "Motor Temperature",
            "Discharge Temperature",
            "",
            "",
            ""
        ]
    },
    {
        "id": "fc115c1c3c5adc56",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "Detención del equipo por protección",
        "func": "var Protections = global.get(\"Protections\", 'memoryOnly') || [];\nvar Keys = Object.keys(Protections)||[];\n//\nvar Disparos = [];\nfor (var i = 0; i < Keys.length; i += 1) {\n    if (Protections[Keys[i]].HH == true || Protections[Keys[i]].LL == true) {\n        Disparos.push(true);\n    }\n    else {\n        Disparos.push(false);\n    }\n\n}\nvar array = Object.values(Disparos);\nvar resp = array.find(element => element == true) || false;\nmsg.payload = resp;\n\nif (resp) {\n    global.set(\"Protections.General\", true, 'memoryOnly');\n    node.status({ fill: \"red\", shape: \"dot\", text: \"Disparo por protección\" });\n}\nelse {\n    global.set(\"Protections.General\", false, 'memoryOnly');\n    node.status({ fill: \"green\", shape: \"dot\", text: \"Condición normal\" });\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1830,
        "y": 140,
        "wires": [
            [
                "972aef4d6395664e"
            ]
        ]
    },
    {
        "id": "cd8568898a1445e0",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1730,
        "y": 100,
        "wires": [
            [
                "b851e9e0bcbacdf7",
                "6a229694c9c0fbca"
            ]
        ]
    },
    {
        "id": "972aef4d6395664e",
        "type": "rbe",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1610,
        "y": 100,
        "wires": [
            [
                "cd8568898a1445e0"
            ]
        ]
    },
    {
        "id": "216de0af1bfc86e8",
        "type": "subflow:c8b77ff3.ab501",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "",
        "env": [],
        "x": 2100,
        "y": 100,
        "wires": [
            [
                "633f44af41940f7e"
            ],
            []
        ]
    },
    {
        "id": "b851e9e0bcbacdf7",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Stop",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 100,
        "wires": [
            [
                "216de0af1bfc86e8"
            ]
        ]
    },
    {
        "id": "03c7ddb21f171192",
        "type": "ui_toast",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2130,
        "y": 140,
        "wires": []
    },
    {
        "id": "3f94e47b8b495988",
        "type": "catch",
        "z": "7a89175c.90f6a8",
        "g": "566c907c.70175",
        "name": "",
        "scope": [
            "a344ac6f.b0fa4"
        ],
        "uncaught": false,
        "x": 160,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "7dad9b43beefaa90",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "group": "474271dc.04fa9",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "LN:",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "row-left",
        "x": 1120,
        "y": 2600,
        "wires": []
    },
    {
        "id": "c317645c3c09e5cf",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "group": "474271dc.04fa9",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "LL:",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "row-left",
        "x": 1120,
        "y": 2640,
        "wires": []
    },
    {
        "id": "b8b03c987e844b4a",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "group": "474271dc.04fa9",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Corriente:",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "row-left",
        "x": 1130,
        "y": 2680,
        "wires": []
    },
    {
        "id": "284e8360857dd2c6",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "group": "474271dc.04fa9",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Potencia:",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "row-left",
        "x": 1130,
        "y": 2800,
        "wires": []
    },
    {
        "id": "0d744c83e33992d3",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "group": "474271dc.04fa9",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "THD (V):",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "row-left",
        "x": 1130,
        "y": 2720,
        "wires": []
    },
    {
        "id": "cfaca06ac50b5d36",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "group": "474271dc.04fa9",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "THD (I):",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "row-left",
        "x": 1130,
        "y": 2760,
        "wires": []
    },
    {
        "id": "ea4e85ef2d837356",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "group": "474271dc.04fa9",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "FP:",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "row-left",
        "x": 1120,
        "y": 2840,
        "wires": []
    },
    {
        "id": "5b529f4c.7ffeb",
        "type": "ui_chart",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "group": "474271dc.04fa9",
        "order": 2,
        "width": "10",
        "height": 6,
        "label": "{{msg.label}}",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Falla de comunicación con PQA",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f20707",
            "#033e8c",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2410,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "6c9ed5d3.e7799c",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "Harmonics chart generation",
        "func": "var chart = \n[{\n    \"series\": [\"THD-V\", \"THD-I\"],\n    \"data\": msg.payload,\n    \"labels\": [ \"1o\", \"3o\",\"5o\",\"7o\",\"9o\",\"11o\",\"13o\"]\n}];\n\nmsg.payload = chart;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2220,
        "y": 2720,
        "wires": [
            [
                "5b529f4c.7ffeb"
            ]
        ]
    },
    {
        "id": "23815ef1.931a32",
        "type": "ui_dropdown",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "label": "Fase",
        "tooltip": "",
        "place": "Seleccionar fase",
        "group": "474271dc.04fa9",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Fase1 ",
                "value": "Linea1",
                "type": "str"
            },
            {
                "label": "Fase 2",
                "value": "Linea2",
                "type": "str"
            },
            {
                "label": "Fase 3 ",
                "value": "Linea3",
                "type": "str"
            },
            {
                "label": "Promedio",
                "value": "LineaP",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 1710,
        "y": 2770,
        "wires": [
            [
                "20b8681c.81fd48"
            ]
        ]
    },
    {
        "id": "2b47642.2404d9c",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 1345,
        "y": 2800,
        "wires": [
            [
                "eddefb96.175bf8"
            ]
        ]
    },
    {
        "id": "eddefb96.175bf8",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "User in harmonics Screen ?",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1520,
        "y": 2840,
        "wires": [
            [
                "a5c181ee.2efe1"
            ],
            [
                "b54a4559.022378"
            ]
        ]
    },
    {
        "id": "a5c181ee.2efe1",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics_Chart.Prompt",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "b54a4559.022378",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics_Chart.Prompt",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "3ea5879e.bf0588",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "Data Handle harmonics chart",
        "func": "var PQA_Data                = global.get(\"PQA.Harmonics\", \"memoryOnly\") ||\"[]\";\nvar Chart_Selection         = flow.get(\"PQA.Harmonics_Chart.Selection\", \"memoryOnly\") || \"\";\n\nvar Linea1_V = Object.values(PQA_Data.V1_V12);\nvar Linea1_I = Object.values(PQA_Data.I1);\n\nvar Linea2_V = Object.values(PQA_Data.V2_V31);\nvar Linea2_I = Object.values(PQA_Data.I2);\n\n\nvar Linea3_V = Object.values(PQA_Data.V3_V23);\nvar Linea3_I = Object.values(PQA_Data.I3);\n\nvar LineaP_V = [\n                    ((Linea1_V[0]+Linea2_V[0]+Linea3_V[0])/3).toFixed(2),\n                    ((Linea1_V[1]+Linea2_V[1]+Linea3_V[1])/3).toFixed(2),\n                    ((Linea1_V[2]+Linea2_V[0]+Linea3_V[2])/3).toFixed(2),\n                    ((Linea1_V[3]+Linea2_V[0]+Linea3_V[3])/3).toFixed(2),\n                    ((Linea1_V[4]+Linea2_V[0]+Linea3_V[4])/3).toFixed(2),\n                    ((Linea1_V[5]+Linea2_V[0]+Linea3_V[5])/3).toFixed(2)\n                ];\nvar LineaP_I = [\n                    ((Linea1_I[0]+Linea2_I[0]+Linea3_I[0])/3).toFixed(2),\n                    ((Linea1_I[1]+Linea2_I[1]+Linea3_I[1])/3).toFixed(2),\n                    ((Linea1_I[2]+Linea2_I[0]+Linea3_I[2])/3).toFixed(2),\n                    ((Linea1_I[3]+Linea2_I[0]+Linea3_I[3])/3).toFixed(2),\n                    ((Linea1_I[4]+Linea2_I[0]+Linea3_I[4])/3).toFixed(2),\n                    ((Linea1_I[5]+Linea2_I[0]+Linea3_I[5])/3).toFixed(2),\n                ];\n\nif(Chart_Selection == \"Linea1\")\n    {\n        msg.payload =  [ Linea1_V , Linea1_I];\n        msg.label   = \"Porcentaje Armónico Línea 1\";\n    }\nelse if(Chart_Selection == \"Linea2\")\n    {\n        msg.payload =  [ Linea2_V , Linea2_I];\n        msg.label   = \"Porcentaje Armónico Línea 2\";\n    }\nelse if(Chart_Selection == \"Linea3\")\n    {\n        msg.payload =  [ Linea3_V , Linea3_I];\n        msg.label   = \"Porcentaje Armónico Línea 3\";\n    }\nelse if(Chart_Selection == \"LineaP\")\n    {\n        {\n        msg.payload =  [ LineaP_V , LineaP_I];\n        msg.label   = \"Porcentaje Armónico Promedio\";\n    }\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1960,
        "y": 2720,
        "wires": [
            [
                "6c9ed5d3.e7799c"
            ]
        ]
    },
    {
        "id": "c8aa3a95.12b518",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "Harmonics Chart Prompted? ",
        "property": "#:(memoryOnly)::PQA.Harmonics_Chart.Prompt",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1680,
        "y": 2720,
        "wires": [
            [
                "3ea5879e.bf0588"
            ]
        ]
    },
    {
        "id": "20b8681c.81fd48",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics_Chart.Selection",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 2770,
        "wires": [
            []
        ]
    },
    {
        "id": "3ccbaa0b.2db096",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "LineaP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 2770,
        "wires": [
            [
                "23815ef1.931a32"
            ]
        ]
    },
    {
        "id": "3a1748983f097cb1",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "group": "474271dc.04fa9",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Frec.:",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "row-left",
        "x": 1120,
        "y": 2880,
        "wires": []
    },
    {
        "id": "96e2b8dbe394949c",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "user?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 720,
        "y": 350,
        "wires": [
            [
                "8f48d1f2.ceb62"
            ],
            [
                "8ba4f2c8d51b2c68"
            ]
        ]
    },
    {
        "id": "68ea2079fef8dd21",
        "type": "ui_toast",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "Cancelar",
        "raw": false,
        "topic": "",
        "name": "NO descargar Alarmas",
        "x": 1050,
        "y": 380,
        "wires": [
            [
                "9bf850479811451b"
            ]
        ]
    },
    {
        "id": "8ba4f2c8d51b2c68",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "No user",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Para descargar archivos debe iniciar sesión. ¿Desea ir a pantalla de usuarios?",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Dispositivo USB encontrado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 380,
        "wires": [
            [
                "68ea2079fef8dd21"
            ]
        ]
    },
    {
        "id": "9bf850479811451b",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Aceptar",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1220,
        "y": 380,
        "wires": [
            [
                "a9ea2f32ef0100a8"
            ],
            [
                "8db0f092.83eb9"
            ]
        ]
    },
    {
        "id": "a9ea2f32ef0100a8",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "toLogin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "8",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 370,
        "wires": [
            [
                "6b3d4586f5261369"
            ]
        ]
    },
    {
        "id": "6b3d4586f5261369",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "login",
        "links": [
            "8a17d991.081178",
            "949a1f09.5cd7a",
            "84a10c4b.f35cd"
        ],
        "x": 1485,
        "y": 370,
        "wires": []
    },
    {
        "id": "e834cca1573f4ed0",
        "type": "subflow:c8b77ff3.ab501",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "env": [],
        "x": 1600,
        "y": 890,
        "wires": [
            [],
            [
                "d0d71887678a5547"
            ]
        ]
    },
    {
        "id": "d0d71887678a5547",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "exito",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "fallid",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1730,
        "y": 890,
        "wires": [
            [
                "4283632c186cd676",
                "67dc130a552ed9f0"
            ],
            [
                "824394eb2c1be3fa"
            ]
        ]
    },
    {
        "id": "3c6233b7580fdd3b",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 2005,
        "y": 870,
        "wires": []
    },
    {
        "id": "88d14fc4446fc3c6",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 2005,
        "y": 910,
        "wires": []
    },
    {
        "id": "230a6662.27d8ea",
        "type": "ui_toast",
        "z": "2e27dea6.c4c362",
        "g": "931b0370.afc1b",
        "position": "top right",
        "displayTime": "3",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "Red notif",
        "x": 1440,
        "y": 280,
        "wires": []
    },
    {
        "id": "65dbd957.020378",
        "type": "ui_toast",
        "z": "2e27dea6.c4c362",
        "g": "931b0370.afc1b",
        "position": "top right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "Green notif",
        "x": 1450,
        "y": 230,
        "wires": []
    },
    {
        "id": "207ea8ce.3dea68",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "931b0370.afc1b",
        "name": "notif green",
        "links": [
            "1045d8d0.faf6d7",
            "3c6233b7580fdd3b",
            "bf08332fad815da4",
            "b8f6d05216308f2f",
            "5b523df343832e42",
            "fdc68848fdaa926f",
            "cb0c215187dec002",
            "6e4f3aa97716a07f",
            "deda81b5.9e94a",
            "3484e5233d4f23d3",
            "8d09e1a980457df1",
            "fb18fc5d2d9efad1",
            "bb5a0d783e5dca2d",
            "4e6fc41b723d16d5",
            "6cac2db8df0d88d3",
            "7763c3f3.af1d6c",
            "a3e0a5db4f30662d",
            "2dbce9795a096dfe",
            "1b0e4b2b.ecf4e5"
        ],
        "x": 1315,
        "y": 230,
        "wires": [
            [
                "65dbd957.020378"
            ]
        ]
    },
    {
        "id": "cbbbcd1c.7180e",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "931b0370.afc1b",
        "name": "notif red",
        "links": [
            "565805a7.6b4eec",
            "88d14fc4446fc3c6",
            "d819c89.12f6638",
            "7c549260263926de",
            "a6537492cee742bb",
            "5de1f62eeac3700c",
            "ea0a3cc6e4d6537a",
            "33cf5bad91b4412f",
            "bd92a3ae5f6e2f10",
            "2aa31c125e8aa8f1",
            "9b11a2d4e3432956",
            "ea1cf5c958c8fbd1",
            "ae81aa320575e993",
            "de596228ce0351bb",
            "fce9ca29ea26c2ca",
            "7c2016e7007063f4",
            "f0a7aa49a0a74635",
            "c5a0c9bb05f67779",
            "4b38c31b6019dbbd",
            "906f6c90b95e81f4",
            "66f58a7.5c16574",
            "44c1195dcc60d5f0",
            "346a6c0d781748eb",
            "97b2eb182dd8a393",
            "36c70d85dac8cd26"
        ],
        "x": 1315,
        "y": 280,
        "wires": [
            [
                "230a6662.27d8ea"
            ]
        ]
    },
    {
        "id": "0cf9a43ae3a4bb15",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "property": "#:(memoryOnly)::Input.Navigation.ComandOper",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "else"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1570,
        "y": 720,
        "wires": [
            [
                "881f8e7e37d29f85"
            ],
            [
                "e834cca1573f4ed0"
            ],
            []
        ]
    },
    {
        "id": "744089fd1f82831a",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Forward",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Direction",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 520,
        "wires": [
            [
                "24678530.efc32a"
            ]
        ]
    },
    {
        "id": "1893048213e6d12c",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Reverse",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Direction",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 640,
        "wires": [
            [
                "7dacdbe3.f9cb94"
            ]
        ]
    },
    {
        "id": "a4403c3e26ba31b8",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Giro Link In",
        "links": [
            "24678530.efc32a",
            "7dacdbe3.f9cb94"
        ],
        "x": 1505,
        "y": 910,
        "wires": [
            [
                "e834cca1573f4ed0"
            ]
        ]
    },
    {
        "id": "41b82348a8ab40a8",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "be55ea76.ed4478",
        "name": "root",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "root",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 850,
        "wires": [
            [
                "d1a73825.d89578",
                "9913875f5cc5f0f2"
            ]
        ]
    },
    {
        "id": "c1672804cba19e98",
        "type": "link out",
        "z": "3af652c9.6f9bee",
        "g": "64ff74e5.f4c53c",
        "name": "",
        "links": [],
        "x": 655,
        "y": 640,
        "wires": []
    },
    {
        "id": "f74cea60.fcb698",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Staggered_start.Reference_1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "fb3c6926.732028",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Staggered_start.Reference_2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "fb0cb7ee.fd5898",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Staggered_start.Time_1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "bd09ef7a.b5593",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Staggered_start.Time_2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 953,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "deff6b32.1521a8",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Staggered_start.Time_3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "7157d825.d18368",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "V1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Staggered_start.Reference_1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 180,
        "wires": [
            [
                "0854324f06e6da08"
            ]
        ]
    },
    {
        "id": "44c815d7.7d19fc",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "V2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Staggered_start.Reference_2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 220,
        "wires": [
            [
                "645d9a5ba71350a1"
            ]
        ]
    },
    {
        "id": "133426a.57f73d9",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "T1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Staggered_start.Time_1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 260,
        "wires": [
            [
                "3ae93c02217b5b2f"
            ]
        ]
    },
    {
        "id": "a8a729db.101208",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "T2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Staggered_start.Time_2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 300,
        "wires": [
            [
                "19fba003462f3717"
            ]
        ]
    },
    {
        "id": "9408742.a02f988",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "T3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Staggered_start.Time_3",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 340,
        "wires": [
            [
                "493e60583e5c317a"
            ]
        ]
    },
    {
        "id": "82a14e7ad6ab2948",
        "type": "ui_text",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "group": "d4113fd9.a0bfc",
        "order": 3,
        "width": "6",
        "height": 1,
        "name": "titulo arranque",
        "label": "",
        "format": "<font size = 4px>Arranque Escalonado {{msg.payload}}",
        "layout": "row-left",
        "x": 1090,
        "y": 140,
        "wires": []
    },
    {
        "id": "52ffcbd2c7ced519",
        "type": "ui_text",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "group": "d4113fd9.a0bfc",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "titulo funciones",
        "label": "",
        "format": "<font size = 4px>Otras Funciones",
        "layout": "col-center",
        "x": 1700,
        "y": 90,
        "wires": []
    },
    {
        "id": "42cacf9e374e4c19",
        "type": "ui_button",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "Normal",
        "group": "d4113fd9.a0bfc",
        "order": 10,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "<font size = 2px>Op. Normal",
        "tooltip": "",
        "color": "green",
        "bgcolor": "#d4d4cf",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 1310,
        "y": 130,
        "wires": [
            [
                "56a6a4fa29fe8751"
            ]
        ]
    },
    {
        "id": "936b88689b3da65d",
        "type": "ui_button",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "Prolongada",
        "group": "d4113fd9.a0bfc",
        "order": 15,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "<font size = 2px>Ref. Prolong",
        "tooltip": "",
        "color": "green",
        "bgcolor": "#d4d4cf",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 1300,
        "y": 170,
        "wires": [
            [
                "d5b8dd2ee11b4e46"
            ]
        ]
    },
    {
        "id": "56a6a4fa29fe8751",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "start change",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Input.Navigation.ComandOper",
                "pt": "global",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 130,
        "wires": [
            [
                "4a3a2387d414149a"
            ]
        ]
    },
    {
        "id": "4d61b8ddd12f192a",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "start change",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Input.Navigation.ComandOper",
                "pt": "global",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 160,
        "wires": [
            [
                "4a3a2387d414149a"
            ]
        ]
    },
    {
        "id": "3ae93c02217b5b2f",
        "type": "ui_text_input",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "label": "Rampa 1 (s)",
        "tooltip": "",
        "group": "d4113fd9.a0bfc",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 610,
        "y": 260,
        "wires": [
            [
                "fb0cb7ee.fd5898"
            ]
        ]
    },
    {
        "id": "0854324f06e6da08",
        "type": "ui_text_input",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "label": "Referencia 1 (Hz)",
        "tooltip": "",
        "group": "d4113fd9.a0bfc",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 630,
        "y": 180,
        "wires": [
            [
                "f74cea60.fcb698"
            ]
        ]
    },
    {
        "id": "19fba003462f3717",
        "type": "ui_text_input",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "label": "Espera (s)",
        "tooltip": "",
        "group": "d4113fd9.a0bfc",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 600,
        "y": 300,
        "wires": [
            [
                "bd09ef7a.b5593"
            ]
        ]
    },
    {
        "id": "493e60583e5c317a",
        "type": "ui_text_input",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "label": "Rampa 2 (s)",
        "tooltip": "",
        "group": "d4113fd9.a0bfc",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 610,
        "y": 340,
        "wires": [
            [
                "deff6b32.1521a8"
            ]
        ]
    },
    {
        "id": "645d9a5ba71350a1",
        "type": "ui_text_input",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "label": "Referencia 2 (Hz)",
        "tooltip": "",
        "group": "d4113fd9.a0bfc",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 630,
        "y": 220,
        "wires": [
            [
                "fb3c6926.732028"
            ]
        ]
    },
    {
        "id": "fa14e78abe8cc9e5",
        "type": "ui_text",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "group": "d4113fd9.a0bfc",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<font size = 2px>Frec. Actual: ",
        "format": "<font size = 4px> {{msg.payload}}",
        "layout": "row-center",
        "x": 1860,
        "y": 270,
        "wires": []
    },
    {
        "id": "f92c8804d4db951a",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 100,
        "wires": [
            [
                "7157d825.d18368",
                "44c815d7.7d19fc",
                "133426a.57f73d9",
                "a8a729db.101208",
                "9408742.a02f988"
            ]
        ]
    },
    {
        "id": "7ce1ea89ccdec386",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "user?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 110,
        "wires": [
            [
                "f92c8804d4db951a"
            ],
            [
                "a46699b424dc32bc"
            ]
        ]
    },
    {
        "id": "a46699b424dc32bc",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "7157d825.d18368",
                "44c815d7.7d19fc",
                "133426a.57f73d9",
                "a8a729db.101208",
                "9408742.a02f988"
            ]
        ]
    },
    {
        "id": "5f3854df5c8e1ca8",
        "type": "link in",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "links": [
            "51579afe.51eb14"
        ],
        "x": 145,
        "y": 210,
        "wires": [
            [
                "b121db50c00ed93e"
            ]
        ]
    },
    {
        "id": "b121db50c00ed93e",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "delete",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 110,
        "y": 170,
        "wires": [
            [
                "c3390704b058d213"
            ]
        ]
    },
    {
        "id": "4a3a2387d414149a",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "",
        "links": [
            "236c6c92.d31584",
            "501b4196.e2e16",
            "3f521e134773d692",
            "2935240c06b8dd69"
        ],
        "x": 1765,
        "y": 130,
        "wires": []
    },
    {
        "id": "a770ba9dd1d7b8a8",
        "type": "complete",
        "z": "1fbf295f73cccb97",
        "name": "",
        "scope": [
            "673a44a4224904a9"
        ],
        "uncaught": false,
        "x": 410,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "74f0176c837e892d",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Ref V2 Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 1000,
        "wires": [
            [
                "8a99e2610762706f"
            ]
        ]
    },
    {
        "id": "8a99e2610762706f",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "name": "Staggered Start E7",
        "links": [
            "2da6eab8.1a0d46"
        ],
        "x": 855,
        "y": 1000,
        "wires": []
    },
    {
        "id": "fceee294.75f2a",
        "type": "finite-state-machine",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered start",
        "fsmDefinition": "{\"state\":{\"status\":\"E0\"},\"transitions\":{\"E0\":{\"Start\":\"E1\"},\"E1\":{\"AcT1 Done\":\"E2\",\"Error\":\"E1\",\"reset\":\"E0\"},\"E2\":{\"Ref V1 Done\":\"E3\",\"Error\":\"E2\",\"reset\":\"E0\"},\"E3\":{\"Start Done\":\"E4\",\"Error\":\"E3\",\"reset\":\"E0\"},\"E4\":{\"Ref V1 Reached\":\"E5\",\"Ref V1 Not reached yet\":\"E4A\",\"reset\":\"E0\"},\"E4A\":{\"Continue\":\"E4\",\"reset\":\"E0\"},\"E5\":{\"T2 Done\":\"E6\",\"reset\":\"E0\"},\"E6\":{\"AcT2 Done\":\"E7\",\"Error\":\"E6\",\"reset\":\"E0\"},\"E7\":{\"Ref V2 Done\":\"E8\",\"Error\":\"E7\",\"reset\":\"E0\"},\"E8\":{\"Ref V2 Reached\":\"E9\",\"Ref V2 Not reached yet\":\"E8A\",\"reset\":\"E0\"},\"E8A\":{\"Continue\":\"E8\",\"reset\":\"E0\"},\"E9\":{\"Accel Done\":\"E0\",\"Error\":\"E9\",\"reset\":\"E0\"}}}",
        "sendInitialState": true,
        "sendStateWithoutChange": true,
        "showTransitionErrors": false,
        "x": 750,
        "y": 490,
        "wires": [
            [
                "6b84c64e.dcc588"
            ]
        ]
    },
    {
        "id": "2da6eab8.1a0d46",
        "type": "link in",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start Update Status",
        "links": [
            "a238dee5.dce89",
            "933dddee.7aa6b",
            "1693e576.9b12ab",
            "19987e51.456892",
            "95c850f6.36643",
            "1d20ae55.84ce82",
            "97085297.91fc4",
            "1a666499.a2effb",
            "402cd950.ce2c18",
            "adced32ef7b81494",
            "8a99e2610762706f",
            "b7c86f2160305665"
        ],
        "x": 595,
        "y": 550,
        "wires": [
            [
                "fceee294.75f2a"
            ]
        ]
    },
    {
        "id": "df0f741c.af19a8",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "E0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E9",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E4A",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E8A",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 12,
        "x": 160,
        "y": 820,
        "wires": [
            [],
            [
                "4fa4f9ba.bbe438"
            ],
            [
                "457f5e6e.ca6a6"
            ],
            [
                "55a221abc9c0f1ed"
            ],
            [
                "5a332056.69647"
            ],
            [
                "b3caef3.352311"
            ],
            [
                "9582cf9f.08cd2"
            ],
            [
                "94a055d5.0c9b78"
            ],
            [
                "8342ff02.52b06"
            ],
            [
                "b577a0f5.21f92"
            ],
            [
                "460c509cea317bee"
            ],
            [
                "460c509cea317bee"
            ]
        ]
    },
    {
        "id": "f2d35fb.fa772a",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Start",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 510,
        "wires": [
            [
                "101b1cf1.8df2b3"
            ]
        ]
    },
    {
        "id": "8fb0b4bf.9589d8",
        "type": "inject",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "num"
            },
            {
                "p": "topic",
                "v": "reset",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reset",
        "payload": "",
        "payloadType": "num",
        "x": 560,
        "y": 470,
        "wires": [
            [
                "fceee294.75f2a"
            ]
        ]
    },
    {
        "id": "d49b2738.582fc8",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 610,
        "wires": [
            [
                "29c7a23.727065e",
                "d521fa7d.be0208"
            ],
            [
                "d21b5c08.66b8c"
            ]
        ]
    },
    {
        "id": "29c7a23.727065e",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "AcT1 Done",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AcT1 Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 590,
        "wires": [
            [
                "a238dee5.dce89"
            ]
        ]
    },
    {
        "id": "d21b5c08.66b8c",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Error",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 630,
        "wires": [
            [
                "a238dee5.dce89"
            ]
        ]
    },
    {
        "id": "a238dee5.dce89",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start E1",
        "links": [
            "2da6eab8.1a0d46"
        ],
        "x": 855,
        "y": 630,
        "wires": []
    },
    {
        "id": "457f5e6e.ca6a6",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "V1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Staggered_start.Reference_1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 670,
        "wires": [
            [
                "91f68c48.47e4b",
                "69d64be34aec24d1"
            ]
        ]
    },
    {
        "id": "ca0a5684.ea6928",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Start Done",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Start Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 750,
        "wires": [
            [
                "1693e576.9b12ab",
                "8026b7042b40e2c2"
            ]
        ]
    },
    {
        "id": "1693e576.9b12ab",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start E3",
        "links": [
            "2da6eab8.1a0d46"
        ],
        "x": 975,
        "y": 750,
        "wires": []
    },
    {
        "id": "5a332056.69647",
        "type": "function",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "E4",
        "func": "var Motor_Speed = Math.abs(global.get(\"C2S.Implicit.Output_Frequency\",'memoryOnly')||0);\nMotor_Speed = parseFloat(Motor_Speed.toFixed(1));\nvar Reference1 = global.get(\"Control_functions.Staggered_start.Reference_1\")||0;\n\nif(Motor_Speed == Reference1){\n    msg.topic = \"Ref V1 Reached\";\n}\nelse{\n    msg.topic = \"Ref V1 Not reached yet\";\n}\nnode.status({fill:\"green\",shape:\"dot\",text:\"Reference : \"+Reference1+\", \"+\"Motor Speed : \"+ Motor_Speed});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 790,
        "wires": [
            [
                "8cc0d170eac2b8a5"
            ]
        ]
    },
    {
        "id": "6b84c64e.dcc588",
        "type": "delay",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 930,
        "y": 500,
        "wires": [
            [
                "c8e55399.c9ba1"
            ]
        ]
    },
    {
        "id": "19987e51.456892",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start E4",
        "links": [
            "2da6eab8.1a0d46"
        ],
        "x": 855,
        "y": 790,
        "wires": []
    },
    {
        "id": "b3caef3.352311",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "T2",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "Control_functions.Staggered_start.Time_2",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "T2 Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 840,
        "wires": [
            [
                "1f018e5b.62ca82"
            ]
        ]
    },
    {
        "id": "e4129fed.88799",
        "type": "delay",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "pauseType": "delayv",
        "timeout": "60",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 710,
        "y": 840,
        "wires": [
            [
                "95c850f6.36643"
            ]
        ]
    },
    {
        "id": "95c850f6.36643",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start E5",
        "links": [
            "2da6eab8.1a0d46"
        ],
        "x": 855,
        "y": 840,
        "wires": []
    },
    {
        "id": "66a490ba.d5e37",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 900,
        "wires": [
            [
                "b22288f6.37a878"
            ],
            [
                "8552caa4.241e38"
            ]
        ]
    },
    {
        "id": "b22288f6.37a878",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "AcT2 Done",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AcT2 Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 880,
        "wires": [
            [
                "1d20ae55.84ce82"
            ]
        ]
    },
    {
        "id": "8552caa4.241e38",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Error",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 920,
        "wires": [
            [
                "1d20ae55.84ce82"
            ]
        ]
    },
    {
        "id": "1d20ae55.84ce82",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start E6",
        "links": [
            "2da6eab8.1a0d46"
        ],
        "x": 855,
        "y": 920,
        "wires": []
    },
    {
        "id": "94a055d5.0c9b78",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "V2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Staggered_start.Reference_2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 960,
        "wires": [
            [
                "91f68c48.47e4b",
                "2ad4d2c7fa4ba6cb"
            ]
        ]
    },
    {
        "id": "8342ff02.52b06",
        "type": "function",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "E8",
        "func": "var Motor_Speed = Math.abs(global.get(\"C2S.Implicit.Output_Frequency\",'memoryOnly')||0);\nMotor_Speed = parseFloat(Motor_Speed.toFixed(1));\nvar Reference2  = global.get(\"Control_functions.Staggered_start.Reference_2\")||0;\n\nif(Motor_Speed == Reference2){\n    msg.topic = \"Ref V2 Reached\";\n}\nelse{\n    msg.topic = \"Ref V2 Not reached yet\"\n}\nnode.status({fill:\"green\",shape:\"dot\",text:\"Reference : \"+Reference2+\", \"+\"Motor Speed : \"+ Motor_Speed});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1000,
        "wires": [
            [
                "d57a1b85.5bfae8"
            ]
        ]
    },
    {
        "id": "d57a1b85.5bfae8",
        "type": "delay",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 1000,
        "wires": [
            [
                "1a666499.a2effb"
            ]
        ]
    },
    {
        "id": "1a666499.a2effb",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start E8",
        "links": [
            "2da6eab8.1a0d46"
        ],
        "x": 595,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b577a0f5.21f92",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Accel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.Accel",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1040,
        "wires": [
            [
                "8f53cc8f.84257"
            ]
        ]
    },
    {
        "id": "ac2b4653.316da8",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Accel Done",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Accel Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1040,
        "wires": [
            [
                "402cd950.ce2c18",
                "bb39aa69.c4e278",
                "cee6c2c4f89ff3be"
            ]
        ]
    },
    {
        "id": "402cd950.ce2c18",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start E9",
        "links": [
            "2da6eab8.1a0d46"
        ],
        "x": 745,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c8e55399.c9ba1",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start New State",
        "links": [
            "f27260f5.84ea7"
        ],
        "x": 1035,
        "y": 460,
        "wires": []
    },
    {
        "id": "f27260f5.84ea7",
        "type": "link in",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start State Input",
        "links": [
            "c8e55399.c9ba1"
        ],
        "x": 75,
        "y": 820,
        "wires": [
            [
                "df0f741c.af19a8"
            ]
        ]
    },
    {
        "id": "4fa4f9ba.bbe438",
        "type": "function",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "AcT1",
        "func": "var Motor_Hz    = global.get(\"C2S.Motor_Control.Nameplate.Hertz\")||0;\nvar SS          = global.get(\"Control_functions.Staggered_start\")||null;\n\nmsg.payload     = Motor_Hz*SS.Time_1/SS.Reference_1;\nnode.status({fill:\"green\",shape:\"dot\",text:\"Accel Time : \"+msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 610,
        "wires": [
            [
                "16d2de82.3f9bd1"
            ]
        ]
    },
    {
        "id": "9582cf9f.08cd2",
        "type": "function",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "AcT2",
        "func": "var Motor_Hz    = global.get(\"C2S.Motor_Control.Nameplate.Hertz\")||0;\nvar SS          = global.get(\"Control_functions.Staggered_start\")||null;\n\nmsg.payload     = Motor_Hz*SS.Time_3/(SS.Reference_2 - SS.Reference_1);\nnode.status({fill:\"green\",shape:\"dot\",text:\"Accel Time : \"+msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 900,
        "wires": [
            [
                "eb1fb4ef.aeeb68"
            ]
        ]
    },
    {
        "id": "1f018e5b.62ca82",
        "type": "function",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "msg.delay ms2sec",
        "func": "msg.delay = msg.delay * 1000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 840,
        "wires": [
            [
                "e4129fed.88799"
            ]
        ]
    },
    {
        "id": "5a992b9e.0fe264",
        "type": "link in",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Arranque Escalonado Link In",
        "links": [
            "8565c38.316b44",
            "881f8e7e37d29f85"
        ],
        "x": 275,
        "y": 510,
        "wires": [
            [
                "f2d35fb.fa772a"
            ]
        ]
    },
    {
        "id": "bf6826f1.1eaf58",
        "type": "link in",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Reset Funciones de control Link In",
        "links": [
            "1ef779a27f308aef",
            "caab4c9366a6a718"
        ],
        "x": 595,
        "y": 430,
        "wires": [
            [
                "fceee294.75f2a",
                "d566d0fc26a835fe"
            ]
        ]
    },
    {
        "id": "101b1cf1.8df2b3",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Variador Active?",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Active",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 510,
        "wires": [
            [
                "fceee294.75f2a"
            ]
        ]
    },
    {
        "id": "3024e2c5.a2abce",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Arranque",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Arranque",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 700,
        "y": 750,
        "wires": [
            [
                "ca0a5684.ea6928"
            ]
        ]
    },
    {
        "id": "16d2de82.3f9bd1",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "AcT1",
        "env": [
            {
                "name": "Parameter",
                "value": "42875",
                "type": "num"
            }
        ],
        "x": 470,
        "y": 610,
        "wires": [
            [],
            [
                "d49b2738.582fc8"
            ]
        ]
    },
    {
        "id": "eb1fb4ef.aeeb68",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "AcT2",
        "env": [
            {
                "name": "Parameter",
                "value": "42875",
                "type": "num"
            }
        ],
        "x": 470,
        "y": 900,
        "wires": [
            [],
            [
                "66a490ba.d5e37"
            ]
        ]
    },
    {
        "id": "8f53cc8f.84257",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Accel",
        "env": [
            {
                "name": "Parameter",
                "value": "42875",
                "type": "num"
            }
        ],
        "x": 470,
        "y": 1040,
        "wires": [
            [],
            [
                "ac2b4653.316da8"
            ]
        ]
    },
    {
        "id": "a032476a.407a38",
        "type": "inject",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 380,
        "y": 550,
        "wires": [
            [
                "f2d35fb.fa772a"
            ]
        ]
    },
    {
        "id": "d521fa7d.be0208",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.Staggered_start",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 550,
        "wires": [
            []
        ]
    },
    {
        "id": "91f68c48.47e4b",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Ultima Referencia",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Last_Reference.Value",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "C2S.Last_Reference.Source",
                "pt": "global",
                "to": "Arranque escalonado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 670,
        "wires": [
            []
        ]
    },
    {
        "id": "bb39aa69.c4e278",
        "type": "delay",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 790,
        "y": 1040,
        "wires": [
            [
                "864e753a.a4d358"
            ]
        ]
    },
    {
        "id": "864e753a.a4d358",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.Staggered_start",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "69d64be34aec24d1",
        "type": "subflow:1fbf295f73cccb97",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "env": [],
        "x": 560,
        "y": 710,
        "wires": [
            [
                "778a429fbac30b7d"
            ]
        ]
    },
    {
        "id": "2ad4d2c7fa4ba6cb",
        "type": "subflow:1fbf295f73cccb97",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "env": [],
        "x": 560,
        "y": 960,
        "wires": [
            [
                "74f0176c837e892d"
            ]
        ]
    },
    {
        "id": "e6efd332166f2fd0",
        "type": "subflow:c8b77ff3.ab501",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "env": [],
        "x": 540,
        "y": 750,
        "wires": [
            [
                "3024e2c5.a2abce"
            ],
            []
        ]
    },
    {
        "id": "55a221abc9c0f1ed",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 750,
        "wires": [
            [
                "e6efd332166f2fd0"
            ]
        ]
    },
    {
        "id": "adced32ef7b81494",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start E2",
        "links": [
            "2da6eab8.1a0d46"
        ],
        "x": 855,
        "y": 710,
        "wires": []
    },
    {
        "id": "778a429fbac30b7d",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Ref V1 Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 710,
        "wires": [
            [
                "adced32ef7b81494"
            ]
        ]
    },
    {
        "id": "881f8e7e37d29f85",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Arranque Escalonado Link Out",
        "links": [
            "5a992b9e.0fe264"
        ],
        "x": 1535,
        "y": 680,
        "wires": []
    },
    {
        "id": "51d6f5bd.7b3bac",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Prolonged Reference Update Status",
        "links": [
            "1ef779a27f308aef",
            "6bb7cd2e.159434",
            "8b72bbb3.5d5a38",
            "caab4c9366a6a718"
        ],
        "x": 175,
        "y": 580,
        "wires": [
            [
                "406ea535.518d9c"
            ]
        ]
    },
    {
        "id": "7984b34.194704c",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Staggered Start State Input",
        "links": [
            "cfde9e34.955e5"
        ],
        "x": 175,
        "y": 680,
        "wires": [
            [
                "67f2d064.1098c"
            ]
        ]
    },
    {
        "id": "406ea535.518d9c",
        "type": "finite-state-machine",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Prolonged Reference",
        "fsmDefinition": "{\"state\":{\"status\":\"E0\"},\"transitions\":{\"E0\":{\"Start\":\"E1\"},\"E1\":{\"Ref Done\":\"E2\",\"Error\":\"E1A\",\"reset\":\"E0\"},\"E1A\":{\"continue\":\"E1\",\"reset\":\"E0\"},\"E2\":{\"Ref Reached\":\"E0\",\"Ref Not Reached yet\":\"E1\",\"reset\":\"E0\"}}}",
        "sendInitialState": false,
        "sendStateWithoutChange": true,
        "showTransitionErrors": false,
        "x": 460,
        "y": 580,
        "wires": [
            [
                "bbb0593f5e861907"
            ]
        ]
    },
    {
        "id": "67f2d064.1098c",
        "type": "switch",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "E0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 260,
        "y": 680,
        "wires": [
            [],
            [
                "95ba5bc8.730648",
                "e7e169ca4e5a950c"
            ],
            [
                "39b139ed.19f7a6"
            ]
        ]
    },
    {
        "id": "825a8d81.e5826",
        "type": "delay",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "pauseType": "delayv",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 540,
        "y": 630,
        "wires": [
            [
                "76e5042d.a8799c"
            ]
        ]
    },
    {
        "id": "39b139ed.19f7a6",
        "type": "function",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "VSD_Ref",
        "func": "// Definitions\nvar PR = global.get(\"Control_functions.Prolonged_Reference\") || null;\nvar Mtr_Speed = global.get('C2S.Implicit.Output_Frequency', 'memoryOnly');\nvar commanded = global.get('C2S.Implicit.Commanded_SpdRef', 'memoryOnly');\nMtr_Speed = Math.abs(Mtr_Speed);\ncommanded = Math.abs(commanded);\n\nif (PR.Hz == parseFloat(Mtr_Speed.toFixed(6))) {\n    msg.topic = \"Ref Reached\";\n    node.status({ fill: \"green\", shape: \"dot\", text: Mtr_Speed });\n}\nelse {\n    msg.topic = \"Ref Not Reached yet\";\n}\nif ((parseFloat(commanded.toFixed(3))) == PR.Hz) {\n    msg.topic = \"Ref Reached\";\n    node.status({ fill: \"green\", shape: \"dot\", text: Mtr_Speed });\n}\nnode.status({ fill: \"green\", shape: \"dot\", text: \"Hz:\" + PR.Hz + \" MtrSpeed:\" + Mtr_Speed });\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 760,
        "wires": [
            [
                "8b72bbb3.5d5a38",
                "b416b548.9000d8"
            ]
        ]
    },
    {
        "id": "76e5042d.a8799c",
        "type": "function",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "VSD_Ref",
        "func": "// Definitions\nvar PR = global.get(\"Control_functions.Prolonged_Reference\") || null;\nvar Mtr_Speed = global.get('C2S.Implicit.Output_Frequency', 'memoryOnly') || 0;\nMtr_Speed = Math.abs(Mtr_Speed);\nvar URef = global.get(\"C2S.Last_Reference.Value\");\nvar Sts = global.get(\"C2S.Drive_Status.Active\", \"memoryOnly\") || 0;\nvar ant, act, resp;\n\nif (Math.abs(PR.Hz - Mtr_Speed) < 0.005) {\n    msg.payload = PR.Hz;\n    msg.code = 0;\n    node.status({ fill: \"green\", shape: \"dot\", text: Mtr_Speed + \" = \" + (PR.Hz).toFixed(2) + \" = \" + (msg.payload).toFixed(2) + \" \" + (Math.abs(PR.Hz - Mtr_Speed) / (PR.Hz > Mtr_Speed ? PR.Hz : Mtr_Speed)) });\n}\nelse if (PR.Hz < Mtr_Speed) {\n    ant = context.get(\"ant\") || parseFloat(Mtr_Speed);\n    act = parseFloat(Mtr_Speed);\n    resp = act < ant ? act : ant;\n\n    msg.payload = resp - PR.dHz;\n    msg.payload = msg.payload - PR.dHz < PR.Hz ? PR.Hz : msg.payload;\n    msg.code = 1;\n    context.set(\"ant\", act);\n    node.status({ fill: \"green\", shape: \"dot\", text: Mtr_Speed + \" - \" + (PR.dHz).toFixed(2) + \" = \" + (msg.payload).toFixed(2) });\n}\nelse if (PR.Hz > Mtr_Speed) {\n    ant = context.get(\"ant\") || parseFloat(Mtr_Speed);\n    act = parseFloat(Mtr_Speed);\n    resp = act > ant ? act : ant;\n\n    msg.payload = resp + PR.dHz;\n    msg.payload = msg.payload + PR.dHz > PR.Hz ? PR.Hz : msg.payload;\n    msg.payload.code = 1;\n    context.set(\"ant\", act);\n    node.status({ fill: \"green\", shape: \"dot\", text: Mtr_Speed + \" + \" + (PR.dHz).toFixed(2) + \" = \" + (msg.payload).toFixed(2) });\n}\nelse {\n    msg.payload = Mtr_Speed;\n    msg.code = 0;\n    context.set(\"ant\", 0);\n}\nif (Sts == 0) {\n    msg.payload = URef;\n}\nmsg.payload = msg.payload * 1;\nflow.set(\"RefActual\", msg.payload, 'memoryOnly');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 630,
        "wires": [
            [
                "595852e0.7df8ec",
                "5daaff04fc344334",
                "e8e6627edafb7e4b"
            ]
        ]
    },
    {
        "id": "595852e0.7df8ec",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Ref Done",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Ref Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 630,
        "wires": [
            [
                "6bb7cd2e.159434"
            ]
        ]
    },
    {
        "id": "cfde9e34.955e5",
        "type": "link out",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Prolonged Reference New State",
        "links": [
            "7984b34.194704c"
        ],
        "x": 775,
        "y": 580,
        "wires": []
    },
    {
        "id": "6bb7cd2e.159434",
        "type": "link out",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Prolonged Reference E1",
        "links": [
            "51d6f5bd.7b3bac"
        ],
        "x": 975,
        "y": 630,
        "wires": []
    },
    {
        "id": "8b72bbb3.5d5a38",
        "type": "link out",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Prolonged Reference E2",
        "links": [
            "51d6f5bd.7b3bac"
        ],
        "x": 585,
        "y": 720,
        "wires": []
    },
    {
        "id": "b416b548.9000d8",
        "type": "switch",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Done",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Ref Reached",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 760,
        "wires": [
            [
                "ea102947.4ba5a8",
                "b130bfc6.1176",
                "db3fdb908ecb466b",
                "bbb7f8e6bcef99a7"
            ]
        ]
    },
    {
        "id": "ea102947.4ba5a8",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Prolonged_Reference.Enable",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "36c8477f.f95a48",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 540,
        "wires": [
            [
                "406ea535.518d9c",
                "80958343820b9c28"
            ]
        ]
    },
    {
        "id": "223f7107.39115e",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Start_Prolonged Reference",
        "links": [
            "bd420231.1a153",
            "d47b33e4bb67ed8d"
        ],
        "x": 175,
        "y": 540,
        "wires": [
            [
                "36c8477f.f95a48"
            ]
        ]
    },
    {
        "id": "f144e183.7ff68",
        "type": "inject",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reset",
        "payloadType": "str",
        "x": 140,
        "y": 620,
        "wires": [
            [
                "406ea535.518d9c"
            ]
        ]
    },
    {
        "id": "b130bfc6.1176",
        "type": "delay",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "pauseType": "delay",
        "timeout": "80",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 760,
        "wires": [
            [
                "a0fa86d.e053b78"
            ]
        ]
    },
    {
        "id": "a0fa86d.e053b78",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.Prolonged_Reference",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "95ba5bc8.730648",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.Prolonged_Reference",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "80958343820b9c28",
        "type": "switch",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 540,
        "wires": [
            [
                "ae40d46c1e2917ed"
            ]
        ]
    },
    {
        "id": "ae40d46c1e2917ed",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Ejecutando Incremento prolongado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "f95759e7d28493ed",
        "type": "link in",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 145,
        "y": 260,
        "wires": [
            [
                "beef9d38aa192130"
            ]
        ]
    },
    {
        "id": "beef9d38aa192130",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 260,
        "wires": [
            [
                "7157d825.d18368",
                "44c815d7.7d19fc",
                "133426a.57f73d9",
                "a8a729db.101208",
                "9408742.a02f988"
            ]
        ]
    },
    {
        "id": "c9c60e8060e9ce10",
        "type": "ui_toast",
        "z": "2e27dea6.c4c362",
        "g": "931b0370.afc1b",
        "position": "top right",
        "displayTime": "3",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "Yellow notif",
        "x": 1450,
        "y": 330,
        "wires": []
    },
    {
        "id": "52f1e35a6b450a62",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "931b0370.afc1b",
        "name": "notif yellow",
        "links": [
            "4ea2e1987f3b3d50",
            "9a0d5aa34c82b984",
            "0136783bb78db2e2",
            "6d0c3c367c64344a",
            "86f805b5cb28bb05",
            "aeb76c9ced35d9f4",
            "b1b1ab91f6ce9a0f",
            "5dea5f3a2e3fb369",
            "02637e406d6ed608",
            "61b7325ebb260248",
            "d2bf0a88cc35bf5f",
            "2ae6e9d4.8de576",
            "95637e8c.f75fe",
            "971e052f5f27f92d",
            "787d322ad05bb119",
            "783a6580e8c8fde8",
            "2ac8468b0d40dc4f",
            "25a8d0d2661ecaf2",
            "a23f03173b0301cb"
        ],
        "x": 1315,
        "y": 330,
        "wires": [
            [
                "c9c60e8060e9ce10"
            ]
        ]
    },
    {
        "id": "d5b8dd2ee11b4e46",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "At Speed?",
        "property": "#:(memoryOnly)::C2S.Drive_Status.At_Setpt_Spd",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1460,
        "y": 170,
        "wires": [
            [
                "4d61b8ddd12f192a"
            ],
            [
                "e5145dd75ddc6f5b"
            ]
        ]
    },
    {
        "id": "e5145dd75ddc6f5b",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "notif",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Para realizar una referencia prolongada el variador debe estar activo y en referencia",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 200,
        "wires": [
            [
                "9a0d5aa34c82b984"
            ]
        ]
    },
    {
        "id": "9a0d5aa34c82b984",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "",
        "links": [
            "52f1e35a6b450a62"
        ],
        "x": 1725,
        "y": 200,
        "wires": []
    },
    {
        "id": "633f44af41940f7e",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "",
        "func": "msg.payload = \"Detención del equipo por disparo de protección\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2240,
        "y": 100,
        "wires": [
            [
                "03c7ddb21f171192"
            ]
        ]
    },
    {
        "id": "95c053ae2c019985",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1610,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "2e2cf12086edcf86",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1660,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "4fe80e167740fe3b",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1710,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "700f09d5af266f7c",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1760,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "6f0d221e3a45b687",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1810,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "1849f3aa0476fa69",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1860,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "66e2a95ab2027f24",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1910,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "cf7f1dbc82e6cdf6",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1960,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "a6e1ec9e8b26c3a0",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2010,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "5df2ddef493d23fe",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2060,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "4e13729b39b53a93",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2110,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "7597b324654286f9",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2160,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "8d447a4ef7c4cb60",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2210,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "6f3178a650d8f715",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2260,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "2269e10b0b7231d8",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2310,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "3f9c85c8e9580550",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2360,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "d84e84fdd737275b",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2410,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "4548acf8d88fcc50",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2460,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "514d5ed34a685fd8",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Tipo Instrumento",
        "func": "var config = msg.Config || null;\n\nif(config !== null){\n    if(config.Tipo == \"NC\"){\n        msg.payload = !msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 2510,
        "wires": [
            [
                "f26c7cd67e2a751d"
            ]
        ]
    },
    {
        "id": "f26c7cd67e2a751d",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Enrutador de funciones",
        "property": "Config.Funcion",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Stop ESD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disparo alto nivel de aceite SUT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disparo alta temperatura SUT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Alarma alta temperatura SUT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Alarma bajo nivel de aceite SUT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disparo bajo bajo nivel de aceite SUT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disparo válvula sobre-presión SUT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Alarma DPS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disparo alta temperatura filtros",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disparo alta presión THP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disparo sobre-tensión SUT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ESD Remoto",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disparo puerta abierta",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Protección térmica de motor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Monitoreo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disparo shutdown SCC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disparo baja presión en la troncal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 20,
        "x": 800,
        "y": 2020,
        "wires": [
            [
                "b5ec933cfb0dbcbd"
            ],
            [
                "5da2941ec6653d0f"
            ],
            [
                "b9fd0d85469bdf62"
            ],
            [
                "3de787026c042847"
            ],
            [
                "fc9ab9803bf425e9"
            ],
            [
                "cd0abe2063f7e179"
            ],
            [
                "f3abda2e507b8187"
            ],
            [
                "fca9f1d2b33c8c2e"
            ],
            [
                "031596c77ab928a6"
            ],
            [
                "a724aed5969ba98e"
            ],
            [
                "8f47197d521272a7"
            ],
            [
                "4ecee57cdebe7ef9"
            ],
            [
                "3fa49a152e65892e"
            ],
            [
                "350c6611a0391867"
            ],
            [
                "a853aa4816675625"
            ],
            [
                "fce58f058803ab8c"
            ],
            [
                "30127a72a9e86380"
            ],
            [
                "c41453a946699da7"
            ],
            [
                "201ace7033e4132b"
            ],
            [
                "da4c7a07f5b760bc"
            ]
        ]
    },
    {
        "id": "b5ec933cfb0dbcbd",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Start",
        "func": "global.set(\"IO.Functions.DI.Start\", msg.payload, 'memoryOnly');\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 1560,
        "wires": [
            [
                "ec420b972b84d6ae"
            ]
        ]
    },
    {
        "id": "5da2941ec6653d0f",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Stop",
        "func": "global.set(\"IO.Functions.DI.Stop\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 1610,
        "wires": [
            [
                "f23e7677d613999c"
            ]
        ]
    },
    {
        "id": "b9fd0d85469bdf62",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Reset",
        "func": "global.set(\"IO.Functions.DI.Reset\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 1660,
        "wires": [
            [
                "6a842bb4461218eb"
            ]
        ]
    },
    {
        "id": "3de787026c042847",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Stop ESD",
        "func": "global.set(\"IO.Functions.DI['Stop ESD']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 1710,
        "wires": [
            [
                "b82e31a7ba4b9493"
            ]
        ]
    },
    {
        "id": "fc9ab9803bf425e9",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Disparo alto nivel de aceite SUT",
        "func": "global.set(\"IO.Functions.DI['Disparo alto nivel de aceite SUT']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 1760,
        "wires": [
            [
                "f0c4e1c284d417e4"
            ]
        ]
    },
    {
        "id": "cd0abe2063f7e179",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Disparo alta temperatura SUT",
        "func": "global.set(\"IO.Functions.DI['Disparo alta temperatura SUT']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 1810,
        "wires": [
            [
                "e3ef249e78603d8f"
            ]
        ]
    },
    {
        "id": "f3abda2e507b8187",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Alarma alta temperatura SUT",
        "func": "global.set(\"IO.Functions.DI['Alarma alta temperatura SUT']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1130,
        "y": 1860,
        "wires": [
            [
                "19aea13c856153f6"
            ]
        ]
    },
    {
        "id": "fca9f1d2b33c8c2e",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Alarma bajo nivel de aceite SUT",
        "func": "global.set(\"IO.Functions.DI['Alarma bajo nivel de aceite SUT']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 1910,
        "wires": [
            [
                "75922f11ac8749fb"
            ]
        ]
    },
    {
        "id": "031596c77ab928a6",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Disparo bajo bajo nivel de aceite SUT",
        "func": "global.set(\"IO.Functions.DI['Disparo bajo bajo nivel de aceite SUT']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 1960,
        "wires": [
            [
                "3fc079948c7f2493"
            ]
        ]
    },
    {
        "id": "a724aed5969ba98e",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Disparo válvula sobre-presión SUT",
        "func": "global.set(\"IO.Functions.DI['Disparo válvula sobre-presión SUT']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 2010,
        "wires": [
            [
                "a682a86850214d5f"
            ]
        ]
    },
    {
        "id": "8f47197d521272a7",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Alarma DPS",
        "func": "global.set(\"IO.Functions.DI['Alarma DPS']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1080,
        "y": 2060,
        "wires": [
            [
                "42cae9fbf107f110"
            ]
        ]
    },
    {
        "id": "4ecee57cdebe7ef9",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Disparo alta temperatura filtros",
        "func": "global.set(\"IO.Functions.DI['Disparo alta temperatura filtros']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 2110,
        "wires": [
            [
                "307b5601f51c9d31"
            ]
        ]
    },
    {
        "id": "3fa49a152e65892e",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Disparo alta presión THP",
        "func": "global.set(\"IO.Functions.DI['Disparo alta presión THP']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 2160,
        "wires": [
            [
                "fdb7ccf7f3ebf53e"
            ]
        ]
    },
    {
        "id": "350c6611a0391867",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Disparo sobre-tensión SUT",
        "func": "global.set(\"IO.Functions.DI['Disparo sobre-tensión SUT']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1130,
        "y": 2210,
        "wires": [
            [
                "dc85213a17dc9013"
            ]
        ]
    },
    {
        "id": "a853aa4816675625",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "ESD Remoto",
        "func": "global.set(\"IO.Functions.DI['ESD Remoto']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1080,
        "y": 2260,
        "wires": [
            [
                "ab3e62c25ddbc9c1"
            ]
        ]
    },
    {
        "id": "fce58f058803ab8c",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Disparo puerta abierta",
        "func": "global.set(\"IO.Functions.DI['Disparo puerta abierta']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1110,
        "y": 2310,
        "wires": [
            [
                "6fed0052fdfbe6ae"
            ]
        ]
    },
    {
        "id": "30127a72a9e86380",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Protección térmica de motor",
        "func": "global.set(\"IO.Functions.DI['Protección térmica de motor']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1130,
        "y": 2360,
        "wires": [
            [
                "6133d498b94e40b8"
            ]
        ]
    },
    {
        "id": "c41453a946699da7",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Monitoreo",
        "func": "global.set(\"IO.Functions.DI['Monitoreo']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1080,
        "y": 2410,
        "wires": [
            [
                "2ff24437b6c204db"
            ]
        ]
    },
    {
        "id": "201ace7033e4132b",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Disparo shutdown SCC",
        "func": "global.set(\"IO.Functions.DI['Disparo shutdown SCC']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 2460,
        "wires": [
            [
                "d4b501a8a9462e2e"
            ]
        ]
    },
    {
        "id": "da4c7a07f5b760bc",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Disparo baja presión en la troncal",
        "func": "global.set(\"IO.Functions.DI['Disparo baja presión en la troncal']\", msg.payload, 'memoryOnly');\n\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 2510,
        "wires": [
            [
                "4389731b102c742f"
            ]
        ]
    },
    {
        "id": "a2a2a85e.6d85f",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "Start",
        "func": "msg.payload = global.get(\"IO.Functions.DI['Start']\",'memoryOnly');\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 2600,
        "wires": [
            [
                "a08074ff.25fb48"
            ]
        ]
    },
    {
        "id": "b1aedb71852e9755",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "Stop",
        "func": "msg.payload = global.get(\"IO.Functions.DI['Stop']\",'memoryOnly');\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 2650,
        "wires": [
            [
                "ef425222.75e11"
            ]
        ]
    },
    {
        "id": "658c36cbd748534d",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "Reset",
        "func": "msg.payload = global.get(\"IO.Functions.DI['Reset']\",'memoryOnly');\nmsg.payload == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 2700,
        "wires": [
            [
                "ac563b4d.79d9b8"
            ]
        ]
    },
    {
        "id": "737d9189cedc73ed",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2600,
        "wires": [
            [
                "81f602598a6222c1"
            ]
        ]
    },
    {
        "id": "81f602598a6222c1",
        "type": "subflow:c8b77ff3.ab501",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "",
        "env": [],
        "x": 900,
        "y": 2600,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "079b06c4d753c468",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "Stop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Stop",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2650,
        "wires": [
            [
                "81f602598a6222c1"
            ]
        ]
    },
    {
        "id": "dc7c0e6833d4017c",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "f68d7eac.63fb98",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2700,
        "wires": [
            [
                "81f602598a6222c1"
            ]
        ]
    },
    {
        "id": "81384875bc1f5bd4",
        "type": "inject",
        "z": "7a89175c.90f6a8",
        "g": "2fa4e5be63ea61ce",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 140,
        "y": 3710,
        "wires": [
            [
                "3cca25dd292d56e4",
                "515bf075edacdc7f",
                "60644c9056ee8264",
                "eecf6f885f3529b9"
            ]
        ]
    },
    {
        "id": "3cca25dd292d56e4",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "2fa4e5be63ea61ce",
        "name": "CILA2S en marcha",
        "func": "var CILAFunction = (global.get(\"C2S.Drive_Status.Active\",'memoryOnly')||0)==1 ? true:false;\nCILAFunction == true ? node.status({ fill: \"green\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"red\", shape: \"dot\", text: \"FALSE\" });\nglobal.set(\"IO.Functions.DO['CILA2S en marcha']\",CILAFunction,'memoryOnly');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 3710,
        "wires": [
            []
        ]
    },
    {
        "id": "515bf075edacdc7f",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "2fa4e5be63ea61ce",
        "name": "Falla general",
        "func": "var Drive_fault = (global.get('C2S.Drive_Status.Fault', 'memoryOnly') || 0) == 0 ? false : true;\nvar DI = global.get(\"IO.Functions.DI\", 'memoryOnly');\nvar Prot = global.get('Protections.General', 'memoryOnly') || false;\n// Valor lógico para detección de algún disparo en aplicación\nvar Disparos = DIFunction('Stop ESD') ||\n    DIFunction('Disparo alto nivel de aceite SUT') ||\n    DIFunction('Disparo alta temperatura SUT') ||\n    DIFunction('Disparo bajo bajo nivel de aceite SUT') ||\n    DIFunction('Disparo válvula sobre-presión SUT') ||\n    DIFunction('Disparo alta temperatura filtros') ||\n    DIFunction('Disparo alta presión THP') ||\n    DIFunction('Disparo sobre-tensión SUT') ||\n    DIFunction('Disparo puerta abierta') ||\n    DIFunction('Disparo shutdown SCC') ||\n    DIFunction('Disparo baja presión en la troncal') ||\n    DIFunction('ESD Remoto') || false;\n\nvar FallaGral = Drive_fault || Disparos || Prot;\nif (FallaGral) {\n    global.set(\"IO.Functions.DO['Falla general']\", FallaGral, 'memoryOnly');\n}\nmsg.payload = FallaGral;\n\nFallaGral == true ? node.status({ fill: \"red\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"green\", shape: \"dot\", text: \"FALSE\" });\n\nreturn msg;\n\n/*\n @param {string | number} IOFunction\n*/\nfunction DIFunction(IOFunction) {\n    try { return DI[IOFunction]; }\n    catch (error) { return false; };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 3760,
        "wires": [
            []
        ],
        "inputLabels": [
            "Activar función"
        ]
    },
    {
        "id": "60644c9056ee8264",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "2fa4e5be63ea61ce",
        "name": "Filtro de armónicos",
        "func": "msg.payload = global.get(\"IO.Functions.DO.HF.Status\",'memoryOnly')||false;\nmsg.payload == true ? node.status({ fill: \"red\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"green\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 3810,
        "wires": [
            []
        ]
    },
    {
        "id": "eecf6f885f3529b9",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "2fa4e5be63ea61ce",
        "name": "Disparo breaker módulo ESD",
        "func": "var DIFunction = global.get(\"IO.Functions.DI\", 'memoryOnly') || false;\nvar DOFunction = global.get(\"IO.Functions.DO['Disparo breaker por protección']\", \"memoryOnly\") || false;\n\n// Valor lógico para detección de algún disparo en aplicación\nvar Disparo = DIFunction['Stop ESD'] ||\n    DIFunction['Disparo alto nivel de aceite SUT'] ||\n    DIFunction['Disparo alta temperatura SUT'] ||\n    DIFunction['Disparo bajo bajo nivel de aceite SUT'] ||\n    DIFunction['Disparo válvula sobre-presión SUT'] ||\n    DIFunction['Disparo alta temperatura filtros'] ||\n    DIFunction['Disparo alta presión THP'] ||\n    DIFunction['Disparo sobre-tensión SUT'] ||\n    DIFunction['Disparo puerta abierta'] ||\n    DIFunction['Disparo shutdown SCC'] ||\n    DIFunction['Disparo baja presión en la troncal'] ||\n    DIFunction['ESD Remoto'] ||\n    DOFunction;\n\nglobal.set(\"IO.Functions.DO['Disparo breaker módulo ESD']\", Disparo, 'memoryOnly');\nDisparo == true ? node.status({ fill: \"red\", shape: \"dot\", text: \"TRUE\" }) : node.status({ fill: \"green\", shape: \"dot\", text: \"FALSE\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 3860,
        "wires": [
            []
        ],
        "inputLabels": [
            "Activar función"
        ]
    },
    {
        "id": "5304b7de65486472",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Canal23",
        "rules": [
            {
                "t": "set",
                "p": "ES.ED.Canal23.Tipo",
                "pt": "flow",
                "to": "payload.TipoInstrumento",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ES.ED.Canal23.Funcion",
                "pt": "flow",
                "to": "payload.Funcion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1310,
        "wires": [
            []
        ]
    },
    {
        "id": "1617c9c527c7d680",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Entradas Analógicas",
        "func": "msg.topic = 'Entradas Analogicas';\nmsg.payload = { \n    value: msg.payload, \n    'fc': 4, \n    'unitid': 1, \n    'address': 10, \n    'quantity':8   \n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 3710,
        "wires": [
            [
                "61280c95aee7b192"
            ]
        ]
    },
    {
        "id": "1052252d2e7f47ab",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Entradas Digitales",
        "func": "msg.topic = 'Entradas Digitales';\nmsg.payload = { \n    value: msg.payload, \n    'fc': 2, \n    'unitid': 1, \n    'address': 8, \n    'quantity':20   \n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 3750,
        "wires": [
            [
                "61280c95aee7b192"
            ]
        ]
    },
    {
        "id": "2cd6cbf135d592bb",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Salidas Digitales",
        "func": "msg.topic = 'Salidas Digitales';\nmsg.payload = { \n    value: msg.payload, \n    'fc': 2, \n    'unitid': 1, \n    'address': 32, \n    'quantity':12   \n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 3790,
        "wires": [
            [
                "61280c95aee7b192"
            ]
        ]
    },
    {
        "id": "61280c95aee7b192",
        "type": "modbus-flex-getter",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Leer Cubloc RS-232",
        "showStatusActivities": true,
        "showErrors": false,
        "logIOActivities": false,
        "server": "f630cb55.8d18e8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 1270,
        "y": 3710,
        "wires": [
            [],
            [
                "99a274a00b57e276",
                "7a595adbeef4154f"
            ]
        ]
    },
    {
        "id": "99a274a00b57e276",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Interpretar lectura CUBLOC",
        "func": "if(msg.topic == 'Salidas Digitales'){\n    msg.payload ={\n        \"32\" : msg.payload.data[0],\n        \"33\" : msg.payload.data[1],\n        \"34\" : msg.payload.data[2],\n        \"35\" : msg.payload.data[3],\n        \"36\" : msg.payload.data[4],\n        \"37\" : msg.payload.data[5],\n        \"38\" : msg.payload.data[6],\n        \"39\" : msg.payload.data[7],\n        \"40\" : msg.payload.data[8],\n        \"41\" : msg.payload.data[9],\n        \"42\" : msg.payload.data[10],\n        \"43\" : msg.payload.data[11]\n    }\n    global.set('IO.DO', msg.payload, 'memoryOnly');\n}\nelse if(msg.topic == 'Entradas Digitales'){\n    msg.payload = {\n        \"8\"  : msg.payload.data[0],\n        \"9\"  : msg.payload.data[1],\n        \"10\" : msg.payload.data[2],\n        \"11\" : msg.payload.data[3],\n        \"12\" : msg.payload.data[4],\n        \"13\" : msg.payload.data[5],\n        \"14\" : msg.payload.data[6],\n        \"15\" : msg.payload.data[7],\n        \"16\" : msg.payload.data[8],\n        \"17\" : msg.payload.data[9],\n        \"18\" : msg.payload.data[10],\n        \"19\" : msg.payload.data[11],\n        \"20\" : msg.payload.data[12],\n        \"21\" : msg.payload.data[13],\n        \"22\" : msg.payload.data[14],\n        \"23\" : msg.payload.data[15],\n        \"24\" : msg.payload.data[16],\n        \"25\" : msg.payload.data[17],\n        \"26\" : msg.payload.data[18],\n        \"27\" : msg.payload.data[19]\n    }\n    global.set('IO.DI', msg.payload, 'memoryOnly');\n}\nelse if(msg.topic == \"Entradas Analogicas\"){\n    msg.payload ={\n        \"0\" : msg.payload.data[0],\n        \"1\" : msg.payload.data[1],\n        \"2\" : msg.payload.data[2],\n        \"3\" : msg.payload.data[3],\n        \"4\" : msg.payload.data[4],\n        \"5\" : msg.payload.data[5],\n        \"6\" : msg.payload.data[6],\n        \"7\" : msg.payload.data[7]\n    }\n    global.set('IO.AI', msg.payload, 'memoryOnly');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1510,
        "y": 3710,
        "wires": [
            []
        ]
    },
    {
        "id": "ef74065d019aa081",
        "type": "catch",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Errores lectura Cubloc",
        "scope": [
            "61280c95aee7b192"
        ],
        "uncaught": false,
        "x": 1270,
        "y": 3760,
        "wires": [
            []
        ]
    },
    {
        "id": "4f1250843d4fc966",
        "type": "debug",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 4060,
        "wires": []
    },
    {
        "id": "38cc0bef813f4de7",
        "type": "catch",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Erroes escritura Cubloc",
        "scope": [
            "26144798845bf323",
            "23fa42dfe2b133da"
        ],
        "uncaught": false,
        "x": 1420,
        "y": 4060,
        "wires": [
            [
                "4f1250843d4fc966"
            ]
        ]
    },
    {
        "id": "26144798845bf323",
        "type": "modbus-flex-write",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Escribir Cubloc-RS-232",
        "showStatusActivities": true,
        "showErrors": false,
        "server": "f630cb55.8d18e8",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 1500,
        "y": 3810,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "94ed97e6d2f75d45",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 3710,
        "wires": [
            [
                "1617c9c527c7d680",
                "ee2f3e9df0f329c5"
            ]
        ]
    },
    {
        "id": "ee2f3e9df0f329c5",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 3750,
        "wires": [
            [
                "1052252d2e7f47ab",
                "a8b5fbf8701e60ae"
            ]
        ]
    },
    {
        "id": "a8b5fbf8701e60ae",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 3790,
        "wires": [
            [
                "2cd6cbf135d592bb",
                "fc0377f144e8f895"
            ]
        ]
    },
    {
        "id": "fc0377f144e8f895",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 3830,
        "wires": [
            [
                "19bb32e54a08128b",
                "eecb7d8c6fa2c337"
            ]
        ]
    },
    {
        "id": "19bb32e54a08128b",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Retardo Escritura SD",
        "func": "var Counter = context.get(\"count\",\"memoryOnly\")||0;\nif(Counter <= 5){\n    Counter += 1;\n    context.set(\"count\",Counter,\"memoryOnly\");\n    return;\n}\nelse{\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 3830,
        "wires": [
            [
                "23fa42dfe2b133da"
            ]
        ]
    },
    {
        "id": "23fa42dfe2b133da",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Salidas Digitales",
        "func": "var ES = flow.get('ES') || null;\n\n// Arreglo de Canales\nvar Data    = { \n    32:false, 33:false, 34:false, 35:false, \n    36:false, 37:false, 38:false, 39:false, \n    40:false, 41:false, 42:false, 43:false\n};\n\n// Obtener llaves del objeto Data\nvar Canal = Object.keys(Data);\n// Declaración del string con \nvar canalmsg;\n\n//Objeto con las funciones del CILA2S\nvar FuncionC2S = {\n    \"CILA2S en marcha\"          : global.get(\"IO.Functions.DO['CILA2S en marcha']\",'memoryOnly')||false,\n    \"Falla general\"             : global.get(\"IO.Functions.DO['Falla general']\",'memoryOnly') || false,\n    \"Disparo breaker módulo ESD\": global.get(\"IO.Functions.DO['Disparo breaker módulo ESD']\", 'memoryOnly') || false,\n    \"Bypass filtro de armónicos\": global.get(\"IO.Functions.DO.HF.Status\",'memoryOnly')||false,\n    \"Simulación\"                : false\n}\n\n// Llaves del vector FuncionesC2S\nvar Keys = Object.keys(FuncionC2S);\n\n// Para cada canal de salida\nfor(var i=0; i <Canal.length; i++){\n    canalmsg ='Canal'+ Canal[i];\n    // Si la configuración del canal está declarada\n    if(typeof ES.SD[canalmsg] != 'undefined'){\n        // Para cada llave del vector FuncionesC2S que coincida con la configuración del canal\n        for(var j=0; j<Keys.length; j++){\n            if(ES.SD[canalmsg].Funcion == Keys[j]){\n                // Asignar el valor contenido en el vector de funciones al canal de salida\n                Data[Canal[i]] = ES.SD[canalmsg].Tipo == \"NO\" ? FuncionC2S[Keys[j]]:!FuncionC2S[Keys[j]];\n            } \n        }\n    }\n}\n\n// Asignar variable con los valores a escribir  (Se puede eliminar al asignar directamente).\nvar values = Object.values(Data);\ncontext.set(\"Data\", values,'memoryOnly');\ncontext.set(\"Functions\", FuncionC2S, 'memoryOnly');\n// Escribir datos en el Cubloc\nmsg.payload = {\n    value: values,\n    'fc': 15,\n    'unitid': 1,\n    'address': 4096,\n    'quantity': 12\n}\n\n// Retorno del mensaje\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1250,
        "y": 3810,
        "wires": [
            [
                "26144798845bf323"
            ]
        ],
        "inputLabels": [
            "Activar función"
        ],
        "outputLabels": [
            "Canal32"
        ]
    },
    {
        "id": "ec420b972b84d6ae",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 1560,
        "wires": [
            [
                "f441ed5865c99c7f"
            ]
        ]
    },
    {
        "id": "f441ed5865c99c7f",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 1560,
        "wires": [
            [
                "4f0b55e892bfb4a3"
            ]
        ]
    },
    {
        "id": "4f0b55e892bfb4a3",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Arranque remoto (entrada digital)\";\nmsg.topic = \"Entrada digital\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 1560,
        "wires": [
            [
                "bf08332fad815da4"
            ]
        ]
    },
    {
        "id": "f23e7677d613999c",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 1610,
        "wires": [
            [
                "b2ee82111ec548a3"
            ]
        ]
    },
    {
        "id": "b2ee82111ec548a3",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 1610,
        "wires": [
            [
                "d7a21b76ea69a930"
            ]
        ]
    },
    {
        "id": "d7a21b76ea69a930",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Parada remota (entrada digital)\";\nmsg.topic = \"Entrada digital\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 1610,
        "wires": [
            [
                "b8f6d05216308f2f"
            ]
        ]
    },
    {
        "id": "6a842bb4461218eb",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 1660,
        "wires": [
            [
                "189c95398ca4a74d"
            ]
        ]
    },
    {
        "id": "189c95398ca4a74d",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 1660,
        "wires": [
            [
                "2dcd110a422850fa"
            ]
        ]
    },
    {
        "id": "2dcd110a422850fa",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Reset remoto (entrada digital)\";\nmsg.topic = \"Entrada digital\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 1660,
        "wires": [
            [
                "5b523df343832e42"
            ]
        ]
    },
    {
        "id": "b82e31a7ba4b9493",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 1710,
        "wires": [
            [
                "46fe667e3d90053a"
            ]
        ]
    },
    {
        "id": "46fe667e3d90053a",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 1710,
        "wires": [
            [
                "3643e1d2b5d5f9fa"
            ]
        ]
    },
    {
        "id": "3643e1d2b5d5f9fa",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Parada ESD\";\nmsg.topic = \"Stop\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 1710,
        "wires": [
            [
                "7c549260263926de"
            ]
        ]
    },
    {
        "id": "f0c4e1c284d417e4",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 1760,
        "wires": [
            [
                "04e938b98f177269"
            ]
        ]
    },
    {
        "id": "04e938b98f177269",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 1760,
        "wires": [
            [
                "5b71991a6e96505e"
            ]
        ]
    },
    {
        "id": "5b71991a6e96505e",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Disparo alto nivel de aceite SUT\";\nmsg.topic =\"SUT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 1760,
        "wires": [
            [
                "a6537492cee742bb"
            ]
        ]
    },
    {
        "id": "e3ef249e78603d8f",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 1810,
        "wires": [
            [
                "d8c71c648cf1f608"
            ]
        ]
    },
    {
        "id": "d8c71c648cf1f608",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 1810,
        "wires": [
            [
                "b99e04abad6045ae"
            ]
        ]
    },
    {
        "id": "b99e04abad6045ae",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Disparo alta temperatura SUT\";\nmsg.topic = \"SUT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 1810,
        "wires": [
            [
                "5de1f62eeac3700c"
            ]
        ]
    },
    {
        "id": "19aea13c856153f6",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 1860,
        "wires": [
            [
                "5ab703c3e911fc3e"
            ]
        ]
    },
    {
        "id": "5ab703c3e911fc3e",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 1860,
        "wires": [
            [
                "edb17caf37c08ee9"
            ]
        ]
    },
    {
        "id": "edb17caf37c08ee9",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload =\"Alarma alta temperatura SUT\";\nmsg.topic = \"SUT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 1860,
        "wires": [
            [
                "0136783bb78db2e2"
            ]
        ]
    },
    {
        "id": "75922f11ac8749fb",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 1910,
        "wires": [
            [
                "3161bcdbdf37be16"
            ]
        ]
    },
    {
        "id": "3161bcdbdf37be16",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 1910,
        "wires": [
            [
                "e6c20f948495f302"
            ]
        ]
    },
    {
        "id": "e6c20f948495f302",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Alarma bajo nivel de aceite SUT\";\nmsg.topic = \"SUT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 1910,
        "wires": [
            [
                "6d0c3c367c64344a"
            ]
        ]
    },
    {
        "id": "3fc079948c7f2493",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 1960,
        "wires": [
            [
                "1e344070d99d23c3"
            ]
        ]
    },
    {
        "id": "1e344070d99d23c3",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 1960,
        "wires": [
            [
                "40c06d2a5432c88f"
            ]
        ]
    },
    {
        "id": "40c06d2a5432c88f",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Disparo bajo bajo nivel de aceite SUT\";\nmsg.topic = \"SUT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 1960,
        "wires": [
            [
                "ea0a3cc6e4d6537a"
            ]
        ]
    },
    {
        "id": "a682a86850214d5f",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2010,
        "wires": [
            [
                "c6a423374d97a37e"
            ]
        ]
    },
    {
        "id": "c6a423374d97a37e",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2010,
        "wires": [
            [
                "51b02f5772ae79a5"
            ]
        ]
    },
    {
        "id": "51b02f5772ae79a5",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Disparo válvula sobre-presión SUT\";\nmsg.topic = \"SUT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2010,
        "wires": [
            [
                "33cf5bad91b4412f"
            ]
        ]
    },
    {
        "id": "42cae9fbf107f110",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2060,
        "wires": [
            [
                "0220f9cd260d0dcd"
            ]
        ]
    },
    {
        "id": "0220f9cd260d0dcd",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2060,
        "wires": [
            [
                "7250a8f6b3cf4176"
            ]
        ]
    },
    {
        "id": "7250a8f6b3cf4176",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Alarma DPS\";\nmsg.topic = \"DPS\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2060,
        "wires": [
            [
                "86f805b5cb28bb05"
            ]
        ]
    },
    {
        "id": "307b5601f51c9d31",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2110,
        "wires": [
            [
                "ecec3b9850b6eabb"
            ]
        ]
    },
    {
        "id": "ecec3b9850b6eabb",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2110,
        "wires": [
            [
                "563c0a8a176cfc41"
            ]
        ]
    },
    {
        "id": "563c0a8a176cfc41",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Disparo alta temperatura filtros\";\nmsg.topic = \"Filtros\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2110,
        "wires": [
            [
                "bd92a3ae5f6e2f10"
            ]
        ]
    },
    {
        "id": "fdb7ccf7f3ebf53e",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2160,
        "wires": [
            [
                "ca3af6e1d9ee34fc"
            ]
        ]
    },
    {
        "id": "ca3af6e1d9ee34fc",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2160,
        "wires": [
            [
                "6433e4e81cbe5966"
            ]
        ]
    },
    {
        "id": "6433e4e81cbe5966",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Disparo alta presión THP\";\nmsg.topic = \"Instrumentación\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2160,
        "wires": [
            [
                "2aa31c125e8aa8f1"
            ]
        ]
    },
    {
        "id": "dc85213a17dc9013",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2210,
        "wires": [
            [
                "a90a4c26744febb0"
            ]
        ]
    },
    {
        "id": "a90a4c26744febb0",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2210,
        "wires": [
            [
                "91e8a1a7b161d82c"
            ]
        ]
    },
    {
        "id": "91e8a1a7b161d82c",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Disparo sobre-tensión SUT\";\nmsg.topic = \"SUT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2210,
        "wires": [
            [
                "9b11a2d4e3432956"
            ]
        ]
    },
    {
        "id": "ab3e62c25ddbc9c1",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2260,
        "wires": [
            [
                "0ad35375797d0a52"
            ]
        ]
    },
    {
        "id": "0ad35375797d0a52",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2260,
        "wires": [
            [
                "018dcb63fda2f0d3"
            ]
        ]
    },
    {
        "id": "018dcb63fda2f0d3",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"ESD Remoto (entrada digital)\";\nmsg.topic = \"Entrada digital\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2260,
        "wires": [
            [
                "ea1cf5c958c8fbd1"
            ]
        ]
    },
    {
        "id": "6fed0052fdfbe6ae",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2310,
        "wires": [
            [
                "58b360b864d7d87f"
            ]
        ]
    },
    {
        "id": "58b360b864d7d87f",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2310,
        "wires": [
            [
                "d84a785289e598cd"
            ]
        ]
    },
    {
        "id": "d84a785289e598cd",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Disparo puerta abierta\";\nmsg.topic = \"Seguridad\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2310,
        "wires": [
            [
                "ae81aa320575e993"
            ]
        ]
    },
    {
        "id": "6133d498b94e40b8",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2360,
        "wires": [
            [
                "c3df5a6a531467c2"
            ]
        ]
    },
    {
        "id": "c3df5a6a531467c2",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2360,
        "wires": [
            [
                "9a42b3bc50c233d0"
            ]
        ]
    },
    {
        "id": "9a42b3bc50c233d0",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Protección térmica de motor\";\nmsg.topic = \"Instrumentación\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2360,
        "wires": [
            [
                "de596228ce0351bb"
            ]
        ]
    },
    {
        "id": "2ff24437b6c204db",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2410,
        "wires": [
            [
                "17a07b9ae7a7861b"
            ]
        ]
    },
    {
        "id": "17a07b9ae7a7861b",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2410,
        "wires": [
            [
                "b5d771a24eb13652"
            ]
        ]
    },
    {
        "id": "b5d771a24eb13652",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Monitoreo\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2410,
        "wires": [
            []
        ]
    },
    {
        "id": "d4b501a8a9462e2e",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2460,
        "wires": [
            [
                "ab0eb95721c4a38c"
            ]
        ]
    },
    {
        "id": "ab0eb95721c4a38c",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2460,
        "wires": [
            [
                "b7e8c0e0211714a7"
            ]
        ]
    },
    {
        "id": "b7e8c0e0211714a7",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Disparo shutdown SCC\";\nmsg.topic = \"SCC\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2460,
        "wires": [
            [
                "fce9ca29ea26c2ca"
            ]
        ]
    },
    {
        "id": "4389731b102c742f",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1380,
        "y": 2510,
        "wires": [
            [
                "eb879b75e4a754f9"
            ]
        ]
    },
    {
        "id": "eb879b75e4a754f9",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "True",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 2510,
        "wires": [
            [
                "b142564394135d0f"
            ]
        ]
    },
    {
        "id": "b142564394135d0f",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "Evento",
        "func": "msg.payload = \"Disparo baja presión en la troncal\";\nmsg.topic = \"Protección de cluster\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 2510,
        "wires": [
            [
                "7c2016e7007063f4"
            ]
        ]
    },
    {
        "id": "b8f6d05216308f2f",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 1705,
        "y": 1610,
        "wires": []
    },
    {
        "id": "5b523df343832e42",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 1705,
        "y": 1660,
        "wires": []
    },
    {
        "id": "7c549260263926de",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 1710,
        "wires": []
    },
    {
        "id": "a6537492cee742bb",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 1760,
        "wires": []
    },
    {
        "id": "5de1f62eeac3700c",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 1810,
        "wires": []
    },
    {
        "id": "0136783bb78db2e2",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "52f1e35a6b450a62",
            "8eacc47.e177438"
        ],
        "x": 1705,
        "y": 1860,
        "wires": []
    },
    {
        "id": "6d0c3c367c64344a",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "52f1e35a6b450a62",
            "8eacc47.e177438"
        ],
        "x": 1705,
        "y": 1910,
        "wires": []
    },
    {
        "id": "ea0a3cc6e4d6537a",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 1960,
        "wires": []
    },
    {
        "id": "33cf5bad91b4412f",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 2010,
        "wires": []
    },
    {
        "id": "86f805b5cb28bb05",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "52f1e35a6b450a62",
            "8eacc47.e177438"
        ],
        "x": 1705,
        "y": 2060,
        "wires": []
    },
    {
        "id": "bd92a3ae5f6e2f10",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 2110,
        "wires": []
    },
    {
        "id": "2aa31c125e8aa8f1",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 2160,
        "wires": []
    },
    {
        "id": "9b11a2d4e3432956",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 2210,
        "wires": []
    },
    {
        "id": "ea1cf5c958c8fbd1",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 2260,
        "wires": []
    },
    {
        "id": "ae81aa320575e993",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 2310,
        "wires": []
    },
    {
        "id": "de596228ce0351bb",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 2360,
        "wires": []
    },
    {
        "id": "fce9ca29ea26c2ca",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 2460,
        "wires": []
    },
    {
        "id": "7c2016e7007063f4",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 2510,
        "wires": []
    },
    {
        "id": "bf08332fad815da4",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "49c39e.d1336c64",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 1705,
        "y": 1560,
        "wires": []
    },
    {
        "id": "47eecc9b022b2242",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 540,
        "wires": [
            [
                "a5c1b515.63bb98"
            ]
        ]
    },
    {
        "id": "d35710bff3d93d90",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 135,
        "y": 120,
        "wires": [
            [
                "dc8a4a15e9607f5b"
            ]
        ]
    },
    {
        "id": "dc8a4a15e9607f5b",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 120,
        "wires": [
            [
                "2163239b.5a9bbc",
                "e5c3bbc0.8b2998",
                "e89aec53.9b1b1",
                "4690fd613d3bc91f",
                "8f7c11af44102a99",
                "636c56ef9f5b9334"
            ]
        ]
    },
    {
        "id": "4690fd613d3bc91f",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "MaxLimit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.MaxLimit",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "7b0522e.ed903dc"
            ]
        ]
    },
    {
        "id": "84e1276ea446d2d0",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 700,
        "wires": [
            [
                "a90890e0.f21c8",
                "ed08c0de.3ee1e",
                "e89df25d.18cdc",
                "9355594d.0b5af8",
                "fa5d0b5d.173c98",
                "657a5d37.6d07c4",
                "f7f5dc17.aa232"
            ]
        ]
    },
    {
        "id": "dc19234d7f6c1436",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 135,
        "y": 700,
        "wires": [
            [
                "84e1276ea446d2d0"
            ]
        ]
    },
    {
        "id": "a763d7bfcda17def",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 220,
        "y": 1500,
        "wires": [
            [
                "c1afba0d.22f5d8",
                "64263ab2.3a9e04",
                "370e9542.6d045a",
                "b732c4f9.4ad3d8"
            ]
        ]
    },
    {
        "id": "dd0739fd9e6348e6",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 125,
        "y": 1500,
        "wires": [
            [
                "a763d7bfcda17def"
            ]
        ]
    },
    {
        "id": "960f99a442c984a1",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1810,
        "y": 260,
        "wires": [
            [
                "f14f9c67.b050f",
                "782cd3d9bdeb2c48",
                "607ddb92b1c4b838",
                "fdde2c2ca8e4de95",
                "1fb6db03.b00575",
                "8e1478d3.1bbd28",
                "ba948f27.d0eb6",
                "1b750968.faca77",
                "e4edf7a1.385598",
                "cb0406fe.9aeec8",
                "ce3075a3.4468d8",
                "d9b1483f.eb0558"
            ]
        ]
    },
    {
        "id": "014e809185179741",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "4a1410ce.7057a",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 1825,
        "y": 300,
        "wires": [
            [
                "960f99a442c984a1"
            ]
        ]
    },
    {
        "id": "6be34fa62c3a9d3c",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1830,
        "y": 1250,
        "wires": [
            [
                "1a32f855.c2c028",
                "e3905f2d.c95a2",
                "c0a46c61.dc42",
                "1ed192c3.bfc6ad",
                "1a19e82d.8f39f8",
                "ba617df3.9e4f1",
                "a46247f8.6b5118",
                "6b5988d9.5e0e88",
                "40b0ee2.96d1d1",
                "a13e706.ccdb19"
            ]
        ]
    },
    {
        "id": "3157c937b070fc59",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "16097ef1.129291",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 1845,
        "y": 1290,
        "wires": [
            [
                "6be34fa62c3a9d3c"
            ]
        ]
    },
    {
        "id": "19814956e3c6bf4f",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1880,
        "y": 1760,
        "wires": [
            [
                "3c732144.06b13e",
                "c6f7e0c2.65693",
                "74e18be.f141b74",
                "73609231970905b6"
            ]
        ]
    },
    {
        "id": "68f55546e9d05ca2",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 1785,
        "y": 1760,
        "wires": [
            [
                "19814956e3c6bf4f"
            ]
        ]
    },
    {
        "id": "b6e11c32b8331dcb",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1830,
        "y": 2030,
        "wires": [
            [
                "45d0fb82.ffcd44",
                "133ae82a.b6a158",
                "9ae2d969.d5dba8",
                "c2687871.db7ae8"
            ]
        ]
    },
    {
        "id": "9a4e1f31c48da3ad",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "de31a457.a923c8",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 1835,
        "y": 2070,
        "wires": [
            [
                "b6e11c32b8331dcb"
            ]
        ]
    },
    {
        "id": "568bca570ecc01fd",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1830,
        "y": 2300,
        "wires": [
            [
                "2f0cd90c.938d76",
                "f33acc87.bb25e",
                "45410815.f7dda8",
                "def7c04e.c8b96",
                "51483786.1c2ad8",
                "39c3c44b.cc30dc",
                "d949483f.6f4b18"
            ]
        ]
    },
    {
        "id": "c982f81bb2232785",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "372b998e.a167c6",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 1835,
        "y": 2340,
        "wires": [
            [
                "568bca570ecc01fd"
            ]
        ]
    },
    {
        "id": "c0305bdc.676a28",
        "type": "finite-state-machine",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart",
        "fsmDefinition": "{\"state\":{\"status\":\"E0\"},\"transitions\":{\"E0\":{\"RA_ON\":\"E1\",\"RA_OFF\":\"E0\"},\"E1\":{\"Clear Failure\":\"E2\",\"Error\":\"E1\"},\"E2\":{\"Attempt in Range\":\"E3\",\"End of Attempts\":\"E4\",\"reset\":\"E1\"},\"E3\":{\"Restart Time elapsed\":\"E5\",\"reset\":\"E1\"},\"E4\":{\"Automatic Restart, Status Updated\":\"E1\",\"reset\":\"E1\"},\"E5\":{\"Reset executed\":\"E6\",\"Error\":\"E5\",\"reset\":\"E1\"},\"E6\":{\"Start executed\":\"E7\",\"Error\":\"E6\",\"Start failed\":\"E2\",\"reset\":\"E1\"},\"E7\":{\"Restored Accel\":\"E1\",\"Error or Busy\":\"E7\",\"reset\":\"E1\"}}}",
        "sendInitialState": false,
        "sendStateWithoutChange": false,
        "showTransitionErrors": false,
        "x": 1020,
        "y": 480,
        "wires": [
            [
                "d02f5d5ee0c770af"
            ]
        ]
    },
    {
        "id": "3781fe66.587af2",
        "type": "inject",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reset",
        "x": 620,
        "y": 400,
        "wires": [
            [
                "c0305bdc.676a28"
            ]
        ]
    },
    {
        "id": "2e7249b4.58bd66",
        "type": "function",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "E2",
        "func": "// Definitions\nvar AR = global.get(\"Control_functions.Automatic_Restart\")||0;\nvar Current_Attempt = AR.Attempts.Current_Attempt||0;\n\nCurrent_Attempt++;\nAR.Attempts.Current_Attempt = Current_Attempt;\nglobal.set(\"Control_functions.Automatic_Restart\",AR);\n\n// Transitions\nif( Current_Attempt <= AR.Attempts.Max ){\n    msg.topic = \"Attempt in Range\";\n}\nelse{\n    msg.topic = \"End of Attempts\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 710,
        "wires": [
            [
                "c325ce5a.11ef9"
            ]
        ]
    },
    {
        "id": "32c8b0ee.45f27",
        "type": "function",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "E3",
        "func": "// Definitions\nvar AR              = global.get(\"Control_functions.Automatic_Restart\")||null;\nvar Attempt         = AR.Attempts.Current_Attempt || 0;\nvar max_index       = 0;\n\nvar Attempt_Array   = [ AR.Ramps.Accel1, AR.Ramps.Accel2, AR.Ramps.Accel3, AR.Ramps.Accel4 ];\nvar Restart_Array   = [ AR.Restart.Time1*60000, AR.Restart.Time2*60000, AR.Restart.Time3*60000, AR.Restart.Time4*60000];\n\nif(AR.Ramps.Enable_Accel4     === true){    max_index = 3; }\nelse if(AR.Ramps.Enable_Accel3 === true){   max_index = 2; }\nelse if(AR.Ramps.Enable_Accel2 === true){   max_index = 1; }\nelse if(AR.Ramps.Enable_Accel1 === true){   max_index = 0; }\n\n// Code Excecution\nif(Attempt - 1 <= max_index ){  msg.payload = Attempt_Array[Attempt - 1]; \n                                msg.delay   = Restart_Array[Attempt - 1];\n}\nelse{                           msg.payload = Attempt_Array[max_index];\n                                msg.delay   = Restart_Array[max_index];\n}\n// Transition\nmsg.topic = \"Restart Time elapsed\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 780,
        "wires": [
            [
                "383d0d61.1e6de2",
                "67301b2be25911c7"
            ]
        ]
    },
    {
        "id": "66ec00f0.b69ff",
        "type": "function",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "E4",
        "func": "// Definitions\nvar AR = global.get(\"Control_functions.Automatic_Restart\");\nAR.Attempts.Current_Attempt = AR.Attempts.Max;\nmsg.payload = \"Límite de intentos alcanzado!\";\n// Transition\nmsg.topic = \"Arranque automático bloqueado\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 820,
        "wires": [
            [
                "60c61f62.f5c34",
                "8aebe900.f1cdd8",
                "736d904a50210d65"
            ]
        ]
    },
    {
        "id": "383d0d61.1e6de2",
        "type": "delay",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Restart Time",
        "pauseType": "delayv",
        "timeout": "60",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 720,
        "y": 780,
        "wires": [
            [
                "12c8fd79.9681e3",
                "5237e183.b1e0e"
            ]
        ]
    },
    {
        "id": "14c9d205.a3aa7e",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart Update State",
        "links": [
            "12c8fd79.9681e3",
            "1ef779a27f308aef",
            "364f96f4.f46f0a",
            "4e19cfd4.3982f",
            "587d6709.b2cc68",
            "60c61f62.f5c34",
            "7c8924eb.60c91c",
            "8276f23c.bfc3f",
            "c325ce5a.11ef9",
            "657899f8855b37c6",
            "a8d50b9f6b5726b4",
            "caab4c9366a6a718",
            "04f012cc78946963"
        ],
        "x": 725,
        "y": 440,
        "wires": [
            [
                "c0305bdc.676a28"
            ]
        ]
    },
    {
        "id": "40db7d54.6eda64",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart State Input",
        "links": [
            "853cd9a2.d77cf8"
        ],
        "x": 255,
        "y": 780,
        "wires": [
            [
                "e603fb56.c7b328"
            ]
        ]
    },
    {
        "id": "853cd9a2.d77cf8",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart New State",
        "links": [
            "40db7d54.6eda64"
        ],
        "x": 1355,
        "y": 480,
        "wires": []
    },
    {
        "id": "e603fb56.c7b328",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "E0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 340,
        "y": 780,
        "wires": [
            [
                "58e6dd7.174e024"
            ],
            [
                "2e7249b4.58bd66",
                "d44ef6369dfdda4b"
            ],
            [
                "32c8b0ee.45f27"
            ],
            [
                "66ec00f0.b69ff"
            ],
            [
                "d9b3e61d145ba55d"
            ],
            [
                "37db10ec.6a6f7"
            ],
            [
                "faf07e5a91b1eecf",
                "3c3c201f.7b4db"
            ]
        ]
    },
    {
        "id": "7a545a2b.6f6b74",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "E1",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "RA_ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 590,
        "wires": [
            [
                "8276f23c.bfc3f"
            ]
        ]
    },
    {
        "id": "8276f23c.bfc3f",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart E0",
        "links": [
            "14c9d205.a3aa7e"
        ],
        "x": 815,
        "y": 590,
        "wires": []
    },
    {
        "id": "6db9c12b.c8705",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "E2",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Clear Failure",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 480,
        "wires": [
            [
                "c0305bdc.676a28"
            ]
        ]
    },
    {
        "id": "c325ce5a.11ef9",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart E2",
        "links": [
            "14c9d205.a3aa7e",
            "679d1a7bed80c240"
        ],
        "x": 785,
        "y": 710,
        "wires": []
    },
    {
        "id": "12c8fd79.9681e3",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart E3",
        "links": [
            "14c9d205.a3aa7e",
            "1be77946.3d6847",
            "bc0c7c1c.40245"
        ],
        "x": 845,
        "y": 720,
        "wires": []
    },
    {
        "id": "60c61f62.f5c34",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart E4",
        "links": [
            "14c9d205.a3aa7e"
        ],
        "x": 795,
        "y": 820,
        "wires": []
    },
    {
        "id": "cb35c95f.b22ce8",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Reset executed",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Reset executed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 900,
        "wires": [
            [
                "364f96f4.f46f0a",
                "0cdce45fc079816d"
            ]
        ]
    },
    {
        "id": "364f96f4.f46f0a",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart E5",
        "links": [
            "14c9d205.a3aa7e"
        ],
        "x": 1055,
        "y": 900,
        "wires": []
    },
    {
        "id": "a6252416.b477e8",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Start executed",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Start executed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 880,
        "wires": [
            [
                "587d6709.b2cc68"
            ]
        ]
    },
    {
        "id": "587d6709.b2cc68",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart E6",
        "links": [
            "14c9d205.a3aa7e"
        ],
        "x": 1765,
        "y": 880,
        "wires": []
    },
    {
        "id": "1efee279.9d3c5e",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Accel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.Accel",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1038,
        "wires": [
            [
                "ee2f7708.642508"
            ]
        ]
    },
    {
        "id": "24b7cec5.441a12",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1170,
        "y": 1038,
        "wires": [
            [
                "9beed943.b3e2c8"
            ],
            [
                "9209505b.0e275"
            ]
        ]
    },
    {
        "id": "9beed943.b3e2c8",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Restored Accel",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Restored Accel",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1038,
        "wires": [
            [
                "7c8924eb.60c91c",
                "19f7e764da2b7e6d"
            ]
        ]
    },
    {
        "id": "9209505b.0e275",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Error",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error or Busy",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1088,
        "wires": [
            [
                "7c8924eb.60c91c"
            ]
        ]
    },
    {
        "id": "7c8924eb.60c91c",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart E7",
        "links": [
            "14c9d205.a3aa7e"
        ],
        "x": 1465,
        "y": 1088,
        "wires": []
    },
    {
        "id": "58e6dd7.174e024",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Enable True",
        "property": "Control_functions.Automatic_Restart.Enable",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 580,
        "y": 610,
        "wires": [
            [
                "7a545a2b.6f6b74"
            ],
            [
                "ff0d6d6.216379"
            ]
        ]
    },
    {
        "id": "36e990a0.a6e0b",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Accel Done?",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Accel",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 720,
        "y": 1078,
        "wires": [
            [
                "1efee279.9d3c5e"
            ],
            [
                "9209505b.0e275"
            ]
        ]
    },
    {
        "id": "3c3c201f.7b4db",
        "type": "delay",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 570,
        "y": 1078,
        "wires": [
            [
                "36e990a0.a6e0b"
            ]
        ]
    },
    {
        "id": "8aebe900.f1cdd8",
        "type": "ui_toast",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "position": "top right",
        "displayTime": "10",
        "highlight": "orange",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 720,
        "y": 860,
        "wires": []
    },
    {
        "id": "ff0d6d6.216379",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "E0",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Attempts.Current_Attempt",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "RA_OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 630,
        "wires": [
            [
                "8276f23c.bfc3f"
            ]
        ]
    },
    {
        "id": "14170dd0.bdfb02",
        "type": "function",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Start & Falla Gral",
        "func": "var Start_Stop  = global.get(\"C2S.FlagStatus\");\nvar FallaGral = global.get(\"IO.Functions.DO['Falla general']\",\"memoryOnly\");\n\nif(Start_Stop){\n    node.status({fill:\"green\",shape:\"dot\",text:\"Started\"});\n    return msg;\n}\nelse{\n    node.status({fill:\"yellow\",shape:\"dot\",text:\"Stoped\"});\n    return;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 480,
        "wires": [
            [
                "6db9c12b.c8705"
            ]
        ]
    },
    {
        "id": "46402130.f1178",
        "type": "complete",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "scope": [
            "32c8b0ee.45f27"
        ],
        "uncaught": false,
        "x": 910,
        "y": 590,
        "wires": [
            [
                "98d021b5.4ab52",
                "1f7639cd6cd873fe",
                "10c25391a80303f1"
            ]
        ]
    },
    {
        "id": "ee2f7708.642508",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Accel Time",
        "env": [
            {
                "name": "Parameter",
                "value": "42875",
                "type": "num"
            }
        ],
        "x": 1030,
        "y": 1038,
        "wires": [
            [],
            [
                "24b7cec5.441a12"
            ]
        ]
    },
    {
        "id": "b7da3a44.60ff68",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Re Arranque Automático main",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 95,
        "y": 610,
        "wires": [
            [
                "58e6dd7.174e024",
                "2f283ff35941d8fd"
            ]
        ]
    },
    {
        "id": "6e5aa94d.e5afd8",
        "type": "inject",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 480,
        "y": 440,
        "wires": [
            [
                "6db9c12b.c8705"
            ]
        ]
    },
    {
        "id": "37db10ec.6a6f7",
        "type": "delay",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 610,
        "y": 940,
        "wires": [
            [
                "c1061922fbb55e35"
            ]
        ]
    },
    {
        "id": "c3276752.914e88",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Re-Arranque desde función",
        "links": [
            "f4363e16.f1813"
        ],
        "x": 515,
        "y": 520,
        "wires": [
            [
                "6db9c12b.c8705"
            ]
        ]
    },
    {
        "id": "19f7e764da2b7e6d",
        "type": "delay",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1510,
        "y": 1040,
        "wires": [
            [
                "533f18d250f0f542"
            ]
        ]
    },
    {
        "id": "533f18d250f0f542",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.AutomaticRestart",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "faf07e5a91b1eecf",
        "type": "delay",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 630,
        "y": 1000,
        "wires": [
            [
                "01509800705ed2e4"
            ]
        ]
    },
    {
        "id": "01509800705ed2e4",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Active",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 1000,
        "wires": [
            [
                "d163284a3410a96e"
            ]
        ]
    },
    {
        "id": "d163284a3410a96e",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Limpiar intentos",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Attempts.Current_Attempt",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1000,
        "wires": [
            [
                "7fba8f14a29d758a",
                "f53306f8.1383d8"
            ]
        ]
    },
    {
        "id": "d44ef6369dfdda4b",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Variador Active?",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Active",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 670,
        "wires": [
            [
                "0daf9cd5f1466dab"
            ]
        ]
    },
    {
        "id": "0daf9cd5f1466dab",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 670,
        "wires": [
            [
                "a8d50b9f6b5726b4",
                "2a3c466dd1080ff6"
            ]
        ]
    },
    {
        "id": "497412a1.c5deec",
        "type": "ui_text_input",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "Intento No. 1 [seg]",
        "tooltip": "",
        "group": "78b8f22f.a47d4c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "x": 400,
        "y": 150,
        "wires": [
            [
                "ea37e9ba.aa7508"
            ]
        ]
    },
    {
        "id": "5df27476.8a476c",
        "type": "ui_text_input",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "Intento No. 2 [seg]",
        "tooltip": "",
        "group": "78b8f22f.a47d4c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "x": 400,
        "y": 190,
        "wires": [
            [
                "52a8c629.843998"
            ]
        ]
    },
    {
        "id": "bf9f3756.731868",
        "type": "ui_text_input",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "Intento No. 4 [seg]",
        "tooltip": "",
        "group": "78b8f22f.a47d4c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "400",
        "topic": "",
        "x": 400,
        "y": 270,
        "wires": [
            [
                "a56dfe8e.9d817"
            ]
        ]
    },
    {
        "id": "4e9cdd5a.9541e4",
        "type": "ui_text_input",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "Intento No. 3 [seg]",
        "tooltip": "",
        "group": "78b8f22f.a47d4c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "x": 400,
        "y": 230,
        "wires": [
            [
                "b0e43e11.45b77"
            ]
        ]
    },
    {
        "id": "874c5aed.184488",
        "type": "ui_text_input",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "Intento No. 1 [min]",
        "tooltip": "",
        "group": "edf097a9.5fb028",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "x": 2160,
        "y": 110,
        "wires": [
            [
                "97729306.5f405"
            ]
        ]
    },
    {
        "id": "cb991004.c84de",
        "type": "ui_text_input",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "Intento No. 2 [min]",
        "tooltip": "",
        "group": "edf097a9.5fb028",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "x": 2160,
        "y": 150,
        "wires": [
            [
                "d8da080.181c0f8"
            ]
        ]
    },
    {
        "id": "9b89d9af.1de058",
        "type": "ui_text_input",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "Intento No. 3 [min]",
        "tooltip": "",
        "group": "edf097a9.5fb028",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "x": 2160,
        "y": 190,
        "wires": [
            [
                "8be14622.b08ef8"
            ]
        ]
    },
    {
        "id": "acf47dfa.1c447",
        "type": "ui_text_input",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "Intento No. 4 [min]",
        "tooltip": "",
        "group": "edf097a9.5fb028",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "x": 2160,
        "y": 230,
        "wires": [
            [
                "b91731c.f01b2d"
            ]
        ]
    },
    {
        "id": "ea37e9ba.aa7508",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Ramps.Accel1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 150,
        "wires": [
            []
        ]
    },
    {
        "id": "52a8c629.843998",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Ramps.Accel2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "b0e43e11.45b77",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Ramps.Accel3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 230,
        "wires": [
            []
        ]
    },
    {
        "id": "a56dfe8e.9d817",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Ramps.Accel4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 270,
        "wires": [
            []
        ]
    },
    {
        "id": "97729306.5f405",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Restart.Time1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 110,
        "wires": [
            []
        ]
    },
    {
        "id": "d8da080.181c0f8",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Restart.Time2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 150,
        "wires": [
            []
        ]
    },
    {
        "id": "8be14622.b08ef8",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Restart.Time3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "b91731c.f01b2d",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Restart.Time4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 230,
        "wires": [
            []
        ]
    },
    {
        "id": "685eb5d0.f522ec",
        "type": "ui_text_input",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Intentos",
        "label": "Max. Intentos",
        "tooltip": "",
        "group": "e72670e4.f5998",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "x": 430,
        "y": 110,
        "wires": [
            [
                "2c2a7aa0.9ef0d6"
            ]
        ]
    },
    {
        "id": "2c2a7aa0.9ef0d6",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Attempts.Max",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 110,
        "wires": [
            []
        ]
    },
    {
        "id": "28d953db.54529c",
        "type": "ui_switch",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "20076456.83052c",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1440,
        "y": 110,
        "wires": [
            [
                "4e0a3fc7.922b2"
            ]
        ]
    },
    {
        "id": "45809fd1.8506",
        "type": "ui_switch",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "20076456.83052c",
        "order": 5,
        "width": "1",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1440,
        "y": 160,
        "wires": [
            [
                "20949174.cb72ee"
            ]
        ]
    },
    {
        "id": "7a12922f.1cbe9c",
        "type": "ui_switch",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "20076456.83052c",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1440,
        "y": 210,
        "wires": [
            [
                "ab740524.1ae268"
            ]
        ]
    },
    {
        "id": "d768e1d2.1e7f1",
        "type": "ui_switch",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "20076456.83052c",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1440,
        "y": 260,
        "wires": [
            [
                "f486135b.0c2e3"
            ]
        ]
    },
    {
        "id": "4e0a3fc7.922b2",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Enable_Accel_1",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Ramps.Enable_Accel1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 110,
        "wires": [
            []
        ]
    },
    {
        "id": "20949174.cb72ee",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Enable_Accel_2",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Ramps.Enable_Accel2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ab740524.1ae268",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Enable_Accel_3",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Ramps.Enable_Accel3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 210,
        "wires": [
            []
        ]
    },
    {
        "id": "f486135b.0c2e3",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Enable_Accel_4",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Ramps.Enable_Accel4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "b2b71204.5d357",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Accel1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Ramps.Accel1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 150,
        "wires": [
            [
                "497412a1.c5deec"
            ]
        ]
    },
    {
        "id": "891ddd2d.407f3",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Accel2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Ramps.Accel2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 190,
        "wires": [
            [
                "5df27476.8a476c"
            ]
        ]
    },
    {
        "id": "1e43264c.b5a5fa",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Accel3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Ramps.Accel3",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 230,
        "wires": [
            [
                "4e9cdd5a.9541e4"
            ]
        ]
    },
    {
        "id": "61109ded.3b49a4",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Accel4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Ramps.Accel4",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 270,
        "wires": [
            [
                "bf9f3756.731868"
            ]
        ]
    },
    {
        "id": "a877cbae.a027a8",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Enable Accel1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Ramps.Enable_Accel1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 110,
        "wires": [
            [
                "28d953db.54529c"
            ]
        ]
    },
    {
        "id": "39c71fe2.06935",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Enable Accel2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Ramps.Enable_Accel2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 160,
        "wires": [
            [
                "45809fd1.8506"
            ]
        ]
    },
    {
        "id": "449e7bab.192fe4",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Enable Accel3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Ramps.Enable_Accel3",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 210,
        "wires": [
            [
                "7a12922f.1cbe9c"
            ]
        ]
    },
    {
        "id": "6ae46230.0f8d4c",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Enable Accel4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Ramps.Enable_Accel4",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 260,
        "wires": [
            [
                "d768e1d2.1e7f1"
            ]
        ]
    },
    {
        "id": "fbbc75ab.913998",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Restart Time 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Restart.Time1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 110,
        "wires": [
            [
                "874c5aed.184488"
            ]
        ]
    },
    {
        "id": "6e4597fe.cd4c38",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Restart Time 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Restart.Time2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 150,
        "wires": [
            [
                "cb991004.c84de"
            ]
        ]
    },
    {
        "id": "1da40511.9db73b",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Restart Time 3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Restart.Time3",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 190,
        "wires": [
            [
                "9b89d9af.1de058"
            ]
        ]
    },
    {
        "id": "2cde88bf.5168b8",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Restart Time 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Restart.Time4",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 230,
        "wires": [
            [
                "acf47dfa.1c447"
            ]
        ]
    },
    {
        "id": "dff7a91d.077a48",
        "type": "ui_button",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "group": "e72670e4.f5998",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Limpiar intentos",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 660,
        "y": 310,
        "wires": [
            [
                "49e64ca4.8b1944"
            ]
        ]
    },
    {
        "id": "49e64ca4.8b1944",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Clear",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Attempts.Current_Attempt",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 310,
        "wires": [
            [
                "c1723a65.a620c8"
            ]
        ]
    },
    {
        "id": "a4e7e30d.3de15",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Intentos",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Attempts.Max",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 110,
        "wires": [
            [
                "685eb5d0.f522ec"
            ]
        ]
    },
    {
        "id": "f213a859.b29578",
        "type": "ui_text",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "group": "e72670e4.f5998",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Mostrar Intento actual",
        "label": "",
        "format": "Intento actual: {{msg.payload}}",
        "layout": "col-center",
        "x": 470,
        "y": 310,
        "wires": []
    },
    {
        "id": "c1723a65.a620c8",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Cargar intentos",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Automatic_Restart.Attempts.Current_Attempt",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 310,
        "wires": [
            [
                "f213a859.b29578"
            ]
        ]
    },
    {
        "id": "ca41ebf5.6cdf28",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Re Arranque Automático",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 95,
        "y": 210,
        "wires": [
            [
                "a4e7e30d.3de15",
                "b2b71204.5d357",
                "891ddd2d.407f3",
                "1e43264c.b5a5fa",
                "61109ded.3b49a4",
                "c1723a65.a620c8"
            ]
        ]
    },
    {
        "id": "8ef5c8d6.524028",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Re Arranque Automático",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 1105,
        "y": 190,
        "wires": [
            [
                "a877cbae.a027a8",
                "39c71fe2.06935",
                "449e7bab.192fe4",
                "6ae46230.0f8d4c"
            ]
        ]
    },
    {
        "id": "b8c12e8b.715b2",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "Re Arranque Automático",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 1815,
        "y": 170,
        "wires": [
            [
                "fbbc75ab.913998",
                "6e4597fe.cd4c38",
                "1da40511.9db73b",
                "2cde88bf.5168b8"
            ]
        ]
    },
    {
        "id": "8a0fe789.871358",
        "type": "ui_button",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "",
        "group": "cf893b29.8b0a68",
        "order": 4,
        "width": "7",
        "height": 1,
        "passthru": false,
        "label": "Deshabilitar Arranque Automático",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 2510,
        "y": 480,
        "wires": [
            [
                "2b8ab955.9e7406"
            ]
        ]
    },
    {
        "id": "9fd2782d.a0cc58",
        "type": "ui_button",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "",
        "group": "cf893b29.8b0a68",
        "order": 2,
        "width": "7",
        "height": 1,
        "passthru": false,
        "label": "Habilitar Arranque Automático",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 2500,
        "y": 440,
        "wires": [
            [
                "add1cac2.311828"
            ]
        ]
    },
    {
        "id": "add1cac2.311828",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "Habilitar",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Enable",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "RA_ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2790,
        "y": 500,
        "wires": [
            [
                "4e19cfd4.3982f"
            ]
        ]
    },
    {
        "id": "2b8ab955.9e7406",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "Deshabilitar",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Enable",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2800,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "d4b73c65.8c417",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "False",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2280,
        "y": 520,
        "wires": [
            [
                "8a0fe789.871358"
            ]
        ]
    },
    {
        "id": "e4fcccc8.8deff",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2280,
        "y": 480,
        "wires": [
            [
                "9fd2782d.a0cc58"
            ]
        ]
    },
    {
        "id": "82ddd765.a9a1c8",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2280,
        "y": 440,
        "wires": [
            [
                "8a0fe789.871358"
            ]
        ]
    },
    {
        "id": "2850bc9d.bad744",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "False",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2280,
        "y": 400,
        "wires": [
            [
                "9fd2782d.a0cc58"
            ]
        ]
    },
    {
        "id": "5472c69c.f21938",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "",
        "property": "Control_functions.Automatic_Restart.Enable",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2110,
        "y": 530,
        "wires": [
            [
                "2850bc9d.bad744",
                "82ddd765.a9a1c8"
            ],
            [
                "d4b73c65.8c417",
                "e4fcccc8.8deff"
            ],
            [
                "2b8ab955.9e7406"
            ]
        ]
    },
    {
        "id": "b275f5b2.e7e328",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "Bypass filtro armónicos",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 2015,
        "y": 550,
        "wires": [
            [
                "5472c69c.f21938"
            ]
        ]
    },
    {
        "id": "aedcd40.1fbec3",
        "type": "complete",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "",
        "scope": [
            "add1cac2.311828",
            "2b8ab955.9e7406"
        ],
        "uncaught": false,
        "x": 1960,
        "y": 510,
        "wires": [
            [
                "5472c69c.f21938"
            ]
        ]
    },
    {
        "id": "73af0be0.8d91e4",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "Indicador Arranque Escalonado",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 2015,
        "y": 470,
        "wires": [
            []
        ]
    },
    {
        "id": "4e19cfd4.3982f",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "8f8a192b.bb2ef8",
        "name": "Automatic Restart Enable Out",
        "links": [
            "14c9d205.a3aa7e"
        ],
        "x": 2885,
        "y": 500,
        "wires": []
    },
    {
        "id": "5237e183.b1e0e",
        "type": "function",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Referencia",
        "func": "var Ref = global.get(\"C2S.Last_Reference.Value\",'file');\nmsg.payload = Ref;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 760,
        "wires": [
            [
                "221aa83c16ff94a6"
            ]
        ]
    },
    {
        "id": "221aa83c16ff94a6",
        "type": "subflow:1fbf295f73cccb97",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "env": [],
        "x": 1070,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "de4880db95ed8834",
        "type": "subflow:c8b77ff3.ab501",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "env": [],
        "x": 910,
        "y": 860,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d9b3e61d145ba55d",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 900,
        "wires": [
            [
                "de4880db95ed8834",
                "cb35c95f.b22ce8"
            ]
        ]
    },
    {
        "id": "c1061922fbb55e35",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 940,
        "wires": [
            [
                "3b9c1ffbdb77d781",
                "90144d34685e497b"
            ]
        ]
    },
    {
        "id": "3b9c1ffbdb77d781",
        "type": "subflow:c8b77ff3.ab501",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "x": 960,
        "y": 960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "73609231970905b6",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "Spd_Reg_BW",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.PMM.Spd_Reg_BW",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 1880,
        "wires": [
            [
                "c3f612b3.bcf64"
            ]
        ]
    },
    {
        "id": "59ca9b2ac35f46be",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "37d2bc6e.615114",
        "name": "Spd_Reg_BW",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.PMM.Spd_Reg_BW",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2550,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "818e472f7d541380",
        "type": "function",
        "z": "a52b5a046f4fd02f",
        "name": "Protections H/L",
        "func": "var Prot        = env.get('protection') || \"test\";\nvar ProtESP = {\n    Load: \"'Corriente VSD'\",\n    MotorLoad: \"Corriente de motor\",\n    THP: \"'THP'\",\n    THT: \"'THT'\",\n    VibrationGeneral: \"'Vibración general'\",\n    CurrentLeakage: \"'Corriente de fuga'\",\n    IntakePressure: \"'Presión de entrada'\",\n    DischargePressure: \"'Presión de descarga'\",\n    IntakeTemperature: \"'Temperatura de entrada'\",\n    MotorTemperature: \"'Temperatura de motor'\",\n    Voltage: \"'Tensión de entrada'\",\n    BusDC: \"'Bus DC'\",\n    DynamicFluidLevel: \"Nivel de fluido dinámico\"\n}\n\nif (msg.Mensaje == \"Alarm by H Protection\"){\n    var dispQuery = \"Protections.\" + Prot + \".H\";\n    msg.payload = \"Alarma por protección \" + ProtESP[Prot] + \" H\";\n    global.set(dispQuery, true, \"memoryOnly\");\n}\nelse if (msg.Mensaje == \"Alarm by L Protection\"){\n    var dispQuery = \"Protections.\" + Prot + \".L\";\n    msg.payload = \"Alarma por protección \" + ProtESP[Prot] + \" L\";\n    global.set(dispQuery, true, \"memoryOnly\");\n}\n\ndispQuery = \"Protections.\" + Prot + \".HH\";\nglobal.set(dispQuery, false, \"memoryOnly\");\ndispQuery = \"Protections.\" + Prot + \".LL\";\nglobal.set(dispQuery, false, \"memoryOnly\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 90,
        "wires": [
            []
        ]
    },
    {
        "id": "2152075deac4a89d",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "seguri",
        "property": "#:(memoryOnly)::L.Setpoint",
        "propertyType": "flow",
        "rules": [
            {
                "t": "lt",
                "v": "payload",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 840,
        "y": 740,
        "wires": [
            [
                "410685e8.07f64c"
            ]
        ]
    },
    {
        "id": "30359a42be66cafb",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "seguri",
        "property": "#:(memoryOnly)::H.Setpoint",
        "propertyType": "flow",
        "rules": [
            {
                "t": "gt",
                "v": "payload",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 840,
        "y": 590,
        "wires": [
            [
                "ddfcf25.e7fe71"
            ]
        ]
    },
    {
        "id": "f72eda9846fb1be0",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "",
        "label": "Corriente nominal primario",
        "tooltip": "",
        "group": "332af29a.076dee",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 670,
        "y": 2920,
        "wires": [
            [
                "b56d661ba261fa58"
            ]
        ]
    },
    {
        "id": "41d9a0fdb928169d",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "",
        "label": "Tensión Secundario",
        "tooltip": "",
        "group": "332af29a.076dee",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 640,
        "y": 2960,
        "wires": [
            [
                "51328fc9e89bd926"
            ]
        ]
    },
    {
        "id": "ab239694d74f8bf1",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "",
        "label": "Caida de tensión",
        "tooltip": "",
        "group": "332af29a.076dee",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 640,
        "y": 3000,
        "wires": [
            [
                "c7ce33ac338a9db9"
            ]
        ]
    },
    {
        "id": "155b3430262c837d",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Rel Tx corriente nominal",
        "rules": [
            {
                "t": "set",
                "p": "C2S.IM.TX.Rated_primary_current",
                "pt": "global",
                "to": "Relación_Transformación.Corriente_nominal_primario",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "58e0c4b9ff2b2113",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Rel Tx Tensión secundario",
        "rules": [
            {
                "t": "set",
                "p": "C2S.IM.TX.Secondary_voltage",
                "pt": "global",
                "to": "Relación_Transformación.Tensión_secundario",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "484735a529a9aaae",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Rel Tx Caída tensión",
        "rules": [
            {
                "t": "set",
                "p": "C2S.IM.TX.Voltage_drop",
                "pt": "global",
                "to": "Relación_Transformación.Caída_tensión",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 3000,
        "wires": [
            []
        ]
    },
    {
        "id": "f56e0cf8144b9036",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Inicializar F.A",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 205,
        "y": 2960,
        "wires": [
            [
                "8cf7bd19dec526a3",
                "4d2d1c806ea0b6a4",
                "3cf91acc442c9d10"
            ]
        ]
    },
    {
        "id": "8cf7bd19dec526a3",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Rel Tx Corriente nominal",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Relación_Transformación.Corriente_nominal_primario",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 2920,
        "wires": [
            [
                "f72eda9846fb1be0"
            ]
        ]
    },
    {
        "id": "4d2d1c806ea0b6a4",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Rel Tx Tensión secundario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Relación_Transformación.Tensión_secundario",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 2960,
        "wires": [
            [
                "41d9a0fdb928169d"
            ]
        ]
    },
    {
        "id": "3cf91acc442c9d10",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Rel Tx Corriente bypass",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Relación_Transformación.Caída_tensión",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 3000,
        "wires": [
            [
                "ab239694d74f8bf1"
            ]
        ]
    },
    {
        "id": "afaf0235e82beea2",
        "type": "inject",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 3000,
        "wires": [
            [
                "8cf7bd19dec526a3",
                "4d2d1c806ea0b6a4",
                "3cf91acc442c9d10"
            ]
        ]
    },
    {
        "id": "08780a15484b25dd",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Confirmar",
        "group": "332af29a.076dee",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1130,
        "y": 2920,
        "wires": [
            [
                "155b3430262c837d",
                "58e0c4b9ff2b2113",
                "484735a529a9aaae",
                "db43fb238938f2fc"
            ]
        ]
    },
    {
        "id": "8db3135a85f1fab1",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 205,
        "y": 3080,
        "wires": [
            [
                "75ddaf92deb8acf4"
            ]
        ]
    },
    {
        "id": "75ddaf92deb8acf4",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración VSD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 160,
        "y": 3040,
        "wires": [
            [
                "8cf7bd19dec526a3",
                "4d2d1c806ea0b6a4",
                "3cf91acc442c9d10"
            ]
        ]
    },
    {
        "id": "b56d661ba261fa58",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Rel Tx corriente nominal",
        "rules": [
            {
                "t": "set",
                "p": "Relación_Transformación.Corriente_nominal_primario",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "51328fc9e89bd926",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Rel Tx Tensión secundario",
        "rules": [
            {
                "t": "set",
                "p": "Relación_Transformación.Tensión_secundario",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "c7ce33ac338a9db9",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "Rel Tx Caída tensión",
        "rules": [
            {
                "t": "set",
                "p": "Relación_Transformación.Caída_tensión",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 3000,
        "wires": [
            []
        ]
    },
    {
        "id": "e3dba22f.3fd21",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "name": "Relación de transformación",
        "func": "var MtrCtrl = global.get(\"C2S.Motor_Control.Type\");\nvar Rtx,Rel;\n\nif(MtrCtrl == \"IM\"){\n    Rtx = global.get(\"C2S.IM.TX.Secondary_voltage\") || null;\n}\nelse if(MtrCtrl == \"PMM\"){\n    Rtx = global.get(\"C2S.Motor_Control.PMM.Tension_Secundario\")||null;\n}\nif(Rtx != null){ \n    Rel = Rtx/480;\n}\nelse{\n    Rel=1;\n}\nmsg.payload = Rel.toFixed(2);\nglobal.set(\"C2S.RelTx\", Rel);\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "9523c57c.c9b468"
            ]
        ]
    },
    {
        "id": "401ed26f.e6543c",
        "type": "ui_text_input",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "",
        "label": "Tiempo Forward [s]",
        "tooltip": "",
        "group": "225e345f.a1250c",
        "order": 4,
        "width": "4",
        "height": "1",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 530,
        "y": 140,
        "wires": [
            [
                "2971ab67.7e1f64"
            ]
        ]
    },
    {
        "id": "23b18b52.b524e4",
        "type": "ui_text_input",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "",
        "label": "Tiempo Reverse [s]",
        "tooltip": "",
        "group": "225e345f.a1250c",
        "order": 6,
        "width": "4",
        "height": "1",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "73213270.315b5c"
            ]
        ]
    },
    {
        "id": "245c43fe.49aa2c",
        "type": "ui_text_input",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "",
        "label": "Intentos",
        "tooltip": "",
        "group": "225e345f.a1250c",
        "order": 8,
        "width": "4",
        "height": "1",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 560,
        "y": 220,
        "wires": [
            [
                "541ff565.eda9ec"
            ]
        ]
    },
    {
        "id": "97f8ca63.3d9238",
        "type": "ui_text_input",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "",
        "label": "Referencia [Hz]",
        "tooltip": "",
        "group": "225e345f.a1250c",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 540,
        "y": 100,
        "wires": [
            [
                "6bebb49.91ff04c"
            ]
        ]
    },
    {
        "id": "6bebb49.91ff04c",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "Referencia",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.RockingStart.Reference",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2971ab67.7e1f64",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "FW_Time",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.RockingStart.Forward_Time",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "73213270.315b5c",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "RV_Time",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.RockingStart.Reverse_Time",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "541ff565.eda9ec",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "Attempts",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.RockingStart.Attempts.Max",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a0487735.d07c68",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "Reference",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.RockingStart.Reference",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 100,
        "wires": [
            [
                "97f8ca63.3d9238"
            ]
        ]
    },
    {
        "id": "de01e320.127c4",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "FW Time",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.RockingStart.Forward_Time",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 140,
        "wires": [
            [
                "401ed26f.e6543c"
            ]
        ]
    },
    {
        "id": "5525a94.436c858",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "RV_Time",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.RockingStart.Reference",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "23b18b52.b524e4"
            ]
        ]
    },
    {
        "id": "2f470fc9.a87a7",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "Attempts",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.RockingStart.Attempts.Max",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 220,
        "wires": [
            [
                "245c43fe.49aa2c"
            ]
        ]
    },
    {
        "id": "3df3dfb.cab992",
        "type": "link in",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 95,
        "y": 160,
        "wires": [
            [
                "aa646335.08c07"
            ]
        ]
    },
    {
        "id": "aa646335.08c07",
        "type": "switch",
        "z": "fb40d997e0f412a5",
        "g": "c30870cb.fa25a",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Otros Modos de Arranque",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 160,
        "wires": [
            [
                "a0487735.d07c68",
                "de01e320.127c4",
                "5525a94.436c858",
                "2f470fc9.a87a7"
            ]
        ]
    },
    {
        "id": "42b1083e.ce9cd8",
        "type": "complete",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "",
        "scope": [
            "786a9585.cd75cc",
            "f1aef2ac.9e095"
        ],
        "uncaught": false,
        "x": 910,
        "y": 230,
        "wires": [
            [
                "f5ea8178.fe0f7"
            ]
        ]
    },
    {
        "id": "f5ea8178.fe0f7",
        "type": "switch",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "",
        "property": "Control_functions.RockingStart.Enable",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1050,
        "y": 230,
        "wires": [
            [
                "5d32f571.d3ac9c",
                "dbda20bb.9241b",
                "dd5b4bbd.505ea8"
            ],
            [
                "b81da68d.f1f608",
                "3e70c8e7.d122b8",
                "8b4427d0.6b69c8"
            ],
            [
                "3e70c8e7.d122b8",
                "b81da68d.f1f608",
                "f1aef2ac.9e095"
            ]
        ]
    },
    {
        "id": "b81da68d.f1f608",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "False",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 220,
        "wires": [
            [
                "df83e8e7.26b538"
            ]
        ]
    },
    {
        "id": "3e70c8e7.d122b8",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 180,
        "wires": [
            [
                "abae1ac3.029958"
            ]
        ]
    },
    {
        "id": "dbda20bb.9241b",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 140,
        "wires": [
            [
                "df83e8e7.26b538"
            ]
        ]
    },
    {
        "id": "5d32f571.d3ac9c",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "False",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 100,
        "wires": [
            [
                "abae1ac3.029958"
            ]
        ]
    },
    {
        "id": "abae1ac3.029958",
        "type": "ui_button",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "",
        "group": "225e345f.a1250c",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Habilitar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1380,
        "y": 140,
        "wires": [
            [
                "786a9585.cd75cc"
            ]
        ]
    },
    {
        "id": "df83e8e7.26b538",
        "type": "ui_button",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "",
        "group": "225e345f.a1250c",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Deshabilitar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1390,
        "y": 180,
        "wires": [
            [
                "f1aef2ac.9e095",
                "168b6577.3e722b"
            ]
        ]
    },
    {
        "id": "786a9585.cd75cc",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "Habilitar",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.RockingStart.Enable",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "f1aef2ac.9e095",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "Deshabilitar",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.RockingStart.Enable",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8d16d48d.753ca8",
        "type": "link in",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 965,
        "y": 190,
        "wires": [
            [
                "f5ea8178.fe0f7"
            ]
        ]
    },
    {
        "id": "dd5b4bbd.505ea8",
        "type": "link out",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "Roking Enable True Link Out",
        "links": [
            "f07c3e38.b976d"
        ],
        "x": 1195,
        "y": 270,
        "wires": []
    },
    {
        "id": "8b4427d0.6b69c8",
        "type": "link out",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "Roking Enable False Link Out",
        "links": [
            "fa892337.16686"
        ],
        "x": 1195,
        "y": 310,
        "wires": []
    },
    {
        "id": "168b6577.3e722b",
        "type": "link out",
        "z": "fb40d997e0f412a5",
        "g": "f3b2b1b2.a0af2",
        "name": "Roking Start disable reset Link Out",
        "links": [
            "a7eee5d5.1a1eb8"
        ],
        "x": 1445,
        "y": 220,
        "wires": []
    },
    {
        "id": "a46bb197.4590c",
        "type": "ui_chart",
        "z": "fb40d997e0f412a5",
        "g": "4384031.9ff1afc",
        "name": "",
        "group": "a2ab3a38.4d35e8",
        "order": 1,
        "width": "10",
        "height": "8",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "240",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2750,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2299663a.5fb8fa",
        "type": "inject",
        "z": "fb40d997e0f412a5",
        "g": "4384031.9ff1afc",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1810,
        "y": 200,
        "wires": [
            [
                "c128eecc26e4da4f"
            ]
        ]
    },
    {
        "id": "f073de6b.d109f",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "4384031.9ff1afc",
        "name": "Frecuencia de salida",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::C2S.Implicit.Output_Frequency",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Frecuencia",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 180,
        "wires": [
            [
                "a46bb197.4590c"
            ]
        ]
    },
    {
        "id": "70d87fe5.6d57",
        "type": "ui_text",
        "z": "fb40d997e0f412a5",
        "g": "4384031.9ff1afc",
        "group": "a2ab3a38.4d35e8",
        "order": 2,
        "width": "8",
        "height": "1",
        "name": "",
        "label": "Corriente de salida:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2790,
        "y": 220,
        "wires": []
    },
    {
        "id": "bf8e558a.d150b8",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "4384031.9ff1afc",
        "name": "Corriente de salida",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::C2S.Implicit.Output_Current",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Corriente",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2570,
        "y": 220,
        "wires": [
            [
                "70d87fe5.6d57"
            ]
        ]
    },
    {
        "id": "941a0b79.4ef8d8",
        "type": "function",
        "z": "fb40d997e0f412a5",
        "g": "4384031.9ff1afc",
        "name": "",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2610,
        "y": 140,
        "wires": [
            [
                "a46bb197.4590c"
            ]
        ]
    },
    {
        "id": "9b8ae752.54eb48",
        "type": "function",
        "z": "fb40d997e0f412a5",
        "g": "4384031.9ff1afc",
        "name": "",
        "func": "var Output_Frequency = global.get(\"C2S.Implicit.Output_Frequency\",\"memoryOnly\")||0;\nOutput_Frequency = parseFloat(Num(Output_Frequency));\n\nvar URef = global.get(\"C2S.Last_Reference.Value\")||0;\n\nvar Active = global.get(\"C2S.Drive_Status.Active\",\"memoryOnly\")||0;\n\nnode.status({fill:\"green\",shape:\"dot\",text:\"OutputFreq:\"+Output_Frequency+\" URef: \"+URef});\n\nif(Output_Frequency != URef && Active == 1 ){return msg;}\nelse{return;}\nfunction Num(x) {\n  return Number.parseFloat(x).toFixed(1);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2330,
        "y": 200,
        "wires": [
            [
                "f073de6b.d109f",
                "bf8e558a.d150b8"
            ]
        ]
    },
    {
        "id": "4d314b1.8c27eb4",
        "type": "ui_button",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "group": "2540c0d0.abd4d",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Arranque",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Start",
        "x": 460,
        "y": 550,
        "wires": [
            [
                "a8811bf0.cf69a8",
                "70e07a51.c14f94"
            ]
        ]
    },
    {
        "id": "e525d535.df71c8",
        "type": "ui_button",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "group": "2540c0d0.abd4d",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Parada",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "Stop",
        "payloadType": "str",
        "topic": "Basic",
        "x": 460,
        "y": 590,
        "wires": [
            [
                "eb62ad9.cbb145",
                "e1903816.64f2b8",
                "20c76542990c37f1",
                "50551e9e.69ca8"
            ]
        ]
    },
    {
        "id": "d3122c65.f6281",
        "type": "ui_button",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "group": "2540c0d0.abd4d",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reinicio",
        "tooltip": "",
        "color": "",
        "bgcolor": "grey",
        "icon": "",
        "payload": "Reset",
        "payloadType": "str",
        "topic": "Basic",
        "x": 460,
        "y": 630,
        "wires": [
            [
                "c7b640c9.5eab7",
                "e1903816.64f2b8",
                "a67018ade5d649d0"
            ]
        ]
    },
    {
        "id": "a8811bf0.cf69a8",
        "type": "finite-state-machine",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Rocking Start",
        "fsmDefinition": "{\"state\":{\"status\":\"E0\"},\"transitions\":{\"E0\":{\"Start\":\"E1\"},\"E1\":{\"E1_Done\":\"E2\"},\"E2\":{\"Ref_Done\":\"E3\"},\"E3\":{\"Start_Done\":\"E4\",\"Error\":\"E3\"},\"E4\":{\"Forward\":\"E5\",\"Reverse\":\"E4\"},\"E5\":{\"Forward_Time_Done\":\"E6\"},\"E6\":{\"Reverse\":\"E7\",\"Forward\":\"E6\"},\"E7\":{\"Reverse_Time_Done\":\"E8\"},\"E8\":{\"Attempt_in_Range\":\"E4\",\"Attempt_Done\":\"E9\"},\"E9\":{\"Speed_restored\":\"E0\",\"Error\":\"E9\"}}}",
        "sendInitialState": true,
        "sendStateWithoutChange": false,
        "showTransitionErrors": false,
        "x": 830,
        "y": 550,
        "wires": [
            [
                "b92b51f2.862c3",
                "ece75963.8a7658"
            ]
        ]
    },
    {
        "id": "b92b51f2.862c3",
        "type": "switch",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "E0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E9",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 990,
        "y": 550,
        "wires": [
            [],
            [
                "83935bd.322d4a8"
            ],
            [
                "db524c1c.7299d"
            ],
            [
                "53dc0629efb2bf3e"
            ],
            [
                "f12b186c.4312a8"
            ],
            [
                "7d7e0a82.1b3274"
            ],
            [
                "752c4cf4.41b3d4"
            ],
            [
                "29a13a58.22e996"
            ],
            [
                "bebada93.7c96e8"
            ],
            [
                "c65245e9.e0b928"
            ]
        ]
    },
    {
        "id": "83935bd.322d4a8",
        "type": "function",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "E1",
        "func": "global.set(\"Control_functions.RockingStart.Attempts.Current\",0);\nmsg.topic = \"E1_Done\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 400,
        "wires": [
            [
                "a16f5366.da31f"
            ]
        ]
    },
    {
        "id": "5d139b56.877384",
        "type": "switch",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Arranque",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1520,
        "y": 500,
        "wires": [
            [
                "154e2116.00b6df"
            ]
        ]
    },
    {
        "id": "154e2116.00b6df",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Start Done",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Start_Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 500,
        "wires": [
            [
                "1dfca80a.0b9d78"
            ]
        ]
    },
    {
        "id": "9757bec7.cb582",
        "type": "link out",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Roking Start Output",
        "links": [
            "d864cf5d.4424a"
        ],
        "x": 1655,
        "y": 750,
        "wires": []
    },
    {
        "id": "db524c1c.7299d",
        "type": "function",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "E2",
        "func": "msg.payload = global.get(\"Control_functions.RockingStart.Reference\")||0;\nmsg.topic = \"Ref_Done\";\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 440,
        "wires": [
            [
                "a16f5366.da31f",
                "ae981d0ae38d021c",
                "2d20bc9389f4bb1d"
            ]
        ]
    },
    {
        "id": "8dda8991.669f28",
        "type": "switch",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Command_dir",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 560,
        "wires": [
            [
                "a573636f.f2ef1"
            ],
            [
                "f6feffbc.b7037"
            ]
        ]
    },
    {
        "id": "a573636f.f2ef1",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Forward",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Forward",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 540,
        "wires": [
            [
                "2c0787ec.c0d3f8"
            ]
        ]
    },
    {
        "id": "f6feffbc.b7037",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Reverse",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Reverse",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 580,
        "wires": [
            [
                "2c0787ec.c0d3f8"
            ]
        ]
    },
    {
        "id": "d864cf5d.4424a",
        "type": "link in",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Roking Start Input",
        "links": [
            "1ef779a27f308aef",
            "2aa3c62e.9854aa",
            "2c0787ec.c0d3f8",
            "9757bec7.cb582",
            "a16f5366.da31f",
            "caab4c9366a6a718"
        ],
        "x": 685,
        "y": 470,
        "wires": [
            [
                "a8811bf0.cf69a8"
            ]
        ]
    },
    {
        "id": "f12b186c.4312a8",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Forward",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "5394",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 560,
        "wires": [
            [
                "25995e1ba47e46a1"
            ]
        ]
    },
    {
        "id": "7d7e0a82.1b3274",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Reverse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "5410",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 620,
        "wires": [
            [
                "25995e1ba47e46a1"
            ]
        ]
    },
    {
        "id": "752c4cf4.41b3d4",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "T1",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "Control_functions.RockingStart.Forward_Time",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Forward_Time_Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 670,
        "wires": [
            [
                "429c93e5.ec4a6c"
            ]
        ]
    },
    {
        "id": "429c93e5.ec4a6c",
        "type": "function",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "msg.delay ms2sec",
        "func": "msg.delay = msg.delay * 1000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1340,
        "y": 670,
        "wires": [
            [
                "6581a2a4.fd4b4c"
            ]
        ]
    },
    {
        "id": "6581a2a4.fd4b4c",
        "type": "delay",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "pauseType": "delayv",
        "timeout": "60",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1510,
        "y": 670,
        "wires": [
            [
                "9757bec7.cb582"
            ]
        ]
    },
    {
        "id": "29a13a58.22e996",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "T2",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "Control_functions.RockingStart.Reverse_Time",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Reverse_Time_Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 710,
        "wires": [
            [
                "12dfffdf.e5a1a"
            ]
        ]
    },
    {
        "id": "12dfffdf.e5a1a",
        "type": "function",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "msg.delay ms2sec",
        "func": "msg.delay = msg.delay * 1000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1340,
        "y": 710,
        "wires": [
            [
                "4f79aee8.bf74"
            ]
        ]
    },
    {
        "id": "4f79aee8.bf74",
        "type": "delay",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "pauseType": "delayv",
        "timeout": "60",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1510,
        "y": 710,
        "wires": [
            [
                "9757bec7.cb582"
            ]
        ]
    },
    {
        "id": "bebada93.7c96e8",
        "type": "function",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "E8",
        "func": "var Current_Attempt = global.get(\"Control_functions.RockingStart.Attempts.Current\")||0;\nvar Max_Attempt     = global.get(\"Control_functions.RockingStart.Attempts.Max\")||0;\nCurrent_Attempt += 1;\n\nglobal.set(\"Control_functions.RockingStart.Attempts.Current\",Current_Attempt);\n\nif(Current_Attempt < Max_Attempt){\n    msg.topic = \"Attempt_in_Range\";\n}\nelse{\n    msg.topic = \"Attempt_Done\";\n}\n\nnode.status({fill:\"green\",shape:\"dot\",text:Current_Attempt});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 750,
        "wires": [
            [
                "9757bec7.cb582"
            ]
        ]
    },
    {
        "id": "eb62ad9.cbb145",
        "type": "link out",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Roking Start Stop",
        "links": [
            "e0c911fe.aaa9"
        ],
        "x": 605,
        "y": 590,
        "wires": []
    },
    {
        "id": "c7b640c9.5eab7",
        "type": "link out",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Roking Start Stop",
        "links": [
            "1fdf355.5b5f8cb"
        ],
        "x": 605,
        "y": 630,
        "wires": []
    },
    {
        "id": "3576f525.ca307a",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Disabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 570,
        "wires": [
            [
                "4d314b1.8c27eb4",
                "e525d535.df71c8",
                "d3122c65.f6281"
            ]
        ]
    },
    {
        "id": "c3264b50.948808",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Enabled",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 610,
        "wires": [
            [
                "4d314b1.8c27eb4",
                "e525d535.df71c8",
                "d3122c65.f6281"
            ]
        ]
    },
    {
        "id": "f0234075.f9965",
        "type": "complete",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "scope": [
            "f1aef2ac.9e095"
        ],
        "uncaught": false,
        "x": 150,
        "y": 570,
        "wires": [
            [
                "3576f525.ca307a"
            ]
        ]
    },
    {
        "id": "71b11fd7.a2749",
        "type": "complete",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "scope": [
            "786a9585.cd75cc"
        ],
        "uncaught": false,
        "x": 150,
        "y": 610,
        "wires": [
            [
                "c3264b50.948808"
            ]
        ]
    },
    {
        "id": "e1903816.64f2b8",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 670,
        "wires": [
            [
                "a8811bf0.cf69a8"
            ]
        ]
    },
    {
        "id": "163e3938.402577",
        "type": "pccc out",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "endpoint": "e9d237aaf9318e74",
        "variable": "CommandWord",
        "name": "",
        "x": 1540,
        "y": 620,
        "wires": []
    },
    {
        "id": "a16f5366.da31f",
        "type": "link out",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Roking Start Output",
        "links": [
            "d864cf5d.4424a"
        ],
        "x": 1275,
        "y": 400,
        "wires": []
    },
    {
        "id": "2aa3c62e.9854aa",
        "type": "link out",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Roking Start Output",
        "links": [
            "d864cf5d.4424a"
        ],
        "x": 1925,
        "y": 500,
        "wires": []
    },
    {
        "id": "2c0787ec.c0d3f8",
        "type": "link out",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Roking Start Output",
        "links": [
            "d864cf5d.4424a"
        ],
        "x": 1765,
        "y": 560,
        "wires": []
    },
    {
        "id": "c65245e9.e0b928",
        "type": "function",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "E9",
        "func": "msg.payload = global.get(\"C2S.Last_Reference.Value\")||0;\nmsg.topic = \"Speed_restored\";\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nmsg.payload = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 800,
        "wires": [
            [
                "9757bec7.cb582",
                "f12b186c.4312a8",
                "b6e4d731ae400625",
                "6362e6081ae4c9bc"
            ]
        ]
    },
    {
        "id": "fa892337.16686",
        "type": "link in",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Roking Enable False Link In",
        "links": [
            "8b4427d0.6b69c8"
        ],
        "x": 205,
        "y": 530,
        "wires": [
            [
                "3576f525.ca307a"
            ]
        ]
    },
    {
        "id": "f07c3e38.b976d",
        "type": "link in",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Roking Enable True Link In",
        "links": [
            "dd5b4bbd.505ea8"
        ],
        "x": 205,
        "y": 650,
        "wires": [
            [
                "c3264b50.948808"
            ]
        ]
    },
    {
        "id": "9d5c8cc0.ad9cb",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 510,
        "wires": [
            [
                "a8811bf0.cf69a8"
            ]
        ]
    },
    {
        "id": "a7eee5d5.1a1eb8",
        "type": "link in",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Roking Start disable reset Link In",
        "links": [
            "168b6577.3e722b"
        ],
        "x": 495,
        "y": 510,
        "wires": [
            [
                "9d5c8cc0.ad9cb"
            ]
        ]
    },
    {
        "id": "1dfca80a.0b9d78",
        "type": "delay",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1820,
        "y": 500,
        "wires": [
            [
                "2aa3c62e.9854aa"
            ]
        ]
    },
    {
        "id": "39a13028.67056",
        "type": "inject",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1390,
        "y": 560,
        "wires": [
            [
                "8dda8991.669f28"
            ]
        ]
    },
    {
        "id": "ece75963.8a7658",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Status",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.RockingStart.Status",
                "pt": "global",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 650,
        "wires": [
            []
        ]
    },
    {
        "id": "f498fdbf7ce6961d",
        "type": "subflow:c8b77ff3.ab501",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "x": 1380,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "53dc0629efb2bf3e",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Arranque",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 500,
        "wires": [
            [
                "f498fdbf7ce6961d",
                "5d139b56.877384"
            ]
        ]
    },
    {
        "id": "7acc47cbe9990f19",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "group": "42783be43cc39c58",
        "name": "Menu Otras Funciones de Control",
        "order": 1,
        "width": "16",
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:Eventos()})\">Arranque Automático</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:Alarmas()})\">Rocking Start</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:Datalogger()})\">Control PID</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Eventos = function() { return \"ArranqueAuto\"; };\n        this.scope.Alarmas = function() { return \"RockingStart\"; };\n        this.scope.Datalogger = function() { return \"PIDControl\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 1500,
        "wires": [
            [
                "30d70d168bf42655",
                "a9a50228154fac64"
            ]
        ]
    },
    {
        "id": "30d70d168bf42655",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ArranqueAuto",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RockingStart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PIDControl",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 750,
        "y": 1500,
        "wires": [
            [
                "99e2af3d95892f16",
                "eb431166fc1c96a0"
            ],
            [
                "b5c1e33ed75a3eb6",
                "eb431166fc1c96a0"
            ],
            [
                "ed9802d3.5add5"
            ]
        ]
    },
    {
        "id": "eb0d147d1d43c8ac",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "Menú Entradas/Salidas SWCPRO",
        "links": [
            "8a17d991.081178"
        ],
        "x": 1095,
        "y": 1500,
        "wires": []
    },
    {
        "id": "99e2af3d95892f16",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "Arranque automático",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Otras_Funciones_de_Control_Configuración\",\t                \"Otras_Funciones_de_Control_Tendencia\",\t                \"Otras_Funciones_de_Control_Control\",\t                \"Otras_Funciones_de_Control_Sintonización\",\t                \"Otras_Funciones_de_Control_TendenciaPID\",\t                \"Otras_Funciones_de_Control_Tendencia\",\t                \"Otras_Funciones_de_Control_Límites_de_Operación\",\t                \"Otras_Funciones_de_Control_Reglas_de_Activación\",\t                \"Otras_Funciones_de_Control_Habilitar/Deshabilitar\",\t                \"Otras_Funciones_de_Control_Navbar_PID\"],\t       \"show\":[ \"Otras_Funciones_de_Control_Nav_Bar\",\t                \"Otras_Funciones_de_Control_Habilitar_AR\",\t                \"Otras_Funciones_de_Control_Habilitar_AR2\",\t                \"Otras_Funciones_de_Control_Rampas_de_Aceleración\",\t                \"Otras_Funciones_de_Control_Tiempo_de_Rearme\",\t                \"Otras_Funciones_de_Control_No._de_Intentos\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 1450,
        "wires": [
            [
                "eb0d147d1d43c8ac"
            ]
        ]
    },
    {
        "id": "b5c1e33ed75a3eb6",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "Rocking Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Otras_Funciones_de_Control_Habilitar_AR\",\t                \"Otras_Funciones_de_Control_Habilitar_AR2\",\t                \"Otras_Funciones_de_Control_Rampas_de_Aceleración\",\t                \"Otras_Funciones_de_Control_Tiempo_de_Rearme\",\t                \"Otras_Funciones_de_Control_No._de_Intentos\",\t                \"Otras_Funciones_de_Control_Sintonización\",\t                \"Otras_Funciones_de_Control_TendenciaPID\",\t                \"Otras_Funciones_de_Control_Límites_de_Operación\",\t                \"Otras_Funciones_de_Control_Reglas_de_Activación\",\t                \"Otras_Funciones_de_Control_Habilitar/Deshabilitar\",\t                \"Otras_Funciones_de_Control_Navbar_PID\"],\t       \"show\":[ \"Otras_Funciones_de_Control_Nav_Bar\",\t                \"Otras_Funciones_de_Control_Configuración\",\t                \"Otras_Funciones_de_Control_Tendencia\",\t                \"Otras_Funciones_de_Control_Control\"]\t            }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 1500,
        "wires": [
            [
                "eb0d147d1d43c8ac"
            ]
        ]
    },
    {
        "id": "fd21111ca22e29fa",
        "type": "ui_switch",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "",
        "label": "Disparo de braker",
        "tooltip": "",
        "group": "4b33f8ea.b34188",
        "order": 19,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 670,
        "y": 1070,
        "wires": [
            [
                "fc3f919b2e15cdc9"
            ]
        ]
    },
    {
        "id": "b7c04dbc52f1518e",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "LL Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.EN",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 1070,
        "wires": [
            [
                "fd7610f36124f3bf"
            ]
        ]
    },
    {
        "id": "fd7610f36124f3bf",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "leer",
        "func": "var leer = global.get(msg.payload)||null;\n\nif(leer != null){\n    msg. payload = leer;\n    msg.enabled = true;\n}\nelse{\n    msg.payload = false;\n    msg.enabled = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 1070,
        "wires": [
            [
                "fd21111ca22e29fa"
            ]
        ]
    },
    {
        "id": "fc3f919b2e15cdc9",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "37b64a70f39dda06",
        "name": "LL",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::EN",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1070,
        "wires": [
            []
        ]
    },
    {
        "id": "c6b036f4d80b1a9a",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "LL Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Protections.+++.EN",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1770,
        "wires": [
            [
                "652eef7ff30e8029"
            ]
        ]
    },
    {
        "id": "652eef7ff30e8029",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "EN",
        "func": "var varflujo = \"EN\";\nvar leer = flow.get(varflujo,\"memoryOnly\")||false;\nglobal.set(msg.payload,leer);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1770,
        "wires": [
            []
        ]
    },
    {
        "id": "ed9802d3.5add5",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "Sintonización y Límites",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Otras_Funciones_de_Control_TendenciaPID\",\t                \"Otras_Funciones_de_Control_Reglas_de_Activación\",\t                \"Otras_Funciones_de_Control_Habilitar_AR\",\t                \"Otras_Funciones_de_Control_Habilitar_AR2\",\t                \"Otras_Funciones_de_Control_Rampas_de_Aceleración\",\t                \"Otras_Funciones_de_Control_Tiempo_de_Rearme\",\t                \"Otras_Funciones_de_Control_No._de_Intentos\",\t                \"Otras_Funciones_de_Control_Habilitar_RS\",\t                \"Otras_Funciones_de_Control_Configuración\",\t                \"Otras_Funciones_de_Control_Control\",\t                \"Otras_Funciones_de_Control_Tendencia\",\t                \"Otras_Funciones_de_Control_TendenciaPID\"],\t       \"show\":[ \"Otras_Funciones_de_Control_Navbar_PID\",\t                \"Otras_Funciones_de_Control_Sintonización\",\t                \"Otras_Funciones_de_Control_Límites_de_Operación\",\t                \"Otras_Funciones_de_Control_Habilitar/Deshabilitar\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1640,
        "wires": [
            [
                "54a6e602.e31808"
            ]
        ]
    },
    {
        "id": "1502171f.780179",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "Reglas de activación",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Otras_Funciones_de_Control_Sintonización\",\t                \"Otras_Funciones_de_Control_Límites_de_Operación\",\t                \"Otras_Funciones_de_Control_Habilitar_AR\",\t                \"Otras_Funciones_de_Control_Habilitar_AR2\",\t                \"Otras_Funciones_de_Control_Rampas_de_Aceleración\",\t                \"Otras_Funciones_de_Control_Tiempo_de_Rearme\",\t                \"Otras_Funciones_de_Control_No._de_Intentos\",\t                \"Otras_Funciones_de_Control_Habilitar_RS\",\t                \"Otras_Funciones_de_Control_Configuración\",\t                \"Otras_Funciones_de_Control_TendenciaPID\",\t                \"Otras_Funciones_de_Control_Control\",\t                \"Otras_Funciones_de_Control_Tendencia\",\t                \"Otras_Funciones_de_Control_Habilitar/Deshabilitar\"],\t       \"show\":[ \"Otras_Funciones_de_Control_Navbar_PID\",\t                \"Otras_Funciones_de_Control_Reglas_de_Activación\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1680,
        "wires": [
            [
                "54a6e602.e31808"
            ]
        ]
    },
    {
        "id": "4e16b16d.cb9b2",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SintonizacionLimitesOper",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ReglasActivacion",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Tendencia",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1130,
        "y": 1680,
        "wires": [
            [
                "ed9802d3.5add5"
            ],
            [
                "1502171f.780179"
            ],
            [
                "db83bdec.22c7e",
                "16bbbec3a6d114f6"
            ]
        ]
    },
    {
        "id": "606a3e77.9d00f",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "group": "532df66faefc7a82",
        "name": "Menú ",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-SintonizacionLimitesOper-tab\" data-toggle=\"tab\"\n                href=\"#nav-SintonizacionLimitesOper\" role=\"tab\" aria-controls=\"nav-SintonizacionLimitesOper\"\n                aria-selected=\"true\" ng-click=\"send({payload:SintonizacionLimitesOper()})\">Sintonización y límites</a>\n            <a class=\"nav-item nav-link\" id=\"nav-ReglasActivacion-tab\" data-toggle=\"tab\" href=\"#nav-ReglasActivacion\"\n                role=\"tab\" aria-controls=\"nav-ReglasActivacion\" aria-selected=\"false\"\n                ng-click=\"send({payload:ReglasActivacion()})\">Reglas de activación</a>\n            <a class=\"nav-item nav-link\" id=\"nav-Tendencia-tab\" data-toggle=\"tab\" href=\"#nav-Tendencia\" role=\"tab\"\n                aria-controls=\"nav-Tendencia\" aria-selected=\"false\" ng-click=\"send({payload:Tendencia()})\">Tendencia</a>\n\n        </div>\n    </nav>\n\n    <script>\n        this.scope.SintonizacionLimitesOper = function() { return \"SintonizacionLimitesOper\"; };\n        this.scope.ReglasActivacion = function() { return \"ReglasActivacion\"; };\n        this.scope.Tendencia = function() { return \"Tendencia\"; };\n        \n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n    <script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n    <script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n    <script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n</body>\n\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1010,
        "y": 1680,
        "wires": [
            [
                "4e16b16d.cb9b2",
                "da31c60bdaccad48"
            ]
        ]
    },
    {
        "id": "db83bdec.22c7e",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "Tendencia",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Otras_Funciones_de_Control_Reglas_de_Activación\",\t                \"Otras_Funciones_de_Control_Sintonización\",\t                \"Otras_Funciones_de_Control_Límites_de_Operación\",\t                \"Otras_Funciones_de_Control_Habilitar_AR\",\t                \"Otras_Funciones_de_Control_Habilitar_AR2\",\t                \"Otras_Funciones_de_Control_Rampas_de_Aceleración\",\t                \"Otras_Funciones_de_Control_Tiempo_de_Rearme\",\t                \"Otras_Funciones_de_Control_No._de_Intentos\",\t                \"Otras_Funciones_de_Control_Habilitar_RS\",\t                \"Otras_Funciones_de_Control_Configuración\",\t                \"Otras_Funciones_de_Control_Control\",\t                \"Otras_Funciones_de_Control_Tendencia\",\t                \"Otras_Funciones_de_Control_Habilitar/Deshabilitar\"],\t       \"show\":[ \"Otras_Funciones_de_Control_Navbar_PID\",\t                \"Otras_Funciones_de_Control_TendenciaPID\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1720,
        "wires": [
            [
                "54a6e602.e31808"
            ]
        ]
    },
    {
        "id": "54a6e602.e31808",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "",
        "links": [
            "805762db.d27b7"
        ],
        "x": 1515,
        "y": 1720,
        "wires": []
    },
    {
        "id": "198c5f953ea61b81",
        "type": "inject",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": "30",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1610,
        "y": 140,
        "wires": [
            [
                "fc115c1c3c5adc56",
                "6fb0ab0f1387a9a8"
            ]
        ]
    },
    {
        "id": "6fb0ab0f1387a9a8",
        "type": "function",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "Disparo Breaker principal por protección",
        "func": "var Protection = global.get(\"Protections\", 'memoryOnly')||[];\nvar PortEnable = global.get(\"Protections\")||[];\n\nvar Keys = Object.keys(Protection);\n\nfor (var i = 0; i < Keys.length; i += 1) {\n    if ((Protection[Keys[i]].HH || Protection[Keys[i]].LL) && PortEnable[Keys[i]].EN == true) {\n        node.status({ fill: \"red\", shape: \"dot\", text: \"TRUE\" });\n        return { payload: true };\n    }\n}\nnode.status({ fill: \"green\", shape: \"dot\", text: \"FALSE\" });\nreturn { payload: false };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1840,
        "y": 190,
        "wires": [
            [
                "a84bce49f9e89b58"
            ]
        ]
    },
    {
        "id": "f285ddcdf74ae6b9",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "delete",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 680,
        "wires": [
            [
                "f2fb1024dc9010ce"
            ]
        ]
    },
    {
        "id": "f2fb1024dc9010ce",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "user?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 680,
        "wires": [
            [
                "4dbb8df1fbdeceaf"
            ],
            [
                "ceaca04f38cadf35"
            ]
        ]
    },
    {
        "id": "4dbb8df1fbdeceaf",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "tipodearranque",
        "property": "#:(memoryOnly)::Input.Navigation.ComandOper",
        "propertyType": "global",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 720,
        "y": 640,
        "wires": [
            [
                "a0f125484bdc6ae9"
            ],
            [
                "ceaca04f38cadf35"
            ]
        ]
    },
    {
        "id": "ceaca04f38cadf35",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 720,
        "wires": [
            [
                "fb0f6d56.a4f3b"
            ]
        ]
    },
    {
        "id": "a0f125484bdc6ae9",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Active?",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Active",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 630,
        "wires": [
            [
                "dcb3223dea58991d"
            ],
            [
                "ceaca04f38cadf35"
            ]
        ]
    },
    {
        "id": "dcb3223dea58991d",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 630,
        "wires": [
            [
                "fb0f6d56.a4f3b"
            ]
        ]
    },
    {
        "id": "a84bce49f9e89b58",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IO.Functions.DO[\"Disparo breaker por protección\"]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2260,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "5dea5f3a2e3fb369",
        "type": "link out",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "",
        "links": [
            "52f1e35a6b450a62",
            "8eacc47.e177438"
        ],
        "x": 2675,
        "y": 520,
        "wires": []
    },
    {
        "id": "f0a7aa49a0a74635",
        "type": "link out",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 2685,
        "y": 460,
        "wires": []
    },
    {
        "id": "4283632c186cd676",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Exitoso",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Arranque exitoso",
                "fromt": "str",
                "to": "Arranque local exitoso",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Parada exitosa",
                "fromt": "str",
                "to": "Parada local exitosa",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 870,
        "wires": [
            [
                "3c6233b7580fdd3b"
            ]
        ]
    },
    {
        "id": "824394eb2c1be3fa",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Fallido",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Arranque fallido",
                "fromt": "str",
                "to": "Arranque local fallido",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Parada fallida",
                "fromt": "str",
                "to": "Parada local fallida",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 910,
        "wires": [
            [
                "88d14fc4446fc3c6"
            ]
        ]
    },
    {
        "id": "8026b7042b40e2c2",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "exito",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "fallid",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 790,
        "wires": [
            [
                "51367c09faad81b1"
            ],
            [
                "c2722fbcc455fb20"
            ]
        ]
    },
    {
        "id": "51367c09faad81b1",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Exitoso",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Arranque exitoso",
                "fromt": "str",
                "to": "Arranque escalonado exitoso",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Parada exitosa",
                "fromt": "str",
                "to": "Parada local exitosa",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 770,
        "wires": [
            [
                "fdc68848fdaa926f"
            ]
        ]
    },
    {
        "id": "c2722fbcc455fb20",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Fallido",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Arranque fallido",
                "fromt": "str",
                "to": "Arranque escalonado fallido",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Parada fallida",
                "fromt": "str",
                "to": "Parada local fallida",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 810,
        "wires": [
            [
                "4b38c31b6019dbbd"
            ]
        ]
    },
    {
        "id": "fdc68848fdaa926f",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 1235,
        "y": 770,
        "wires": []
    },
    {
        "id": "4b38c31b6019dbbd",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1235,
        "y": 810,
        "wires": []
    },
    {
        "id": "56e67824752411be",
        "type": "pccc out",
        "z": "902fc438.e5d758",
        "g": "06c0dbf1bffe1e21",
        "endpoint": "e9d237aaf9318e74",
        "variable": "CommandWord",
        "name": "",
        "x": 280,
        "y": 1620,
        "wires": []
    },
    {
        "id": "84eb16f681c366e0",
        "type": "inject",
        "z": "902fc438.e5d758",
        "g": "06c0dbf1bffe1e21",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 1620,
        "wires": [
            [
                "56e67824752411be"
            ]
        ]
    },
    {
        "id": "d69d4857.ada828",
        "type": "ui_text_input",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "label": "Referencia (Hz)",
        "tooltip": "",
        "group": "e5ec1549.1923c8",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 810,
        "y": 130,
        "wires": [
            [
                "b5761987.f38488"
            ]
        ]
    },
    {
        "id": "b5761987.f38488",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "ref",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Input.Operation.Reference",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 130,
        "wires": [
            []
        ]
    },
    {
        "id": "7def9f62.495c9",
        "type": "ui_button",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "group": "e5ec1549.1923c8",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "CONFIRMAR",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 800,
        "y": 170,
        "wires": [
            [
                "7c7e0f85.16d55"
            ]
        ]
    },
    {
        "id": "7c7e0f85.16d55",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "ref",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::Input.Operation.Reference",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 170,
        "wires": [
            [
                "b8ccca4f.5b80d8"
            ]
        ]
    },
    {
        "id": "b8ccca4f.5b80d8",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "lims?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "C2S.Speed_Control.MaxLimit",
                "vt": "global"
            },
            {
                "t": "lt",
                "v": "C2S.Speed_Control.MinLimit",
                "vt": "global"
            },
            {
                "t": "btwn",
                "v": "C2S.Speed_Control.MinLimit",
                "vt": "global",
                "v2": "C2S.Speed_Control.MaxLimit",
                "v2t": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1060,
        "y": 170,
        "wires": [
            [
                "eb737131.03a4d"
            ],
            [
                "eb737131.03a4d"
            ],
            [
                "c1cf35bd.94c428",
                "7d229a445e26240e",
                "fda65d81e947c35c"
            ]
        ]
    },
    {
        "id": "eb737131.03a4d",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "evento ref fuera lims",
        "func": "msg.payload = \"¡Referencia de \"+ msg.payload + \" Hz fuera de límites\";\nmsg.topic = \"Referencia\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1250,
        "y": 90,
        "wires": [
            [
                "565805a7.6b4eec"
            ]
        ]
    },
    {
        "id": "eb59ebb6.a7e4b8",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "Ref OK",
        "func": "var sentidogiro = global.get(\"C2S.Drive_Status.Command_dir\",\"memoryOnly\")||0;\nmsg.payload = \"Cambio de referencia a \"+ Math.abs(msg.payload) + \" Hz\";\nmsg.topic = \"Referencia\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1650,
        "y": 150,
        "wires": [
            [
                "1045d8d0.faf6d7"
            ]
        ]
    },
    {
        "id": "c1cf35bd.94c428",
        "type": "delay",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1210,
        "y": 170,
        "wires": [
            [
                "27642c12f77a13e3"
            ]
        ]
    },
    {
        "id": "ec2d25ed.7e35c8",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "send ref?",
        "property": "verify",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 170,
        "wires": [
            [
                "eb59ebb6.a7e4b8",
                "623eb47dc08d064b"
            ],
            [
                "51500f5e.edf25"
            ]
        ]
    },
    {
        "id": "51500f5e.edf25",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "Ref Fail",
        "func": "msg.payload = \"Falla de comunicación, referencia no recibida\";\nmsg.topic = \"Referencia\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1650,
        "y": 190,
        "wires": [
            [
                "d819c89.12f6638"
            ]
        ]
    },
    {
        "id": "204c251e.8264ca",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "retroalim referencia",
        "links": [
            "1045d8d0.faf6d7",
            "d819c89.12f6638",
            "565805a7.6b4eec",
            "3484e5233d4f23d3"
        ],
        "x": 465,
        "y": 110,
        "wires": [
            [
                "aa49b3720341c633"
            ]
        ]
    },
    {
        "id": "1045d8d0.faf6d7",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "204c251e.8264ca",
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 1745,
        "y": 150,
        "wires": []
    },
    {
        "id": "1deb40a1.1db35f",
        "type": "ui_button",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "group": "e5ec1549.1923c8",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "CONTROL",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 800,
        "y": 270,
        "wires": [
            [
                "5a06445d.c7a0ec"
            ]
        ]
    },
    {
        "id": "9be1365.7de13c8",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 915,
        "y": 310,
        "wires": [
            [
                "1606c10f.56a83f"
            ]
        ]
    },
    {
        "id": "1606c10f.56a83f",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "home",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1000,
        "y": 310,
        "wires": [
            [
                "7d35cec3.ade78"
            ]
        ]
    },
    {
        "id": "dd55fa16.314248",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "group": "e5ec1549.1923c8",
        "order": 13,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Actual:",
        "format": " {{msg.payload}}",
        "layout": "row-spread",
        "x": 1320,
        "y": 310,
        "wires": []
    },
    {
        "id": "7d35cec3.ade78",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "ver controlmode",
        "func": "var controlmode = global.get(\"Input.Operation.ControlMode\")||null;\nif (controlmode == null){\n    controlmode = \"Local\";\n    global.set(\"Input.Operation.ControlMode\",controlmode);\n}\nmsg.payload = controlmode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 310,
        "wires": [
            [
                "dd55fa16.314248"
            ]
        ]
    },
    {
        "id": "5a06445d.c7a0ec",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "select",
        "func": "var controlmode = global.get(\"Input.Operation.ControlMode\")||null;\nif (controlmode == null){\n    controlmode = \"Local\";\n    global.set(\"Input.Operation.ControlMode\",controlmode);\n}\nif(controlmode==\"Local\")\n    msg.payload = \"¿Desea cambiar el modo de control a remoto?\";\nelse\n    msg.payload = \"¿Desea cambiar el modo de control a local?\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 270,
        "wires": [
            [
                "16923a95.e45025"
            ]
        ]
    },
    {
        "id": "16923a95.e45025",
        "type": "ui_toast",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "Cancelar",
        "raw": false,
        "topic": "Modo de control",
        "name": "",
        "x": 1080,
        "y": 270,
        "wires": [
            [
                "a82882b.f096f8"
            ]
        ]
    },
    {
        "id": "a82882b.f096f8",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "controlmode change",
        "func": "if(msg.payload ==\"Aceptar\"){\n    var controlmode = global.get(\"Input.Operation.ControlMode\")||null;\nif(controlmode==\"Local\")\n    global.set(\"Input.Operation.ControlMode\",\"Remoto\");\nelse\n    global.set(\"Input.Operation.ControlMode\",\"Local\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1270,
        "y": 270,
        "wires": [
            [
                "7d35cec3.ade78",
                "448626b05dfddbc4"
            ]
        ]
    },
    {
        "id": "272e3aff.3c6086",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "group": "e5ec1549.1923c8",
        "order": 3,
        "width": "3",
        "height": 1,
        "name": "titulo arranque",
        "label": "",
        "format": "",
        "layout": "row-left",
        "x": 1230,
        "y": 50,
        "wires": []
    },
    {
        "id": "3beb2e16.d977e2",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "group": "e5ec1549.1923c8",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "titulo funciones",
        "label": "",
        "format": "<font size = 4px> Otras Funciones",
        "layout": "col-center",
        "x": 1410,
        "y": 50,
        "wires": []
    },
    {
        "id": "d8c3331e.ce174",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "4372d5a0.d338dc",
            "448626b05dfddbc4"
        ],
        "x": 175,
        "y": 130,
        "wires": [
            [
                "2fa174f43f9aa092"
            ]
        ]
    },
    {
        "id": "6ba5b0f.631cf5",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "group": "e5ec1549.1923c8",
        "order": 14,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Motor: ",
        "format": " {{msg.payload}}",
        "layout": "row-center",
        "x": 550,
        "y": 350,
        "wires": []
    },
    {
        "id": "2d5cd8ff.c3ed88",
        "type": "ui_button",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "Escalonado",
        "group": "e5ec1549.1923c8",
        "order": 10,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "<font size = 2px>Arr. escalon",
        "tooltip": "",
        "color": "green",
        "bgcolor": "#d4d4cf",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 1450,
        "y": 360,
        "wires": [
            [
                "44bb5770.e48438"
            ]
        ]
    },
    {
        "id": "1a514d1e.aa2be3",
        "type": "ui_button",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "Ref prolongada",
        "group": "e5ec1549.1923c8",
        "order": 16,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "<font size = 2px>Ref. Prolong",
        "tooltip": "",
        "color": "green",
        "bgcolor": "#d4d4cf",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 1280,
        "y": 410,
        "wires": [
            [
                "0bfc0884740c4779"
            ]
        ]
    },
    {
        "id": "44bb5770.e48438",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "start change",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Input.Navigation.ComandOper",
                "pt": "global",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 360,
        "wires": [
            [
                "f796f5cc.fb7898"
            ]
        ]
    },
    {
        "id": "2c549c27.8f7a24",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "start change",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Input.Navigation.ComandOper",
                "pt": "global",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 400,
        "wires": [
            [
                "f796f5cc.fb7898"
            ]
        ]
    },
    {
        "id": "d819c89.12f6638",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e",
            "204c251e.8264ca"
        ],
        "x": 1745,
        "y": 190,
        "wires": []
    },
    {
        "id": "565805a7.6b4eec",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "abe8a848.bbbd88",
            "cbbbcd1c.7180e",
            "204c251e.8264ca"
        ],
        "x": 1385,
        "y": 90,
        "wires": []
    },
    {
        "id": "4f86c81.221cf38",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "Tipo motor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Type",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 350,
        "wires": [
            [
                "6ba5b0f.631cf5"
            ]
        ]
    },
    {
        "id": "51579afe.51eb14",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "da5262b2.a8a4e",
            "7a4d75b8.711dac",
            "fb528297.8cba4",
            "c788660f.488af8",
            "d0882460.0dcf78",
            "fb3f8ca2.2a316",
            "501b4196.e2e16",
            "5f3854df5c8e1ca8",
            "7a4e451ab684e295",
            "4391f93affafd7a8",
            "07f261ede4e6a991"
        ],
        "x": 345,
        "y": 130,
        "wires": []
    },
    {
        "id": "da5262b2.a8a4e",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "51579afe.51eb14",
            "d9e918f.b47e7e8",
            "9acb8447.7a7a98"
        ],
        "x": 305,
        "y": 350,
        "wires": [
            [
                "4f86c81.221cf38"
            ]
        ]
    },
    {
        "id": "40d7a088.46f87",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 190,
        "wires": [
            [
                "d69d4857.ada828",
                "7def9f62.495c9",
                "1deb40a1.1db35f"
            ]
        ]
    },
    {
        "id": "4d8f9a8e.22e4f4",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 150,
        "wires": [
            [
                "d69d4857.ada828",
                "7def9f62.495c9",
                "1deb40a1.1db35f"
            ]
        ]
    },
    {
        "id": "a5507750.6b4748",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "user?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 170,
        "wires": [
            [
                "4d8f9a8e.22e4f4"
            ],
            [
                "40d7a088.46f87"
            ]
        ]
    },
    {
        "id": "5a370780.070d78",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "delete",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 170,
        "wires": [
            [
                "a5507750.6b4748"
            ]
        ]
    },
    {
        "id": "d0882460.0dcf78",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "51579afe.51eb14",
            "d9e918f.b47e7e8",
            "9acb8447.7a7a98"
        ],
        "x": 45,
        "y": 190,
        "wires": [
            [
                "b946d082e2c5a396"
            ]
        ]
    },
    {
        "id": "f796f5cc.fb7898",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "236c6c92.d31584",
            "501b4196.e2e16",
            "3f521e134773d692",
            "2935240c06b8dd69"
        ],
        "x": 1725,
        "y": 360,
        "wires": []
    },
    {
        "id": "7d229a445e26240e",
        "type": "subflow:1fbf295f73cccb97",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "env": [],
        "x": 1230,
        "y": 210,
        "wires": [
            []
        ]
    },
    {
        "id": "27642c12f77a13e3",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "Sts Ref",
        "func": "var Commanded_SpdRef    = parseFloat((Math.abs(global.get(\"C2S.Implicit.Commanded_SpdRef\",\"memoryOnly\")||0)).toFixed(3));\nvar Reference           = global.get(\"Input.Operation.Reference\",\"memoryOnly\")||0;\n\nif (Commanded_SpdRef == Reference)\n    msg.verify=1;\nelse\n    msg.verify = 0;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1370,
        "y": 170,
        "wires": [
            [
                "ec2d25ed.7e35c8"
            ]
        ]
    },
    {
        "id": "2fa174f43f9aa092",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 260,
        "y": 130,
        "wires": [
            [
                "51579afe.51eb14"
            ]
        ]
    },
    {
        "id": "0bfc0884740c4779",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "At Speed?",
        "property": "#:(memoryOnly)::C2S.Drive_Status.At_Setpt_Spd",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1450,
        "y": 410,
        "wires": [
            [
                "2c549c27.8f7a24"
            ],
            [
                "e1b2eae20714df85"
            ]
        ]
    },
    {
        "id": "4ea2e1987f3b3d50",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "52f1e35a6b450a62"
        ],
        "x": 1725,
        "y": 440,
        "wires": []
    },
    {
        "id": "e1b2eae20714df85",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "notif",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Para realizar una referencia prolongada el variador debe estar activo y en referencia",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 440,
        "wires": [
            [
                "4ea2e1987f3b3d50"
            ]
        ]
    },
    {
        "id": "aa49b3720341c633",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "delete",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 110,
        "wires": [
            [
                "d69d4857.ada828"
            ]
        ]
    },
    {
        "id": "ba206124b4c1fb5e",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "a80677cf.4274c8",
        "name": "root",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Admin Loged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1060,
        "wires": [
            [
                "cb232372.b3dee"
            ]
        ]
    },
    {
        "id": "0215c9c0562ad541",
        "type": "rbe",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1320,
        "y": 350,
        "wires": [
            [
                "ebf423611202c084"
            ]
        ]
    },
    {
        "id": "ebf423611202c084",
        "type": "switch",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Variador deshabilitado",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1440,
        "y": 350,
        "wires": [
            [
                "e92736fb1766d1e0"
            ]
        ]
    },
    {
        "id": "d2bf0a88cc35bf5f",
        "type": "link out",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "52f1e35a6b450a62"
        ],
        "x": 1705,
        "y": 350,
        "wires": []
    },
    {
        "id": "e92736fb1766d1e0",
        "type": "change",
        "z": "dd18d94e.4b1408",
        "g": "b2f2659a.67f648",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Disparo por protección en cabeza de pozo, variador deshabilitado",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 350,
        "wires": [
            [
                "d2bf0a88cc35bf5f"
            ]
        ]
    },
    {
        "id": "7060d261.ea55cc",
        "type": "link in",
        "z": "3af652c9.6f9bee",
        "g": "f3c2e7cf.5ed158",
        "name": "",
        "links": [
            "c0c1c5d8.339158"
        ],
        "x": 155,
        "y": 790,
        "wires": [
            [
                "21e4fb07.22d804"
            ]
        ]
    },
    {
        "id": "b045615539735b86",
        "type": "rbe",
        "z": "3af652c9.6f9bee",
        "g": "f3c2e7cf.5ed158",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1010,
        "y": 990,
        "wires": [
            [
                "6f28d8cd32960ae4"
            ]
        ]
    },
    {
        "id": "ecd73acb6f9a9a0a",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "a80677cf.4274c8",
        "name": "Ninguno",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sesión cerrada",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 940,
        "wires": [
            [
                "cb232372.b3dee"
            ]
        ]
    },
    {
        "id": "d084fb814fbc81c7",
        "type": "ui_text",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "group": "42b2cabf.0c7ea4",
        "order": 18,
        "width": "5",
        "height": "1",
        "name": "valor EA 4-20",
        "label": "Valor Actual:",
        "format": "{{msg.payload}} mA",
        "layout": "row-spread",
        "className": "",
        "x": 2810,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2279f26cd0212d82",
        "type": "ui_text",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "group": "42b2cabf.0c7ea4",
        "order": 20,
        "width": "5",
        "height": "1",
        "name": "valor EA Esc",
        "label": "Valor Escalizado:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2800,
        "y": 1130,
        "wires": []
    },
    {
        "id": "0ee7137faf7e5266",
        "type": "ui_led",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "order": 15,
        "group": "999747fd.0e43c8",
        "width": "5",
        "height": "1",
        "label": "{{msg.payload}}",
        "labelPlacement": "right",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ED",
        "x": 890,
        "y": 3260,
        "wires": []
    },
    {
        "id": "8c3766dbc41a84da",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "Valor actual",
        "func": "var Canal = flow.get(\"SD_Config.Canal\")||0;\nif(Canal !=0 ){\n    msg.payload = global.get('IO.DO.'+Canal,'memoryOnly');\n    node.status({ fill: \"green\", shape: \"dot\", text: msg.payload });\n    return msg;\n}\nelse{return;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 3260,
        "wires": [
            [
                "0ee7137faf7e5266"
            ]
        ]
    },
    {
        "id": "95a9452fed1bcc46",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 645,
        "y": 3260,
        "wires": [
            [
                "8c3766dbc41a84da"
            ]
        ]
    },
    {
        "id": "bed8e03b679b20a1",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "Valor actual",
        "func": "var Canal = flow.get(\"ED_Config.Canal\")||0;\nif(Canal !=0 ){\n    msg.payload = global.get('IO.DI.'+Canal,'memoryOnly');\n    node.status({ fill: \"green\", shape: \"dot\", text: msg.payload });\n    return msg;\n}\nelse{return;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 1220,
        "wires": [
            [
                "5a4252038d4d9943"
            ]
        ]
    },
    {
        "id": "5a4252038d4d9943",
        "type": "ui_led",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "order": 15,
        "group": "9457c46f.d710c8",
        "width": "5",
        "height": "1",
        "label": "{{msg.payload}}",
        "labelPlacement": "right",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ED",
        "x": 850,
        "y": 1220,
        "wires": []
    },
    {
        "id": "9cc8b89eee5fff72",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 405,
        "y": 1220,
        "wires": [
            [
                "bed8e03b679b20a1"
            ]
        ]
    },
    {
        "id": "9045b8b8f1b4cb30",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "Valor actual",
        "func": "var Canal = flow.get(\"EA_Config.Canal\")||\"--\";\nCanal = Canal.replace('AN','');\nif(Canal !=\"--\" ){\n    msg.payload = global.get('IO.AI.'+Canal,'memoryOnly');\n    node.status({ fill: \"green\", shape: \"dot\", text: msg.payload });\n    return msg;\n}\nelse{return;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2420,
        "y": 1080,
        "wires": [
            [
                "9bdf8250cc69db9a",
                "646733347a6612a4"
            ]
        ]
    },
    {
        "id": "9e6212a088a3de43",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 2315,
        "y": 1080,
        "wires": [
            [
                "9045b8b8f1b4cb30"
            ]
        ]
    },
    {
        "id": "9bdf8250cc69db9a",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "Normalizar/Escalizar",
        "func": "// Valor a mapear\n//var value = Object.values(msg.payload)[0];\nvar value = msg.payload\n// Rango del valor a mapear\nvar a = [0,1009];\nvar b =[0,20];\n// Mapeo\nif(b !== null){\n    var t = (b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]));\n    // Saturación\n    if(t > b[1]){    t = b[1];}\n    else if(t < b[0]){ t = b[0];}\n    // Asignar payload\n    msg.payload = t.toFixed(3);\n}\nelse{\n    // Asignar payload\n    msg.payload = 0;\n}\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2610,
        "y": 1080,
        "wires": [
            [
                "d084fb814fbc81c7"
            ]
        ]
    },
    {
        "id": "646733347a6612a4",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "Normalizar/Escalizar",
        "func": "\nvar value = msg.payload\n// Rango del valor a mapear\nvar a = [200,1009];\nvar b = [(flow.get(\"EA_Config.Rango_Min\") || 0), (flow.get(\"EA_Config.Rango_Max\") || 0)];\n// Mapeo\nif(b !== null){\n    var t = (b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]));\n    // Saturación\n    if(t > b[1]){    t = b[1];}\n    else if(t < b[0]){ t = b[0];}\n    // Asignar payload\n    msg.payload = t.toFixed(3);\n}\nelse{\n    // Asignar payload\n    msg.payload = 0;\n}\n// Estado del nodo\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nreturn msg;\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2610,
        "y": 1130,
        "wires": [
            [
                "2279f26cd0212d82"
            ]
        ]
    },
    {
        "id": "e6b6ff7d.8a7e4",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "Data show",
        "func": "var numdec = 1;\nvar unidad = \"Hz\";\nif(typeof msg.payload == 'number' ){\n    msg.payload = parseFloat(msg.payload.toFixed(numdec)) + \" \" + unidad;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 310,
        "wires": [
            [
                "665fede5f3de1d98"
            ]
        ]
    },
    {
        "id": "54a9c1dc.1b5e1",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "retroal ref",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::C2S.Implicit.Commanded_SpdRef",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 310,
        "wires": [
            [
                "e6b6ff7d.8a7e4"
            ]
        ]
    },
    {
        "id": "95d0ab4.c78fe58",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "retroalim referencia",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 165,
        "y": 310,
        "wires": [
            [
                "54a9c1dc.1b5e1"
            ]
        ]
    },
    {
        "id": "665fede5f3de1d98",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "group": "4f5b8416.cada1c",
        "order": 2,
        "width": "2",
        "height": 1,
        "name": "",
        "label": "Ref: ",
        "format": "  {{msg.payload}}",
        "layout": "row-center",
        "x": 550,
        "y": 310,
        "wires": []
    },
    {
        "id": "7358889e25a9730b",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "group": "e5ec1549.1923c8",
        "order": 4,
        "width": 3,
        "height": 3,
        "name": "",
        "label": "Frec actual (Hz): ",
        "format": "<font size=7px> {{msg.payload}}",
        "layout": "col-center",
        "x": 640,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9669205ed660f045",
        "type": "ui_toast",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "Cancelar",
        "raw": false,
        "topic": "Arranque",
        "name": "confirm",
        "x": 1160,
        "y": 720,
        "wires": [
            [
                "c18012395112a0ce"
            ]
        ]
    },
    {
        "id": "87827b566b48717a",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "conf",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿Desea arrancar el equipo?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 720,
        "wires": [
            [
                "9669205ed660f045"
            ]
        ]
    },
    {
        "id": "c18012395112a0ce",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "if",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Aceptar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1290,
        "y": 720,
        "wires": [
            [
                "6ce1fdc68db47520"
            ]
        ]
    },
    {
        "id": "6ce1fdc68db47520",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "conf",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 720,
        "wires": [
            [
                "0cf9a43ae3a4bb15",
                "4be7d50a192e4c91"
            ]
        ]
    },
    {
        "id": "59e526854e2b8c3c",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "conf",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿Desea detener el equipo?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 800,
        "wires": [
            [
                "1ef50e743f40cd2a"
            ]
        ]
    },
    {
        "id": "1ef50e743f40cd2a",
        "type": "ui_toast",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "Cancelar",
        "raw": false,
        "topic": "Parada",
        "name": "confirm",
        "x": 1160,
        "y": 800,
        "wires": [
            [
                "b966cb015fc7f719"
            ]
        ]
    },
    {
        "id": "b966cb015fc7f719",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "if",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Aceptar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1290,
        "y": 800,
        "wires": [
            [
                "4a7db122c2dc8b89"
            ]
        ]
    },
    {
        "id": "4a7db122c2dc8b89",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "conf",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Stop",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 800,
        "wires": [
            [
                "e834cca1573f4ed0",
                "e6a12821beef3055",
                "dbe93e91ea0fe6e8",
                "5f0c32e4b7c726e9",
                "3b7708c43f02500b",
                "326325a2bd2ea956"
            ]
        ]
    },
    {
        "id": "6976ac3e970219a5",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "E/S",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Entradas y Salidas",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 540,
        "y": 1180,
        "wires": [
            [
                "9a3c55637b414564"
            ]
        ]
    },
    {
        "id": "d50db12b1156dd89",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 405,
        "y": 1180,
        "wires": [
            [
                "6976ac3e970219a5"
            ]
        ]
    },
    {
        "id": "0c70a5025011d1a3",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2580,
        "y": 1040,
        "wires": [
            [
                "5c9b452a467b8d49"
            ]
        ]
    },
    {
        "id": "8862fe04df379b4e",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "name": "",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 2485,
        "y": 1040,
        "wires": [
            [
                "0c70a5025011d1a3"
            ]
        ]
    },
    {
        "id": "16235279f7b6eaa7",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 3220,
        "wires": [
            [
                "bd7dd23a7e43554f"
            ]
        ]
    },
    {
        "id": "b0ad660b4a9c1425",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 445,
        "y": 3220,
        "wires": [
            [
                "16235279f7b6eaa7"
            ]
        ]
    },
    {
        "id": "a47bc1a79bec3f2a",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 405,
        "y": 1140,
        "wires": [
            [
                "f4ae677093cfe747"
            ]
        ]
    },
    {
        "id": "4eafac1d50c909bb",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 475,
        "y": 840,
        "wires": [
            [
                "9460f3800542cdfd"
            ]
        ]
    },
    {
        "id": "9460f3800542cdfd",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "default",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ED_Config.Canal",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 840,
        "wires": [
            [
                "89414bbc.a5514"
            ]
        ]
    },
    {
        "id": "30502daf05b7eeda",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 515,
        "y": 2890,
        "wires": [
            [
                "be049efe6b0fc3b9",
                "50dac80ef4089e02"
            ]
        ]
    },
    {
        "id": "be049efe6b0fc3b9",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "default",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SD_Config.Canal",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 2890,
        "wires": [
            [
                "d0dec1ce.b76b2"
            ]
        ]
    },
    {
        "id": "1701a25e8d726d0c",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 2305,
        "y": 710,
        "wires": [
            [
                "6918ddbec17b6a14"
            ]
        ]
    },
    {
        "id": "6918ddbec17b6a14",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "d532ac68.2d5408",
        "name": "default",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "EA_Config.Canal",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2410,
        "y": 710,
        "wires": [
            [
                "d72d7948.167a58"
            ]
        ]
    },
    {
        "id": "4f1a0a8f7bc7b597",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "notif text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Cambio de sentido de giro a forward",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 520,
        "wires": [
            [
                "cb0c215187dec002"
            ]
        ]
    },
    {
        "id": "5faed9508d725863",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "notif text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Cambio de sentido de giro a reverse",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 600,
        "wires": [
            [
                "cb0c215187dec002"
            ]
        ]
    },
    {
        "id": "cb0c215187dec002",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 2095,
        "y": 560,
        "wires": []
    },
    {
        "id": "f0a1193a68ccf552",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "notif text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Cambio de sentido de giro a reverse fallido",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 640,
        "wires": [
            [
                "906f6c90b95e81f4"
            ]
        ]
    },
    {
        "id": "171a6647ad51ac09",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "notif text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Cambio de sentido de giro a forward fallido",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 560,
        "wires": [
            [
                "906f6c90b95e81f4"
            ]
        ]
    },
    {
        "id": "906f6c90b95e81f4",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 2095,
        "y": 600,
        "wires": []
    },
    {
        "id": "412d39b3d6365e23",
        "type": "subflow:669c188.bd26ee8",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "---------- THP ---------- ",
        "env": [
            {
                "name": "protection",
                "value": "THP",
                "type": "str"
            }
        ],
        "x": 2130,
        "y": 540,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "1a8c4a3f92c0ded2",
        "type": "subflow:669c188.bd26ee8",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "----------- THT -----------",
        "env": [
            {
                "name": "protection",
                "value": "THT",
                "type": "str"
            }
        ],
        "x": 2130,
        "y": 590,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "8751d17310eaf23b",
        "type": "ui_text_input",
        "z": "902fc438.e5d758",
        "g": "9ede9b9e7f6ac7f4",
        "name": "",
        "label": "Nombre del pozo",
        "tooltip": "",
        "group": "e5ec1549.1923c8",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 1930,
        "y": 1210,
        "wires": [
            [
                "35137a2a22d04d5a"
            ]
        ]
    },
    {
        "id": "b00ac783be79f527",
        "type": "ui_text_input",
        "z": "902fc438.e5d758",
        "g": "9ede9b9e7f6ac7f4",
        "name": "",
        "label": "Nombre del pozo",
        "tooltip": "",
        "group": "d4113fd9.a0bfc",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 1930,
        "y": 1260,
        "wires": [
            [
                "35137a2a22d04d5a"
            ]
        ]
    },
    {
        "id": "b9e9be80c75ac7c7",
        "type": "ui_text_input",
        "z": "902fc438.e5d758",
        "g": "9ede9b9e7f6ac7f4",
        "name": "",
        "label": "Nombre del pozo",
        "tooltip": "",
        "group": "2d559537.720c4a",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 1930,
        "y": 1310,
        "wires": [
            [
                "35137a2a22d04d5a"
            ]
        ]
    },
    {
        "id": "35137a2a22d04d5a",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "9ede9b9e7f6ac7f4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Input.Pozo",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 1260,
        "wires": [
            [
                "fadff7a7b6574e6e"
            ]
        ]
    },
    {
        "id": "2f2a2b11810b4fbe",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "9ede9b9e7f6ac7f4",
        "name": "",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 1545,
        "y": 1260,
        "wires": [
            [
                "e8b4e1fd2e2dcd2b"
            ]
        ]
    },
    {
        "id": "e8b4e1fd2e2dcd2b",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "9ede9b9e7f6ac7f4",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1630,
        "y": 1260,
        "wires": [
            [
                "a0eaac952dc20a15"
            ]
        ]
    },
    {
        "id": "a0eaac952dc20a15",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "9ede9b9e7f6ac7f4",
        "name": "retroal",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Input.Pozo",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1260,
        "wires": [
            [
                "8751d17310eaf23b",
                "b00ac783be79f527",
                "b9e9be80c75ac7c7"
            ]
        ]
    },
    {
        "id": "bc51637eae51a6ea",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Local",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 570,
        "wires": [
            [
                "83065c59.d13dc"
            ],
            [
                "a3099110.2b922"
            ]
        ]
    },
    {
        "id": "da070d04b5c81bf7",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Local",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 300,
        "y": 710,
        "wires": [
            [
                "f285ddcdf74ae6b9"
            ],
            [
                "ceaca04f38cadf35"
            ]
        ]
    },
    {
        "id": "b946d082e2c5a396",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Local",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 190,
        "wires": [
            [
                "5a370780.070d78"
            ],
            [
                "08226d873258aac3"
            ]
        ]
    },
    {
        "id": "448626b05dfddbc4",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "modo remoto",
        "links": [
            "d8c3331e.ce174",
            "07f261ede4e6a991",
            "6f1f2fc244d27fc2",
            "ed742163861f3de5"
        ],
        "x": 1425,
        "y": 270,
        "wires": []
    },
    {
        "id": "c3390704b058d213",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Local",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 110,
        "y": 130,
        "wires": [
            [
                "7ce1ea89ccdec386"
            ],
            [
                "a46699b424dc32bc"
            ]
        ]
    },
    {
        "id": "ed742163861f3de5",
        "type": "link in",
        "z": "18d8f6b717fbdf76",
        "g": "7b407017129e2c3f",
        "name": "",
        "links": [
            "448626b05dfddbc4"
        ],
        "x": 145,
        "y": 90,
        "wires": [
            [
                "c3390704b058d213"
            ]
        ]
    },
    {
        "id": "08226d873258aac3",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 210,
        "wires": [
            [
                "d8d555f6892b9f69",
                "81eed12a3bd250e1"
            ]
        ]
    },
    {
        "id": "d8d555f6892b9f69",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "user?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 250,
        "wires": [
            [
                "9ee0b0d96c23fba3"
            ],
            [
                "2e9f7aa20b0503c1"
            ]
        ]
    },
    {
        "id": "2e9f7aa20b0503c1",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 270,
        "wires": [
            [
                "1deb40a1.1db35f"
            ]
        ]
    },
    {
        "id": "9ee0b0d96c23fba3",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 230,
        "wires": [
            [
                "1deb40a1.1db35f"
            ]
        ]
    },
    {
        "id": "deadd391d9a98ab5",
        "type": "ui_button",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "name": "Versión",
        "group": "4f5b8416.cada1c",
        "order": 4,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#e7e9e8",
        "icon": "fa-television",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 360,
        "y": 1160,
        "wires": [
            [
                "0de54509db195c49"
            ]
        ]
    },
    {
        "id": "3f8e772d5525d94a",
        "type": "ui_toast",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "",
        "raw": false,
        "topic": "Info IP",
        "name": "",
        "x": 630,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "52501268e456d659",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "0379aa12b6a49e83",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "CILA_infoIP.PQA",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "0de54509db195c49",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "name": "Info",
        "func": "var CILA = flow.get(\"CILA_infoIP\") || {'PQA':\"192.168.2.13\",\"SWC\":{\"IP\":\"192.168.2.11\",'NETMASK':\"255.255.255.0\"}};\nvar C2SIP = global.get(\"C2S.IP\")||\"192.168.2.10\";\n\nmsg.payload = \"Variador: \" + C2SIP + \"; SWC IP: \" + CILA.SWC.IP+ \"; SWC Máscara: \" + CILA.SWC.NETMASK + \"; PQA: \" + CILA.PQA;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "3f8e772d5525d94a"
            ]
        ]
    },
    {
        "id": "856da30f.2df08",
        "type": "exec",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "command": "ifconfig eth0",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1240,
        "y": 1010,
        "wires": [
            [
                "babc7e0a.35af5"
            ],
            [],
            []
        ]
    },
    {
        "id": "7342b43f.bedb2c",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "name": "Obtener IP & Netmask",
        "func": "// Get string complete\nvar str                 = msg.payload;\n\n// Get 'inet' start and end position inside the string\nvar start_of_inet       = str.indexOf('inet')+5;\nvar end_of_inet         = str.indexOf('netmask')-2;\n\n// Get 'netmask' start and end position inside the string\nvar start_of_netmask    = str.indexOf('netmask')+8;\nvar end_of_netmask      = str.indexOf('broadcast')-2;\n\n// Get \"inet\" complete string.\nvar inet                = str.slice(start_of_inet,end_of_inet);\nvar netmask             = str.slice(start_of_netmask,end_of_netmask);\n\nmsg.payload ={\n    \"Ethernet\":inet,\n    \"Netmask\":netmask\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1670,
        "y": 1000,
        "wires": [
            [
                "df476a8b.883118",
                "3663f735.969b68"
            ]
        ]
    },
    {
        "id": "df476a8b.883118",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "name": "Ethernet",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Ethernet",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 1000,
        "wires": [
            [
                "8b49a22469343868"
            ]
        ]
    },
    {
        "id": "3663f735.969b68",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "name": "Netmask",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Netmask",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 1040,
        "wires": [
            [
                "03894c480a20a7a9"
            ]
        ]
    },
    {
        "id": "babc7e0a.35af5",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "name": "Not null configuration",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "inet",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1430,
        "y": 1000,
        "wires": [
            [
                "7342b43f.bedb2c"
            ],
            [
                "ef1ec9d.e6ba638"
            ]
        ]
    },
    {
        "id": "ef1ec9d.e6ba638",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "name": "null",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Not configured",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 1100,
        "wires": [
            [
                "ccd73af1.690d48",
                "4933a716.e0ed08"
            ]
        ]
    },
    {
        "id": "4933a716.e0ed08",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "name": "Netmask",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No configurado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 1120,
        "wires": [
            [
                "03894c480a20a7a9"
            ]
        ]
    },
    {
        "id": "ccd73af1.690d48",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "name": "Ethernet",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No configurado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 1080,
        "wires": [
            [
                "8b49a22469343868"
            ]
        ]
    },
    {
        "id": "61e7fdf2ae5b9c9e",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 1135,
        "y": 1010,
        "wires": [
            [
                "856da30f.2df08"
            ]
        ]
    },
    {
        "id": "8b49a22469343868",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "CILA_infoIP.SWC.IP",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "03894c480a20a7a9",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "6b3fc99d.7d45d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "CILA_infoIP.SWC.NETMASK",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "81eed12a3bd250e1",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "16cf58d47defa9bf",
            "f57724415e4e2027"
        ],
        "x": 385,
        "y": 210,
        "wires": []
    },
    {
        "id": "16cf58d47defa9bf",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "81eed12a3bd250e1"
        ],
        "x": 745,
        "y": 90,
        "wires": [
            [
                "d69d4857.ada828"
            ]
        ]
    },
    {
        "id": "f57724415e4e2027",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "81eed12a3bd250e1"
        ],
        "x": 745,
        "y": 210,
        "wires": [
            [
                "7def9f62.495c9"
            ]
        ]
    },
    {
        "id": "a9bfdd539a3af04e",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1500,
        "wires": [
            [
                "c4507372adf32737"
            ]
        ]
    },
    {
        "id": "2958b089336b7560",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "retroalim referencia",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 635,
        "y": 1500,
        "wires": [
            [
                "a9bfdd539a3af04e"
            ]
        ]
    },
    {
        "id": "105d7cf5310d3d86",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 2740,
        "wires": [
            [
                "6784775a.6334d8"
            ]
        ]
    },
    {
        "id": "7578d16bf9d408ae",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "36fa9c99094e8f47",
        "name": "retroalim referencia",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 685,
        "y": 2740,
        "wires": [
            [
                "105d7cf5310d3d86"
            ]
        ]
    },
    {
        "id": "61e97bac3a5fa1cd",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1590,
        "y": 1600,
        "wires": [
            [
                "8f8ff381bd9d2c1f"
            ]
        ]
    },
    {
        "id": "0a0df9d8a978db38",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "retroalim referencia",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 1495,
        "y": 1600,
        "wires": [
            [
                "61e97bac3a5fa1cd"
            ]
        ]
    },
    {
        "id": "7fba8f14a29d758a",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "links": [
            "93ed76d69e2674b6"
        ],
        "x": 1035,
        "y": 1000,
        "wires": []
    },
    {
        "id": "93ed76d69e2674b6",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "7aad629d.de652c",
        "name": "",
        "links": [
            "7fba8f14a29d758a",
            "67301b2be25911c7"
        ],
        "x": 95,
        "y": 310,
        "wires": [
            [
                "c1723a65.a620c8"
            ]
        ]
    },
    {
        "id": "67301b2be25911c7",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "links": [
            "93ed76d69e2674b6",
            "87c4cb7258a17006"
        ],
        "x": 665,
        "y": 740,
        "wires": []
    },
    {
        "id": "a8d50b9f6b5726b4",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "links": [
            "14c9d205.a3aa7e",
            "d07a46088074515d"
        ],
        "x": 875,
        "y": 670,
        "wires": []
    },
    {
        "id": "bee2d0ed90d4d8eb",
        "type": "catch",
        "z": "7a89175c.90f6a8",
        "g": "c4bcf1ca.3d67d",
        "name": "",
        "scope": [
            "e4db17d9.6120e",
            "18c47ba8.228914",
            "3df4fb63.5f8cbc",
            "cf4ce76f.283b48",
            "3e5019c8.17d316",
            "3854e43c.ec8264",
            "a7252de6.c8312",
            "88f2ffd7.25d348",
            "55eb0949.d6d6c8",
            "5162edc5.fd86ec",
            "98d887d0.c0b08",
            "a4715132.442a68",
            "67b09cbc.c12944",
            "5acff31a.72921c",
            "5ae9830f.47b96c",
            "e944556b.827528"
        ],
        "uncaught": false,
        "x": 1900,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "4d661e0115eb3f43",
        "type": "catch",
        "z": "7a89175c.90f6a8",
        "g": "2fa4e5be63ea61ce",
        "name": "",
        "scope": [
            "3cca25dd292d56e4",
            "515bf075edacdc7f",
            "60644c9056ee8264",
            "eecf6f885f3529b9"
        ],
        "uncaught": false,
        "x": 120,
        "y": 3760,
        "wires": [
            []
        ]
    },
    {
        "id": "ba68c6c472e8f1c8",
        "type": "catch",
        "z": "38e901f121b52acb",
        "g": "d84d4fbe.ee6ce",
        "name": "",
        "scope": [
            "5500fe6d.2fbd18"
        ],
        "uncaught": false,
        "x": 1370,
        "y": 550,
        "wires": [
            []
        ]
    },
    {
        "id": "95837cd7.bf6c2",
        "type": "modbus-read",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "PyModbusServer",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "55",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3548b3b4.c8d65c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 490,
        "y": 220,
        "wires": [
            [
                "75c0e161.43a1c"
            ],
            []
        ]
    },
    {
        "id": "2941139c.7c7b0c",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 920,
        "y": 220,
        "wires": [
            [
                "40a7a5e88d4d7930"
            ],
            [
                "75f68408374f389c"
            ],
            [
                "18dfc8d5e0aea327"
            ]
        ]
    },
    {
        "id": "21fd4ac4.46c936",
        "type": "rbe",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload[0]",
        "x": 800,
        "y": 220,
        "wires": [
            [
                "2941139c.7c7b0c"
            ]
        ]
    },
    {
        "id": "17ca02e7.855ccd",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Arranque remoto bloqueado",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Intento de arranque remoto bloqueado",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 140,
        "wires": [
            [
                "66f58a7.5c16574"
            ]
        ]
    },
    {
        "id": "9515e42e.7cd818",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Parada remota bloqueada",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Intento de parada remota bloqueada",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 180,
        "wires": [
            [
                "66f58a7.5c16574"
            ]
        ]
    },
    {
        "id": "66f58a7.5c16574",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Evento Arranque/Parada Bloqueado Link Out",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1385,
        "y": 180,
        "wires": []
    },
    {
        "id": "75c0e161.43a1c",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "SCADA TCP",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "TCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 220,
        "wires": [
            [
                "21fd4ac4.46c936"
            ]
        ]
    },
    {
        "id": "ead1502b.eb49",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "SCADA RTU",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "RTU",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 270,
        "wires": [
            [
                "21fd4ac4.46c936",
                "46cdb592.10060c"
            ]
        ]
    },
    {
        "id": "46cdb592.10060c",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload[0]",
        "targetType": "msg",
        "statusVal": "payload[50]",
        "statusType": "auto",
        "x": 870,
        "y": 270,
        "wires": []
    },
    {
        "id": "5c77bc75.2ac4e4",
        "type": "modbus-flex-getter",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Leer Cubloc RS-232",
        "showStatusActivities": true,
        "showErrors": false,
        "logIOActivities": false,
        "server": "f630cb55.8d18e8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 470,
        "y": 270,
        "wires": [
            [
                "ead1502b.eb49"
            ],
            []
        ]
    },
    {
        "id": "eaf3c61f.78e7d8",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Registro Modbus",
        "func": "msg.payload = { \n    'fc': 4, \n    'unitid': 1, \n    'address': 28672+20+55, \n    'quantity':1   \n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 270,
        "wires": [
            [
                "5c77bc75.2ac4e4"
            ]
        ]
    },
    {
        "id": "5b1cac10.b42af4",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Arranque/Parada/Reset RTU-Link In",
        "links": [
            "d6696a76.a52418",
            "db78f4a9db4a0b18"
        ],
        "x": 135,
        "y": 270,
        "wires": [
            [
                "eaf3c61f.78e7d8"
            ]
        ]
    },
    {
        "id": "a114a289.8a1e4",
        "type": "modbus-flex-write",
        "z": "e483884bee93bec2",
        "g": "e2e299a6.d3c5c8",
        "name": "PyModbus",
        "showStatusActivities": true,
        "showErrors": true,
        "server": "3548b3b4.c8d65c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 540,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1e5314e3.cd3f7b",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "e2e299a6.d3c5c8",
        "name": "Mapa Modbus",
        "func": "var C2S = global.get('C2S.Implicit', 'memoryOnly') || [];\nvar Np = global.get('C2S.Motor_Control.Nameplate') || [];\nvar LR = global.get('Input.Operation.ControlMode') || [];\nvar SC = global.get('C2S.Speed_Control') || [];\nvar Status = global.get('C2S.Drive_Status', 'memoryOnly') || [];\nvar PQA = global.get('PQA', 'memoryOnly') || [];\nvar DHSelect = global.get('Process_data.DHS.Number') || 0;\nvar DHSData = global.get('Process_data.DHS', 'memoryOnly') || [];\nvar DHSData2 = global.get('Process_data.AI', 'memoryOnly') || [];\nvar Rtx = global.get(\"C2S.RelTx\") || 1;\nvar ProlongedTime = global.get('Control_functions.Prolonged_Reference.Time') || 0;\nvar PID = global.get(\"AuxiliarPIDModbus\", \"memoryOnly\") || [10, 10, 0, 10, 0, 10, 10];\nvar arauto = global.get(\"Control_functions.ActiveCF.AutomaticRestart\", \"memoryOnly\") || false;\nvar prolongada = global.get(\"Control_functions.ActiveCF.Prolonged_Reference\", \"memoryOnly\") || false;\nvar escalonado = global.get(\"Control_functions.ActiveCF.Staggered_start\", \"memoryOnly\") || false;\nvar PIDController = global.get(\"Control_functions.ActiveCF.PIDController\", \"memoryOnly\") || false;\nvar rocking = global.get(\"Control_functions.ActiveCF.RockingStart\", \"memoryOnly\") || false;\n\nvar funcact;\nif(!arauto && !prolongada && !escalonado && !PIDController && !rocking) funcact=0;\nelse if (arauto) funcact =1;\nelse if (escalonado) funcact =2;\nelse if (prolongada) funcact =3;\nelse if(rocking) funcact =4;\nelse funcact=5;\n\nvar MtrVoltage = C2S.Output_Voltage * Rtx;\nvar MtrCurrent = C2S.Output_Current / Rtx;\n\n// Vector mapa Modbus\nvar Mapa = [];\n\nMapa[0] = C2S.Output_Frequency * 10;\nMapa[1] = MtrVoltage * 10;\nMapa[2] = C2S.Output_Current * 10;\nMapa[8] = C2S.Output_Power * 10;\nMapa[10] = C2S.Output_Voltage * 10;\nMapa[12] = funcact;\nMapa[14] = C2S.Commanded_SpdRef;\nMapa[15] = ProlongedTime;\nMapa[16] = C2S.Bus_DC_Volts;\nMapa[17] = 1;                                        // No se ha definido. Potencia aparente.\nMapa[18] = C2S.Drive_Temp_C;\nMapa[20] = PID[0];                                        // No se ha definido. Relación TX Elevador.\nMapa[21] = PID[1];                                        // No se ha definido. Delta Voltaje de caida actual.\nMapa[22] = val(DHSData[\"Vibración X\"]);\nMapa[23] = val(DHSData[\"Vibración Z\"]);\nMapa[24] = PID[2];                                        // No se ha definido. Vibración bomba lado acople.\nMapa[47] = 1;                                        // No se ha definido. Referencia prolongada.\n\n// Datos placa de motor.\nMapa[3] = MtrCurrent * 10;\n\n// Datos comando Local/Remoto.\nMapa[4] = DHSelect;\n\n// Datos control de velocidad\nMapa[5] = SC.Accel;\nMapa[6] = SC.Decel;\nMapa[9] = SC.MinLimit * 10;\nMapa[11] = SC.MaxLimit * 10;\n\n// Datos estado C2S\nMapa[7] = Status.Active == 1 ? 0 : 1;\nMapa[13] = Status.Actual_dir == 1 ? 1 : 0;\n\n// Datos PQA\n\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[19] = PQA.Real_Time_Parameters.Total_Power_Factor * 100 : Mapa[19] = 0;\nMapa[25] = PID[3];\nMapa[26] = PID[4];\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[27] = PQA.Real_Time_Parameters.Average_Phase_Current * 10 : Mapa[27] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[28] = PQA.Real_Time_Parameters.Frequency * 10 : Mapa[28] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[29] = PQA.Real_Time_Parameters.Total_System_Power * 10 : Mapa[29] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[30] = PQA.Real_Time_Parameters.Total_Apparent_Power * 10 : Mapa[30] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[31] = PQA.Real_Time_Parameters.Total_Reactive_Power * 10 : Mapa[31] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[32] = PQA.Real_Time_Parameters.Total_Power_Factor * 100 : Mapa[32] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[33] = PQA.Real_Time_Parameters.Line_Voltage_1_2 * 10 : Mapa[33] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[34] = PQA.Real_Time_Parameters.Line_Voltage_2_3 * 10 : Mapa[34] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[35] = PQA.Real_Time_Parameters.Line_Voltage_3_1 * 10 : Mapa[35] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[36] = PQA.Real_Time_Parameters.Phase_1_Voltage * 10 : Mapa[36] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[37] = PQA.Real_Time_Parameters.Phase_2_Voltage * 10 : Mapa[37] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[38] = PQA.Real_Time_Parameters.Phase_3_Voltage * 10 : Mapa[38] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[39] = PQA.Real_Time_Parameters.Total_Phase_A_Current * 10 : Mapa[39] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[40] = PQA.Real_Time_Parameters.Total_Phase_B_Current * 10 : Mapa[40] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[41] = PQA.Real_Time_Parameters.Total_Phase_C_Current * 10 : Mapa[41] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[42] = PQA.Real_Time_Parameters.Phase_A_Power * 10 : Mapa[42] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[43] = PQA.Real_Time_Parameters.Phase_B_Power * 10 : Mapa[43] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[44] = PQA.Real_Time_Parameters.Phase_C_Power * 10 : Mapa[44] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[45] = PQA.Harmonics.Power_Quality.THD_Iavg * 10 : Mapa[45] = 0;\n(PQA != [] && typeof PQA.Real_Time_Parameters != 'undefined') ? Mapa[46] = PQA.Harmonics.Power_Quality.THD_avg * 10 : Mapa[46] = 0;\n\n// Datos Sensor de fondo\nMapa[47] = DHSData != [] ? DHSData[\"Presión de entrada\"] : 0;\nMapa[48] = DHSData != [] ? DHSData[\"Presión de descarga\"] : 0;\nMapa[49] = DHSData != [] ? DHSData[\"Temperatura de entrada\"] : 0;\nMapa[50] = DHSData != [] ? DHSData[\"Temperatura de descarga\"] : 0;\nMapa[51] = DHSData != [] ? DHSData[\"Temperatura de motor\"] : 0;\nMapa[52] = DHSData2 != [] ? DHSData2[\"Presión de casing\"] : 0;\nMapa[53] = DHSData2 != [] ? DHSData2[\"Presión de cabeza THP\"] : 0;\nMapa[54] = DHSData2 != [] ? DHSData2[\"Temperatura de cabeza THT\"] : 0;\n\n// Recorrer el mapa para evitar valores indefinidos\nfor (var i = 0; i < Mapa.length; i += 1) {\n    Mapa[i] = val(Mapa[i]);\n}\n// Escribir Mapa\nmsg.payload = {\n    value: Mapa,\n    'fc': 16,\n    'unitid': 1,\n    'address': 0,\n    'quantity': Mapa.length\n}\nreturn msg;\n\n// Ajustar datos |definded X|\nfunction val(X) {\n    return typeof X != 'undefined' ? parseInt(Math.abs(X)) : 0;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 380,
        "wires": [
            [
                "a114a289.8a1e4",
                "573c6f3e.737db",
                "97dbb46e.15a998"
            ]
        ]
    },
    {
        "id": "16d0549c.29adcb",
        "type": "inject",
        "z": "e483884bee93bec2",
        "g": "e2e299a6.d3c5c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 190,
        "y": 380,
        "wires": [
            [
                "1e5314e3.cd3f7b"
            ]
        ]
    },
    {
        "id": "b74aaf11.088a3",
        "type": "catch",
        "z": "e483884bee93bec2",
        "g": "e2e299a6.d3c5c8",
        "name": "",
        "scope": [
            "1e5314e3.cd3f7b"
        ],
        "uncaught": false,
        "x": 730,
        "y": 430,
        "wires": [
            [
                "43428867.2750e8"
            ]
        ]
    },
    {
        "id": "43428867.2750e8",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "e2e299a6.d3c5c8",
        "name": "Error lectura MBS Par",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 430,
        "wires": []
    },
    {
        "id": "e9fd7861.d2db88",
        "type": "catch",
        "z": "e483884bee93bec2",
        "g": "e2e299a6.d3c5c8",
        "name": "Catch Modbus",
        "scope": [
            "a114a289.8a1e4",
            "e090fa5b.c9b178"
        ],
        "uncaught": false,
        "x": 700,
        "y": 380,
        "wires": [
            [
                "238050bf.0374f"
            ]
        ]
    },
    {
        "id": "238050bf.0374f",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "e2e299a6.d3c5c8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 380,
        "wires": []
    },
    {
        "id": "573c6f3e.737db",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "e2e299a6.d3c5c8",
        "name": "Dirección RS-485",
        "rules": [
            {
                "t": "set",
                "p": "payload.address",
                "pt": "msg",
                "to": "28692",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 420,
        "wires": [
            [
                "c1702022.91ab1"
            ]
        ]
    },
    {
        "id": "c1702022.91ab1",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "e2e299a6.d3c5c8",
        "name": "Escribir Mapa Modbus Cubloc Link Out",
        "links": [
            "6072e3af4ad63d61"
        ],
        "x": 355,
        "y": 420,
        "wires": []
    },
    {
        "id": "97dbb46e.15a998",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "e2e299a6.d3c5c8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 520,
        "y": 430,
        "wires": []
    },
    {
        "id": "edee9c45251eda71",
        "type": "catch",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "",
        "scope": [
            "f939f41a8ca3bfbe"
        ],
        "uncaught": false,
        "x": 1730,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "74dcac6d2f510c53",
        "type": "catch",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "",
        "scope": [
            "fc115c1c3c5adc56",
            "6fb0ab0f1387a9a8"
        ],
        "uncaught": false,
        "x": 1590,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "eecb7d8c6fa2c337",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 3870,
        "wires": [
            [
                "d3b4a26719f7796d",
                "e219528c8859a421"
            ]
        ]
    },
    {
        "id": "d3b4a26719f7796d",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 3910,
        "wires": [
            [
                "db78f4a9db4a0b18",
                "a352b171830499c8"
            ]
        ]
    },
    {
        "id": "e219528c8859a421",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "links": [
            "ac4a48c1.4681c8",
            "e27e6301502145ba",
            "4f3ea6384074c205",
            "1910455f45408d2a"
        ],
        "x": 935,
        "y": 3870,
        "wires": []
    },
    {
        "id": "db78f4a9db4a0b18",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "links": [
            "5b1cac10.b42af4",
            "6d970f1bee054be7"
        ],
        "x": 935,
        "y": 3910,
        "wires": []
    },
    {
        "id": "a352b171830499c8",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 3950,
        "wires": [
            [
                "b1cb2195.c8a37",
                "85366b43.f6bda8"
            ]
        ]
    },
    {
        "id": "a5c076e6.b3cdf8",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Leer Cubloc Protecciones MSB",
        "links": [
            "dd479ce7.53bf1",
            "8a3d7a9b0c8200cc"
        ],
        "x": 1195,
        "y": 3950,
        "wires": []
    },
    {
        "id": "b1cb2195.c8a37",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "name": "Mapa Modbus Protecciones",
        "func": "var Load_HH_Sp      = global.get('Protections.Load.HH.Setpoint')||0;\nvar Load_LL_Sp      = global.get('Protections.Load.LL.Setpoint')||0;\nvar PReference      = global.get('Control_functions.Prolonged_Reference.Time')||0;\nvar PIn_HH_Sp       = global.get('Protections.IntakePressure.HH.Setpoint')||0;\nvar PIn_LL_Sp       = global.get('Protections.IntakePressure.LL.Setpoint')||0;\nvar TIn_HH_Sp       = global.get('Protections.IntakeTemperature.HH.Setpoint')||0;\nvar TDis_HH_Sp      = global.get('Protections.DischargeTemperature.HH.Setpoint')||0;\nvar Mtr_Temp_HH_Sp  = global.get('Protections.MotorTemperature.HH.Setpoint')||0;\nvar Accel           = global.get('C2S.Speed_Control.Accel')||0;\nvar Deccel          = global.get('C2S.Speed_Control.Decel')||0;\n\nvar vector = [\n    Load_HH_Sp,     // 58\n    Load_LL_Sp,     // 59\n    PReference,     // 60\n    PIn_HH_Sp,      // 61\n    PIn_LL_Sp,      // 62\n    TIn_HH_Sp,      // 63\n    TDis_HH_Sp,     // 64\n    Mtr_Temp_HH_Sp, // 65\n    Accel,          // 66\n    Deccel          // 67\n]\n\n// Recorrer el mapa para evitar valores indefinidos\nfor (var i = 0; i < vector.length; i += 1) {\n    vector[i] = val(vector[i]);\n}\n\nmsg.payload = { \n    value: vector, \n    'fc': 3, \n    'unitid': 1, \n    'address': 28672+20+58,\n    'quantity': vector.length\n} \nreturn msg;\n\n// Ajustar datos |definded X|\nfunction val(X) {\n    return typeof X != 'undefined' ? parseInt(Math.abs(X)) : 0;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 3950,
        "wires": [
            [
                "a5c076e6.b3cdf8"
            ]
        ]
    },
    {
        "id": "85366b43.f6bda8",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 3990,
        "wires": [
            [
                "bc8762e.9b52fa",
                "df086dcc.f3e5"
            ]
        ]
    },
    {
        "id": "bc8762e.9b52fa",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Estado Protecciones MBS",
        "func": "var Protections = global.get(\"Protections\", 'memoryOnly') || [];\n\nvar Voltage         = Protections['Voltage']||[];\nvar Current         = Protections['Load']||[];\nvar Vibration       = Protections['VibrationGeneral']||[];\nvar InPressure      = Protections['IntakePressure']||[];\nvar InTemperaure    = Protections['IntakeTemperature']||[];\nvar DisPressure     = Protections['DischargePressure']||[];\nvar DisTemperature  = Protections['DischargeTemperature']||[];\nvar MtrTemp         = Protections['MotorTemperature']||[];\nvar THP             = Protections['THP']||[];\nvar THT             = Protections['THT']||[];\n\nvar vector = [\n    protSts(Voltage),        // 68\n    protSts(Current),        // 69\n    protSts(Vibration),      // 70\n    protSts(InPressure),     // 71\n    protSts(InTemperaure),   // 72\n    protSts(DisPressure),    // 73\n    protSts(DisTemperature), // 74\n    protSts(MtrTemp),        // 75\n    protSts(THP),            // 76\n    protSts(THT)             // 77\n]\n\n// Recorrer el mapa para evitar valores indefinidos\nfor (var i = 0; i < vector.length; i += 1) {\n    vector[i] = val(vector[i]);\n}\n\nmsg.payload = { \n    value: vector, \n    'fc': 16, \n    'unitid': 1, \n    'address': 28672+20+68, \n    'quantity': vector.length\n} \nreturn msg;\n\n// Ajustar datos |definded X|\nfunction val(X) {\n    return typeof X != 'undefined' ? parseInt(Math.abs(X)) : 0;\n}\n\n// Estado de protecciones\n/**\n* @param {{ HH: any; LL: any; H: any; L: any; }} Protection\n*/\nfunction protSts(Protection){\n    var Resp = 0;\n    if(Protection.HH){ Resp = 4}\n    else if(Protection.LL){Resp = 3}\n    else if(Protection.H){Resp = 2}\n    else if (Protection.L){Resp = 1}\n    else{Resp =0}\n    return Resp;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 3990,
        "wires": [
            [
                "26144798845bf323"
            ]
        ]
    },
    {
        "id": "b803e401.b39198",
        "type": "inject",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2990,
        "y": 150,
        "wires": [
            [
                "8dd3e4dc.7b82c8",
                "18312819.54fd68"
            ]
        ]
    },
    {
        "id": "28b9d8d4.780938",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "links": [
            "6d33fcb1.428484",
            "998f0e93.941f1",
            "ad87cee4.7dbb5"
        ],
        "x": 3025,
        "y": 190,
        "wires": [
            [
                "8dd3e4dc.7b82c8"
            ]
        ]
    },
    {
        "id": "8dd3e4dc.7b82c8",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "Mapa Modbus Protecciones",
        "func": "var Load_HH_Sp = global.get('Protections.Load.HH.Setpoint') || 0;\nvar Load_LL_Sp = global.get('Protections.Load.LL.Setpoint') || 0;\nvar PReference = global.get('Control_functions.Prolonged_Reference.Time') || 0;\nvar PIn_HH_Sp = global.get('Protections.IntakePressure.HH.Setpoint') || 0;\nvar PIn_LL_Sp = global.get('Protections.IntakePressure.LL.Setpoint') || 0;\nvar TIn_HH_Sp = global.get('Protections.IntakeTemperature.HH.Setpoint') || 0;\nvar TDis_HH_Sp = global.get('Protections.DischargeTemperature.HH.Setpoint') || 0;\nvar Mtr_Temp_HH_Sp = global.get('Protections.MotorTemperature.HH.Setpoint') || 0;\nvar Accel = global.get('C2S.Speed_Control.Accel') || 0;\nvar Deccel = global.get('C2S.Speed_Control.Decel') || 0;\n\nvar vector = [\n    Load_HH_Sp,     // 58\n    Load_LL_Sp,     // 59\n    PReference,     // 60\n    PIn_HH_Sp,      // 61\n    PIn_LL_Sp,      // 62\n    TIn_HH_Sp,      // 63\n    TDis_HH_Sp,     // 64\n    Mtr_Temp_HH_Sp, // 65\n    Accel,          // 66\n    Deccel          // 67\n]\n\n// Recorrer el mapa para evitar valores indefinidos\nfor (var i = 0; i < vector.length; i += 1) {\n    vector[i] = val(vector[i]);\n}\n\nmsg.payload = {\n    value: vector,\n    'fc': 16,\n    'unitid': 1,\n    'address': 58,\n    'quantity': vector.length\n}\nreturn msg;\n\n// Ajustar datos |definded X|\nfunction val(X) {\n    return typeof X != 'undefined' ? parseInt(Math.abs(X)) : 0;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3300,
        "y": 150,
        "wires": [
            [
                "d2066f4.d47179",
                "b261da20ce556a23"
            ]
        ]
    },
    {
        "id": "d2066f4.d47179",
        "type": "modbus-flex-write",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "PyModbusServer",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "3548b3b4.c8d65c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 3550,
        "y": 150,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "22b4769d.fa73aa",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "SpDiff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Protections.Load.HH.Setpoint",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 200,
        "wires": [
            [
                "898a9e08.eb30d"
            ]
        ]
    },
    {
        "id": "7fcd7f44.da50a",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "SpDiff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Protections.Load.LL.Setpoint",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 240,
        "wires": [
            [
                "d49a58a4.182318"
            ]
        ]
    },
    {
        "id": "7e94d37b.d9ba6c",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "SpDiff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Control_functions.Prolonged_Reference.Time",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3430,
        "y": 280,
        "wires": [
            [
                "9d69dee97c9d4411",
                "25cc60d9875e0b46"
            ]
        ]
    },
    {
        "id": "11a05a7f.1ef4b6",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "SpDiff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Protections.IntakePressure.HH.Setpoint",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 320,
        "wires": [
            [
                "7eb9f31b.5d87ac"
            ]
        ]
    },
    {
        "id": "39b7d6d0.170dda",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "SpDiff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Protections.IntakePressure.LL.Setpoint",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 360,
        "wires": [
            [
                "e848d5b7.89ed48"
            ]
        ]
    },
    {
        "id": "e7ce38e8.ddf7a8",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "SpDiff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Protections.IntakeTemperature.HH.Setpoint",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 400,
        "wires": [
            [
                "de525e4.80448a"
            ]
        ]
    },
    {
        "id": "30a1afd8.5fed9",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "SpDiff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Protections.DischargeTemperature.HH.Setpoint",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 440,
        "wires": [
            [
                "366809a8.54ae36"
            ]
        ]
    },
    {
        "id": "b9e47311.f3082",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "SpDiff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Protections.MotorTemperature.HH.Setpoint",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 480,
        "wires": [
            [
                "e1b1ed5d.b46dc"
            ]
        ]
    },
    {
        "id": "5a4c3f91.66de5",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "SpDiff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "C2S.Speed_Control.Accel",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 520,
        "wires": [
            [
                "2cd74731.e47058"
            ]
        ]
    },
    {
        "id": "1d2a31df.d8149e",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "SpDiff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "C2S.Speed_Control.Decel",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 560,
        "wires": [
            [
                "93b8513a.2e011"
            ]
        ]
    },
    {
        "id": "93b8513a.2e011",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Speed_Control.Decel",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3470,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "2cd74731.e47058",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Speed_Control.Accel",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3470,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "e1b1ed5d.b46dc",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Protections.MotorTemperature.HH.Setpoint",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3520,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "366809a8.54ae36",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Protections.DischargeTemperature.HH.Setpoint",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3530,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "de525e4.80448a",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Protections.IntakeTemperature.HH.Setpoint",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3520,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e848d5b7.89ed48",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Protections.IntakePressure.LL.Setpoint",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3510,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "7eb9f31b.5d87ac",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Protections.IntakePressure.HH.Setpoint",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3510,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d49a58a4.182318",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Protections.Load.LL.Setpoint",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3480,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "898a9e08.eb30d",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Protections.Load.HH.Setpoint",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3480,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "f9984424.f2ea88",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "Modbus",
        "func": "var modbus = [\n    MSG(msg.payload[0]),\n    MSG(msg.payload[1]),\n    MSG(msg.payload[2]),\n    MSG(msg.payload[3]),\n    MSG(msg.payload[4]),\n    MSG(msg.payload[5]),\n    MSG(msg.payload[6]),\n    MSG(msg.payload[7]),\n    MSG(msg.payload[8]),\n    MSG(msg.payload[9])\n]\nreturn modbus;\n\nfunction MSG(X){\n    return {payload: X}\n}\n",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3040,
        "y": 380,
        "wires": [
            [
                "22b4769d.fa73aa"
            ],
            [
                "7fcd7f44.da50a"
            ],
            [
                "2027934fefee8b19"
            ],
            [
                "11a05a7f.1ef4b6"
            ],
            [
                "39b7d6d0.170dda"
            ],
            [
                "e7ce38e8.ddf7a8"
            ],
            [
                "30a1afd8.5fed9"
            ],
            [
                "b9e47311.f3082"
            ],
            [
                "5a4c3f91.66de5"
            ],
            [
                "1d2a31df.d8149e"
            ]
        ],
        "outputLabels": [
            "Load HH Setpoint",
            "Load LL Setpoint",
            "P. Ref. Reference",
            "Intake Pressure HH Setpoint",
            "Intake Pressure LL Setpoint",
            "Intake Temp HH Setpoint",
            "Discharge Temp HH Setpoint",
            "Mtr. Temp HH Setpoint",
            "",
            ""
        ]
    },
    {
        "id": "19f40c8c.08b2c3",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "Retardo Lectura Mapa Modbus",
        "func": "var Counter = context.get(\"count\",\"memoryOnly\")||0;\nif(Counter <= 5){\n    Counter += 1;\n    context.set(\"count\",Counter,\"memoryOnly\");\n    return;\n}\nelse{\n    context.set(\"count\", 0, \"memoryOnly\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2810,
        "y": 380,
        "wires": [
            [
                "f9984424.f2ea88",
                "46aa199a15d83484"
            ]
        ]
    },
    {
        "id": "888867d4.3eb148",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "Remoto",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2880,
        "y": 420,
        "wires": [
            [
                "19f40c8c.08b2c3"
            ]
        ]
    },
    {
        "id": "4970f246.2964dc",
        "type": "modbus-read",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "58",
        "quantity": "10",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3548b3b4.c8d65c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 2600,
        "y": 420,
        "wires": [
            [
                "fd592d35.6763e"
            ],
            []
        ]
    },
    {
        "id": "18312819.54fd68",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "Estado Protecciones MBS",
        "func": "var Protections = global.get(\"Protections\", 'memoryOnly') || [];\n\nvar Voltage = Protections['Voltage'] || [];\nvar Current = Protections['Load'] || [];\nvar Vibration = Protections['VibrationGeneral'] || [];\nvar InPressure = Protections['IntakePressure'] || [];\nvar InTemperaure = Protections['IntakeTemperature'] || [];\nvar DisPressure = Protections['DischargePressure'] || [];\nvar DisTemperature = Protections['DischargeTemperature'] || [];\nvar MtrTemp = Protections['MotorTemperature'] || [];\nvar THP = Protections['THP'] || [];\nvar THT = Protections['THT'] || [];\n\nvar vector = [\n    protSts(Voltage),        // 68\n    protSts(Current),        // 69\n    protSts(Vibration),      // 70\n    protSts(InPressure),     // 71\n    protSts(InTemperaure),   // 72\n    protSts(DisPressure),    // 73\n    protSts(DisTemperature), // 74\n    protSts(MtrTemp),        // 75\n    protSts(THP),            // 76\n    protSts(THT)             // 77\n]\n\n// Recorrer el mapa para evitar valores indefinidos\nfor (var i = 0; i < vector.length; i += 1) {\n    vector[i] = val(vector[i]);\n}\n\nmsg.payload = {\n    value: vector,\n    'fc': 16,\n    'unitid': 1,\n    'address': 68,\n    'quantity': vector.length\n}\nreturn msg;\n\n// Ajustar datos |definded X|\nfunction val(X) {\n    return typeof X != 'undefined' ? parseInt(Math.abs(X)) : 0;\n}\n\n// Estado de protecciones\n/**\n* @param {{ HH: any; LL: any; H: any; L: any; }} Protection\n*/\nfunction protSts(Protection) {\n    var Resp = 0;\n    if (Protection.HH) { Resp = 4 }\n    else if (Protection.LL) { Resp = 3 }\n    else if (Protection.H) { Resp = 2 }\n    else if (Protection.L) { Resp = 1 }\n    else { Resp = 0 }\n    return Resp;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3300,
        "y": 110,
        "wires": [
            [
                "d2066f4.d47179"
            ]
        ]
    },
    {
        "id": "66c4a9b8.ae31f8",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "links": [
            "ad87cee4.7dbb5",
            "ecf98f3f.4a704"
        ],
        "x": 3025,
        "y": 110,
        "wires": [
            [
                "18312819.54fd68",
                "8dd3e4dc.7b82c8"
            ]
        ]
    },
    {
        "id": "8cd9b627.3e1fe8",
        "type": "modbus-flex-getter",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "f630cb55.8d18e8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 2660,
        "y": 470,
        "wires": [
            [
                "5530c155.8e88f"
            ],
            []
        ]
    },
    {
        "id": "dd479ce7.53bf1",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "links": [
            "a5c076e6.b3cdf8"
        ],
        "x": 2525,
        "y": 470,
        "wires": [
            [
                "8cd9b627.3e1fe8"
            ]
        ]
    },
    {
        "id": "5530c155.8e88f",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "RTU",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "RTU",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2830,
        "y": 470,
        "wires": [
            [
                "888867d4.3eb148"
            ]
        ]
    },
    {
        "id": "fd592d35.6763e",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "TCP",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "TCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2740,
        "y": 420,
        "wires": [
            [
                "888867d4.3eb148"
            ]
        ]
    },
    {
        "id": "ba9797b7.e07f98",
        "type": "inject",
        "z": "e483884bee93bec2",
        "g": "f52d84f3.4970f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Local/Remoto",
        "payloadType": "global",
        "x": 2630,
        "y": 670,
        "wires": [
            [
                "a68f4079.7351a"
            ]
        ]
    },
    {
        "id": "a68f4079.7351a",
        "type": "rbe",
        "z": "e483884bee93bec2",
        "g": "f52d84f3.4970f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 2800,
        "y": 670,
        "wires": [
            [
                "62e320be.78337"
            ]
        ]
    },
    {
        "id": "62e320be.78337",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "f52d84f3.4970f8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Local",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2920,
        "y": 670,
        "wires": [
            [
                "f68d32a7.f0e8d"
            ],
            [
                "186649d5.ec0ba6"
            ]
        ]
    },
    {
        "id": "186649d5.ec0ba6",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "f52d84f3.4970f8",
        "name": "Disabled",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3050,
        "y": 690,
        "wires": [
            [
                "596ac22c.7d379c"
            ]
        ]
    },
    {
        "id": "f68d32a7.f0e8d",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "f52d84f3.4970f8",
        "name": "Enabled",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3050,
        "y": 650,
        "wires": [
            [
                "596ac22c.7d379c"
            ]
        ]
    },
    {
        "id": "596ac22c.7d379c",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "f52d84f3.4970f8",
        "name": "Local/Remoto Protecciones",
        "links": [
            "806e7b59.38e138",
            "3e39b5ec.dda60a",
            "28fd8b2e.2b37e4",
            "f1b01bce.f6aca8",
            "11e71592.43ecba",
            "49ed0754.2b0538",
            "8a84bba5.928628",
            "e44c2e4e.679a2",
            "191ae243.ac0bde",
            "38307403.cf947c",
            "bacec764.887808",
            "6d92a416.15af1c"
        ],
        "x": 3175,
        "y": 660,
        "wires": []
    },
    {
        "id": "8f903bea.3e5c78",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Sentido de giro remoto",
        "links": [
            "367aaa61.59c686"
        ],
        "x": 935,
        "y": 4030,
        "wires": []
    },
    {
        "id": "df086dcc.f3e5",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 4030,
        "wires": [
            [
                "8f903bea.3e5c78",
                "efcf76de.3c9038"
            ]
        ]
    },
    {
        "id": "c973a8a2.547fd8",
        "type": "modbus-read",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "PyModbusServer",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "57",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3548b3b4.c8d65c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 220,
        "y": 730,
        "wires": [
            [
                "df95f144.a381e"
            ],
            []
        ]
    },
    {
        "id": "ab968d92.63f1a",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Selector sentido de giro",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1270,
        "y": 730,
        "wires": [
            [
                "e9a27110d3a5ec11"
            ],
            [
                "3611a75838121692"
            ]
        ]
    },
    {
        "id": "b7525f1.09e7ba",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1230,
        "y": 770,
        "wires": []
    },
    {
        "id": "767f6ef3.dc93e",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Command Dir",
        "func": "var Dir = global.get('C2S.Drive_Status.Command_dir','memoryOnly');\nDir = Dir == 0 ? 1:0;\nnode.status({fill:\"green\",shape:\"dot\",text:'Dir: '+Dir});\n\nif(msg.payload== Dir){\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 730,
        "wires": [
            [
                "ab968d92.63f1a",
                "b7525f1.09e7ba"
            ]
        ]
    },
    {
        "id": "32b103a.fd52dfc",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Mensaje",
        "func": "msg.payload = msg.payload == 1 ? \"Cambio de sentido de giro remoto a forward\":\"Cambio de sentido de giro remoto a reverse\";\ndelete msg.topic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1680,
        "y": 710,
        "wires": [
            [
                "2ae6e9d4.8de576"
            ]
        ]
    },
    {
        "id": "df95f144.a381e",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Retardo Lectura Mapa Modbus",
        "func": "var Counter = context.get(\"count\",\"memoryOnly\")||0;\nif(Counter <= 5){\n    Counter += 1;\n    context.set(\"count\",Counter,\"memoryOnly\");\n    return;\n}\nelse{\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 730,
        "wires": [
            [
                "3beef93f3144bc82"
            ]
        ]
    },
    {
        "id": "ee97766f.b938a8",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Sentido de giro remoto",
        "func": "\nmsg.payload = { \n    value: msg.payload, \n    'fc': 6, \n    'unitid': 1, \n    'address': 57, \n    'quantity':1   \n}\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload.address});\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1430,
        "y": 610,
        "wires": [
            [
                "75ae9dfb.c587e4"
            ]
        ]
    },
    {
        "id": "dbdd149d.067a48",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "",
        "links": [
            "24678530.efc32a",
            "7dacdbe3.f9cb94",
            "ad87cee4.7dbb5"
        ],
        "x": 1105,
        "y": 610,
        "wires": [
            [
                "c7fb486e.cbe278"
            ]
        ]
    },
    {
        "id": "75ae9dfb.c587e4",
        "type": "modbus-flex-write",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "PyModbusServer",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "3548b3b4.c8d65c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 1700,
        "y": 610,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c7fb486e.cbe278",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Command Dir",
        "func": "var Dir = global.get('C2S.Drive_Status.Command_dir','memoryOnly')||1;\nDir = Dir == 0 ? 1:0;\nnode.status({fill:\"green\",shape:\"dot\",text:'Dir: '+Dir});\n\nif(msg.payload== Dir){\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 610,
        "wires": [
            [
                "ee97766f.b938a8",
                "147476e5.8f75e9"
            ]
        ]
    },
    {
        "id": "2ae6e9d4.8de576",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "",
        "links": [
            "52f1e35a6b450a62"
        ],
        "x": 1775,
        "y": 710,
        "wires": []
    },
    {
        "id": "147476e5.8f75e9",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Sentido de giro remoto",
        "func": "\nmsg.payload = { \n    value: msg.payload, \n    'fc': 6, \n    'unitid': 1, \n    'address': 28672+20+57, \n    'quantity':1   \n}\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload.address});\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1430,
        "y": 660,
        "wires": [
            [
                "b468d7fd.170728"
            ]
        ]
    },
    {
        "id": "b468d7fd.170728",
        "type": "modbus-flex-write",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "f630cb55.8d18e8",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 1700,
        "y": 660,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8e0bd418.ddd0a8",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Retardo Lectura Mapa Modbus",
        "func": "var Counter = context.get(\"count\",\"memoryOnly\")||0;\nif(Counter <= 5){\n    Counter += 1;\n    context.set(\"count\",Counter,\"memoryOnly\");\n    return;\n}\nelse{\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 780,
        "wires": [
            [
                "ac48a73ca5e98ec8"
            ]
        ]
    },
    {
        "id": "9b2f7ea6.27b4a",
        "type": "modbus-flex-getter",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "f630cb55.8d18e8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 510,
        "y": 780,
        "wires": [
            [
                "8e0bd418.ddd0a8"
            ],
            []
        ]
    },
    {
        "id": "1b2dd03e.2d9c2",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Sentido de giro remoto",
        "func": "\nmsg.payload = { \n    value: msg.payload, \n    'fc': 3, \n    'unitid': 1, \n    'address': 28672+20+57, \n    'quantity':1   \n}\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload.address});\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 780,
        "wires": [
            [
                "9b2f7ea6.27b4a"
            ]
        ]
    },
    {
        "id": "367aaa61.59c686",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "",
        "links": [
            "8f903bea.3e5c78"
        ],
        "x": 135,
        "y": 780,
        "wires": [
            [
                "1b2dd03e.2d9c2"
            ]
        ]
    },
    {
        "id": "efcf76de.3c9038",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 4070,
        "wires": [
            [
                "73a225c4.f6a26c",
                "de3e9eaee7d8ac1e"
            ]
        ]
    },
    {
        "id": "73a225c4.f6a26c",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Mapa Modbus Protecciones",
        "func": "var Load_HH_Sp      = global.get('Protections.Load.HH.Setpoint') || 0;\nvar Load_LL_Sp      = global.get('Protections.Load.LL.Setpoint') || 0;\nvar PReference      = global.get('Control_functions.Prolonged_Reference.Time') || 0;\nvar PIn_HH_Sp       = global.get('Protections.IntakePressure.HH.Setpoint') || 0;\nvar PIn_LL_Sp       = global.get('Protections.IntakePressure.LL.Setpoint') || 0;\nvar TIn_HH_Sp       = global.get('Protections.IntakeTemperature.HH.Setpoint') || 0;\nvar TDis_HH_Sp      = global.get('Protections.DischargeTemperature.HH.Setpoint') || 0;\nvar Mtr_Temp_HH_Sp  = global.get('Protections.MotorTemperature.HH.Setpoint') || 0;\nvar Accel           = global.get('C2S.Speed_Control.Accel') || 0;\nvar Deccel          = global.get('C2S.Speed_Control.Decel') || 0;\n\nvar vector = [\n    Load_HH_Sp,     // 58\n    Load_LL_Sp,     // 59\n    PReference,     // 60\n    PIn_HH_Sp,      // 61\n    PIn_LL_Sp,      // 62\n    TIn_HH_Sp,      // 63\n    TDis_HH_Sp,     // 64\n    Mtr_Temp_HH_Sp, // 65\n    Accel,          // 66\n    Deccel          // 67\n]\n\n// Recorrer el mapa para evitar valores indefinidos\nfor (var i = 0; i < vector.length; i += 1) {\n    vector[i] = val(vector[i]);\n}\n\nmsg.payload = { \n    value: vector, \n    'fc': 16, \n    'unitid': 1, \n    'address': 28672+20+58,\n    'quantity': vector.length\n} \nreturn msg;\n\n// Ajustar datos |definded X|\nfunction val(X) {\n    return typeof X != 'undefined' ? parseInt(Math.abs(X)) : 0;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 4070,
        "wires": [
            [
                "26144798845bf323"
            ]
        ]
    },
    {
        "id": "922be5c684474398",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Arranque Remoto",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 100,
        "wires": [
            [
                "04f4b5dacafd8d8a",
                "af93f6b34f6ca585",
                "65facb997d933eab"
            ]
        ]
    },
    {
        "id": "809262472babe067",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Parada Remota",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Stop",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 220,
        "wires": [
            [
                "04f4b5dacafd8d8a",
                "af93f6b34f6ca585",
                "65facb997d933eab",
                "f16c8e907b36e129"
            ]
        ]
    },
    {
        "id": "04f4b5dacafd8d8a",
        "type": "subflow:c8b77ff3.ab501",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "",
        "x": 1790,
        "y": 260,
        "wires": [
            [],
            [
                "5d4610f087064296"
            ]
        ]
    },
    {
        "id": "18dfc8d5e0aea327",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Reset remoto",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 260,
        "wires": [
            [
                "04f4b5dacafd8d8a",
                "a1b50cf6ed1c0958"
            ]
        ]
    },
    {
        "id": "5d4610f087064296",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "exito",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "fallid",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1920,
        "y": 260,
        "wires": [
            [
                "2e3cdd711a03c0ab",
                "1c4082263cd5819b"
            ],
            [
                "ef5d21afc5393db0"
            ]
        ]
    },
    {
        "id": "2e3cdd711a03c0ab",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Exitoso",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Arranque exitoso",
                "fromt": "str",
                "to": "Arranque remoto exitoso",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Parada exitosa",
                "fromt": "str",
                "to": "Parada remota exitosa",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 240,
        "wires": [
            [
                "6e4f3aa97716a07f"
            ]
        ]
    },
    {
        "id": "ef5d21afc5393db0",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Fallido",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Arranque fallido",
                "fromt": "str",
                "to": "Arranque remoto fallido",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Parada fallida",
                "fromt": "str",
                "to": "Parada remoto fallida",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 280,
        "wires": [
            [
                "44c1195dcc60d5f0"
            ]
        ]
    },
    {
        "id": "6e4f3aa97716a07f",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 2145,
        "y": 240,
        "wires": []
    },
    {
        "id": "44c1195dcc60d5f0",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 2145,
        "y": 280,
        "wires": []
    },
    {
        "id": "80168343b8739cfc",
        "type": "subflow:c8b77ff3.ab501",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "",
        "x": 1680,
        "y": 750,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e9a27110d3a5ec11",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Forward",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Direction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 710,
        "wires": [
            [
                "32b103a.fd52dfc",
                "80168343b8739cfc"
            ]
        ]
    },
    {
        "id": "3611a75838121692",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "Reverse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Direction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 750,
        "wires": [
            [
                "32b103a.fd52dfc",
                "80168343b8739cfc"
            ]
        ]
    },
    {
        "id": "6072e3af4ad63d61",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Mapa Modbus Link In",
        "links": [
            "c1702022.91ab1"
        ],
        "x": 1335,
        "y": 4020,
        "wires": [
            [
                "26144798845bf323"
            ]
        ]
    },
    {
        "id": "3454aecec2b8cde8",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "482200446b2a6616",
        "name": "SCADA TCP",
        "rules": [
            {
                "t": "set",
                "p": "SCADA.Type",
                "pt": "global",
                "to": "TCP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "1feec9a4535b665b",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "482200446b2a6616",
        "name": "SCADA RTU",
        "rules": [
            {
                "t": "set",
                "p": "SCADA.Type",
                "pt": "global",
                "to": "RTU",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "7b6eb12fa8a2304d",
        "type": "inject",
        "z": "e483884bee93bec2",
        "g": "482200446b2a6616",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 180,
        "y": 900,
        "wires": [
            [
                "3454aecec2b8cde8"
            ]
        ]
    },
    {
        "id": "76db56cf8aa9c664",
        "type": "inject",
        "z": "e483884bee93bec2",
        "g": "482200446b2a6616",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 180,
        "y": 940,
        "wires": [
            [
                "1feec9a4535b665b"
            ]
        ]
    },
    {
        "id": "51a7ac20587f7354",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.AutomaticRestart",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "87c4cb7258a17006",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "links": [
            "67301b2be25911c7"
        ],
        "x": 945,
        "y": 700,
        "wires": [
            [
                "51a7ac20587f7354"
            ]
        ]
    },
    {
        "id": "9f18333324a3788b",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "0379aa12b6a49e83",
        "name": "pqa ip",
        "links": [
            "05d014b89dc3d90f"
        ],
        "x": 85,
        "y": 1520,
        "wires": [
            [
                "52501268e456d659"
            ]
        ]
    },
    {
        "id": "e65ba7a271b6d8d4",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 1275,
        "y": 2720,
        "wires": [
            [
                "8a9d0c3be8d8b701"
            ]
        ]
    },
    {
        "id": "ad037575e738b405",
        "type": "link in",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 1255,
        "y": 270,
        "wires": [
            [
                "37db6fd4d5812c19"
            ]
        ]
    },
    {
        "id": "37db6fd4d5812c19",
        "type": "switch",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1350,
        "y": 270,
        "wires": [
            [
                "fae1adb677ba13c7"
            ]
        ]
    },
    {
        "id": "fae1adb677ba13c7",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "retroal ref",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::C2S.Implicit.Output_Frequency",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 270,
        "wires": [
            [
                "9faabcc1f09b24a8"
            ]
        ]
    },
    {
        "id": "9faabcc1f09b24a8",
        "type": "function",
        "z": "18d8f6b717fbdf76",
        "g": "10280aeffc57de7d",
        "name": "Data show",
        "func": "var numdec = 1;\nvar unidad = \"Hz\";\nif(typeof msg.payload == 'number' ){\n    msg.payload = parseFloat(msg.payload.toFixed(numdec))+\" Hz\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1630,
        "y": 270,
        "wires": [
            [
                "fa14e78abe8cc9e5"
            ]
        ]
    },
    {
        "id": "0fec5b4cfbe1d12c",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Estado fun. de control",
        "func": "var arauto = global.get(\"Control_functions.ActiveCF.AutomaticRestart\", \"memoryOnly\") || false;\nvar prolongada = global.get(\"Control_functions.ActiveCF.Prolonged_Reference\", \"memoryOnly\") || false;\nvar escalonado = global.get(\"Control_functions.ActiveCF.Staggered_start\", \"memoryOnly\") || false;\nvar PIDController = global.get(\"Control_functions.ActiveCF.PIDController\", \"memoryOnly\") || false;\nvar count = context.get(\"count\", \"memoryOnly\") || 0;\nvar auxt;\n\nvar contreg = global.get(\"Control_functions.ActiveCF.Conteo\", \"memoryOnly\") || 0;\nif (contreg != 0) {\n    auxt = \" en \" + contreg.toFixed(0) + \" s\";\n    global.set(\"Control_functions.ActiveCF.Conteo\", contreg - 0.5, \"memoryOnly\")\n}\nelse\n    auxt = \"\";\n\nif (count == 4)\n    count = 0;\n\nif (PIDController)\n    msg.payload = \"Modo de control PID\";\n\nelse if (arauto)\n    msg.payload = \"Ejecutando arranque automático\" + auxt;\n\nelse if (escalonado)\n    msg.payload = \"Ejecutando Arranque escalonado\";\n\nelse if (prolongada)\n    msg.payload = \"Ejecutando referencia prolongada\";\n\nelse\n    msg.payload = \"\";\n\nif (count > 2)\n    msg.payload = \"\";\n\ncontext.set(\"count\", count + 1, \"memoryOnly\");\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 840,
        "wires": [
            [
                "7bb26d6155488061"
            ]
        ]
    },
    {
        "id": "7bb26d6155488061",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "group": "f7aa27b.6c2ded8",
        "order": 10,
        "width": "8",
        "height": "1",
        "name": "Estado funciones de control",
        "label": "",
        "format": "<font size= 5px><font color = green>{{msg.payload}}",
        "layout": "row-left",
        "x": 680,
        "y": 840,
        "wires": []
    },
    {
        "id": "98d021b5.4ab52",
        "type": "function",
        "z": "d08f14e12055286a",
        "name": "Conteo Re-Arranque",
        "func": "msg.payload = msg.delay/1000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 590,
        "wires": [
            [
                "eb3c3b3196b499d2"
            ]
        ]
    },
    {
        "id": "dba5a375ebc26199",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Conteo",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.Conteo",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "1f7639cd6cd873fe",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.AutomaticRestart",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 550,
        "wires": [
            []
        ]
    },
    {
        "id": "ae172e07.4eb89",
        "type": "link out",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "links": [
            "730f767fbc450987",
            "7d21f05bb26114a5",
            "f61f03a556d40cc2"
        ],
        "x": 925,
        "y": 860,
        "wires": []
    },
    {
        "id": "9f324830.9da0c8",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Tracking Reference",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Last_Reference.Value",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 860,
        "wires": [
            [
                "ae172e07.4eb89"
            ]
        ]
    },
    {
        "id": "db3fdb908ecb466b",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "Ultima Referencia",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Last_Reference.Value",
                "pt": "global",
                "to": "Control_functions.Prolonged_Reference.Hz",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "C2S.Last_Reference.Source",
                "pt": "global",
                "to": "Rampa prolongada",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 860,
        "wires": [
            [
                "9f324830.9da0c8"
            ]
        ]
    },
    {
        "id": "caab4c9366a6a718",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Reset FSM",
        "links": [
            "bf6826f1.1eaf58",
            "51d6f5bd.7b3bac",
            "14c9d205.a3aa7e",
            "d864cf5d.4424a",
            "8ca4e5b4ca175ad4",
            "55b87356.a4664c",
            "295e7694c13aceb8",
            "d07a46088074515d",
            "cd5552afd6067d55"
        ],
        "x": 2005,
        "y": 830,
        "wires": []
    },
    {
        "id": "e6a12821beef3055",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 830,
        "wires": [
            [
                "caab4c9366a6a718"
            ]
        ]
    },
    {
        "id": "dbe93e91ea0fe6e8",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "AutomaticRestart",
        "property": "#:(memoryOnly)::Control_functions.ActiveCF.AutomaticRestart",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1900,
        "y": 710,
        "wires": [
            [
                "52efdbba89b3fe41"
            ]
        ]
    },
    {
        "id": "5f0c32e4b7c726e9",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Prolonged_Reference",
        "property": "#:(memoryOnly)::Control_functions.ActiveCF.Prolonged_Reference",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1910,
        "y": 750,
        "wires": [
            [
                "fb95e28d90e2177d",
                "3b0732a010e2131c"
            ]
        ]
    },
    {
        "id": "3b7708c43f02500b",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Staggered_start",
        "property": "#:(memoryOnly)::Control_functions.ActiveCF.Staggered_start",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1890,
        "y": 790,
        "wires": [
            [
                "840a159c6c18072c"
            ]
        ]
    },
    {
        "id": "52efdbba89b3fe41",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Arranque automático abortado",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 710,
        "wires": [
            [
                "3484e5233d4f23d3"
            ]
        ]
    },
    {
        "id": "fb95e28d90e2177d",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Referencia prolongada detenida",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 750,
        "wires": [
            [
                "3484e5233d4f23d3"
            ]
        ]
    },
    {
        "id": "840a159c6c18072c",
        "type": "change",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Arranque escalonado abortado",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 790,
        "wires": [
            [
                "3484e5233d4f23d3"
            ]
        ]
    },
    {
        "id": "3484e5233d4f23d3",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "links": [
            "204c251e.8264ca",
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 2245,
        "y": 750,
        "wires": []
    },
    {
        "id": "d566d0fc26a835fe",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.Staggered_start",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 430,
        "wires": [
            []
        ]
    },
    {
        "id": "295e7694c13aceb8",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "links": [
            "1ef779a27f308aef",
            "caab4c9366a6a718"
        ],
        "x": 1075,
        "y": 720,
        "wires": [
            [
                "a0fa86d.e053b78"
            ]
        ]
    },
    {
        "id": "d07a46088074515d",
        "type": "link in",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "links": [
            "caab4c9366a6a718",
            "a8d50b9f6b5726b4"
        ],
        "x": 1555,
        "y": 1000,
        "wires": [
            [
                "533f18d250f0f542"
            ]
        ]
    },
    {
        "id": "ae981d0ae38d021c",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.RockingStart",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b6e4d731ae400625",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.RockingStart",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "cd5552afd6067d55",
        "type": "link in",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "links": [
            "caab4c9366a6a718"
        ],
        "x": 1215,
        "y": 840,
        "wires": [
            [
                "b6e4d731ae400625"
            ]
        ]
    },
    {
        "id": "79fcf2343e22827c",
        "type": "catch",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "scope": [
            "3ea5879e.bf0588"
        ],
        "uncaught": false,
        "x": 1380,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "12e8c4108bf41494",
        "type": "inject",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#:(memoryOnly)::C2S.Drive_Status.Active",
        "payloadType": "global",
        "x": 1690,
        "y": 1120,
        "wires": [
            [
                "88548b2e943eafad"
            ]
        ]
    },
    {
        "id": "88548b2e943eafad",
        "type": "rbe",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1890,
        "y": 1120,
        "wires": [
            [
                "d0a28faca735a7cd"
            ]
        ]
    },
    {
        "id": "d0a28faca735a7cd",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2010,
        "y": 1120,
        "wires": [
            [
                "d98b5b76f78e1dcf"
            ]
        ]
    },
    {
        "id": "d98b5b76f78e1dcf",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "LoadFlag False",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::LoadFlag",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 1120,
        "wires": [
            [
                "0dbb0daa3dc39314"
            ]
        ]
    },
    {
        "id": "0dbb0daa3dc39314",
        "type": "delay",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2320,
        "y": 1120,
        "wires": [
            [
                "d76e4d26562180bb"
            ]
        ]
    },
    {
        "id": "d76e4d26562180bb",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "LoadFlag True",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::LoadFlag",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "20fa657d189a7cd8",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "LoadFlag",
        "property": "#:(memoryOnly)::LoadFlag",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2080,
        "y": 390,
        "wires": [
            [
                "e5fc5b4881c0f9df"
            ]
        ]
    },
    {
        "id": "17ab7fc9d8bf882b",
        "type": "function",
        "z": "669c188.bd26ee8",
        "name": "Protection Function",
        "func": "var Active = (global.get(\"C2S.Drive_Status.Active\", \"memoryOnly\") || 0) == 1 ? true : false;\nvar Accel = (global.get(\"C2S.Drive_Status.Accel\", \"memoryOnly\") || 0) == 1 ? true : false;\nvar Decel = (global.get(\"C2S.Drive_Status.Decel\", \"memoryOnly\") || 0) == 1 ? true : false;\n\n// Setpoints\nvar Prot = env.get('protection')||\"test\";\nvar querySpHH   = \"Protections.\"+Prot+\".HH.Setpoint\";\nvar querySpH    = \"Protections.\"+Prot+\".H.Setpoint\";\nvar querySpL    = \"Protections.\"+Prot+\".L.Setpoint\";\nvar querySpLL   = \"Protections.\"+Prot+\".LL.Setpoint\";\n\nvar HHSetpoint  = global.get(querySpHH)||0;\nvar HSetpoint   = global.get(querySpH)||0;\nvar LSetpoint   = global.get(querySpL)||0;\nvar LLSetpoint  = global.get(querySpLL)||0;\n\n// Enablers\nvar queryEnHH   = \"Protections.\"+Prot+\".HH.EN\";\nvar queryEnH    = \"Protections.\"+Prot+\".H.EN\";\nvar queryEnL    = \"Protections.\"+Prot+\".L.EN\";\nvar queryEnLL   = \"Protections.\"+Prot+\".LL.EN\";\n\nvar HH_EN       = global.get(queryEnHH)||false;\nvar H_EN        = global.get(queryEnH)||false;\nvar L_EN        = global.get(queryEnL)||false;\nvar LL_EN       = global.get(queryEnLL)||false;\n\n// Death times\nvar queryDtHH   = \"Protections.\"+Prot+\".HH.DT\";\nvar queryDtH    = \"Protections.\"+Prot+\".H.DT\";\nvar queryDtL    = \"Protections.\"+Prot+\".L.DT\";\nvar queryDtLL   = \"Protections.\"+Prot+\".LL.DT\";\n\nvar HHDeathTime = global.get(queryDtHH)||0;\nvar HDeathTime  = global.get(queryDtH)||0;\nvar LDeathTime  = global.get(queryDtL)||0;\nvar LLDeathTime = global.get(queryDtLL)||0;\n\n// Value\nvar CurrentValue = msg.payload;\n\nif (CurrentValue >= HHSetpoint && HH_EN === true) {\n    msg.disp = true;\n    msg.alrm = false;\n    msg.message = \"Trigger by HH Protection\";\n    msg.delay = HHDeathTime * 1000;\n    msg.state = 4;\n}\nelse if (CurrentValue >= HSetpoint && H_EN === true) {\n    msg.disp = false;\n    msg.alrm = true;\n    msg.message = \"Alarm by H Protection\";\n    msg.delay = HDeathTime * 1000;\n    msg.state = 2;\n}\nelse if (CurrentValue <= LLSetpoint && LL_EN === true && Active && !Accel && !Decel) {\n    msg.disp = true;\n    msg.alrm = false;\n    msg.message = \"Trigger by LL Protection\"\n    msg.delay = LLDeathTime * 1000;\n    msg.state = 3;\n}\nelse if (CurrentValue <= LSetpoint && L_EN === true && Active && !Accel && !Decel) {\n    msg.disp = false;\n    msg.alrm = true;\n    msg.message = \"Alarm by L Protection\";\n    msg.delay = LDeathTime * 1000;\n    msg.state = 1;\n}\nelse {\n    msg.disp = false;\n    msg.alrm = false;\n    msg.message = \"Normal condition\";\n    msg.reset = true;\n    msg.state = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 170,
        "y": 40,
        "wires": [
            [
                "04d3e8fe928cb3ad",
                "7afacdca4fc5c4bf",
                "b323a435ab341f39",
                "389b970a2172c9c6"
            ]
        ]
    },
    {
        "id": "04d3e8fe928cb3ad",
        "type": "function",
        "z": "669c188.bd26ee8",
        "name": "TON Disp",
        "func": "var Act = msg.disp;\nvar Ant = context.get(\"Anterior\")||false;\nvar Output = { \n    payload: false,\n    Mensaje: msg.message\n};\n\n// Actualizar el contexto\ncontext.set(\"Anterior\", Act);\n\n//Flanco de subida\nif(Act === true && Ant === false){\n    context.set(\"RefTime\", Date.now());\n}\nelse if(Act === true && Ant === true){\n    if(Date.now() - context.get(\"RefTime\") >= msg.delay){\n        Output.payload = true;\n    }\n}\nreturn Output;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 40,
        "wires": [
            [
                "7517aa169ca0081d"
            ]
        ]
    },
    {
        "id": "7afacdca4fc5c4bf",
        "type": "function",
        "z": "669c188.bd26ee8",
        "name": "TON Alrm",
        "func": "var Act = msg.alrm;\nvar Ant = context.get(\"Anterior\")||false;\nvar Output = { \n    payload: false,\n    Mensaje: msg.message\n};\n\n// Actualizar el contexto\ncontext.set(\"Anterior\", Act);\n\n//Flanco de subida\nif(Act === true && Ant === false){\n    context.set(\"RefTime\", Date.now());\n}\nelse if(Act === true && Ant === true){\n    if(Date.now() - context.get(\"RefTime\") >= msg.delay){\n        Output.payload = true;\n    }\n}\nreturn Output;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 90,
        "wires": [
            [
                "ab9417080d638bc6"
            ]
        ]
    },
    {
        "id": "b323a435ab341f39",
        "type": "change",
        "z": "669c188.bd26ee8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "259e1dca5899716a"
            ]
        ]
    },
    {
        "id": "259e1dca5899716a",
        "type": "switch",
        "z": "669c188.bd26ee8",
        "name": "Normal condition",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Normal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 140,
        "wires": [
            [
                "06ddbe009606959b"
            ]
        ]
    },
    {
        "id": "8142546899d599bf",
        "type": "switch",
        "z": "669c188.bd26ee8",
        "name": "true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 90,
        "wires": [
            [
                "a482404e80d50aee"
            ]
        ]
    },
    {
        "id": "ab9417080d638bc6",
        "type": "rbe",
        "z": "669c188.bd26ee8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 520,
        "y": 90,
        "wires": [
            [
                "8142546899d599bf"
            ]
        ]
    },
    {
        "id": "7517aa169ca0081d",
        "type": "rbe",
        "z": "669c188.bd26ee8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 520,
        "y": 40,
        "wires": [
            [
                "6dad03ed04433889"
            ]
        ]
    },
    {
        "id": "6dad03ed04433889",
        "type": "switch",
        "z": "669c188.bd26ee8",
        "name": "true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 40,
        "wires": [
            [
                "cea7f83d8531c46a"
            ]
        ]
    },
    {
        "id": "389b970a2172c9c6",
        "type": "function",
        "z": "669c188.bd26ee8",
        "name": "Status",
        "func": "msg.payload = \" Status: \" + msg.message + \", Value: \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "cea7f83d8531c46a",
        "type": "function",
        "z": "669c188.bd26ee8",
        "name": "Protections HH/LL",
        "func": "var Prot        = env.get('protection') || \"test\";\n\nvar ProtESP = {\n    Load: \"'Corriente'\",\n    THP: \"'THP'\",\n    THT: \"'THT'\",\n    MotorLoad: \"Corriente de motor\",\n    VibrationGeneral: \"'Vibración general'\",\n    CurrentLeakage: \"'Corriente de fuga'\",\n    IntakePressure: \"'Presión de entrada'\",\n    DischargePressure: \"'Presión de descarga'\",\n    IntakeTemperature: \"'Temperatura de entrada'\",\n    MotorTemperature: \"'Temperatura de motor'\",\n    Voltage: \"'Tensión de entrada'\",\n    BusDC: \"'Bus DC'\"\n}\n\nif (msg.Mensaje == \"Trigger by HH Protection\"){\n    var dispQuery = \"Protections.\" + Prot + \".HH\";\n    msg.payload = \"Disparo por protección \" + ProtESP[Prot] + \" HH\";\n    global.set(dispQuery, true, \"memoryOnly\");\n}\nelse if (msg.Mensaje == \"Trigger by LL Protection\"){\n    var dispQuery = \"Protections.\" + Prot + \".LL\";\n    msg.payload = \"Disparo por protección \" + ProtESP[Prot] + \" LL\";\n    global.set(dispQuery, true, \"memoryOnly\");\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "a482404e80d50aee",
        "type": "function",
        "z": "669c188.bd26ee8",
        "name": "Protections H/L",
        "func": "var Prot        = env.get('protection') || \"test\";\n\nvar ProtESP = {\n    Load: \"'Corriente'\",\n    THP: \"'THP'\",\n    THT: \"'THT'\",\n    VibrationGeneral: \"'Vibración general'\",\n    MotorLoad: \"Corriente de motor\",\n    CurrentLeakage: \"'Corriente de fuga'\",\n    IntakePressure: \"'Presión de entrada'\",\n    DischargePressure: \"'Presión de descarga'\",\n    IntakeTemperature: \"'Temperatura de entrada'\",\n    MotorTemperature: \"'Temperatura de motor'\",\n    Voltage: \"'Tensión de entrada'\",\n}\n\nif (msg.Mensaje == \"Alarm by H Protection\"){\n    var dispQuery = \"Protections.\" + Prot + \".H\";\n    msg.payload = \"Alarma por protección \" + ProtESP[Prot] + \" H\";\n    global.set(dispQuery, true, \"memoryOnly\");\n}\nelse if (msg.Mensaje == \"Alarm by L Protection\"){\n    var dispQuery = \"Protections.\" + Prot + \".L\";\n    msg.payload = \"Alarma por protección \" + ProtESP[Prot] + \" L\";\n    global.set(dispQuery, true, \"memoryOnly\");\n}\ndispQuery = \"Protections.\" + Prot + \".HH\";\nglobal.set(dispQuery, false, \"memoryOnly\");\ndispQuery = \"Protections.\" + Prot + \".LL\";\nglobal.set(dispQuery, false, \"memoryOnly\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 90,
        "wires": [
            []
        ]
    },
    {
        "id": "06ddbe009606959b",
        "type": "function",
        "z": "669c188.bd26ee8",
        "name": "Protections normal",
        "func": "var Prot        = env.get('protection') || \"test\";\n\nvar dispQuery = \"Protections.\" + Prot + \".HH\";\nglobal.set(dispQuery, false, \"memoryOnly\");\n\nvar dispQuery = \"Protections.\" + Prot + \".LL\";\nglobal.set(dispQuery, false, \"memoryOnly\");\n\nvar dispQuery = \"Protections.\" + Prot + \".H\";\nglobal.set(dispQuery, false, \"memoryOnly\");\n\nvar dispQuery = \"Protections.\" + Prot + \".L\";\nglobal.set(dispQuery, false, \"memoryOnly\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bfda390e.8957b8",
        "type": "change",
        "z": "c8b77ff3.ab501",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 270,
        "wires": [
            []
        ]
    },
    {
        "id": "cbfdace94f49381c",
        "type": "pccc out",
        "z": "c8b77ff3.ab501",
        "endpoint": "e9d237aaf9318e74",
        "variable": "CommandWord",
        "name": "",
        "x": 1660,
        "y": 110,
        "wires": []
    },
    {
        "id": "c46b2a9d6cbcacb5",
        "type": "delay",
        "z": "c8b77ff3.ab501",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1090,
        "y": 110,
        "wires": [
            [
                "0e34b34e76fa0ed8"
            ]
        ]
    },
    {
        "id": "0e34b34e76fa0ed8",
        "type": "change",
        "z": "c8b77ff3.ab501",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 110,
        "wires": [
            [
                "5a59784b.c9d428"
            ]
        ]
    },
    {
        "id": "0941bfa0e5e19a06",
        "type": "delay",
        "z": "c8b77ff3.ab501",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1640,
        "y": 190,
        "wires": [
            [
                "c660d8ba.ec2e48"
            ]
        ]
    },
    {
        "id": "3bcd0bc25707cae3",
        "type": "inject",
        "z": "c8b77ff3.ab501",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1490,
        "y": 70,
        "wires": [
            [
                "cbfdace94f49381c"
            ]
        ]
    },
    {
        "id": "0a3404882583c05d",
        "type": "function",
        "z": "c8b77ff3.ab501",
        "name": "Bloque de arranque por protección",
        "func": "var Prot = global.get(\"Protections.General\",'memoryOnly')||false;\nvar FallaGeneral = global.get(\"IO.Functions.DO['Falla general']\",\"memoryOnly\")||false;\nif ((Prot || FallaGeneral) &&  ((msg.command == \"Arranque 'Reverse'\") || (msg.command == \"Arranque 'Forward'\")) ){return;}\nelse{return msg;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1520,
        "y": 150,
        "wires": [
            [
                "5a59784b.c9d428"
            ]
        ]
    },
    {
        "id": "ab6b7001.e0de8",
        "type": "switch",
        "z": "c8b77ff3.ab501",
        "name": "comando",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Arranque",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Parada",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1250,
        "y": 190,
        "wires": [
            [
                "2264cd4e7e1c1e96"
            ],
            [
                "c166035b.91e08"
            ]
        ]
    },
    {
        "id": "db3132d3.18699",
        "type": "function",
        "z": "c8b77ff3.ab501",
        "name": "time",
        "func": "var rampadesc = global.get(\"C2S.Speed_Control.Decel\")||0;\nvar hzmotor = global.get(\"C2S.Motor_Control.Nameplate.Hertz\")||60;\nvar frecact = global.get(\"C2S.Implicit.Output_Frequency\",\"memoryOnly\")||0;\nfrecact = Math.abs(frecact);\n\n msg.delay = parseInt(((frecact/hzmotor)*rampadesc)*1000+2500);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 230,
        "wires": [
            [
                "25962296.9a6efe"
            ]
        ]
    },
    {
        "id": "25962296.9a6efe",
        "type": "delay",
        "z": "c8b77ff3.ab501",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1710,
        "y": 230,
        "wires": [
            [
                "c660d8ba.ec2e48"
            ]
        ]
    },
    {
        "id": "5a59784b.c9d428",
        "type": "function",
        "z": "c8b77ff3.ab501",
        "name": "Int to IEEE 754",
        "func": "v = new DataView(new ArrayBuffer(4));\nmsg.payload = msg.payload.toString(16);\nv.setUint32(0, '0x'+ msg.payload);\nnode.status({fill:\"green\",shape:\"dot\",text:v.getFloat32(0)});\n\nmsg.payload = v.getFloat32(0);\n\nreturn msg;\n\n// Fuentes:\n// https://stackoverflow.com/questions/41635908/node-red-parsing-json-data-and-converting-it-into-binary\n// https://stackoverflow.com/questions/49221045/javascript-hexadecimal-string-to-ieee-754-floating-point",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1460,
        "y": 110,
        "wires": [
            [
                "cbfdace94f49381c"
            ]
        ]
    },
    {
        "id": "20aa1ab35334cb43",
        "type": "delay",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1050,
        "y": 870,
        "wires": [
            [
                "628cd5f619b29af6"
            ]
        ]
    },
    {
        "id": "628cd5f619b29af6",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "apagar piloto falla gen",
        "func": "global.set(\"IO.Functions.DO['Falla general']\", false, 'memoryOnly');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1240,
        "y": 870,
        "wires": [
            []
        ]
    },
    {
        "id": "3b0732a010e2131c",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "stop prolonged ref",
        "links": [
            "4f53dfb62883c1ff"
        ],
        "x": 2125,
        "y": 670,
        "wires": []
    },
    {
        "id": "bbb7f8e6bcef99a7",
        "type": "link out",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "stop prolonged ref",
        "links": [
            "4f53dfb62883c1ff"
        ],
        "x": 735,
        "y": 720,
        "wires": []
    },
    {
        "id": "40a7a5e88d4d7930",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Remoto",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Local",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 100,
        "wires": [
            [
                "922be5c684474398"
            ],
            [
                "17ca02e7.855ccd"
            ]
        ]
    },
    {
        "id": "75f68408374f389c",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Remoto",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Local",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 220,
        "wires": [
            [
                "9515e42e.7cd818"
            ],
            [
                "809262472babe067"
            ]
        ]
    },
    {
        "id": "3beef93f3144bc82",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "TCP",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "TCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 730,
        "wires": [
            [
                "5d696eb6d1b57169"
            ]
        ]
    },
    {
        "id": "5d696eb6d1b57169",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "L/R",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 730,
        "wires": [
            [
                "2dd8e878a937af2c"
            ]
        ]
    },
    {
        "id": "2dd8e878a937af2c",
        "type": "rbe",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 910,
        "y": 730,
        "wires": [
            [
                "767f6ef3.dc93e"
            ]
        ]
    },
    {
        "id": "ac48a73ca5e98ec8",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "e52ecc43.c86a5",
        "name": "RTU",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "RTU",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 960,
        "y": 780,
        "wires": [
            [
                "5d696eb6d1b57169"
            ]
        ]
    },
    {
        "id": "29b89c8339e18619",
        "type": "modbus-flex-write",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Reset Pymodbus Command",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "3548b3b4.c8d65c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 2040,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "af93f6b34f6ca585",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Registro Modbus",
        "func": "msg.payload = { \n    'value':0,\n    'fc': 6, \n    'unitid': 1, \n    'address': 55, \n    'quantity':1   \n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 100,
        "wires": [
            [
                "29b89c8339e18619"
            ]
        ]
    },
    {
        "id": "65facb997d933eab",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Registro Modbus",
        "func": "msg.payload = { \n    'fc': 6, \n    'unitid': 1, \n    'address': 28672+20+55, \n    'quantity':1   \n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 150,
        "wires": [
            [
                "8a633215f5f69823"
            ]
        ]
    },
    {
        "id": "8a633215f5f69823",
        "type": "modbus-flex-write",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "Reset CUBLOC Command",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "f630cb55.8d18e8",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 2040,
        "y": 150,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c6349afceceaa2b1",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "SCADA TCP",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "TCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1410,
        "y": 380,
        "wires": [
            [
                "6ee257d699f817b0"
            ]
        ]
    },
    {
        "id": "8b1a609d64c70224",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "SCADA RTU",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "RTU",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1410,
        "y": 430,
        "wires": [
            [
                "6ee257d699f817b0"
            ]
        ]
    },
    {
        "id": "6ee257d699f817b0",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "L/R",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1570,
        "y": 380,
        "wires": [
            [
                "b9964b24b8e04eab"
            ]
        ]
    },
    {
        "id": "b9964b24b8e04eab",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Ref",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 380,
        "wires": [
            [
                "69f6e4eb.80e62c"
            ]
        ]
    },
    {
        "id": "826fef16.9c1a",
        "type": "modbus-read",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "PyModbusServer",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "56",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3548b3b4.c8d65c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1220,
        "y": 380,
        "wires": [
            [
                "c6349afceceaa2b1",
                "0b0df3a707795c4a"
            ],
            []
        ]
    },
    {
        "id": "69f6e4eb.80e62c",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "/10",
        "func": "var Funciones = global.get(\"Funciones_control_activas\",\"memoryOnly\")||{1:false};\n\nvar array = Object.values(Funciones);\nvar resp = array.find(element => element == true)||false;\nnode.status({fill:\"green\",shape:\"dot\",text:!resp});\n\nmsg.payload = msg.payload/10;\n\nif(!resp){return msg;}\nelse{return;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 380,
        "wires": [
            [
                "2cbf4228734cf0ab"
            ]
        ]
    },
    {
        "id": "f7d52c85.918f3",
        "type": "modbus-getter",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "Leer Cubloc",
        "showStatusActivities": true,
        "showErrors": false,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "28748",
        "quantity": "1",
        "server": "f630cb55.8d18e8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 1230,
        "y": 430,
        "wires": [
            [
                "8b1a609d64c70224",
                "af1e567e54d62d35"
            ],
            []
        ]
    },
    {
        "id": "ac4a48c1.4681c8",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "Referencia Remota - RTU Link In",
        "links": [
            "f4e3682b.f045c8",
            "e219528c8859a421"
        ],
        "x": 1125,
        "y": 430,
        "wires": [
            [
                "f7d52c85.918f3"
            ]
        ]
    },
    {
        "id": "2a1f1c0d.25ca44",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Ref",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Cambio de referencia remota a +++ Hz",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "Ref",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 520,
        "wires": [
            [
                "deda81b5.9e94a"
            ]
        ]
    },
    {
        "id": "deda81b5.9e94a",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "",
        "links": [
            "207ea8ce.3dea68"
        ],
        "x": 2125,
        "y": 520,
        "wires": []
    },
    {
        "id": "c687d6d470168640",
        "type": "subflow:1fbf295f73cccb97",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "",
        "env": [],
        "x": 2060,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "2a3c466dd1080ff6",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Limpiar intentos",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Automatic_Restart.Attempts.Current_Attempt",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 630,
        "wires": [
            []
        ]
    },
    {
        "id": "01c5f660785e97d7",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "Prolonged_Reference",
        "property": "#:(memoryOnly)::Control_functions.ActiveCF.Prolonged_Reference",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1080,
        "y": 910,
        "wires": [
            [
                "e6a12821beef3055",
                "5f0c32e4b7c726e9"
            ]
        ]
    },
    {
        "id": "37b1384c.b01fc8",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "b45a4400.43489",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7ac30616.86268",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "b45a4400.43489",
        "name": "Mapa Modbus en CUBLOC",
        "func": "\nmsg.payload = { \n    value: msg.payload, \n    'fc': 4, \n    'unitid': 1, \n    'address': 28672+20, \n    'quantity':100   \n} \nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload.address});\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1400,
        "y": 1040,
        "wires": [
            [
                "adb11e12e96f0a22"
            ]
        ]
    },
    {
        "id": "a8908e3.92ee7f",
        "type": "inject",
        "z": "e483884bee93bec2",
        "g": "b45a4400.43489",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1210,
        "y": 1040,
        "wires": [
            [
                "7ac30616.86268"
            ]
        ]
    },
    {
        "id": "adb11e12e96f0a22",
        "type": "modbus-flex-getter",
        "z": "e483884bee93bec2",
        "g": "b45a4400.43489",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "f630cb55.8d18e8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 1640,
        "y": 1040,
        "wires": [
            [
                "37b1384c.b01fc8"
            ],
            []
        ]
    },
    {
        "id": "83ae31690d1972ca",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "Tracking RTU",
        "func": "\nmsg.payload = { \n    value: msg.payload*10, \n    'fc': 6, \n    'unitid': 1, \n    'address': 28672 + 20 + 56,\n    'quantity':1   \n}\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload.address});\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 520,
        "wires": [
            [
                "b468d7fd.170728"
            ]
        ]
    },
    {
        "id": "96f743d2fd4a62b8",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "Tracking TCP",
        "func": "\nmsg.payload = { \n    value: msg.payload*10, \n    'fc': 6, \n    'unitid': 1, \n    'address': 56,\n    'quantity':1   \n}\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload.address});\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 470,
        "wires": [
            [
                "75ae9dfb.c587e4"
            ]
        ]
    },
    {
        "id": "730f767fbc450987",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "tracking ref remoto",
        "links": [
            "623eb47dc08d064b",
            "ae172e07.4eb89",
            "8b2d994174f28a66",
            "4f30a3731f8eb96a",
            "217f6aef752bcc72"
        ],
        "x": 1275,
        "y": 470,
        "wires": [
            [
                "96f743d2fd4a62b8",
                "83ae31690d1972ca"
            ]
        ]
    },
    {
        "id": "623eb47dc08d064b",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "tracking ref/remoto",
        "links": [
            "730f767fbc450987",
            "f019fd4bc21346f1",
            "7d21f05bb26114a5",
            "f61f03a556d40cc2"
        ],
        "x": 1605,
        "y": 100,
        "wires": []
    },
    {
        "id": "c747f69d98c286bd",
        "type": "function",
        "z": "1fbf295f73cccb97",
        "name": "Sts Ref",
        "func": "var Commanded_SpdRef    = parseFloat((Math.abs(global.get(\"C2S.Implicit.Commanded_SpdRef\",\"memoryOnly\")||0)).toFixed(1));\nvar Reference           = parseFloat(msg.payload.toFixed(1));\n\nif (Commanded_SpdRef == Reference)\n    msg.verify=1;\nelse\n    msg.verify = 0;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 140,
        "wires": [
            [
                "c92ad05104cd218c"
            ]
        ]
    },
    {
        "id": "c92ad05104cd218c",
        "type": "switch",
        "z": "1fbf295f73cccb97",
        "name": "send ref?",
        "property": "verify",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 700,
        "y": 140,
        "wires": [
            [
                "e814c62e3cef2e85",
                "ce8d869f5d8dfba9"
            ],
            []
        ]
    },
    {
        "id": "e86e44e2339ed2bc",
        "type": "delay",
        "z": "1fbf295f73cccb97",
        "name": "",
        "pauseType": "delay",
        "timeout": "2.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "c747f69d98c286bd"
            ]
        ]
    },
    {
        "id": "ce8d869f5d8dfba9",
        "type": "change",
        "z": "1fbf295f73cccb97",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Last_Reference.Value",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b261da20ce556a23",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 110,
        "wires": []
    },
    {
        "id": "dfa8404d9c6a7f4f",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "seguri",
        "property": "#:(memoryOnly)::L.Setpoint",
        "propertyType": "flow",
        "rules": [
            {
                "t": "gt",
                "v": "payload",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 980,
        "y": 620,
        "wires": [
            [
                "410685e8.07f64c"
            ]
        ]
    },
    {
        "id": "e08e4b7c2b9e63c1",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "a7f58aaec292b159",
        "name": "seguri",
        "property": "#:(memoryOnly)::H.Setpoint",
        "propertyType": "flow",
        "rules": [
            {
                "t": "lt",
                "v": "payload",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 980,
        "y": 690,
        "wires": [
            [
                "ddfcf25.e7fe71"
            ]
        ]
    },
    {
        "id": "c0793ecf8b698a86",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "LoadFlag",
        "property": "#:(memoryOnly)::LoadFlag",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2080,
        "y": 440,
        "wires": [
            [
                "66ad2b617a4c9304"
            ]
        ]
    },
    {
        "id": "66ad2b617a4c9304",
        "type": "subflow:669c188.bd26ee8",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "Load Motor",
        "env": [
            {
                "name": "protection",
                "value": "MotorLoad",
                "type": "str"
            }
        ],
        "x": 2230,
        "y": 440,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "a9eece6d2bcfed87",
        "type": "switch",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "seleccion",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Personalizado",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "ae309722e4bebd6b"
            ],
            [
                "ff70137391f2b512",
                "6631fedd826801b0"
            ]
        ]
    },
    {
        "id": "3c6030ca0c2d3f72",
        "type": "ui_button",
        "z": "38e901f121b52acb",
        "name": "",
        "group": "f6e9eea4ba6b65b2",
        "order": 59,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Guardar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 900,
        "y": 750,
        "wires": [
            [
                "6631fedd826801b0",
                "b481da70f35d247b"
            ]
        ]
    },
    {
        "id": "6a00a6ef2d74e4a9",
        "type": "ui_button",
        "z": "38e901f121b52acb",
        "name": "",
        "group": "f6e9eea4ba6b65b2",
        "order": 60,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Cancelar",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 900,
        "y": 620,
        "wires": [
            [
                "df35015c207f6e38"
            ]
        ]
    },
    {
        "id": "42dcedfeb8aee4f5",
        "type": "ui_button",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "",
        "group": "55a9eb4e.762c64",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Config. Personalizado",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 710,
        "y": 220,
        "wires": [
            [
                "0a8b43dcb8a55d7f"
            ]
        ]
    },
    {
        "id": "6631fedd826801b0",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "Vista general",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Sensor_de_Fondo_Sensor_Personalizado\"],\t       \"show\":[ \"Sensor_de_Fondo_Configuración\",\t                \"Sensor_de_Fondo_Información\",\t                \"Sensor_de_Fondo_Estado_sensor_de_fondo\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 670,
        "wires": [
            [
                "fc47cb5558e17f7a"
            ]
        ]
    },
    {
        "id": "0a8b43dcb8a55d7f",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "Vista S. Personali",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Sensor_de_Fondo_Sensor_Personalizado\"],\t       \"hide\":[ \"Sensor_de_Fondo_Configuración\",\t                \"Sensor_de_Fondo_Estado_sensor_de_fondo\",\t                \"Sensor_de_Fondo_Información\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 270,
        "wires": [
            [
                "a7d2cd08afbd2e76"
            ]
        ]
    },
    {
        "id": "a7d2cd08afbd2e76",
        "type": "link out",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "",
        "links": [
            "805762db.d27b7",
            "65a496559e809865",
            "4f91182111c99f1a",
            "d965af78fd018777",
            "c0eb7138b2e5d7ee",
            "a93906eaebd927dc",
            "e05897cdef9907eb",
            "09fe10b8bc5682f0",
            "862a3d8aec451b57"
        ],
        "x": 815,
        "y": 270,
        "wires": []
    },
    {
        "id": "ae309722e4bebd6b",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "enabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 200,
        "wires": [
            [
                "42dcedfeb8aee4f5"
            ]
        ]
    },
    {
        "id": "ff70137391f2b512",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "disabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 240,
        "wires": [
            [
                "42dcedfeb8aee4f5"
            ]
        ]
    },
    {
        "id": "fc47cb5558e17f7a",
        "type": "link out",
        "z": "38e901f121b52acb",
        "name": "",
        "links": [
            "805762db.d27b7"
        ],
        "x": 1175,
        "y": 670,
        "wires": []
    },
    {
        "id": "e48bdf01a24684e9",
        "type": "ui_text",
        "z": "38e901f121b52acb",
        "group": "f6e9eea4ba6b65b2",
        "order": 9,
        "width": 4,
        "height": 1,
        "name": "Presión entr.",
        "label": "",
        "format": "Presión entrada",
        "layout": "row-left",
        "x": 410,
        "y": 340,
        "wires": []
    },
    {
        "id": "2b52a2f2d99911e0",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Tipo dato PI",
        "label": "",
        "tooltip": "",
        "place": "Tipo dato",
        "group": "f6e9eea4ba6b65b2",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "UINT",
                "value": "UINT",
                "type": "str"
            },
            {
                "label": "INT",
                "value": "INT",
                "type": "str"
            },
            {
                "label": "LONG",
                "value": "LONG",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 380,
        "wires": [
            [
                "d8e15b34fc7becc5"
            ]
        ]
    },
    {
        "id": "d1ec73f97b9c8615",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "MBS FC PI",
        "label": "",
        "tooltip": "",
        "place": "MBS FC",
        "group": "f6e9eea4ba6b65b2",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HR",
                "value": "HR",
                "type": "str"
            },
            {
                "label": "IR",
                "value": "IR",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 420,
        "wires": [
            [
                "f3589875c55c9f4d"
            ]
        ]
    },
    {
        "id": "a6c141d395f43f46",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Mul PI",
        "label": "",
        "tooltip": "",
        "place": "Mul",
        "group": "f6e9eea4ba6b65b2",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "0.1",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.01",
                "value": 0.01,
                "type": "num"
            },
            {
                "label": "0.001",
                "value": 0.001,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 400,
        "y": 500,
        "wires": [
            [
                "0c1d1269a7574605"
            ]
        ]
    },
    {
        "id": "7c50432c49bb591d",
        "type": "ui_text_input",
        "z": "38e901f121b52acb",
        "name": "Registro PI",
        "label": "Registro",
        "tooltip": "",
        "group": "f6e9eea4ba6b65b2",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "x": 420,
        "y": 460,
        "wires": [
            [
                "6bd8b6be1cc01955"
            ]
        ]
    },
    {
        "id": "d2ce33abd488f2fc",
        "type": "ui_text",
        "z": "38e901f121b52acb",
        "group": "f6e9eea4ba6b65b2",
        "order": 16,
        "width": 4,
        "height": 1,
        "name": "Presión descarga",
        "label": "",
        "format": "Presión descarga",
        "layout": "row-left",
        "x": 440,
        "y": 560,
        "wires": []
    },
    {
        "id": "321dea7ee7c7ae3e",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Tipo dato PD",
        "label": "",
        "tooltip": "",
        "place": "Tipo dato",
        "group": "f6e9eea4ba6b65b2",
        "order": 17,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "UINT",
                "value": "UINT",
                "type": "str"
            },
            {
                "label": "INT",
                "value": "INT",
                "type": "str"
            },
            {
                "label": "LONG",
                "value": "LONG",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 600,
        "wires": [
            [
                "908be8f247840d1b"
            ]
        ]
    },
    {
        "id": "07d55ae3145fd626",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "MBS FC PD",
        "label": "",
        "tooltip": "",
        "place": "MBS FC",
        "group": "f6e9eea4ba6b65b2",
        "order": 18,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HR",
                "value": "HR",
                "type": "str"
            },
            {
                "label": "IR",
                "value": "IR",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 640,
        "wires": [
            [
                "c3e9ebc9fccc2b96"
            ]
        ]
    },
    {
        "id": "176ac11de90b65e5",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Mul PD",
        "label": "",
        "tooltip": "",
        "place": "Mul",
        "group": "f6e9eea4ba6b65b2",
        "order": 19,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "0.1",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.01",
                "value": 0.01,
                "type": "num"
            },
            {
                "label": "0.001",
                "value": 0.001,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 410,
        "y": 720,
        "wires": [
            [
                "514abcfaa3323368"
            ]
        ]
    },
    {
        "id": "5f7a628e0dc1ef40",
        "type": "ui_text_input",
        "z": "38e901f121b52acb",
        "name": "Registro PD",
        "label": "Registro",
        "tooltip": "",
        "group": "f6e9eea4ba6b65b2",
        "order": 20,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "x": 420,
        "y": 680,
        "wires": [
            [
                "5a699b94658b2409"
            ]
        ]
    },
    {
        "id": "c57c1784e78e2c56",
        "type": "ui_text",
        "z": "38e901f121b52acb",
        "group": "f6e9eea4ba6b65b2",
        "order": 23,
        "width": 4,
        "height": 1,
        "name": "Temperatura entrada",
        "label": "",
        "format": "Temperatura entrada",
        "layout": "row-left",
        "x": 450,
        "y": 780,
        "wires": []
    },
    {
        "id": "5afbdbeda5211947",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Tipo dato TE",
        "label": "",
        "tooltip": "",
        "place": "Tipo dato",
        "group": "f6e9eea4ba6b65b2",
        "order": 24,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "UINT",
                "value": "UINT",
                "type": "str"
            },
            {
                "label": "INT",
                "value": "INT",
                "type": "str"
            },
            {
                "label": "LONG",
                "value": "LONG",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 820,
        "wires": [
            [
                "544ab2bcb3753278"
            ]
        ]
    },
    {
        "id": "17c29d95cb139b61",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "MBS FC TE",
        "label": "",
        "tooltip": "",
        "place": "MBS FC",
        "group": "f6e9eea4ba6b65b2",
        "order": 25,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HR",
                "value": "HR",
                "type": "str"
            },
            {
                "label": "IR",
                "value": "IR",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 860,
        "wires": [
            [
                "f0725a0cc7a81b0c"
            ]
        ]
    },
    {
        "id": "28b583b00a9beae4",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Mul TE",
        "label": "",
        "tooltip": "",
        "place": "Mul",
        "group": "f6e9eea4ba6b65b2",
        "order": 26,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "0.1",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.01",
                "value": 0.01,
                "type": "num"
            },
            {
                "label": "0.001",
                "value": 0.001,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 410,
        "y": 940,
        "wires": [
            [
                "bf26873d08bcc45a"
            ]
        ]
    },
    {
        "id": "f55a7fdd29880a31",
        "type": "ui_text_input",
        "z": "38e901f121b52acb",
        "name": "Registro TE",
        "label": "Registro",
        "tooltip": "",
        "group": "f6e9eea4ba6b65b2",
        "order": 27,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "x": 420,
        "y": 900,
        "wires": [
            [
                "91c7d38faa09c79d"
            ]
        ]
    },
    {
        "id": "b8ee1060d3dac867",
        "type": "ui_text",
        "z": "38e901f121b52acb",
        "group": "f6e9eea4ba6b65b2",
        "order": 30,
        "width": 4,
        "height": 1,
        "name": "Temperatura descarga",
        "label": "",
        "format": "Temperatura descarga",
        "layout": "row-left",
        "x": 450,
        "y": 1000,
        "wires": []
    },
    {
        "id": "487c639601bc2653",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Tipo dato TD",
        "label": "",
        "tooltip": "",
        "place": "Tipo dato",
        "group": "f6e9eea4ba6b65b2",
        "order": 31,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "UINT",
                "value": "UINT",
                "type": "str"
            },
            {
                "label": "INT",
                "value": "INT",
                "type": "str"
            },
            {
                "label": "LONG",
                "value": "LONG",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 1040,
        "wires": [
            [
                "98c318cb8b01b59e"
            ]
        ]
    },
    {
        "id": "35b8a947cb239f14",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "MBS FC TD",
        "label": "",
        "tooltip": "",
        "place": "MBS FC",
        "group": "f6e9eea4ba6b65b2",
        "order": 32,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HR",
                "value": "HR",
                "type": "str"
            },
            {
                "label": "IR",
                "value": "IR",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "2b5800e205acd475"
            ]
        ]
    },
    {
        "id": "6b4469d3bfb66b6c",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Mul TD",
        "label": "",
        "tooltip": "",
        "place": "Mul",
        "group": "f6e9eea4ba6b65b2",
        "order": 33,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "0.1",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.01",
                "value": 0.01,
                "type": "num"
            },
            {
                "label": "0.001",
                "value": 0.001,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 410,
        "y": 1160,
        "wires": [
            [
                "739c217177aa4865"
            ]
        ]
    },
    {
        "id": "97aadaa011954d3a",
        "type": "ui_text_input",
        "z": "38e901f121b52acb",
        "name": "Registro TD",
        "label": "Registro",
        "tooltip": "",
        "group": "f6e9eea4ba6b65b2",
        "order": 34,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "x": 420,
        "y": 1120,
        "wires": [
            [
                "fe3b39fff4c20d22"
            ]
        ]
    },
    {
        "id": "27d84728983caab4",
        "type": "ui_text",
        "z": "38e901f121b52acb",
        "group": "f6e9eea4ba6b65b2",
        "order": 37,
        "width": 4,
        "height": 1,
        "name": "Temperatura motor",
        "label": "",
        "format": "Temperatura motor",
        "layout": "row-left",
        "x": 440,
        "y": 1220,
        "wires": []
    },
    {
        "id": "5ce1136aaf13d74e",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Tipo dato TM",
        "label": "",
        "tooltip": "",
        "place": "Tipo dato",
        "group": "f6e9eea4ba6b65b2",
        "order": 38,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "UINT",
                "value": "UINT",
                "type": "str"
            },
            {
                "label": "INT",
                "value": "INT",
                "type": "str"
            },
            {
                "label": "LONG",
                "value": "LONG",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 1260,
        "wires": [
            [
                "c7025a0f00a1af34"
            ]
        ]
    },
    {
        "id": "03e1ec6943270382",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "MBS FC TM",
        "label": "",
        "tooltip": "",
        "place": "MBS FC",
        "group": "f6e9eea4ba6b65b2",
        "order": 39,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HR",
                "value": "HR",
                "type": "str"
            },
            {
                "label": "IR",
                "value": "IR",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 1300,
        "wires": [
            [
                "6fe7f56fa9cf9894"
            ]
        ]
    },
    {
        "id": "189da8ebf84813f4",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Mul TM",
        "label": "",
        "tooltip": "",
        "place": "Mul",
        "group": "f6e9eea4ba6b65b2",
        "order": 40,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "0.1",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.01",
                "value": 0.01,
                "type": "num"
            },
            {
                "label": "0.001",
                "value": 0.001,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 410,
        "y": 1380,
        "wires": [
            [
                "88aec110b6b1c768"
            ]
        ]
    },
    {
        "id": "b039705598cf94d9",
        "type": "ui_text_input",
        "z": "38e901f121b52acb",
        "name": "Registro TM",
        "label": "Registro",
        "tooltip": "",
        "group": "f6e9eea4ba6b65b2",
        "order": 41,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "x": 420,
        "y": 1340,
        "wires": [
            [
                "fefc50b4bb2fe69d"
            ]
        ]
    },
    {
        "id": "e7c7c984eb81e402",
        "type": "ui_text",
        "z": "38e901f121b52acb",
        "group": "f6e9eea4ba6b65b2",
        "order": 44,
        "width": "4",
        "height": 1,
        "name": "Vibración X",
        "label": "",
        "format": "Vibración X",
        "layout": "row-left",
        "className": "",
        "x": 420,
        "y": 1440,
        "wires": []
    },
    {
        "id": "1f2ef7935a42e25f",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Tipo dato VX",
        "label": "",
        "tooltip": "",
        "place": "Tipo dato",
        "group": "f6e9eea4ba6b65b2",
        "order": 45,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "UINT",
                "value": "UINT",
                "type": "str"
            },
            {
                "label": "INT",
                "value": "INT",
                "type": "str"
            },
            {
                "label": "LONG",
                "value": "LONG",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 1480,
        "wires": [
            [
                "6ece2a9f476dafa1"
            ]
        ]
    },
    {
        "id": "ef48af3a8a037ea2",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "MBS FC VX",
        "label": "",
        "tooltip": "",
        "place": "MBS FC",
        "group": "f6e9eea4ba6b65b2",
        "order": 46,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HR",
                "value": "HR",
                "type": "str"
            },
            {
                "label": "IR",
                "value": "IR",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 1520,
        "wires": [
            [
                "fa9e10034f3ec868"
            ]
        ]
    },
    {
        "id": "e081c42fdf925f10",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Mul VX",
        "label": "",
        "tooltip": "",
        "place": "Mul",
        "group": "f6e9eea4ba6b65b2",
        "order": 47,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "0.1",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.01",
                "value": 0.01,
                "type": "num"
            },
            {
                "label": "0.001",
                "value": 0.001,
                "type": "num"
            },
            {
                "label": "1",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 410,
        "y": 1600,
        "wires": [
            [
                "17fa4c22819daab0"
            ]
        ]
    },
    {
        "id": "4e89587e1a036f99",
        "type": "ui_text_input",
        "z": "38e901f121b52acb",
        "name": "Registro VX",
        "label": "Registro",
        "tooltip": "",
        "group": "f6e9eea4ba6b65b2",
        "order": 48,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "x": 420,
        "y": 1560,
        "wires": [
            [
                "e3b77d4be3d93336"
            ]
        ]
    },
    {
        "id": "566074b75c5f19e3",
        "type": "ui_text",
        "z": "38e901f121b52acb",
        "group": "f6e9eea4ba6b65b2",
        "order": 51,
        "width": "4",
        "height": 1,
        "name": "Vibración Z",
        "label": "",
        "format": "Vibración Z",
        "layout": "row-left",
        "className": "",
        "x": 420,
        "y": 1660,
        "wires": []
    },
    {
        "id": "ca940d9e7f51dc81",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Tipo dato VZ",
        "label": "",
        "tooltip": "",
        "place": "Tipo dato",
        "group": "f6e9eea4ba6b65b2",
        "order": 52,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "UINT",
                "value": "UINT",
                "type": "str"
            },
            {
                "label": "INT",
                "value": "INT",
                "type": "str"
            },
            {
                "label": "LONG",
                "value": "LONG",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 1700,
        "wires": [
            [
                "0666b9db0aede20c"
            ]
        ]
    },
    {
        "id": "b87cee301c9c32fd",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "MBS FC VZ",
        "label": "",
        "tooltip": "",
        "place": "MBS FC",
        "group": "f6e9eea4ba6b65b2",
        "order": 53,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HR",
                "value": "HR",
                "type": "str"
            },
            {
                "label": "IR",
                "value": "IR",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 1740,
        "wires": [
            [
                "6323ec9158db58a0"
            ]
        ]
    },
    {
        "id": "b1350370b10f72c9",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Mul VZ",
        "label": "",
        "tooltip": "",
        "place": "Mul",
        "group": "f6e9eea4ba6b65b2",
        "order": 54,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "0.1",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.01",
                "value": 0.01,
                "type": "num"
            },
            {
                "label": "0.001",
                "value": 0.001,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 410,
        "y": 1820,
        "wires": [
            [
                "8dbc8dddc863fd46"
            ]
        ]
    },
    {
        "id": "85ba3383e30b0d2b",
        "type": "ui_text_input",
        "z": "38e901f121b52acb",
        "name": "Registro VZ",
        "label": "Registro",
        "tooltip": "",
        "group": "f6e9eea4ba6b65b2",
        "order": 55,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "x": 420,
        "y": 1780,
        "wires": [
            [
                "62d37f9fec2626e9"
            ]
        ]
    },
    {
        "id": "1b460d14e9fd7651",
        "type": "ui_text",
        "z": "38e901f121b52acb",
        "group": "f6e9eea4ba6b65b2",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "Corriente de fuga",
        "label": "",
        "format": "Corriente de fuga",
        "layout": "row-left",
        "x": 440,
        "y": 1880,
        "wires": []
    },
    {
        "id": "21a23360fc726c60",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Tipo dato CF",
        "label": "",
        "tooltip": "",
        "place": "Tipo dato",
        "group": "f6e9eea4ba6b65b2",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "UINT",
                "value": "UINT",
                "type": "str"
            },
            {
                "label": "INT",
                "value": "INT",
                "type": "str"
            },
            {
                "label": "LONG",
                "value": "LONG",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 1920,
        "wires": [
            [
                "ae30f2ab0350a8c6"
            ]
        ]
    },
    {
        "id": "38181d75f86ec548",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "MBS FC CF",
        "label": "",
        "tooltip": "",
        "place": "MBS FC",
        "group": "f6e9eea4ba6b65b2",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HR",
                "value": "HR",
                "type": "str"
            },
            {
                "label": "IR",
                "value": "IR",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 420,
        "y": 1960,
        "wires": [
            [
                "d6515eafbc090ce5"
            ]
        ]
    },
    {
        "id": "e8b3d5ab4df5d0e9",
        "type": "ui_dropdown",
        "z": "38e901f121b52acb",
        "name": "Mul CF",
        "label": "",
        "tooltip": "",
        "place": "Mul",
        "group": "f6e9eea4ba6b65b2",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "0.1",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.01",
                "value": 0.01,
                "type": "num"
            },
            {
                "label": "0.001",
                "value": 0.001,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 410,
        "y": 2040,
        "wires": [
            [
                "5ed8248e3327760f"
            ]
        ]
    },
    {
        "id": "a4a38da0157debdb",
        "type": "ui_text_input",
        "z": "38e901f121b52acb",
        "name": "Registro CF",
        "label": "Registro",
        "tooltip": "",
        "group": "f6e9eea4ba6b65b2",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "x": 420,
        "y": 2000,
        "wires": [
            [
                "d919e9b0ce40114d"
            ]
        ]
    },
    {
        "id": "c604409c02f4cae1",
        "type": "ui_toast",
        "z": "38e901f121b52acb",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Salir",
        "cancel": "Continuar editando",
        "raw": false,
        "topic": "Sensor de fondo personalizado",
        "name": "salir de fondo personalizado?",
        "x": 1220,
        "y": 620,
        "wires": [
            [
                "526bda5eed88d517"
            ]
        ]
    },
    {
        "id": "df35015c207f6e38",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "dialog",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿Está seguro de salir y perder los datos editados?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 620,
        "wires": [
            [
                "c604409c02f4cae1"
            ]
        ]
    },
    {
        "id": "526bda5eed88d517",
        "type": "switch",
        "z": "38e901f121b52acb",
        "name": "Salir?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Salir",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1420,
        "y": 620,
        "wires": [
            [
                "6631fedd826801b0"
            ]
        ]
    },
    {
        "id": "65a496559e809865",
        "type": "link in",
        "z": "38e901f121b52acb",
        "name": "",
        "links": [
            "a7d2cd08afbd2e76"
        ],
        "x": 55,
        "y": 430,
        "wires": [
            [
                "06ed706181af3b41",
                "a0d16577618088c4",
                "e85e6bddadbf593f",
                "26d959f641ada05a"
            ]
        ]
    },
    {
        "id": "06ed706181af3b41",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PI.DT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.PI.DT",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 380,
        "wires": [
            [
                "2b52a2f2d99911e0"
            ]
        ]
    },
    {
        "id": "a0d16577618088c4",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PI.MBS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.PI.MBS",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 420,
        "wires": [
            [
                "d1ec73f97b9c8615"
            ]
        ]
    },
    {
        "id": "e85e6bddadbf593f",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PI.Reg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.PI.Reg",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 460,
        "wires": [
            [
                "7c50432c49bb591d"
            ]
        ]
    },
    {
        "id": "26d959f641ada05a",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PI.Mul",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.PI.Mul",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 500,
        "wires": [
            [
                "a6c141d395f43f46"
            ]
        ]
    },
    {
        "id": "d8e15b34fc7becc5",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PI.DT",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.PI.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f3589875c55c9f4d",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PI.MBS",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.PI.MBS",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "6bd8b6be1cc01955",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PI.Reg",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.PI.Reg",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "0c1d1269a7574605",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PI.Mul",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.PI.Mul",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "4f91182111c99f1a",
        "type": "link in",
        "z": "38e901f121b52acb",
        "name": "",
        "links": [
            "a7d2cd08afbd2e76"
        ],
        "x": 55,
        "y": 650,
        "wires": [
            [
                "0b27016f1f0c96b9",
                "c149c2bb2089635a",
                "a8a5887474446220",
                "b4305120bbe3dea5"
            ]
        ]
    },
    {
        "id": "0b27016f1f0c96b9",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PD.DT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.PD.DT",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 600,
        "wires": [
            [
                "321dea7ee7c7ae3e"
            ]
        ]
    },
    {
        "id": "c149c2bb2089635a",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PD.MBS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.PD.MBS",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 640,
        "wires": [
            [
                "07d55ae3145fd626"
            ]
        ]
    },
    {
        "id": "a8a5887474446220",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PD.Reg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.PD.Reg",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 680,
        "wires": [
            [
                "5f7a628e0dc1ef40"
            ]
        ]
    },
    {
        "id": "b4305120bbe3dea5",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PD.Mul",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.PD.Mul",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 720,
        "wires": [
            [
                "176ac11de90b65e5"
            ]
        ]
    },
    {
        "id": "514abcfaa3323368",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PD.Mul",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.PD.Mul",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "5a699b94658b2409",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PD.Reg",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.PD.Reg",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "c3e9ebc9fccc2b96",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PD.MBS",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.PD.MBS",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "908be8f247840d1b",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.PD.DT",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.PD.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d965af78fd018777",
        "type": "link in",
        "z": "38e901f121b52acb",
        "name": "",
        "links": [
            "a7d2cd08afbd2e76"
        ],
        "x": 55,
        "y": 870,
        "wires": [
            [
                "5ee88b8cbcde9253",
                "4379fa502368ac6a",
                "ffbfaaed34a61e67",
                "0593d56d76a62505"
            ]
        ]
    },
    {
        "id": "5ee88b8cbcde9253",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TE.DT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TE.DT",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 820,
        "wires": [
            [
                "5afbdbeda5211947"
            ]
        ]
    },
    {
        "id": "4379fa502368ac6a",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TE.MBS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TE.MBS",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 860,
        "wires": [
            [
                "17c29d95cb139b61"
            ]
        ]
    },
    {
        "id": "ffbfaaed34a61e67",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TE.Reg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TE.Reg",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 900,
        "wires": [
            [
                "f55a7fdd29880a31"
            ]
        ]
    },
    {
        "id": "0593d56d76a62505",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TE.Mul",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TE.Mul",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 940,
        "wires": [
            [
                "28b583b00a9beae4"
            ]
        ]
    },
    {
        "id": "bf26873d08bcc45a",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TE.Mul",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TE.Mul",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "91c7d38faa09c79d",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TE.Reg",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TE.Reg",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "f0725a0cc7a81b0c",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TE.MBS",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TE.MBS",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "544ab2bcb3753278",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TE.DT",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TE.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "c0eb7138b2e5d7ee",
        "type": "link in",
        "z": "38e901f121b52acb",
        "name": "",
        "links": [
            "a7d2cd08afbd2e76"
        ],
        "x": 55,
        "y": 1090,
        "wires": [
            [
                "70457053618563e1",
                "7eddb4b7a402472c",
                "d626ec800c270517",
                "4fcbef42103a15ec"
            ]
        ]
    },
    {
        "id": "70457053618563e1",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TD.DT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TD.DT",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1040,
        "wires": [
            [
                "487c639601bc2653"
            ]
        ]
    },
    {
        "id": "7eddb4b7a402472c",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TD.MBS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TD.MBS",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1080,
        "wires": [
            [
                "35b8a947cb239f14"
            ]
        ]
    },
    {
        "id": "d626ec800c270517",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TD.Reg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TD.Reg",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1120,
        "wires": [
            [
                "97aadaa011954d3a"
            ]
        ]
    },
    {
        "id": "4fcbef42103a15ec",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TD.Mul",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TD.Mul",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1160,
        "wires": [
            [
                "6b4469d3bfb66b6c"
            ]
        ]
    },
    {
        "id": "739c217177aa4865",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TD.Mul",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TD.Mul",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "fe3b39fff4c20d22",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TD.Reg",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TD.Reg",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "2b5800e205acd475",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TD.MBS",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TD.MBS",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "98c318cb8b01b59e",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TD.DT",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TD.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "a93906eaebd927dc",
        "type": "link in",
        "z": "38e901f121b52acb",
        "name": "",
        "links": [
            "a7d2cd08afbd2e76"
        ],
        "x": 55,
        "y": 1310,
        "wires": [
            [
                "ea3f6690e82a8e32",
                "4a8c8b5e853a53ee",
                "3f6c4d04e3d39a99",
                "d0a3dc6eaa9df5de"
            ]
        ]
    },
    {
        "id": "ea3f6690e82a8e32",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TM.DT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TM.DT",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1260,
        "wires": [
            [
                "5ce1136aaf13d74e"
            ]
        ]
    },
    {
        "id": "4a8c8b5e853a53ee",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TM.MBS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TM.MBS",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1300,
        "wires": [
            [
                "03e1ec6943270382"
            ]
        ]
    },
    {
        "id": "3f6c4d04e3d39a99",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TM.Reg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TM.Reg",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1340,
        "wires": [
            [
                "b039705598cf94d9"
            ]
        ]
    },
    {
        "id": "d0a3dc6eaa9df5de",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TM.Mul",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.TM.Mul",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1380,
        "wires": [
            [
                "189da8ebf84813f4"
            ]
        ]
    },
    {
        "id": "88aec110b6b1c768",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TM.Mul",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TM.Mul",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "fefc50b4bb2fe69d",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TM.Reg",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TM.Reg",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "6fe7f56fa9cf9894",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TM.MBS",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TM.MBS",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "c7025a0f00a1af34",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.TD.DT",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.TM.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "e05897cdef9907eb",
        "type": "link in",
        "z": "38e901f121b52acb",
        "name": "",
        "links": [
            "a7d2cd08afbd2e76"
        ],
        "x": 45,
        "y": 1530,
        "wires": [
            [
                "f1ae3f6425794cee",
                "041c2e2e188a0bca",
                "6d44f2bd255381b4",
                "c6dd965d1ea14648"
            ]
        ]
    },
    {
        "id": "f1ae3f6425794cee",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VX.DT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.VX.DT",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 1480,
        "wires": [
            [
                "1f2ef7935a42e25f"
            ]
        ]
    },
    {
        "id": "041c2e2e188a0bca",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VX.MBS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.VX.MBS",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1520,
        "wires": [
            [
                "ef48af3a8a037ea2"
            ]
        ]
    },
    {
        "id": "6d44f2bd255381b4",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VX.Reg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.VX.Reg",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1560,
        "wires": [
            [
                "4e89587e1a036f99"
            ]
        ]
    },
    {
        "id": "c6dd965d1ea14648",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VX.Mul",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.VX.Mul",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 1600,
        "wires": [
            [
                "e081c42fdf925f10"
            ]
        ]
    },
    {
        "id": "17fa4c22819daab0",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VX.Mul",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.VX.Mul",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "e3b77d4be3d93336",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VX.Reg",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.VX.Reg",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "fa9e10034f3ec868",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VX.MBS",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.VX.MBS",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "6ece2a9f476dafa1",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VX.DT",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.VX.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "09fe10b8bc5682f0",
        "type": "link in",
        "z": "38e901f121b52acb",
        "name": "",
        "links": [
            "a7d2cd08afbd2e76"
        ],
        "x": 55,
        "y": 1750,
        "wires": [
            [
                "8c4bfb8165a017e5",
                "caac7e6119249751",
                "63415a70babcc9dd",
                "5c64145e9c86365a"
            ]
        ]
    },
    {
        "id": "8c4bfb8165a017e5",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VZ.DT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.VZ.DT",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1700,
        "wires": [
            [
                "ca940d9e7f51dc81"
            ]
        ]
    },
    {
        "id": "caac7e6119249751",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VZ.MBS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.VZ.MBS",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1740,
        "wires": [
            [
                "b87cee301c9c32fd"
            ]
        ]
    },
    {
        "id": "63415a70babcc9dd",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VZ.Reg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.VZ.Reg",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1780,
        "wires": [
            [
                "85ba3383e30b0d2b"
            ]
        ]
    },
    {
        "id": "5c64145e9c86365a",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VZ.Mul",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.VZ.Mul",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1820,
        "wires": [
            [
                "b1350370b10f72c9"
            ]
        ]
    },
    {
        "id": "8dbc8dddc863fd46",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VZ.Mul",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.VZ.Mul",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "62d37f9fec2626e9",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VZ.Reg",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.VZ.Reg",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "6323ec9158db58a0",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VZ.MBS",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.VZ.MBS",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "0666b9db0aede20c",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.VZ.DT",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.VZ.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "862a3d8aec451b57",
        "type": "link in",
        "z": "38e901f121b52acb",
        "name": "",
        "links": [
            "a7d2cd08afbd2e76"
        ],
        "x": 55,
        "y": 1970,
        "wires": [
            [
                "382e4568369faa26",
                "1a5e550f1beb469b",
                "bedbc904a04266ed",
                "ac849fcbf64eb647"
            ]
        ]
    },
    {
        "id": "382e4568369faa26",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.CF.DT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.CF.DT",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1920,
        "wires": [
            [
                "21a23360fc726c60"
            ]
        ]
    },
    {
        "id": "1a5e550f1beb469b",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.CF.MBS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.CF.MBS",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1960,
        "wires": [
            [
                "38181d75f86ec548"
            ]
        ]
    },
    {
        "id": "bedbc904a04266ed",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.CF.Reg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.CF.Reg",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 2000,
        "wires": [
            [
                "a4a38da0157debdb"
            ]
        ]
    },
    {
        "id": "ac849fcbf64eb647",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.CF.Mul",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DHSPerson.CF.Mul",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "enabled",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 2040,
        "wires": [
            [
                "e8b3d5ab4df5d0e9"
            ]
        ]
    },
    {
        "id": "5ed8248e3327760f",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.CF.Mul",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.CF.Mul",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "d919e9b0ce40114d",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.CF.Reg",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.CF.Reg",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "d6515eafbc090ce5",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.CF.MBS",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.CF.MBS",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "ae30f2ab0350a8c6",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DHSPerson.CF.DT",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DHSPerson.CF.DT",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "897faef686113c51",
        "type": "function",
        "z": "38e901f121b52acb",
        "name": "save to DHSPerson",
        "func": "var varname = flow.get(\"DHSPerson.\"+msg.vari+\".\"+msg.field,\"memoryOnly\")||\"-\";\nglobal.set(\"DHSPerson.\" + msg.vari + \".\" + msg.field,varname);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1710,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "ba29dc4297876c96",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "PI",
        "rules": [
            {
                "t": "set",
                "p": "vari",
                "pt": "msg",
                "to": "PI",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 740,
        "wires": [
            [
                "07d98fce7040deec",
                "427e1f3b18d06646",
                "877093734f645363",
                "a5656c1b95d675c8"
            ]
        ]
    },
    {
        "id": "07d98fce7040deec",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "DT",
        "rules": [
            {
                "t": "set",
                "p": "field",
                "pt": "msg",
                "to": "DT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 740,
        "wires": [
            [
                "897faef686113c51"
            ]
        ]
    },
    {
        "id": "427e1f3b18d06646",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "MBS",
        "rules": [
            {
                "t": "set",
                "p": "field",
                "pt": "msg",
                "to": "MBS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 780,
        "wires": [
            [
                "897faef686113c51"
            ]
        ]
    },
    {
        "id": "8d366f5d44b3ef17",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "PD",
        "rules": [
            {
                "t": "set",
                "p": "vari",
                "pt": "msg",
                "to": "PD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 780,
        "wires": [
            [
                "07d98fce7040deec",
                "427e1f3b18d06646",
                "877093734f645363",
                "a5656c1b95d675c8"
            ]
        ]
    },
    {
        "id": "877093734f645363",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "Reg",
        "rules": [
            {
                "t": "set",
                "p": "field",
                "pt": "msg",
                "to": "Reg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 820,
        "wires": [
            [
                "897faef686113c51"
            ]
        ]
    },
    {
        "id": "a5656c1b95d675c8",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "MBS",
        "rules": [
            {
                "t": "set",
                "p": "field",
                "pt": "msg",
                "to": "Mul",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 860,
        "wires": [
            [
                "897faef686113c51"
            ]
        ]
    },
    {
        "id": "150f0bc7bdd50580",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "TE",
        "rules": [
            {
                "t": "set",
                "p": "vari",
                "pt": "msg",
                "to": "TE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 820,
        "wires": [
            [
                "07d98fce7040deec",
                "427e1f3b18d06646",
                "877093734f645363",
                "a5656c1b95d675c8"
            ]
        ]
    },
    {
        "id": "8b594665448cd43c",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "TD",
        "rules": [
            {
                "t": "set",
                "p": "vari",
                "pt": "msg",
                "to": "TD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 860,
        "wires": [
            [
                "07d98fce7040deec",
                "427e1f3b18d06646",
                "877093734f645363",
                "a5656c1b95d675c8"
            ]
        ]
    },
    {
        "id": "b2e906025195d38f",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "TM",
        "rules": [
            {
                "t": "set",
                "p": "vari",
                "pt": "msg",
                "to": "TM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 900,
        "wires": [
            [
                "07d98fce7040deec",
                "427e1f3b18d06646",
                "877093734f645363",
                "a5656c1b95d675c8"
            ]
        ]
    },
    {
        "id": "5f466722ad761724",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "VX",
        "rules": [
            {
                "t": "set",
                "p": "vari",
                "pt": "msg",
                "to": "VX",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 940,
        "wires": [
            [
                "07d98fce7040deec",
                "427e1f3b18d06646",
                "877093734f645363",
                "a5656c1b95d675c8"
            ]
        ]
    },
    {
        "id": "fed9aee6938492b4",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "VZ",
        "rules": [
            {
                "t": "set",
                "p": "vari",
                "pt": "msg",
                "to": "VZ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 980,
        "wires": [
            [
                "07d98fce7040deec",
                "427e1f3b18d06646",
                "877093734f645363",
                "a5656c1b95d675c8"
            ]
        ]
    },
    {
        "id": "2dc44ae2c3cbfafa",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "CF",
        "rules": [
            {
                "t": "set",
                "p": "vari",
                "pt": "msg",
                "to": "CF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 1020,
        "wires": [
            [
                "07d98fce7040deec",
                "427e1f3b18d06646",
                "877093734f645363",
                "a5656c1b95d675c8",
                "32562a2c8459f1d9"
            ]
        ]
    },
    {
        "id": "4c67ee20325480a3",
        "type": "function",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "Personalizado",
        "func": "var mapa = [];\nvar count = 1;\nvar DHSPerson = global.get(\"DHSPerson\")||[];\nvar label = [\"PI\",\"PD\",\"TE\",\"TD\",\"TM\",\"VX\",\"VZ\",\"CF\"];\nvar name = [\"Presión de entrada\", \"Presión de descarga\", \"Temperatura de entrada\", \"Temperatura de descarga\", \"Temperatura de motor\", \"Vibración X\", \"Vibración Z\", \"Corriente de fuga\"];\nfor (var i=0;i<label.length;i++){\n    if (typeof DHSPerson[label[i]] != 'undefined') mapaModbusDHS(i);\n}\n function mapaModbusDHS(i){\n     if (DHSPerson[label[i]].DT != '-' && DHSPerson[label[i]].MBS != '-' && DHSPerson[label[i]].Mul != '-' && typeof DHSPerson[label[i]].Reg == 'number'){\n         mapa.push({\n             \"No\": count,\n             \"Descripción\": name[i],\n             \"Tipo de dato\": DHSPerson[label[i]].DT,\n             \"Tipo de registro\": DHSPerson[label[i]].MBS,\n             \"Registro\": DHSPerson[label[i]].Reg,\n             \"Multiplicador\": parseFloat(DHSPerson[label[i]].Mul)});\n        count++;\n     }\n }\n\nmsg.payload = mapa;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1390,
        "y": 100,
        "wires": [
            [
                "e8d9bf36189ddebb",
                "b52f82cb1a7a7339"
            ]
        ]
    },
    {
        "id": "1819ab29e1ba5014",
        "type": "inject",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1140,
        "y": 300,
        "wires": [
            [
                "4c67ee20325480a3"
            ]
        ]
    },
    {
        "id": "32562a2c8459f1d9",
        "type": "delay",
        "z": "38e901f121b52acb",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1560,
        "y": 1020,
        "wires": [
            [
                "935b56e9d359332d"
            ]
        ]
    },
    {
        "id": "935b56e9d359332d",
        "type": "link out",
        "z": "38e901f121b52acb",
        "name": "",
        "links": [
            "0d8499aa51681d74",
            "feb905dc.b5207",
            "22857b642b1f3f54",
            "30a50f9a4b478ffd"
        ],
        "x": 1655,
        "y": 1020,
        "wires": []
    },
    {
        "id": "30a50f9a4b478ffd",
        "type": "link in",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "",
        "links": [
            "935b56e9d359332d"
        ],
        "x": 1075,
        "y": 230,
        "wires": [
            [
                "5278e06818418426"
            ]
        ]
    },
    {
        "id": "48e8b39099139f6e",
        "type": "link in",
        "z": "38e901f121b52acb",
        "g": "48d282d70b9e72c9",
        "name": "",
        "links": [
            "a89b9e5cf3fecb60",
            "86ad5821826b4199"
        ],
        "x": 1925,
        "y": 290,
        "wires": [
            [
                "6914a9b4.85f3c"
            ]
        ]
    },
    {
        "id": "86ad5821826b4199",
        "type": "link out",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "",
        "links": [
            "48e8b39099139f6e"
        ],
        "x": 775,
        "y": 110,
        "wires": []
    },
    {
        "id": "ab1db35992368238",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "simul?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Simulación",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 3040,
        "wires": [
            [
                "1171c12e1e767c11"
            ],
            [
                "e7962357e39f4154"
            ]
        ]
    },
    {
        "id": "50dac80ef4089e02",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "default",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NO",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 2930,
        "wires": [
            [
                "c373d753.396418"
            ]
        ]
    },
    {
        "id": "1171c12e1e767c11",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "enabl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NO",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3030,
        "wires": [
            [
                "c373d753.396418"
            ]
        ]
    },
    {
        "id": "e7962357e39f4154",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "enabl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NO",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3070,
        "wires": [
            [
                "c373d753.396418"
            ]
        ]
    },
    {
        "id": "f93d008c4941f1f3",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 10,
        "width": "4",
        "height": 2,
        "name": "",
        "label": "Runtime",
        "format": "<font size =6px>{{msg.payload}} H",
        "layout": "col-center",
        "className": "",
        "x": 1060,
        "y": 2020,
        "wires": []
    },
    {
        "id": "418bd57d6e9c178d",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 11,
        "width": "4",
        "height": 2,
        "name": "",
        "label": "Último código falla",
        "format": "<font size =6px>{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1090,
        "y": 2060,
        "wires": []
    },
    {
        "id": "334b38419b875f82",
        "type": "subflow:c8b77ff3.ab501",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "env": [],
        "x": 1640,
        "y": 430,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cc955a6af7eeba4b",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 430,
        "wires": [
            [
                "334b38419b875f82",
                "49f37bb1c339412e"
            ]
        ]
    },
    {
        "id": "10c25391a80303f1",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::resetauto",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 510,
        "wires": [
            []
        ]
    },
    {
        "id": "fa1bb151f224679d",
        "type": "inject",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": "30",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1000,
        "y": 430,
        "wires": [
            [
                "034d0d8558a3e344"
            ]
        ]
    },
    {
        "id": "034d0d8558a3e344",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "resetauto",
        "property": "#:(memoryOnly)::resetauto",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 430,
        "wires": [
            [
                "e389f8df8737b7b1"
            ]
        ]
    },
    {
        "id": "0cdce45fc079816d",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::resetauto",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "e389f8df8737b7b1",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "restart true?",
        "property": "#:(memoryOnly)::Control_functions.ActiveCF.AutomaticRestart",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1290,
        "y": 430,
        "wires": [
            [
                "cc955a6af7eeba4b"
            ]
        ]
    },
    {
        "id": "49f37bb1c339412e",
        "type": "function",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "apagar piloto falla gen",
        "func": "global.set(\"IO.Functions.DO['Falla general']\", false, 'memoryOnly');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1680,
        "y": 390,
        "wires": [
            []
        ]
    },
    {
        "id": "8c91d4455998c1e3",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "evento",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Arranque automático",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Arranque automático fallido",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 800,
        "wires": [
            [
                "346a6c0d781748eb"
            ]
        ]
    },
    {
        "id": "346a6c0d781748eb",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 1705,
        "y": 800,
        "wires": []
    },
    {
        "id": "d9f0353e18035527",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Active?",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Active",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1270,
        "y": 870,
        "wires": [
            [
                "8c91d4455998c1e3",
                "ab5dd4dcf08f666f"
            ],
            [
                "4df7de2a24a0f655"
            ]
        ]
    },
    {
        "id": "90144d34685e497b",
        "type": "delay",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1120,
        "y": 940,
        "wires": [
            [
                "d9f0353e18035527"
            ]
        ]
    },
    {
        "id": "a03109bcfc45b245",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "evento",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Arranque automático",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Arranque automático efectuado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 920,
        "wires": [
            [
                "bb5a0d783e5dca2d"
            ]
        ]
    },
    {
        "id": "bb5a0d783e5dca2d",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 1765,
        "y": 920,
        "wires": []
    },
    {
        "id": "40d2340f963b7d0a",
        "type": "subflow:c8b77ff3.ab501",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "x": 730,
        "y": 720,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "20c76542990c37f1",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Parada",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Stop",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 720,
        "wires": [
            [
                "40d2340f963b7d0a"
            ]
        ]
    },
    {
        "id": "a67018ade5d649d0",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 760,
        "wires": [
            [
                "40d2340f963b7d0a"
            ]
        ]
    },
    {
        "id": "25995e1ba47e46a1",
        "type": "function",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "Int to IEEE 754",
        "func": "v = new DataView(new ArrayBuffer(4));\nmsg.payload = msg.payload.toString(16);\nv.setUint32(0, '0x'+ msg.payload);\nnode.status({fill:\"green\",shape:\"dot\",text:v.getFloat32(0)});\n\nmsg.payload = v.getFloat32(0);\n\nreturn msg;\n\n// Fuentes:\n// https://stackoverflow.com/questions/41635908/node-red-parsing-json-data-and-converting-it-into-binary\n// https://stackoverflow.com/questions/49221045/javascript-hexadecimal-string-to-ieee-754-floating-point",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1360,
        "y": 620,
        "wires": [
            [
                "163e3938.402577"
            ]
        ]
    },
    {
        "id": "70e07a51.c14f94",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "evento",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Rocking Start Lanzado",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Rocking Start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 400,
        "wires": [
            [
                "95637e8c.f75fe"
            ]
        ]
    },
    {
        "id": "50551e9e.69ca8",
        "type": "change",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "evento",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Rocking Start Detenido",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Rocking Start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 440,
        "wires": [
            [
                "95637e8c.f75fe"
            ]
        ]
    },
    {
        "id": "95637e8c.f75fe",
        "type": "link out",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "52f1e35a6b450a62"
        ],
        "x": 695,
        "y": 410,
        "wires": []
    },
    {
        "id": "a5e1205e8fe1feed",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "!=Active",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Active",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 440,
        "wires": [
            [
                "14170dd0.bdfb02"
            ]
        ]
    },
    {
        "id": "c2c2c8b5.2756c8",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "20a59349.5b554c",
        "name": "Active",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "45",
        "topic": "",
        "payload": "#:(memoryOnly)::C2S.Drive_Status.Active",
        "payloadType": "global",
        "x": 1880,
        "y": 60,
        "wires": [
            [
                "b4dfa5ba.66e068"
            ]
        ]
    },
    {
        "id": "95321517.b23b88",
        "type": "ui_text",
        "z": "e7088c4e.cc6b4",
        "g": "20a59349.5b554c",
        "group": "91f407cc.9e95a8",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Última detención",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2460,
        "y": 60,
        "wires": []
    },
    {
        "id": "def1bbac.336cb8",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "20a59349.5b554c",
        "name": "Stopped",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2140,
        "y": 60,
        "wires": [
            [
                "2f9d4e3e.f5bb62"
            ]
        ]
    },
    {
        "id": "b4dfa5ba.66e068",
        "type": "rbe",
        "z": "e7088c4e.cc6b4",
        "g": "20a59349.5b554c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 2010,
        "y": 60,
        "wires": [
            [
                "def1bbac.336cb8"
            ]
        ]
    },
    {
        "id": "2f9d4e3e.f5bb62",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "20a59349.5b554c",
        "name": "DateTime",
        "func": "// Date and Time Object\nvar DT      = new Date();\n\n// Date\nvar year    = DT.getFullYear();\nvar month   = DT.getMonth()+1;\nvar day     = DT.getDate();\n\n// Time\nvar hours   = DT.getHours();\nvar minutes = DT.getMinutes();  minutes = minutes <= 9 ? \"0\"+minutes : minutes;\nvar seconds = DT.getSeconds();  seconds = seconds <= 9 ? \"0\"+seconds : seconds;\n\n// Payload\nmsg.payload = day+\"/\"+month+\"/\"+year+\" \"+hours+\":\"+minutes+\":\"+seconds;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2280,
        "y": 60,
        "wires": [
            [
                "95321517.b23b88",
                "2907fd80.639f02"
            ]
        ]
    },
    {
        "id": "2907fd80.639f02",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "20a59349.5b554c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Ultimadetencion",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2490,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f291cd1f.07a95",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "20a59349.5b554c",
        "name": "Active",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "#:(memoryOnly)::C2S.Drive_Status.Active",
        "payloadType": "global",
        "x": 1870,
        "y": 110,
        "wires": [
            [
                "5a8731ef.91be5"
            ]
        ]
    },
    {
        "id": "5a8731ef.91be5",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "20a59349.5b554c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Ultimadetencion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 110,
        "wires": [
            [
                "95321517.b23b88"
            ]
        ]
    },
    {
        "id": "ca6aa931.930ae8",
        "type": "link out",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "874f4d5d.7453f",
            "820ffd9d.4462a"
        ],
        "x": 1655,
        "y": 280,
        "wires": []
    },
    {
        "id": "820ffd9d.4462a",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "",
        "links": [
            "ca6aa931.930ae8"
        ],
        "x": 1045,
        "y": 360,
        "wires": [
            [
                "cca85736.340b98"
            ]
        ]
    },
    {
        "id": "cca85736.340b98",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "Auto Remoto",
        "func": "global.set(\"Input.Operation.ControlMode\",\"Remoto\");\nmsg.payload = \"Remoto\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 360,
        "wires": [
            [
                "dd55fa16.314248"
            ]
        ]
    },
    {
        "id": "f198a750.0dc288",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2820,
        "y": 150,
        "wires": [
            [
                "49f6872d.f357e8"
            ]
        ]
    },
    {
        "id": "2ef0e8e6.2d3508",
        "type": "delay",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2830,
        "y": 190,
        "wires": [
            [
                "49f6872d.f357e8"
            ]
        ]
    },
    {
        "id": "49f6872d.f357e8",
        "type": "trigger",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "",
        "op1": "0",
        "op2": "reset",
        "op1type": "num",
        "op2type": "str",
        "duration": "45",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2980,
        "y": 150,
        "wires": [
            [
                "0f5155c1229cda5c"
            ]
        ]
    },
    {
        "id": "0f5155c1229cda5c",
        "type": "switch",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "fault",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3130,
        "y": 150,
        "wires": [
            [
                "5b339a75.df7174",
                "1fb58a8a.67c8f5"
            ]
        ]
    },
    {
        "id": "9599bd03.2a1a5",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "LostDHDflag",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::LostDHDflag",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1fb58a8a.67c8f5",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "LostDHDflag",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::LostDHDflag",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3280,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "11a3e1a0.57fb4e",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2020,
        "y": 740,
        "wires": [
            [
                "2af5d35f7e135f74"
            ]
        ]
    },
    {
        "id": "2ed8536c3c3c63ad",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2020,
        "y": 790,
        "wires": [
            [
                "e63d7c218dfa3131"
            ]
        ]
    },
    {
        "id": "e7e169ca4e5a950c",
        "type": "function",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "delay",
        "func": "var delay = flow.get(\"delay\", \"memoryOnly\") || 10000;\nmsg.delay = delay;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 630,
        "wires": [
            [
                "825a8d81.e5826"
            ]
        ]
    },
    {
        "id": "937ff287.3fa5b",
        "type": "complete",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "",
        "scope": [
            "e5c41a9d.a8b708",
            "8929022a.7ccf3"
        ],
        "uncaught": false,
        "x": 140,
        "y": 910,
        "wires": [
            [
                "77550c98.576f84"
            ]
        ]
    },
    {
        "id": "77550c98.576f84",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "",
        "property": "PID.Enable",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 300,
        "y": 890,
        "wires": [
            [
                "fd36c4d1.9d5ea8",
                "3bbaed96.9213e2",
                "d06ffec0.71437"
            ],
            [
                "5f1d5b77.109174",
                "ae41290c.649488",
                "345fe7bb.77c178"
            ],
            [
                "ae41290c.649488",
                "5f1d5b77.109174",
                "8929022a.7ccf3"
            ]
        ]
    },
    {
        "id": "5f1d5b77.109174",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "False",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 880,
        "wires": [
            [
                "715302ac.f9f87c"
            ]
        ]
    },
    {
        "id": "ae41290c.649488",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 840,
        "wires": [
            [
                "da507039.de239"
            ]
        ]
    },
    {
        "id": "3bbaed96.9213e2",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 800,
        "wires": [
            [
                "715302ac.f9f87c"
            ]
        ]
    },
    {
        "id": "fd36c4d1.9d5ea8",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "False",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 760,
        "wires": [
            [
                "da507039.de239"
            ]
        ]
    },
    {
        "id": "da507039.de239",
        "type": "ui_button",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "",
        "group": "4b44edd12d743430",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Habilitar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 630,
        "y": 800,
        "wires": [
            [
                "e5c41a9d.a8b708"
            ]
        ]
    },
    {
        "id": "715302ac.f9f87c",
        "type": "ui_button",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "",
        "group": "4b44edd12d743430",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Deshabilitar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 640,
        "y": 840,
        "wires": [
            [
                "8929022a.7ccf3",
                "d94dfcb17909ebcb"
            ]
        ]
    },
    {
        "id": "e5c41a9d.a8b708",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "Habilitar",
        "rules": [
            {
                "t": "set",
                "p": "PID.Enable",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 870,
        "wires": [
            [
                "69988bfb01469774"
            ]
        ]
    },
    {
        "id": "8929022a.7ccf3",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "Deshabilitar",
        "rules": [
            {
                "t": "set",
                "p": "PID.Enable",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 910,
        "wires": [
            [
                "25037f6e145deee9",
                "c19d91e6.6c67e"
            ]
        ]
    },
    {
        "id": "39667d7d.270542",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 195,
        "y": 870,
        "wires": [
            [
                "77550c98.576f84"
            ]
        ]
    },
    {
        "id": "d06ffec0.71437",
        "type": "link out",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "Roking Enable True Link Out",
        "links": [],
        "x": 445,
        "y": 930,
        "wires": []
    },
    {
        "id": "345fe7bb.77c178",
        "type": "link out",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "Roking Enable False Link Out",
        "links": [],
        "x": 445,
        "y": 970,
        "wires": []
    },
    {
        "id": "69988bfb01469774",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.PIDController",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 870,
        "wires": [
            []
        ]
    },
    {
        "id": "25037f6e145deee9",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "afcd8222.ca23b",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.PIDController",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 910,
        "wires": [
            []
        ]
    },
    {
        "id": "dda02d35.2cecb",
        "type": "ui_text_input",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "PID_Kp",
        "label": "PID Kp",
        "tooltip": "",
        "group": "edc39ed791f9c007",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "prop_band",
        "x": 580,
        "y": 250,
        "wires": [
            [
                "d1f79561.529bc8"
            ]
        ]
    },
    {
        "id": "44fdc5e6.85bf0c",
        "type": "ui_text_input",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "PID_Ti",
        "label": "PID Ti",
        "tooltip": "",
        "group": "edc39ed791f9c007",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "t_integral",
        "x": 570,
        "y": 290,
        "wires": [
            [
                "d1f79561.529bc8"
            ]
        ]
    },
    {
        "id": "9d734d6a.585f9",
        "type": "ui_text_input",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "PID_Td",
        "label": "PID Td",
        "tooltip": "",
        "group": "edc39ed791f9c007",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "t_derivative",
        "x": 580,
        "y": 330,
        "wires": [
            [
                "d1f79561.529bc8"
            ]
        ]
    },
    {
        "id": "766ff7ed.aba428",
        "type": "PID",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "setpoint": "80",
        "pb": "100",
        "ti": "5",
        "td": "0",
        "integral_default": "30",
        "smooth_factor": "0",
        "max_interval": 600,
        "enable": "1",
        "disabled_op": "0",
        "x": 1390,
        "y": 310,
        "wires": [
            [
                "129c6a9a.aae9c5"
            ]
        ]
    },
    {
        "id": "73d662e7.047d5c",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Escala y Límites",
        "func": "var max         = global.get(\"C2S.Speed_Control.MaxLimit\")||60;\nvar URef        = global.get(\"C2S.Last_Reference.Value\")||0;\nvar DeltaMax    = flow.get(\"PID.Limits.Delta_Hz_Max\")||1;\nvar DeltaMin    = flow.get(\"PID.Limits.Delta_Hz_Min\")||1;\n\nvar MaxHz       = (URef+DeltaMax)*10000;\nvar MinHz       = (URef-DeltaMin)*10000;\n\n//Escala Control PID\nvar b = [0,max];\nmsg.payload = Escalizar(b,msg.payload)*10000;\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\n\n//Limites\nif(msg.payload > MaxHz){\n    msg.payload = MaxHz;\n}\nelse if(msg.payload < MinHz){\n    msg.payload = MinHz;\n}\n\nmsg.MaxHz = MaxHz/10000;\nmsg.MinHz = MinHz/10000;\n\nreturn msg;\n\nfunction Escalizar(b,value){\n    var a = [0,1];\n    // Mapeo\n    if(b !== null && typeof b[0] == 'number' && typeof b[1] == 'number' ){\n        var t = b[0] + ((value - a[0])*(b[1] - b[0])) / (a[1]-a[0]);\n        // Saturación\n        if(t > b[1]){    \n            t = b[1];\n        }\n        else if(t < b[0]){ \n            t = b[0];\n        }\n        // Asignar payload\n        return parseFloat(t.toFixed(2));\n    }\n    else {\n        // Asignar payload\n        return 0;\n    }\n}\n\n//Fuente: https://rosettacode.org/wiki/Map_range",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1680,
        "y": 310,
        "wires": [
            [
                "d4218cf0.530c9"
            ]
        ]
    },
    {
        "id": "d1f79561.529bc8",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "PID Config",
        "func": "var Tipo    = flow.get(\"PID.Type\")||null;\n\nif(msg.topic == \"prop_band\" ){\n    if(Tipo == \"Presion\"){\n        flow.set(\"PID.Presion.prop_band\",msg.payload);\n    }\n    else if(Tipo == \"Corriente\"){\n        flow.set(\"PID.Corriente.prop_band\",msg.payload);\n    }\n    return;\n}\nelse if(msg.topic == \"t_integral\" ){\n    if(Tipo == \"Presion\"){\n        flow.set(\"PID.Presion.t_integral\",msg.payload);\n    }\n    else if(Tipo==\"Corriente\"){\n        flow.set(\"PID.Corriente.t_integral\",msg.payload);\n    }\n    return;\n}\nelse if(msg.topic == \"t_derivative\"){\n    if(Tipo == \"Presion\"){\n        flow.set(\"PID.Presion.t_derivative\",msg.payload);\n    }\n    else if(Tipo == \"Corriente\"){\n        flow.set(\"PID.Corriente.t_derivative\",msg.payload);\n    }\n    return;    \n}\nelse if(msg.topic == \"setpoint\"){\n    if(Tipo == \"Presion\"){\n        flow.set(\"PID.Presion.setpoint\",-msg.payload);\n    }\n    else if(Tipo == \"Corriente\"){\n        flow.set(\"PID.Corriente.setpoint\",msg.payload);\n    }\n    return;\n}\n\nif(Tipo == \"Presion\"){\n    msg.prop_band       = flow.get(\"PID.Presion.prop_band\")||0;\n    msg.t_integral      = flow.get(\"PID.Presion.t_integral\")||0;\n    msg.t_derivative    = flow.get(\"PID.Presion.t_derivative\")||0;\n    msg.setpoint        = flow.get(\"PID.Presion.setpoint\")||0;\n}\nelse if(Tipo == \"Corriente\"){\n    msg.prop_band       = flow.get(\"PID.Corriente.prop_band\")||0;\n    msg.t_integral      = flow.get(\"PID.Corriente.t_integral\")||0;\n    msg.t_derivative    = flow.get(\"PID.Corriente.t_derivative\")||0;\n    msg.setpoint        = flow.get(\"PID.Corriente.setpoint\")||0;\n}\n\n//msg.enable              = flow.get(\"PID.Enable\")||false; \nnode.status({fill:\"green\",shape:\"dot\",text:\"Kp: \"+msg.prop_band+\" Ti: \"+msg.t_integral +\" Td: \"+msg.t_derivative+\" Setpoint: \"+msg.setpoint });\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 310,
        "wires": [
            [
                "3067f725.56f2f8"
            ]
        ]
    },
    {
        "id": "4c96d1b1.d47ce",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "4372d5a0.d338dc",
            "ad87cee4.7dbb5"
        ],
        "x": 195,
        "y": 270,
        "wires": [
            [
                "dac5ee0c.60a49",
                "8f1125c4.daacb8",
                "3832b43d.5075cc",
                "1ceaf72f.47aa79",
                "ae17baf7.aa0dd8",
                "deafd3e9.1a118",
                "7d4871c0.b9897",
                "d2b661d8.32601",
                "f171af22.95924"
            ]
        ]
    },
    {
        "id": "859f68e9.1bfb38",
        "type": "inject",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 350,
        "wires": [
            [
                "8f1125c4.daacb8"
            ]
        ]
    },
    {
        "id": "31c4f09e.6de82",
        "type": "ui_dropdown",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "edc39ed791f9c007",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Presión",
                "value": "Presion",
                "type": "str"
            },
            {
                "label": "Corriente",
                "value": "Corriente",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 590,
        "y": 200,
        "wires": [
            [
                "b2ee364c.f0d8e8"
            ]
        ]
    },
    {
        "id": "dac5ee0c.60a49",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Tipo",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Type",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 240,
        "wires": [
            [
                "31c4f09e.6de82"
            ]
        ]
    },
    {
        "id": "b2ee364c.f0d8e8",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Tipo",
        "rules": [
            {
                "t": "set",
                "p": "PID.Type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7c042baf.6c61e4",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "PV",
        "func": "var Type        = flow.get(\"PID.Type\")||null;\nvar Sensor      = global.get(\"Process_data.DHS\",\"memoryOnly\");\nvar Pressure    = Sensor[\"Presión de entrada\"]||Sensor.AI[\"Presión de entrada\"];\nvar MotorI = global.get(\"C2S.Implicit.Output_Current\", 'memoryOnly') || 0;\nvar Rtx = global.get(\"C2S.RelTx\") || 1;\nvar Current = MotorI / Rtx;\n\n\nnode.status({fill:\"green\",shape:\"dot\",text: \"Presión: \"+Pressure+\" Corriente: \"+Current});\n\nif(Type == \"Presion\"){\n    if(Pressure==0)flow.set(\"PID.enable\",false,\"memoryOnly\");\n    node.status({fill:\"green\",shape:\"dot\",text: \"Presión: \"+Pressure+\" Corriente: \"+Current+\" Tipo: \"+Type});\n    msg.payload = num(-Pressure);\n    return msg;\n}\nelse if(Type == \"Corriente\"){\n    node.status({fill:\"green\",shape:\"dot\",text: \"Presión: \"+Pressure+\" Corriente: \"+Current+\" Tipo: \"+Type});\n    msg.payload = num(Current);\n    return msg\n}\nelse{\n    node.status({fill:\"grey\",shape:\"dot\",text: \"Presión: \"+Pressure+\" Corriente: \"+Current+\" Tipo: Ninguno\"});\n    return; \n}\n\nfunction num(x) {\n  return parseFloat(x);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 420,
        "wires": [
            [
                "d1f79561.529bc8"
            ]
        ]
    },
    {
        "id": "e8529ec4.1062b",
        "type": "inject",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.8",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 380,
        "y": 420,
        "wires": [
            [
                "7c042baf.6c61e4"
            ]
        ]
    },
    {
        "id": "6bf8246a.73f65c",
        "type": "ui_text_input",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "setpoint",
        "label": "Setpoint",
        "tooltip": "",
        "group": "edc39ed791f9c007",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "setpoint",
        "x": 580,
        "y": 370,
        "wires": [
            [
                "d1f79561.529bc8"
            ]
        ]
    },
    {
        "id": "d4218cf0.530c9",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "PID Enabled",
        "property": "PID.Enable",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1860,
        "y": 350,
        "wires": [
            [
                "80aaf983eb9bdbb6"
            ]
        ]
    },
    {
        "id": "8f1125c4.daacb8",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Config",
        "func": "var Tipo = flow.get(\"PID.Type\")||null;\n\nif(Tipo == \"Presion\"){\n    msg.prop_band       = flow.get(\"PID.Presion.prop_band\")||0;\n    msg.t_integral      = flow.get(\"PID.Presion.t_integral\")||0;\n    msg.t_derivative    = flow.get(\"PID.Presion.t_derivative\")||0;\n    msg.setpoint        = Math.abs(flow.get(\"PID.Presion.setpoint\"))||0;\n}\nelse if(Tipo == \"Corriente\"){\n    msg.prop_band       = flow.get(\"PID.Corriente.prop_band\")||0;\n    msg.t_integral      = flow.get(\"PID.Corriente.t_integral\")||0;\n    msg.t_derivative    = flow.get(\"PID.Corriente.t_derivative\")||0;\n    msg.setpoint        = flow.get(\"PID.Corriente.setpoint\")||0;\n}\n\nnode.status({fill:\"green\",shape:\"dot\",text:\"Kp: \"+msg.prop_band+\" Ti: \"+msg.t_integral +\" Td: \"+msg.t_derivative+\" Setpoint: \"+msg.setpoint });\n\nreturn [\n    MSG(msg.prop_band),\n    MSG(msg.t_integral),\n    MSG(msg.t_derivative),\n    MSG(msg.setpoint)\n];\n\nfunction MSG(X){\n    return { payload: X }\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 350,
        "wires": [
            [
                "dda02d35.2cecb"
            ],
            [
                "44fdc5e6.85bf0c"
            ],
            [
                "9d734d6a.585f9"
            ],
            [
                "6bf8246a.73f65c"
            ]
        ]
    },
    {
        "id": "2a2f104.a62ccf",
        "type": "complete",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "scope": [
            "b2ee364c.f0d8e8"
        ],
        "uncaught": false,
        "x": 140,
        "y": 310,
        "wires": [
            [
                "8f1125c4.daacb8",
                "3832b43d.5075cc",
                "1ceaf72f.47aa79",
                "ae17baf7.aa0dd8",
                "deafd3e9.1a118",
                "7d4871c0.b9897",
                "d2b661d8.32601",
                "f171af22.95924"
            ]
        ]
    },
    {
        "id": "59760e1.297e2f",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Type",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 200,
        "wires": [
            [
                "31c4f09e.6de82"
            ]
        ]
    },
    {
        "id": "35db28d5.6cf898",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "False",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Type",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "31c4f09e.6de82"
            ]
        ]
    },
    {
        "id": "3cbda9fc.643276",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "property": "PID.Enable",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 180,
        "wires": [
            [
                "35db28d5.6cf898"
            ],
            [
                "59760e1.297e2f"
            ]
        ]
    },
    {
        "id": "5c474c06.fc4eb4",
        "type": "complete",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "scope": [
            "e5c41a9d.a8b708",
            "8929022a.7ccf3"
        ],
        "uncaught": false,
        "x": 140,
        "y": 180,
        "wires": [
            [
                "3cbda9fc.643276"
            ]
        ]
    },
    {
        "id": "429c084c.bdb7e8",
        "type": "ui_text_input",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "label": "Δ Max [Hz]",
        "tooltip": "",
        "group": "4d2798c5816c08e6",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "1",
        "topic": "",
        "x": 540,
        "y": 470,
        "wires": [
            [
                "2664f246.4ed1ae"
            ]
        ]
    },
    {
        "id": "61a138bb.1bf0c8",
        "type": "ui_text_input",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "label": "Δ Min [Hz]",
        "tooltip": "",
        "group": "4d2798c5816c08e6",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "1",
        "topic": "",
        "x": 540,
        "y": 510,
        "wires": [
            [
                "a810eee4.622a1"
            ]
        ]
    },
    {
        "id": "6f1fc25f.3bf7dc",
        "type": "ui_text",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "group": "4d2798c5816c08e6",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "Max",
        "label": "",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "x": 2000,
        "y": 270,
        "wires": []
    },
    {
        "id": "4678d40e.8d6dbc",
        "type": "ui_text",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "group": "4d2798c5816c08e6",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "Min",
        "label": "",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "x": 2000,
        "y": 310,
        "wires": []
    },
    {
        "id": "b9b2071a.501878",
        "type": "ui_text_input",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "label": "Límite en la protección por corriente de VSD (H) [%]",
        "tooltip": "",
        "group": "84d4f3527698919d",
        "order": 2,
        "width": "5",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "1",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 670,
        "y": 550,
        "wires": [
            [
                "45f9d45.fc2d92c"
            ]
        ]
    },
    {
        "id": "c7b2c342.4724d",
        "type": "ui_text_input",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "label": "Límite en la protección por vibración (H) [%]",
        "tooltip": "",
        "group": "84d4f3527698919d",
        "order": 6,
        "width": "5",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "1",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 640,
        "y": 590,
        "wires": [
            [
                "70d72abf.382ff4"
            ]
        ]
    },
    {
        "id": "b2f62aea.fc39d8",
        "type": "ui_text_input",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "label": "Límite en la protección por temperatura de motor (H) [%]",
        "tooltip": "",
        "group": "84d4f3527698919d",
        "order": 10,
        "width": "5",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "1",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 680,
        "y": 630,
        "wires": [
            [
                "63f1e3c6.d2a68c"
            ]
        ]
    },
    {
        "id": "4901c762.a51cc8",
        "type": "ui_text_input",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "label": "Banda muerta",
        "tooltip": "",
        "group": "84d4f3527698919d",
        "order": 14,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "1",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 550,
        "y": 670,
        "wires": [
            [
                "4c971bbf.6a51f4"
            ]
        ]
    },
    {
        "id": "3afd29ba.46fad6",
        "type": "complete",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "",
        "scope": [
            "e5c41a9d.a8b708",
            "31c4f09e.6de82"
        ],
        "uncaught": false,
        "x": 1510,
        "y": 600,
        "wires": [
            [
                "ce02b206.111c9"
            ]
        ]
    },
    {
        "id": "ce02b206.111c9",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "",
        "func": "msg.payload={\n    \"data\":[]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1660,
        "y": 600,
        "wires": [
            [
                "d5ba14a5.0e5e98"
            ]
        ]
    },
    {
        "id": "b4849220.625db",
        "type": "inject",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "Clear chart on deploy",
        "props": [
            {
                "p": "payload",
                "v": "{\"data\":[]}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "{\"data\":[]}",
        "payloadType": "json",
        "x": 1540,
        "y": 550,
        "wires": [
            [
                "d5ba14a5.0e5e98"
            ]
        ]
    },
    {
        "id": "77182564.24ff4c",
        "type": "inject",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1490,
        "y": 500,
        "wires": [
            [
                "64cd81f4.6692f"
            ]
        ]
    },
    {
        "id": "64cd81f4.6692f",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "PV Chart",
        "func": "var Type        = flow.get(\"PID.Type\")||null;\nvar Sensor      = global.get(\"Process_data\",\"memoryOnly\");\nvar Pressure    = Math.abs(Sensor.DHS[\"Presión de entrada\"]||Sensor.AI[\"Presión de entrada\"]);\nvar Currentvsd  = global.get(\"C2S.Implicit.Output_Current\",\"memoryOnly\")||0;\nvar Reltx       = global.get(\"C2S.RelTx\")||1;\nvar Current = Currentvsd/Reltx;\nvar Psetpoint   = Math.abs(flow.get(\"PID.Presion.setpoint\"))||0;\nvar Csetpoint   = flow.get(\"PID.Corriente.setpoint\")||0;\n\nvar PV = { payload:0 };\nvar setpoint = { payload:0 };\n\nvar Timestamp = Date.now();\n\nnode.status({fill:\"green\",shape:\"dot\",text: \"Presión: \"+Pressure+\" Corriente: \"+Current});\n\nif(Type == \"Presion\"){\n    node.status({fill:\"green\",shape:\"dot\",text: \"Presión: \"+Pressure+\" Corriente: \"+Current+\" Tipo: \"+Type});\n    PV.payload          = num(Pressure);\n    PV.topic            = \"Presión\";\n    PV.timestamp        = Timestamp;\n    setpoint.payload    = Psetpoint;\n    setpoint.topic      = \"Setpoint de presión\";\n    setpoint.timestamp  = Timestamp;\n    return [PV,setpoint];\n}\nelse if(Type == \"Corriente\"){\n    node.status({fill:\"green\",shape:\"dot\",text: \"Presión: \"+Pressure+\" Corriente: \"+Current+\" Tipo: \"+Type});\n    PV.payload          = num(Current);\n    PV.topic            = \"Corriente\";\n    PV.timestamp        = Timestamp;\n    setpoint.payload    = Csetpoint;\n    setpoint.topic      = \"Setpoint de corriente\";\n    setpoint.timestamp  = Timestamp;\n    return [PV,setpoint];\n}\nelse{\n    node.status({fill:\"grey\",shape:\"dot\",text: \"Presión: \"+Pressure+\" Corriente: \"+Current+\" Tipo: Ninguno\"});\n    return; \n}\n\nfunction num(x) {\n  return parseFloat(x);\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 500,
        "wires": [
            [
                "fbf0ac29aa515aa8"
            ],
            [
                "fbf0ac29aa515aa8"
            ]
        ]
    },
    {
        "id": "d5ba14a5.0e5e98",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "Clear",
        "rules": [
            {
                "t": "move",
                "p": "payload.data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 550,
        "wires": [
            [
                "962b19d2.c18838"
            ]
        ]
    },
    {
        "id": "962b19d2.c18838",
        "type": "ui_chart",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "",
        "group": "62322ccaa2234181",
        "order": 1,
        "width": "16",
        "height": "10",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "300",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#2ca02c",
            "#ff7f0e",
            "#3f2ca0",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2070,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8c5351d8.97256",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 1455,
        "y": 640,
        "wires": [
            [
                "89f58b9e.9e0d08"
            ]
        ]
    },
    {
        "id": "89f58b9e.9e0d08",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "Pantalla",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Pantalla",
                "pt": "flow",
                "to": "Configuración-Tipo_de_control-PID",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 640,
        "wires": [
            [
                "ce02b206.111c9"
            ]
        ]
    },
    {
        "id": "248484da4b66af7c",
        "type": "catch",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "Errores PV Chart",
        "scope": [
            "64cd81f4.6692f"
        ],
        "uncaught": false,
        "x": 1730,
        "y": 640,
        "wires": [
            [
                "7af9ff4dabd191fb"
            ]
        ]
    },
    {
        "id": "7af9ff4dabd191fb",
        "type": "debug",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 640,
        "wires": []
    },
    {
        "id": "3832b43d.5075cc",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "DeltaMax",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Limits.Delta_Hz_Max",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 470,
        "wires": [
            [
                "429c084c.bdb7e8"
            ]
        ]
    },
    {
        "id": "1ceaf72f.47aa79",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "DeltaMin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Limits.Delta_Hz_Max",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 510,
        "wires": [
            [
                "61a138bb.1bf0c8"
            ]
        ]
    },
    {
        "id": "2664f246.4ed1ae",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "DeltaMax",
        "rules": [
            {
                "t": "set",
                "p": "PID.Limits.Delta_Hz_Max",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 470,
        "wires": [
            []
        ]
    },
    {
        "id": "a810eee4.622a1",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "DeltaMin",
        "rules": [
            {
                "t": "set",
                "p": "PID.Limits.Delta_Hz_Min",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 510,
        "wires": [
            []
        ]
    },
    {
        "id": "5e68509d.103b9",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "MaxHz",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MaxHz",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 270,
        "wires": [
            [
                "6f1fc25f.3bf7dc"
            ]
        ]
    },
    {
        "id": "84515fce.0be5a",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "MinHz",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MinHz",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 310,
        "wires": [
            [
                "4678d40e.8d6dbc"
            ]
        ]
    },
    {
        "id": "3067f725.56f2f8",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Banda Muerta + Reglas de activación",
        "func": "var DHData          = global.get(\"Process_data.DHS\",\"memoryOnly\")||[];\nvar PIDType         = flow.get(\"PID.Type\")||\"\";\nvar DeadBand        = flow.get(\"PID.Limits.DeadBand\")||0;\n\nvar PIDEnable       = flow.get(\"PID.Enable\")||false;\nvar CEnable         = global.get(\"Protections.Load.H.Setpoint\")||0;\nvar VEnable         = global.get(\"Protections.VibrationGeneral.H.Setpoint\")||0;\nvar MEnable         = global.get(\"Protections.MotorTemperature.H.Setpoint\")||0;\n\nvar CEnableLimit    = flow.get(\"PID.Activation.Current\")||0;\nvar VEnableLimit    = flow.get(\"PID.Activation.Vibration\")||0;\nvar MEnableLimit    = flow.get(\"PID.Activation.Temp\")||0;\n\n// Current\nvar Current = global.get(\"C2S.Implicit.Output_Current\",\"memoryOnly\")||0;\n\n// Vibration\nvar VibrationX      = DHData[\"Vibración X\"]|| 0;\nvar VibrationZ      = DHData[\"Vibración Z\"]|| 0;\nvar Vibration       = VibrationX >= VibrationZ ? VibrationX:VibrationZ;\n\n// Mtr Temp\nvar MtrTemp         = DHData[\"Temperatura de motor\"]||0;\n\nvar CurrentActivation   = flow.get(\"PID.Activation.Rules[0]\")||false;\nvar VibrationActivation = flow.get(\"PID.Activation.Rules[1]\")||false;\nvar MotorTempActivation = flow.get(\"PID.Activation.Rules[2]\")||false;\n\n//Rules\nvar CEnableRule     = CurrentActivation     == true ? (Current   <= CEnable*CEnableLimit/100 ? true:false)  :true;\nvar VEnableRule     = VibrationActivation   == true ? (Vibration <= VEnable*VEnableLimit/100 ? true:false)  :true;\nvar MtrTempRule     = MotorTempActivation   == true ? (MtrTemp   <= MEnable*MEnableLimit/100 ? true:false)  :true;\n\n// Activation Rule\nvar ActivationRule  = PIDEnable && CEnableRule && VEnableRule && MtrTempRule;\n\n// Dead Band Rule\nvar setpoint = 0;   var Min = 0;    var Max = 0;\n\nif(PIDType == \"Corriente\"){\n    setpoint = flow.get(\"PID.Corriente.setpoint\")||0;\n    Min = setpoint - DeadBand;\n    Max = setpoint + DeadBand;\n    if(msg.payload >= Min && msg.payload <= Max ){\n        var DeadBandRule = false;\n    }\n    else{\n        var DeadBandRule = true;\n    }\n}\nelse if(PIDType == \"Presion\"){\n    setpoint = flow.get(\"PID.Presion.setpoint\")||0;\n    Min = setpoint - DeadBand;\n    Max = setpoint + DeadBand;\n    if(msg.payload >= Min && msg.payload <= Max ){\n        DeadBandRule = false;\n    }\n    else{\n        DeadBandRule = true;\n    }\n}\n\n// Last asingation\nmsg.enable = (ActivationRule && DeadBandRule);\nflow.set(\"PID.enable\",msg.enable,\"memoryOnly\");\nnode.status({fill:\"green\",shape:\"dot\",text:\"PID:\"+PIDEnable+\" Corriente:\"+CEnableRule+\" Vibración:\"+VEnableRule + \" Temp. Mtr:\"+MtrTempRule});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 310,
        "wires": [
            [
                "766ff7ed.aba428",
                "e678be60.ba5b7"
            ]
        ]
    },
    {
        "id": "ae17baf7.aa0dd8",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Corriente",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Activation.Current",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 550,
        "wires": [
            [
                "b9b2071a.501878"
            ]
        ]
    },
    {
        "id": "deafd3e9.1a118",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Vibración",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Activation.Vibration",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 590,
        "wires": [
            [
                "c7b2c342.4724d"
            ]
        ]
    },
    {
        "id": "7d4871c0.b9897",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Temperatura",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Activation.Temp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 630,
        "wires": [
            [
                "b2f62aea.fc39d8"
            ]
        ]
    },
    {
        "id": "d2b661d8.32601",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "DeadBand",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Limits.DeadBand",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 670,
        "wires": [
            [
                "4901c762.a51cc8"
            ]
        ]
    },
    {
        "id": "45f9d45.fc2d92c",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Corriente",
        "rules": [
            {
                "t": "set",
                "p": "PID.Activation.Current",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 550,
        "wires": [
            []
        ]
    },
    {
        "id": "70d72abf.382ff4",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Vibración",
        "rules": [
            {
                "t": "set",
                "p": "PID.Activation.Vibration",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 590,
        "wires": [
            []
        ]
    },
    {
        "id": "63f1e3c6.d2a68c",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Temperatura",
        "rules": [
            {
                "t": "set",
                "p": "PID.Activation.Temp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 630,
        "wires": [
            []
        ]
    },
    {
        "id": "4c971bbf.6a51f4",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "DeadBand",
        "rules": [
            {
                "t": "set",
                "p": "PID.Limits.DeadBand",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 670,
        "wires": [
            []
        ]
    },
    {
        "id": "bb6b8bf2.f42718",
        "type": "complete",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "scope": [
            "45f9d45.fc2d92c",
            "70d72abf.382ff4",
            "63f1e3c6.d2a68c",
            "4c971bbf.6a51f4"
        ],
        "uncaught": false,
        "x": 960,
        "y": 420,
        "wires": [
            [
                "decb725e.fc487",
                "d91f2728.58e308",
                "8a1b8fa8.1f3b2"
            ]
        ]
    },
    {
        "id": "39b2bc9d.88ad84",
        "type": "ui_text",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "group": "84d4f3527698919d",
        "order": 4,
        "width": "8",
        "height": 1,
        "name": "H Corriente",
        "label": "Alarma H/ Lim PID",
        "format": "{{msg.payload}} ",
        "layout": "col-center",
        "className": "",
        "x": 1310,
        "y": 420,
        "wires": []
    },
    {
        "id": "ba9a49de.2a6e68",
        "type": "ui_text",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "group": "84d4f3527698919d",
        "order": 8,
        "width": "8",
        "height": 1,
        "name": "H Vibración",
        "label": "Alarma H/ Lim PID",
        "format": "{{msg.payload}} G",
        "layout": "col-center",
        "className": "",
        "x": 1310,
        "y": 460,
        "wires": []
    },
    {
        "id": "d97ed6bd.e7ad18",
        "type": "ui_text",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "group": "84d4f3527698919d",
        "order": 12,
        "width": "8",
        "height": 1,
        "name": "H Temp",
        "label": "Alarma H/ Lim PID",
        "format": "{{msg.payload}} ºF",
        "layout": "col-center",
        "className": "",
        "x": 1300,
        "y": 500,
        "wires": []
    },
    {
        "id": "0cb5e56ab0b31d03",
        "type": "catch",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Errores PV",
        "scope": [
            "7c042baf.6c61e4"
        ],
        "uncaught": false,
        "x": 840,
        "y": 360,
        "wires": [
            [
                "d6aaf343fc532b87"
            ]
        ]
    },
    {
        "id": "d6aaf343fc532b87",
        "type": "debug",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 360,
        "wires": []
    },
    {
        "id": "40acf2ee.4ee9dc",
        "type": "udp in",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "iface": "",
        "port": "3074",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 860,
        "y": 1040,
        "wires": [
            [
                "58b12e1b.3b9df"
            ]
        ]
    },
    {
        "id": "58b12e1b.3b9df",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "str2float",
        "func": "msg.payload = parseFloat(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 1000,
        "wires": [
            [
                "3e50826c.d0363e"
            ]
        ]
    },
    {
        "id": "3e50826c.d0363e",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.DHS[\"Presión de entrada\"]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "795a5947.03adf8",
        "type": "ui_switch",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "actv  corriente",
        "label": "",
        "tooltip": "",
        "group": "84d4f3527698919d",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1160,
        "y": 710,
        "wires": [
            [
                "d4429be1.13ea88"
            ]
        ]
    },
    {
        "id": "2d6cb3ad.ebcb0c",
        "type": "ui_switch",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "actv  vibra",
        "label": "",
        "tooltip": "",
        "group": "84d4f3527698919d",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1140,
        "y": 750,
        "wires": [
            [
                "eee59c62.d3fa3"
            ]
        ]
    },
    {
        "id": "d95b1415.57edd8",
        "type": "ui_switch",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "actv  motor",
        "label": "",
        "tooltip": "",
        "group": "84d4f3527698919d",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1150,
        "y": 790,
        "wires": [
            [
                "88bb6493.18ae58"
            ]
        ]
    },
    {
        "id": "d4429be1.13ea88",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Rules[0]",
        "rules": [
            {
                "t": "set",
                "p": "PID.Activation.Rules[0]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 710,
        "wires": [
            []
        ]
    },
    {
        "id": "eee59c62.d3fa3",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Rules[1]",
        "rules": [
            {
                "t": "set",
                "p": "PID.Activation.Rules[1]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 750,
        "wires": [
            []
        ]
    },
    {
        "id": "88bb6493.18ae58",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Rules[2]",
        "rules": [
            {
                "t": "set",
                "p": "PID.Activation.Rules[2]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 790,
        "wires": [
            []
        ]
    },
    {
        "id": "727b77b9.180d28",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Rules[0]",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Activation.Rules[0]",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 710,
        "wires": [
            []
        ]
    },
    {
        "id": "f171af22.95924",
        "type": "link out",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "1422e25b.c06c2e",
            "61bc8156.3d3b5"
        ],
        "x": 285,
        "y": 290,
        "wires": []
    },
    {
        "id": "61bc8156.3d3b5",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "f171af22.95924"
        ],
        "x": 865,
        "y": 760,
        "wires": [
            [
                "727b77b9.180d28",
                "6f73b47b.2b635c",
                "72ffcab6.7fb4d4"
            ]
        ]
    },
    {
        "id": "6f73b47b.2b635c",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Rules[1]",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Activation.Rules[1]",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 750,
        "wires": [
            []
        ]
    },
    {
        "id": "72ffcab6.7fb4d4",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Rules[2]",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PID.Activation.Rules[2]",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 790,
        "wires": [
            []
        ]
    },
    {
        "id": "e678be60.ba5b7",
        "type": "debug",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 270,
        "wires": []
    },
    {
        "id": "129c6a9a.aae9c5",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "enabled?",
        "property": "#:(memoryOnly)::PID.enable",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1520,
        "y": 310,
        "wires": [
            [
                "73d662e7.047d5c"
            ]
        ]
    },
    {
        "id": "decb725e.fc487",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "print values",
        "func": "var prot =global.get(\"Protections.Load.H.Setpoint\")||0;\nvar porc =flow.get(\"PID.Activation.Current\")||0;\nmsg.payload = prot + \"A / \" + (prot*porc/100).toFixed(2) +\"A\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 420,
        "wires": [
            [
                "39b2bc9d.88ad84"
            ]
        ]
    },
    {
        "id": "d91f2728.58e308",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "print values",
        "func": "var prot =global.get(\"Protections.VibrationGeneral.H.Setpoint\")||0;\nvar porc =flow.get(\"PID.Activation.Vibration\")||0;\nmsg.payload = prot + \"G / \" + (prot*porc/100).toFixed(2) +\"A\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 460,
        "wires": [
            [
                "ba9a49de.2a6e68"
            ]
        ]
    },
    {
        "id": "8a1b8fa8.1f3b2",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "print values",
        "func": "var prot =global.get(\"Protections.MotorTemperature.H.Setpoint\")||0;\nvar porc =flow.get(\"PID.Activation.Temp\")||0;\nmsg.payload = prot + \"°F / \" + (prot*porc/100).toFixed(2) +\"A\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 500,
        "wires": [
            [
                "d97ed6bd.e7ad18"
            ]
        ]
    },
    {
        "id": "a4d48e9d.89b09",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 1085,
        "y": 370,
        "wires": [
            [
                "decb725e.fc487",
                "d91f2728.58e308",
                "8a1b8fa8.1f3b2"
            ]
        ]
    },
    {
        "id": "ebca0701.bab008",
        "type": "ui_text",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "group": "4d2798c5816c08e6",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "Presion",
        "label": "{{msg.variable}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2040,
        "y": 170,
        "wires": []
    },
    {
        "id": "81ae77f6.5fd3c8",
        "type": "ui_text",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "group": "4d2798c5816c08e6",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "Frec",
        "label": "Frecuencia actual",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2030,
        "y": 210,
        "wires": []
    },
    {
        "id": "dd3279e.534be88",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "retroalim referencia",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 1635,
        "y": 170,
        "wires": [
            [
                "18af7d43.439f33",
                "92b6d7ac.198a68"
            ]
        ]
    },
    {
        "id": "51ec3e53.feab2",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Data show",
        "func": "var numdec = 1;\nvar unidad = msg.units\nif(typeof msg.payload == 'number' ){\n    msg.payload = parseFloat(msg.payload.toFixed(numdec)) + \" \" + unidad;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 170,
        "wires": [
            [
                "ebca0701.bab008"
            ]
        ]
    },
    {
        "id": "18af7d43.439f33",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Freq",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::C2S.Implicit.Output_Frequency",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 210,
        "wires": [
            [
                "659c35ff.e1291c"
            ]
        ]
    },
    {
        "id": "659c35ff.e1291c",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Data show",
        "func": "var numdec = 1;\nvar unidad = \"Hz\";\nif(typeof msg.payload == 'number' ){\n    msg.payload = parseFloat(msg.payload.toFixed(numdec)) + \" \" + unidad;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 210,
        "wires": [
            [
                "81ae77f6.5fd3c8"
            ]
        ]
    },
    {
        "id": "92b6d7ac.198a68",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Data",
        "func": "var tipo = flow.get(\"PID.Type\")||\"Presion\";\nmsg.payload = tipo == \"Presion\"?(global.get(\"Process_data.DHS['Presión de entrada']\",\"memoryOnly\")||0):(global.get(\"C2S.Implicit.Output_Current\",\"memoryOnly\")||0);\nmsg.units = tipo == \"Presion\"? \"psi\":\"A\";\nmsg.variable = tipo == \"Presion\"? \"Presión actual\":\"Corriente actual\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1740,
        "y": 170,
        "wires": [
            [
                "51ec3e53.feab2"
            ]
        ]
    },
    {
        "id": "65e9bd38.989f24",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 1585,
        "y": 270,
        "wires": [
            [
                "aa741b22.4cb5c8"
            ]
        ]
    },
    {
        "id": "aa741b22.4cb5c8",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "lims PID",
        "func": "var max         = global.get(\"C2S.Speed_Control.MaxLimit\")||60;\nvar URef        = global.get(\"C2S.Last_Reference.Value\")||0;\nvar DeltaMax    = flow.get(\"PID.Limits.Delta_Hz_Max\")||1;\nvar DeltaMin    = flow.get(\"PID.Limits.Delta_Hz_Min\")||1;\n\nvar MaxHz       = (URef+DeltaMax);\nvar MinHz       = (URef-DeltaMin);\n\nmsg.MaxHz = MaxHz;\nmsg.MinHz = MinHz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1690,
        "y": 270,
        "wires": [
            [
                "5e68509d.103b9",
                "84515fce.0be5a"
            ]
        ]
    },
    {
        "id": "c19d91e6.6c67e",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "save ref",
        "func": "var ref = global.get(\"C2S.Implicit.Commanded_SpdRef\",\"memoryOnly\")||0;\nglobal.set(\"C2S.Last_Reference.Value\",ref);\nglobal.set(\"C2S.Last_Reference.Source\",\"ControlPID\");\nmsg.payload = ref;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 950,
        "wires": [
            [
                "8b2d994174f28a66"
            ]
        ]
    },
    {
        "id": "80aaf983eb9bdbb6",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "DIV",
        "func": "msg.payload = msg.payload/10000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2010,
        "y": 350,
        "wires": [
            [
                "ada87f22bb366bb1"
            ]
        ]
    },
    {
        "id": "25e6e69ca5aed538",
        "type": "inject",
        "z": "902fc438.e5d758",
        "g": "1178951067fce7a4",
        "name": "Inyect last reference",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "C2S.Last_Reference.Value",
        "payloadType": "global",
        "x": 680,
        "y": 3040,
        "wires": [
            [
                "eb7ab466.6a90b8",
                "1a666ca6835d2d34",
                "fd43d65633c388cf"
            ]
        ]
    },
    {
        "id": "eb7ab466.6a90b8",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "1178951067fce7a4",
        "name": "Last Reference",
        "property": "#:(memoryOnly)::lastRefFlag",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 3040,
        "wires": [
            [],
            [
                "9bd1e11d.4da77",
                "5e9480f01e3c4b75"
            ]
        ]
    },
    {
        "id": "9bd1e11d.4da77",
        "type": "delay",
        "z": "902fc438.e5d758",
        "g": "1178951067fce7a4",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1020,
        "y": 3090,
        "wires": [
            [
                "890cac9f.ef77"
            ]
        ]
    },
    {
        "id": "890cac9f.ef77",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "1178951067fce7a4",
        "name": "Last Reference",
        "func": "var lastRef = global.get(\"C2S.Last_Reference.Value\")||0;\nvar ref     = global.get(\"C2S.Implicit.Commanded_SpdRef\",'memoryOnly')||0;\nref = Math.abs(ref);\n\nif(lastRef == ref){\n    flow.set(\"lastRefFlag\",true,'memoryOnly');    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3090,
        "wires": [
            []
        ]
    },
    {
        "id": "1a666ca6835d2d34",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "1178951067fce7a4",
        "name": "falla com",
        "func": "var faultcom = global.get(\"C2S.Comunicacion_Drive\",\"memoryOnly\")||false;\nvar ref = parseFloat((global.get(\"C2S.Implicit.Commanded_SpdRef\",\"memoryOnly\")||60).toFixed(1));\nref = Math.abs(ref);\n\nvar arauto = global.get(\"Control_functions.ActiveCF.AutomaticRestart\", \"memoryOnly\") || false;\nvar prolongada = global.get(\"Control_functions.ActiveCF.Prolonged_Reference\", \"memoryOnly\") || false;\nvar escalonado = global.get(\"Control_functions.ActiveCF.Staggered_start\", \"memoryOnly\") || false;\nvar PIDController = global.get(\"Control_functions.ActiveCF.PIDController\", \"memoryOnly\")||false;\nvar rocking = global.get(\"Control_functions.ActiveCF.RockingStart\", \"memoryOnly\") || false;\n\nif (!faultcom)flow.set(\"lastRefFlag\",false,'memoryOnly');\nif((msg.payload!= ref)&& !arauto&&!prolongada&&!escalonado&&!PIDController&&rocking)flow.set(\"lastRefFlag\",false,'memoryOnly');\nmsg.payload = ref;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3090,
        "wires": [
            []
        ]
    },
    {
        "id": "5e9480f01e3c4b75",
        "type": "subflow:1fbf295f73cccb97",
        "z": "902fc438.e5d758",
        "g": "1178951067fce7a4",
        "name": "",
        "env": [],
        "x": 1080,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "05d887b016f50dbe",
        "type": "switch",
        "z": "c8b77ff3.ab501",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Basic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Direction",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 200,
        "wires": [
            [
                "7f98852be91681d3"
            ],
            [
                "3b87f9cd4db93f5a"
            ]
        ]
    },
    {
        "id": "7f98852be91681d3",
        "type": "switch",
        "z": "c8b77ff3.ab501",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reset",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 340,
        "y": 150,
        "wires": [
            [
                "a3997bb4.8d7628"
            ],
            [
                "e713482b.3c8348"
            ],
            [
                "4bbfacbe.095154"
            ]
        ]
    },
    {
        "id": "3b87f9cd4db93f5a",
        "type": "switch",
        "z": "c8b77ff3.ab501",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 250,
        "wires": [
            [
                "9821cde3c44f2555"
            ],
            [
                "fe62a296f8dd5c04"
            ]
        ]
    },
    {
        "id": "fe62a296f8dd5c04",
        "type": "change",
        "z": "c8b77ff3.ab501",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Reverse",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 270,
        "wires": [
            [
                "bb80a9dd468b9dbf"
            ]
        ]
    },
    {
        "id": "9821cde3c44f2555",
        "type": "change",
        "z": "c8b77ff3.ab501",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Forward",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 230,
        "wires": [
            [
                "bb80a9dd468b9dbf"
            ]
        ]
    },
    {
        "id": "4bbfacbe.095154",
        "type": "change",
        "z": "c8b77ff3.ab501",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 190,
        "wires": [
            [
                "bb80a9dd468b9dbf"
            ]
        ]
    },
    {
        "id": "e713482b.3c8348",
        "type": "change",
        "z": "c8b77ff3.ab501",
        "name": "Parada",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Stop",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 150,
        "wires": [
            [
                "bb80a9dd468b9dbf"
            ]
        ]
    },
    {
        "id": "a3997bb4.8d7628",
        "type": "change",
        "z": "c8b77ff3.ab501",
        "name": "Arranque",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 110,
        "wires": [
            [
                "bb80a9dd468b9dbf"
            ]
        ]
    },
    {
        "id": "bb80a9dd468b9dbf",
        "type": "function",
        "z": "c8b77ff3.ab501",
        "name": "LogicCommand",
        "func": "var Direction = global.get(\"C2S.Drive_Status.Command_dir\",\"memoryOnly\");\n\n//Mensaje de salida\nif(msg.payload == 'Start'){\n    if(Direction == 0){\n        msg.command = \"Arranque 'Reverse'\";\n    }\n    else{\n        msg.command = \"Arranque 'Forward'\";\n    }\n    msg.payload = 2;\n}\nelse if(msg.payload == 'Stop'){\n    msg.command = \"Parada del equipo\";\n    msg.payload = 1;\n}\nelse if(msg.payload == 'Reset'){\n    msg.command = \"Reset del equipo\";\n    msg.payload = 8;\n    \n}\nelse if(msg.payload == 'Forward'){\n    msg.command = \"Cambio sentido de giro a 'Forward'\";\n    msg.payload = 16;\n}\nelse if(msg.payload == 'Reverse'){\n    msg.command = \"Cambio sentido de giro a 'Reverse'\";\n    msg.payload = 32;\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 920,
        "y": 190,
        "wires": [
            [
                "c46b2a9d6cbcacb5",
                "0a3404882583c05d",
                "ab6b7001.e0de8",
                "bfda390e.8957b8"
            ]
        ]
    },
    {
        "id": "5daaff04fc344334",
        "type": "debug",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 980,
        "y": 550,
        "wires": []
    },
    {
        "id": "25370127fccaf364",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "Activefunctions?",
        "func": "var prolongada = global.get(\"Control_functions.ActiveCF.Prolonged_Reference\",\"memoryOnly\")||false;\nvar escalonado = global.get(\"Control_functions.ActiveCF.Staggered_start\", \"memoryOnly\") || false;\nvar automatico = global.get(\"Control_functions.ActiveCF.AutomaticRestart\", \"memoryOnly\") || false;\nvar PIDccontrol = global.get(\"Control_functions.ActiveCF.PIDController\", \"memoryOnly\") || false;\nvar rocking = global.get(\"Control_functions.ActiveCF.RockingStart\", \"memoryOnly\") || false;\nif (prolongada || escalonado || automatico || PIDccontrol || rocking) msg.filtro = \"failed\"; else msg.filtro = \"OK\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1730,
        "y": 440,
        "wires": [
            [
                "8d0786369fd3802f"
            ]
        ]
    },
    {
        "id": "8d0786369fd3802f",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "failed?",
        "property": "filtro",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "failed",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1890,
        "y": 440,
        "wires": [
            [
                "a5f79bdaf8d4e1ea"
            ],
            [
                "c687d6d470168640",
                "f5e1989e29bb2e65"
            ]
        ]
    },
    {
        "id": "d47b00374bf9b04e",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Referencia remota bloqueada. Funcion de control activa",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Remoto",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 380,
        "wires": [
            [
                "971e052f5f27f92d"
            ]
        ]
    },
    {
        "id": "971e052f5f27f92d",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "52f1e35a6b450a62"
        ],
        "x": 2165,
        "y": 440,
        "wires": []
    },
    {
        "id": "a5f79bdaf8d4e1ea",
        "type": "rbe",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 2030,
        "y": 430,
        "wires": [
            [
                "d47b00374bf9b04e"
            ]
        ]
    },
    {
        "id": "5bf2a7aa.f590f8",
        "type": "link in",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 395,
        "y": 100,
        "wires": [
            [
                "65b175f6.1549bc"
            ]
        ]
    },
    {
        "id": "f149f03c.2778",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Prolonged_Reference.Time",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3880,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9d69dee97c9d4411",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3770,
        "y": 240,
        "wires": [
            [
                "5c3fd2882dd2bad7"
            ]
        ]
    },
    {
        "id": "5c3fd2882dd2bad7",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "links": [
            "da19c33e2f26daf9",
            "5378dc339b4a7503"
        ],
        "x": 3865,
        "y": 240,
        "wires": []
    },
    {
        "id": "25cc60d9875e0b46",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "/10",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3590,
        "y": 280,
        "wires": [
            [
                "f149f03c.2778"
            ]
        ]
    },
    {
        "id": "4ce031c644161551",
        "type": "ui_text",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "group": "2d559537.720c4a",
        "order": 3,
        "width": "6",
        "height": 1,
        "name": "titulo referencia",
        "label": "",
        "format": "<font size = 4px>Referencia  Con Rampa Prolongada",
        "layout": "row-left",
        "x": 1070,
        "y": 70,
        "wires": []
    },
    {
        "id": "44b727f8b1644f59",
        "type": "ui_text",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "group": "2d559537.720c4a",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "titulo funciones",
        "label": "",
        "format": "<font size = 4px>Otras Funciones",
        "layout": "col-center",
        "x": 1250,
        "y": 70,
        "wires": []
    },
    {
        "id": "efe8acb9d356845d",
        "type": "ui_button",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "Normal",
        "group": "2d559537.720c4a",
        "order": 13,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "<font size = 2px>Op. Normal",
        "tooltip": "",
        "color": "green",
        "bgcolor": "#d4d4cf",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 650,
        "y": 120,
        "wires": [
            [
                "60147134ac0b341b"
            ]
        ]
    },
    {
        "id": "472809a09b0bbc57",
        "type": "ui_button",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "Escalonado",
        "group": "2d559537.720c4a",
        "order": 16,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "<font size = 2px>Arr. escalon",
        "tooltip": "",
        "color": "green",
        "bgcolor": "#d4d4cf",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 640,
        "y": 160,
        "wires": [
            [
                "b39733923cc0b641"
            ]
        ]
    },
    {
        "id": "60147134ac0b341b",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "start change",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Input.Navigation.ComandOper",
                "pt": "global",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 120,
        "wires": [
            [
                "c27cb084a6f62baf"
            ]
        ]
    },
    {
        "id": "b39733923cc0b641",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "start change",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Input.Navigation.ComandOper",
                "pt": "global",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 160,
        "wires": [
            [
                "c27cb084a6f62baf"
            ]
        ]
    },
    {
        "id": "c27cb084a6f62baf",
        "type": "link out",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "236c6c92.d31584",
            "501b4196.e2e16",
            "3f521e134773d692",
            "2935240c06b8dd69"
        ],
        "x": 925,
        "y": 140,
        "wires": []
    },
    {
        "id": "7219dcb863a2c3b2",
        "type": "ui_text_input",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "label": "Ref. (Hz)",
        "tooltip": "",
        "group": "2d559537.720c4a",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 630,
        "y": 320,
        "wires": [
            [
                "e262ad6ae9015a31"
            ]
        ]
    },
    {
        "id": "9f4b355a3084b991",
        "type": "ui_text_input",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "label": "Hh:",
        "tooltip": "",
        "group": "2d559537.720c4a",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 620,
        "y": 200,
        "wires": [
            [
                "162a8666c5990542"
            ]
        ]
    },
    {
        "id": "a770e5fe78f92fe7",
        "type": "ui_text_input",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "label": "mm:",
        "tooltip": "",
        "group": "2d559537.720c4a",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 620,
        "y": 240,
        "wires": [
            [
                "d52c8745f2dcf456"
            ]
        ]
    },
    {
        "id": "2823e7ed6786ef76",
        "type": "ui_text_input",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "label": "ss",
        "tooltip": "",
        "group": "2d559537.720c4a",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 620,
        "y": 280,
        "wires": [
            [
                "2ff480a1df8f6421"
            ]
        ]
    },
    {
        "id": "7d435bd209becfc7",
        "type": "ui_button",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "group": "2d559537.720c4a",
        "order": 12,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "ok",
        "tooltip": "",
        "color": "",
        "bgcolor": "#32499d",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 620,
        "y": 370,
        "wires": [
            [
                "6943549b680dd673",
                "7c0eb170.c43d1"
            ]
        ]
    },
    {
        "id": "e80688147fe09808",
        "type": "ui_text",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "group": "2d559537.720c4a",
        "order": 14,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Porcentaje de Referencia prolongada:",
        "format": "<font size = 5px>{{msg.payload}}%",
        "layout": "row-spread",
        "x": 640,
        "y": 450,
        "wires": []
    },
    {
        "id": "4391f93affafd7a8",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "51579afe.51eb14",
            "d9e918f.b47e7e8",
            "9acb8447.7a7a98",
            "ea89edab35b9a3f3"
        ],
        "x": 225,
        "y": 260,
        "wires": [
            [
                "b8719faf43e567b6",
                "dda93ddb4cdd8e42",
                "6df94c87285004b1",
                "65c8020583102863",
                "53d31594ecf44cdd"
            ]
        ]
    },
    {
        "id": "b8719faf43e567b6",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "delete",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 120,
        "y": 110,
        "wires": [
            [
                "5f28e0260ab07b11"
            ]
        ]
    },
    {
        "id": "39607c495a244614",
        "type": "switch",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "user?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 140,
        "wires": [
            [
                "5f33dee798d46a51"
            ],
            [
                "a8fa4bfd132668a6"
            ]
        ]
    },
    {
        "id": "5f33dee798d46a51",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 120,
        "wires": [
            [
                "7219dcb863a2c3b2",
                "9f4b355a3084b991",
                "a770e5fe78f92fe7",
                "2823e7ed6786ef76",
                "7d435bd209becfc7"
            ]
        ]
    },
    {
        "id": "a8fa4bfd132668a6",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "7219dcb863a2c3b2",
                "9f4b355a3084b991",
                "a770e5fe78f92fe7",
                "2823e7ed6786ef76",
                "7d435bd209becfc7"
            ]
        ]
    },
    {
        "id": "162a8666c5990542",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "ramp_refprol1",
        "rules": [
            {
                "t": "set",
                "p": "ramp_refprol[0]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d52c8745f2dcf456",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "ramp_refprol2",
        "rules": [
            {
                "t": "set",
                "p": "ramp_refprol[1]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "2ff480a1df8f6421",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "ramp_refprol3",
        "rules": [
            {
                "t": "set",
                "p": "ramp_refprol[2]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "44c036455c97db1f",
        "type": "function",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "rampa ref prol(s)",
        "func": "var ramp_refprol1 = flow.get(\"ramp_refprol[0]\") || 0;\nvar ramp_refprol2 = flow.get(\"ramp_refprol[1]\") || 0;\nvar ramp_refprol3 = flow.get(\"ramp_refprol[2]\") || 0;\nvar timer;\nmsg.payload = (ramp_refprol1 * 3600) + (ramp_refprol2 * 60) + ramp_refprol3;\nif (msg.payload > 345600)\n    timer = 3600;\nelse if (msg.payload > 259200)\n    timer = 2400;\nelse if (msg.payload > 172800)\n    timer = 1800;\nelse if (msg.payload > 86400)\n    timer = 1200;\nelse if (msg.payload > 43200)\n    timer = 600;\nelse if (msg.payload > 21600)\n    timer = 300;\nelse if (msg.payload > 10800)\n    timer = 120;\nelse if (msg.payload > 5400)\n    timer = 60;\nelse if (msg.payload > 2700)\n    timer = 30;\nelse if (msg.payload > 1800)\n    timer = 15;\nelse\n    timer = 10;\n\nmsg.timer = timer;\nflow.set(\"delay\", timer * 1000, \"memoryOnly\");\n\nnode.status({ fill: \"green\", shape: \"dot\", text: \"Timer : \" + msg.timer + \" Seg\" });\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 930,
        "y": 360,
        "wires": [
            [
                "05f960527ef968ba",
                "43c7fadb8296320f"
            ]
        ]
    },
    {
        "id": "dda93ddb4cdd8e42",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "ramp_refprol1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ramp_refprol[0]",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "9f4b355a3084b991"
            ]
        ]
    },
    {
        "id": "6df94c87285004b1",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "ramp_refprol2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ramp_refprol[1]",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 240,
        "wires": [
            [
                "a770e5fe78f92fe7"
            ]
        ]
    },
    {
        "id": "65c8020583102863",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "ramp_refprol3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ramp_refprol[2]",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "2823e7ed6786ef76"
            ]
        ]
    },
    {
        "id": "e262ad6ae9015a31",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Prolonged_Reference.Hz",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "05f960527ef968ba",
        "type": "function",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "Delta Hz",
        "func": "// Definitions\nvar PRef = global.get(\"Control_functions.Prolonged_Reference\");\nvar Commanded_SpdRef = global.get(\"C2S.Implicit.Commanded_SpdRef\", 'memoryOnly') || 0;\nvar Hz = PRef.Hz;\n\nvar Time = msg.payload;\nPRef.dHz = msg.timer * (Math.abs(Hz - Math.abs(Commanded_SpdRef)) / Time);\n\nnode.status({ fill: \"green\", shape: \"dot\", text: \"Delta Hz : \" + PRef.dHz });\nglobal.set(\"Control_functions.Prolonged_Reference\", PRef);\nmsg.payload = PRef.dHz;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 360,
        "wires": [
            [
                "d47b33e4bb67ed8d"
            ]
        ]
    },
    {
        "id": "53d31594ecf44cdd",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "Hz",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Prolonged_Reference.Hz",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 320,
        "wires": [
            [
                "7219dcb863a2c3b2"
            ]
        ]
    },
    {
        "id": "d47b33e4bb67ed8d",
        "type": "link out",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "223f7107.39115e",
            "19607e18163d56ce"
        ],
        "x": 1185,
        "y": 360,
        "wires": []
    },
    {
        "id": "32c533cd806813d9",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "notificación",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No es posible realizar rampa prolongada fuera de límites",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "No procede",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 440,
        "wires": [
            [
                "aeb76c9ced35d9f4"
            ]
        ]
    },
    {
        "id": "aeb76c9ced35d9f4",
        "type": "link out",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "52f1e35a6b450a62"
        ],
        "x": 1035,
        "y": 440,
        "wires": []
    },
    {
        "id": "9c5515f79c0d3921",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::RefInicial",
                "pt": "flow",
                "to": "#:(memoryOnly)::C2S.Implicit.Output_Frequency",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "9a23521db4cf3e10",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "retroalim referencia",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 225,
        "y": 450,
        "wires": [
            [
                "ac2c282207510e0a"
            ]
        ]
    },
    {
        "id": "ac2c282207510e0a",
        "type": "function",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "func": "var refinal = global.get(\"Control_functions.Prolonged_Reference.Hz\") || 0;\nvar borrar = global.get(\"Control_functions.ActiveCF.Prolonged_Reference\", \"memoryOnly\") || false;\nvar inicial = flow.get(\"RefInicial\", \"memoryOnly\") || 0;\nvar velactual = flow.get(\"RefActual\", 'memoryOnly') || 0; //global.get(\"C2S.Implicit.Output_Frequency\",\"memoryOnly\") || 0;\n\nif (refinal != 0 && inicial != 0 && velactual != 0) {\n    msg.payload = Math.abs(100 - ((Math.abs(refinal) - Math.abs(velactual)) / (Math.abs(refinal) - Math.abs(inicial))) * 100).toFixed(6);\n    if (msg.payload < 0 || msg.payload > 100) {\n        msg.payload = 0;\n    }\n    if (!borrar) msg.payload = \"\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 450,
        "wires": [
            [
                "e80688147fe09808"
            ]
        ]
    },
    {
        "id": "0d8935807bf48065",
        "type": "function",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "Abs",
        "func": "msg.payload= Math.abs(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 400,
        "wires": [
            [
                "9c5515f79c0d3921"
            ]
        ]
    },
    {
        "id": "6943549b680dd673",
        "type": "switch",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "lims?",
        "property": "Control_functions.Prolonged_Reference.Hz",
        "propertyType": "global",
        "rules": [
            {
                "t": "btwn",
                "v": "C2S.Speed_Control.MinLimit",
                "vt": "global",
                "v2": "C2S.Speed_Control.MaxLimit",
                "v2t": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 740,
        "y": 370,
        "wires": [
            [
                "44c036455c97db1f",
                "0d8935807bf48065"
            ],
            [
                "32c533cd806813d9"
            ]
        ]
    },
    {
        "id": "5f28e0260ab07b11",
        "type": "switch",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Local",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 90,
        "wires": [
            [
                "39607c495a244614"
            ],
            [
                "a8fa4bfd132668a6"
            ]
        ]
    },
    {
        "id": "6f1f2fc244d27fc2",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "448626b05dfddbc4"
        ],
        "x": 155,
        "y": 70,
        "wires": [
            [
                "5f28e0260ab07b11"
            ]
        ]
    },
    {
        "id": "4f53dfb62883c1ff",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "3b0732a010e2131c",
            "bbb7f8e6bcef99a7"
        ],
        "x": 695,
        "y": 80,
        "wires": [
            [
                "60147134ac0b341b"
            ]
        ]
    },
    {
        "id": "7c0eb170.c43d1",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "Refactual",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::RefActual",
                "pt": "flow",
                "to": "#:(memoryOnly)::C2S.Implicit.Commanded_SpdRef",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 410,
        "wires": [
            []
        ]
    },
    {
        "id": "5378dc339b4a7503",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "5c3fd2882dd2bad7",
            "c95b60b43cff792a"
        ],
        "x": 1005,
        "y": 140,
        "wires": [
            [
                "11717dd3aec1338f"
            ]
        ]
    },
    {
        "id": "cdc3f81082ef5bc3",
        "type": "change",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "Prolonged_Reference.Time",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Prolonged_Reference.Time",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "11717dd3aec1338f",
        "type": "function",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "time from SCADA",
        "func": "if(msg.payload%10 ==0)\n    flow.set(\"ramp_refprol\",[msg.payload,0,0]);\nelse{\n    flow.set(\"ramp_refprol[0]\", Math.trunc(msg.payload/10));\n    flow.set(\"ramp_refprol[1]\", ((msg.payload % 10)/10)*60);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 140,
        "wires": [
            [
                "94af1ad005c45bd0"
            ]
        ]
    },
    {
        "id": "ea89edab35b9a3f3",
        "type": "link out",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "4391f93affafd7a8"
        ],
        "x": 1395,
        "y": 140,
        "wires": []
    },
    {
        "id": "94af1ad005c45bd0",
        "type": "rbe",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1310,
        "y": 140,
        "wires": [
            [
                "ea89edab35b9a3f3"
            ]
        ]
    },
    {
        "id": "726f6b06fb5eadb4",
        "type": "link out",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "c1a056611d691637",
            "0822eef5708b8fc2",
            "57d5f0222267c2cd",
            "977b56e84f992b9c",
            "2baf2b26ed90de6c",
            "eadd7919bd681893"
        ],
        "x": 1175,
        "y": 280,
        "wires": []
    },
    {
        "id": "43c7fadb8296320f",
        "type": "function",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "h*10",
        "func": "msg.payload = Math.trunc(msg.payload/360);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "726f6b06fb5eadb4",
                "cdc3f81082ef5bc3"
            ]
        ]
    },
    {
        "id": "2027934fefee8b19",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "inactive",
        "property": "#:(memoryOnly)::Control_functions.ActiveCF.Prolonged_Reference",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3260,
        "y": 280,
        "wires": [
            [
                "7e94d37b.d9ba6c"
            ]
        ]
    },
    {
        "id": "46aa199a15d83484",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "527fb039.aa59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 3060,
        "y": 530,
        "wires": []
    },
    {
        "id": "977b56e84f992b9c",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "26716b1e0dd96786",
        "name": "",
        "links": [
            "726f6b06fb5eadb4"
        ],
        "x": 1315,
        "y": 920,
        "wires": [
            [
                "0b763c8cadd505c7",
                "575cba8bd41cb933"
            ]
        ]
    },
    {
        "id": "0b763c8cadd505c7",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "26716b1e0dd96786",
        "name": "Tracking TCP",
        "func": "\nmsg.payload = { \n    value: msg.payload, \n    'fc': 6, \n    'unitid': 1, \n    'address': 60,\n    'quantity':1   \n}\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload.address});\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1430,
        "y": 900,
        "wires": [
            [
                "75ae9dfb.c587e4"
            ]
        ]
    },
    {
        "id": "575cba8bd41cb933",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "26716b1e0dd96786",
        "name": "Tracking RTU",
        "func": "\nmsg.payload = { \n    value: msg.payload, \n    'fc': 6, \n    'unitid': 1, \n    'address': 28672 + 20 + 60,\n    'quantity':1   \n}\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload.address});\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1430,
        "y": 950,
        "wires": [
            [
                "b468d7fd.170728"
            ]
        ]
    },
    {
        "id": "f5e1989e29bb2e65",
        "type": "rbe",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1840,
        "y": 520,
        "wires": [
            [
                "2a1f1c0d.25ca44"
            ]
        ]
    },
    {
        "id": "8b2d994174f28a66",
        "type": "link out",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "730f767fbc450987",
            "7d21f05bb26114a5",
            "f61f03a556d40cc2"
        ],
        "x": 1095,
        "y": 950,
        "wires": []
    },
    {
        "id": "6362e6081ae4c9bc",
        "type": "subflow:1fbf295f73cccb97",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "x": 1720,
        "y": 790,
        "wires": [
            []
        ]
    },
    {
        "id": "e8e6627edafb7e4b",
        "type": "subflow:1fbf295f73cccb97",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "env": [],
        "x": 860,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "2d20bc9389f4bb1d",
        "type": "subflow:1fbf295f73cccb97",
        "z": "fb40d997e0f412a5",
        "g": "b4d97ea9.9a1f1",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "ada87f22bb366bb1",
        "type": "subflow:1fbf295f73cccb97",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "env": [],
        "x": 2170,
        "y": 350,
        "wires": [
            []
        ]
    },
    {
        "id": "2cd9c26ea850347c",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Tracking Reference",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Last_Reference.Value",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 830,
        "wires": [
            [
                "4f30a3731f8eb96a"
            ]
        ]
    },
    {
        "id": "4f30a3731f8eb96a",
        "type": "link out",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "730f767fbc450987",
            "7d21f05bb26114a5",
            "f61f03a556d40cc2"
        ],
        "x": 1145,
        "y": 830,
        "wires": []
    },
    {
        "id": "d94dfcb17909ebcb",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "lastref",
        "func": "var Commanded_SpdRef    = Math.abs(global.get(\"C2S.Implicit.Commanded_SpdRef\",\"memoryOnly\")||0);\nglobal.set(\"C2S.Last_Reference.Value\", Commanded_SpdRef);\nglobal.set(\"C2S.Last_Reference.Source\", \"ControlPID\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 830,
        "wires": [
            [
                "2cd9c26ea850347c"
            ]
        ]
    },
    {
        "id": "afbe0913d246a90b",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Tracking Reference",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Last_Reference.Value",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1120,
        "wires": [
            [
                "217f6aef752bcc72"
            ]
        ]
    },
    {
        "id": "217f6aef752bcc72",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "links": [
            "730f767fbc450987",
            "7d21f05bb26114a5",
            "f61f03a556d40cc2"
        ],
        "x": 1115,
        "y": 1120,
        "wires": []
    },
    {
        "id": "cee6c2c4f89ff3be",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Ultima Referencia",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Last_Reference.Value",
                "pt": "global",
                "to": "Control_functions.Staggered_start.Reference_2",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "C2S.Last_Reference.Source",
                "pt": "global",
                "to": "Arranque Escalonado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1120,
        "wires": [
            [
                "afbe0913d246a90b"
            ]
        ]
    },
    {
        "id": "19607e18163d56ce",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "12a3e534213911db",
        "name": "",
        "links": [
            "d47b33e4bb67ed8d"
        ],
        "x": 675,
        "y": 930,
        "wires": [
            [
                "3154c6b4c8cc66ad"
            ]
        ]
    },
    {
        "id": "9a63dbdf4e0f99be",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "12a3e534213911db",
        "name": "Tracking TCP",
        "func": "\nmsg.payload = { \n    value: msg.payload, \n    'fc': 6, \n    'unitid': 1, \n    'address': 78,\n    'quantity':1   \n}\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload.address});\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 900,
        "wires": [
            [
                "75ae9dfb.c587e4"
            ]
        ]
    },
    {
        "id": "467c21fb4bd7a9a1",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "12a3e534213911db",
        "name": "Tracking RTU",
        "func": "\nmsg.payload = { \n    value: msg.payload, \n    'fc': 6, \n    'unitid': 1, \n    'address': 28672 + 20 + 78,\n    'quantity':1   \n}\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload.address});\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 950,
        "wires": [
            [
                "b468d7fd.170728"
            ]
        ]
    },
    {
        "id": "3154c6b4c8cc66ad",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "12a3e534213911db",
        "name": "Prol ref value",
        "func": "msg.payload = Math.trunc((global.get(\"Control_functions.Prolonged_Reference.Hz\")||60)*10);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 930,
        "wires": [
            [
                "9a63dbdf4e0f99be",
                "467c21fb4bd7a9a1"
            ]
        ]
    },
    {
        "id": "9dd957589ee217df",
        "type": "modbus-read",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "PyModbusServer",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "78",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3548b3b4.c8d65c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 200,
        "y": 1040,
        "wires": [
            [
                "b1623a4d0ab7c8f0"
            ],
            []
        ]
    },
    {
        "id": "d1e6de8dde9f69c8",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "/10",
        "func": "var Funciones = global.get(\"Funciones_control_activas\",\"memoryOnly\")||{1:false};\n\nvar array = Object.values(Funciones);\nvar resp = array.find(element => element == true)||false;\nnode.status({fill:\"green\",shape:\"dot\",text:!resp});\n\nmsg.payload = msg.payload/10;\n\nif(!resp){return msg;}\nelse{return;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 1040,
        "wires": [
            [
                "e9213780ed441bdc"
            ]
        ]
    },
    {
        "id": "383d03b632f049e6",
        "type": "modbus-getter",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "Leer Cubloc",
        "showStatusActivities": true,
        "showErrors": false,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "28771",
        "quantity": "1",
        "server": "f630cb55.8d18e8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 210,
        "y": 1090,
        "wires": [
            [
                "7a9a543200435791"
            ],
            []
        ]
    },
    {
        "id": "4f3ea6384074c205",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "Referencia Remota - RTU Link In",
        "links": [
            "f4e3682b.f045c8",
            "e219528c8859a421"
        ],
        "x": 105,
        "y": 1090,
        "wires": [
            [
                "383d03b632f049e6"
            ]
        ]
    },
    {
        "id": "e9213780ed441bdc",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "Activefunctions?",
        "func": "var prolongada = global.get(\"Control_functions.ActiveCF.Prolonged_Reference\",\"memoryOnly\")||false;\nif(!prolongada)return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 1090,
        "wires": [
            [
                "e636353ca8ba18cc"
            ]
        ]
    },
    {
        "id": "b1623a4d0ab7c8f0",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "SCADA TCP",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "TCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "6e660692407ba546"
            ]
        ]
    },
    {
        "id": "7a9a543200435791",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "SCADA RTU",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "RTU",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 1090,
        "wires": [
            [
                "6e660692407ba546"
            ]
        ]
    },
    {
        "id": "6e660692407ba546",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "L/R",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 1040,
        "wires": [
            [
                "082ae2d584d98115"
            ]
        ]
    },
    {
        "id": "082ae2d584d98115",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Referencia Prolongada",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1040,
        "wires": [
            [
                "19231215a5a741a2"
            ]
        ]
    },
    {
        "id": "19231215a5a741a2",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 870,
        "y": 1040,
        "wires": [
            [
                "d1e6de8dde9f69c8"
            ]
        ]
    },
    {
        "id": "44f1ff6177c8cbd1",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "",
        "links": [
            "c0984e4d12fb5c0c"
        ],
        "x": 1055,
        "y": 1090,
        "wires": []
    },
    {
        "id": "c0984e4d12fb5c0c",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "44f1ff6177c8cbd1",
            "6db99b1aa2a66401"
        ],
        "x": 495,
        "y": 360,
        "wires": [
            [
                "7219dcb863a2c3b2"
            ]
        ]
    },
    {
        "id": "385eb83d41dd3fbf",
        "type": "modbus-read",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "PyModbusServer",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "55",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3548b3b4.c8d65c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 200,
        "y": 1190,
        "wires": [
            [
                "3312a576df424c46"
            ],
            []
        ]
    },
    {
        "id": "4535ed1046164305",
        "type": "modbus-getter",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "Leer Cubloc",
        "showStatusActivities": true,
        "showErrors": false,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "28747",
        "quantity": "1",
        "server": "f630cb55.8d18e8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 210,
        "y": 1240,
        "wires": [
            [
                "6c1d277cf9494c28"
            ],
            []
        ]
    },
    {
        "id": "1910455f45408d2a",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "Referencia Remota - RTU Link In",
        "links": [
            "f4e3682b.f045c8",
            "e219528c8859a421"
        ],
        "x": 105,
        "y": 1240,
        "wires": [
            [
                "4535ed1046164305"
            ]
        ]
    },
    {
        "id": "db968d1345f44509",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "Activefunctions?",
        "func": "var prolongada = global.get(\"Control_functions.ActiveCF.Prolonged_Reference\", \"memoryOnly\") || false;\nvar escalonado = global.get(\"Control_functions.ActiveCF.Staggered_start\", \"memoryOnly\") || false;\nvar automatico = global.get(\"Control_functions.ActiveCF.AutomaticRestart\", \"memoryOnly\") || false;\nvar PIDccontrol = global.get(\"Control_functions.ActiveCF.PIDController\", \"memoryOnly\") || false;\nvar rocking = global.get(\"Control_functions.ActiveCF.RockingStart\", \"memoryOnly\") || false;\nif (!automatico && !prolongada && !escalonado && !PIDccontrol && rocking) return msg;\nif(prolongada && msg.payload==2)return msg;\nif (PIDccontrol && msg.payload == 16) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 1190,
        "wires": [
            [
                "34c24e2213f080b8"
            ]
        ]
    },
    {
        "id": "3312a576df424c46",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "SCADA TCP",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "TCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 1190,
        "wires": [
            [
                "0427840aec03285a"
            ]
        ]
    },
    {
        "id": "6c1d277cf9494c28",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "SCADA RTU",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "RTU",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 1240,
        "wires": [
            [
                "0427840aec03285a"
            ]
        ]
    },
    {
        "id": "0427840aec03285a",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "L/R",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 1190,
        "wires": [
            [
                "ba03e78439726e1a"
            ]
        ]
    },
    {
        "id": "ba03e78439726e1a",
        "type": "change",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Referencia Prolongada",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1190,
        "wires": [
            [
                "c62e575b03c3fbf4"
            ]
        ]
    },
    {
        "id": "937c2139d52cbc05",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1010,
        "y": 1190,
        "wires": [
            [
                "db968d1345f44509"
            ]
        ]
    },
    {
        "id": "34c24e2213f080b8",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "8",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "16",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "32",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "64",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "128",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1330,
        "y": 1260,
        "wires": [
            [
                "0a089cd0b62fea8c"
            ],
            [
                "85d94e678bb72941"
            ],
            [
                "d66ecb27c345f344"
            ],
            [],
            [
                "3e9fe9ba4feeebbd"
            ]
        ]
    },
    {
        "id": "e636353ca8ba18cc",
        "type": "rbe",
        "z": "e483884bee93bec2",
        "g": "99af8da767a0630e",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 970,
        "y": 1090,
        "wires": [
            [
                "44f1ff6177c8cbd1"
            ]
        ]
    },
    {
        "id": "c62e575b03c3fbf4",
        "type": "rbe",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 880,
        "y": 1190,
        "wires": [
            [
                "937c2139d52cbc05"
            ]
        ]
    },
    {
        "id": "0a089cd0b62fea8c",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "",
        "links": [
            "df585b7236ec5055"
        ],
        "x": 1455,
        "y": 1180,
        "wires": []
    },
    {
        "id": "df585b7236ec5055",
        "type": "link in",
        "z": "bef159b0eb2cf912",
        "g": "3a4b00b6e7d09e3a",
        "name": "",
        "links": [
            "0a089cd0b62fea8c"
        ],
        "x": 585,
        "y": 410,
        "wires": [
            [
                "7c0eb170.c43d1",
                "6943549b680dd673"
            ]
        ]
    },
    {
        "id": "f16c8e907b36e129",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "parada remota",
        "links": [
            "1fba507567d2f877"
        ],
        "x": 1455,
        "y": 170,
        "wires": []
    },
    {
        "id": "1fba507567d2f877",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "links": [
            "f16c8e907b36e129"
        ],
        "x": 1715,
        "y": 690,
        "wires": [
            [
                "dbe93e91ea0fe6e8",
                "5f0c32e4b7c726e9",
                "3b7708c43f02500b",
                "e6a12821beef3055"
            ]
        ]
    },
    {
        "id": "85d94e678bb72941",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "abort prolong",
        "links": [
            "d7bb76aa0162c22a"
        ],
        "x": 1455,
        "y": 1220,
        "wires": []
    },
    {
        "id": "d7bb76aa0162c22a",
        "type": "link in",
        "z": "902fc438.e5d758",
        "name": "",
        "links": [
            "85d94e678bb72941"
        ],
        "x": 915,
        "y": 930,
        "wires": [
            [
                "01c5f660785e97d7"
            ]
        ]
    },
    {
        "id": "d66ecb27c345f344",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "enable PID pressure",
        "links": [
            "68b8b2db4e687c5a"
        ],
        "x": 1455,
        "y": 1260,
        "wires": []
    },
    {
        "id": "68b8b2db4e687c5a",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "d66ecb27c345f344"
        ],
        "x": 315,
        "y": 80,
        "wires": [
            [
                "28462b4cb38cf6dc"
            ]
        ]
    },
    {
        "id": "3e9fe9ba4feeebbd",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "2875fa33518b9c8b",
        "name": "disable PID",
        "links": [
            "84c4ad5ef4fd9fae"
        ],
        "x": 1455,
        "y": 1340,
        "wires": []
    },
    {
        "id": "28462b4cb38cf6dc",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "Presión",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Presion",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 80,
        "wires": [
            [
                "31c4f09e.6de82",
                "b2ee364c.f0d8e8",
                "76b3ffcb3376d8bb"
            ]
        ]
    },
    {
        "id": "76b3ffcb3376d8bb",
        "type": "link out",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "2dfd6ae97fe5faf5"
        ],
        "x": 575,
        "y": 90,
        "wires": []
    },
    {
        "id": "2dfd6ae97fe5faf5",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "76b3ffcb3376d8bb"
        ],
        "x": 745,
        "y": 800,
        "wires": [
            [
                "e5c41a9d.a8b708"
            ]
        ]
    },
    {
        "id": "84c4ad5ef4fd9fae",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [
            "3e9fe9ba4feeebbd"
        ],
        "x": 695,
        "y": 880,
        "wires": [
            [
                "d94dfcb17909ebcb",
                "8929022a.7ccf3"
            ]
        ]
    },
    {
        "id": "94ca7768cd1415ed",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "1e1760200fc29774",
        "name": "Retardo Lectura Mapa Modbus",
        "func": "var Counter = context.get(\"count\",\"memoryOnly\")||0;\nif(Counter <= 5){\n    Counter += 1;\n    context.set(\"count\",Counter,\"memoryOnly\");\n    return;\n}\nelse{\n    context.set(\"count\", 0, \"memoryOnly\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2980,
        "y": 810,
        "wires": [
            [
                "0f9ea69e9302b2dd",
                "8962f3815cdf9c6b"
            ]
        ]
    },
    {
        "id": "4fda1b05fdfab878",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "1e1760200fc29774",
        "name": "Remoto",
        "property": "Input.Operation.ControlMode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3050,
        "y": 850,
        "wires": [
            [
                "94ca7768cd1415ed"
            ]
        ]
    },
    {
        "id": "7f5a0b529fb9f80f",
        "type": "modbus-read",
        "z": "e483884bee93bec2",
        "g": "1e1760200fc29774",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "79",
        "quantity": "7",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3548b3b4.c8d65c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 2770,
        "y": 850,
        "wires": [
            [
                "b81f6fa74c89d4b4"
            ],
            []
        ]
    },
    {
        "id": "14a84ddaa9487761",
        "type": "modbus-flex-getter",
        "z": "e483884bee93bec2",
        "g": "1e1760200fc29774",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "f630cb55.8d18e8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 2830,
        "y": 900,
        "wires": [
            [
                "0ae15a15398873a2"
            ],
            []
        ]
    },
    {
        "id": "0ae15a15398873a2",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "1e1760200fc29774",
        "name": "RTU",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "RTU",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3000,
        "y": 900,
        "wires": [
            [
                "4fda1b05fdfab878"
            ]
        ]
    },
    {
        "id": "b81f6fa74c89d4b4",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "1e1760200fc29774",
        "name": "TCP",
        "property": "SCADA.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "TCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2910,
        "y": 850,
        "wires": [
            [
                "4fda1b05fdfab878"
            ]
        ]
    },
    {
        "id": "0f9ea69e9302b2dd",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "1e1760200fc29774",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 3230,
        "y": 960,
        "wires": []
    },
    {
        "id": "62e761f19af70f12",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "1e1760200fc29774",
        "name": "Registro Modbus",
        "func": "msg.payload = { \n    'fc': 4, \n    'unitid': 1, \n    'address': 28672+20+79, \n    'quantity':7   \n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2630,
        "y": 900,
        "wires": [
            [
                "14a84ddaa9487761"
            ]
        ]
    },
    {
        "id": "6d970f1bee054be7",
        "type": "link in",
        "z": "e483884bee93bec2",
        "g": "1e1760200fc29774",
        "name": "Arranque/Parada/Reset RTU-Link In",
        "links": [
            "d6696a76.a52418",
            "db78f4a9db4a0b18"
        ],
        "x": 2505,
        "y": 900,
        "wires": [
            [
                "62e761f19af70f12"
            ]
        ]
    },
    {
        "id": "8962f3815cdf9c6b",
        "type": "link out",
        "z": "e483884bee93bec2",
        "g": "1e1760200fc29774",
        "name": "",
        "links": [
            "033c3ff3def4f4c2",
            "acd299aa28e49564"
        ],
        "x": 3165,
        "y": 810,
        "wires": []
    },
    {
        "id": "13272e1aa760e9ff",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "name": "Modbus",
        "func": "var modbus = [\n    MSG(msg.payload[0]),\n    MSG(msg.payload[1]),\n    MSG(msg.payload[2]),\n    MSG(msg.payload[3]),\n    MSG(msg.payload[4]),\n    MSG(msg.payload[5]),\n    MSG(msg.payload[6])\n]\nreturn modbus;\n\nfunction MSG(X){\n    return {payload: X}\n}\n",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 130,
        "y": 1470,
        "wires": [
            [
                "182002c5c4c8544c"
            ],
            [
                "601ae0699b01cdd3"
            ],
            [
                "bcf3296b3f45129c"
            ],
            [
                "9b21fbcd6e6d24fe"
            ],
            [
                "fab95464aa78a8fa"
            ],
            [
                "795fb108acceb110"
            ],
            [
                "2526ed297e0a39d0"
            ]
        ],
        "outputLabels": [
            "KP pres",
            "TI Pres",
            "TD Pres",
            "Pres SP",
            "dead band",
            "delta Hz up",
            "delta Hz do"
        ]
    },
    {
        "id": "acd299aa28e49564",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "name": "",
        "links": [
            "8962f3815cdf9c6b"
        ],
        "x": 35,
        "y": 1470,
        "wires": [
            [
                "13272e1aa760e9ff"
            ]
        ]
    },
    {
        "id": "59e9687f16bc8fc8",
        "type": "link in",
        "z": "ebaf6b5134c2a666",
        "name": "",
        "links": [
            "6d33fcb1.428484",
            "998f0e93.941f1",
            "ad87cee4.7dbb5"
        ],
        "x": 225,
        "y": 1160,
        "wires": [
            [
                "b66745d4547dcf67"
            ]
        ]
    },
    {
        "id": "b66745d4547dcf67",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "name": "Mapa Modbus PID settings",
        "func": "var PresKP = flow.get(\"PID.Presion.prop_band\") || 1;\nvar PresTI = flow.get(\"PID.Presion.t_integral\") || 1;\nvar PresTD = flow.get(\"PID.Presion.t_derivative\") || 0;\nvar PresSP = Math.abs(flow.get(\"PID.Presion.setpoint\")) || 1;\nvar DeadBand = flow.get(\"PID.Limits.DeadBand\") || 0;\nvar DHzUp = flow.get(\"PID.Limits.Delta_Hz_Max\") || 1;\nvar DHzDo = flow.get(\"PID.Limits.Delta_Hz_Min\") || 1;\n\nvar vector = [\n    PresKP*10,     // 79\n    PresTI*10,     // 80\n    PresTD*10,     // 81\n    PresSP,      // 82\n    DeadBand*10,      // 83\n    DHzUp*10,      // 84\n    DHzDo*10,     // 85\n]\n\n// Recorrer el mapa para evitar valores indefinidos\nfor (var i = 0; i < vector.length; i += 1) {\n    vector[i] = val(vector[i]);\n}\n\nnode.status({ fill: \"green\", shape: \"dot\", text: \" valores: \" + vector });\n\nmsg.payload = {\n    value: vector,\n    'fc': 16,\n    'unitid': 1,\n    'address': 79,\n    'quantity': vector.length\n}\nreturn msg;\n\n// Ajustar datos |definded X|\nfunction val(X) {\n    return typeof X != 'undefined' ? parseInt(Math.abs(X)) : 0;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "7b6ba2f48a1b4216"
            ]
        ]
    },
    {
        "id": "7b6ba2f48a1b4216",
        "type": "modbus-flex-write",
        "z": "ebaf6b5134c2a666",
        "name": "PyModbusServer",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "3548b3b4.c8d65c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 630,
        "y": 1160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9d8e59c75b8dad9c",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "name": "KP Pres",
        "rules": [
            {
                "t": "set",
                "p": "PID.Presion.prop_band",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1350,
        "wires": [
            []
        ]
    },
    {
        "id": "2066b81e265609a7",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "name": "TI Pres",
        "rules": [
            {
                "t": "set",
                "p": "PID.Presion.t_integral",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1390,
        "wires": [
            []
        ]
    },
    {
        "id": "cbba88b1bcd66399",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "name": "TD Pres",
        "rules": [
            {
                "t": "set",
                "p": "PID.Presion.t_derivative",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1430,
        "wires": [
            []
        ]
    },
    {
        "id": "ec8671e0cf6f4aed",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "name": "SP Pres",
        "rules": [
            {
                "t": "set",
                "p": "PID.Presion.setpoint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1470,
        "wires": [
            []
        ]
    },
    {
        "id": "cd74b1a4c3f0312e",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "name": "DeadBand",
        "rules": [
            {
                "t": "set",
                "p": "PID.Limits.DeadBand",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1510,
        "wires": [
            []
        ]
    },
    {
        "id": "48df83ca2a151dbe",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "name": "DeltaMax",
        "rules": [
            {
                "t": "set",
                "p": "PID.Limits.Delta_Hz_Max",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1550,
        "wires": [
            []
        ]
    },
    {
        "id": "5a3bad1003ed0ef0",
        "type": "change",
        "z": "ebaf6b5134c2a666",
        "name": "DeltaMin",
        "rules": [
            {
                "t": "set",
                "p": "PID.Limits.Delta_Hz_Min",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1590,
        "wires": [
            []
        ]
    },
    {
        "id": "2fec3b77412d3575",
        "type": "rbe",
        "z": "ebaf6b5134c2a666",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 410,
        "y": 1350,
        "wires": [
            [
                "a5b3774f1e8834f6"
            ]
        ]
    },
    {
        "id": "c5bf1ce21ce3026d",
        "type": "rbe",
        "z": "ebaf6b5134c2a666",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 410,
        "y": 1390,
        "wires": [
            [
                "c0e5763530197226"
            ]
        ]
    },
    {
        "id": "bcf3296b3f45129c",
        "type": "rbe",
        "z": "ebaf6b5134c2a666",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 410,
        "y": 1430,
        "wires": [
            [
                "ec1ff568797098fc"
            ]
        ]
    },
    {
        "id": "44db27a05bbb98e0",
        "type": "rbe",
        "z": "ebaf6b5134c2a666",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 410,
        "y": 1470,
        "wires": [
            [
                "ec8671e0cf6f4aed"
            ]
        ]
    },
    {
        "id": "fab95464aa78a8fa",
        "type": "rbe",
        "z": "ebaf6b5134c2a666",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 410,
        "y": 1510,
        "wires": [
            [
                "19405c8af980b119"
            ]
        ]
    },
    {
        "id": "95a2a921f2084108",
        "type": "rbe",
        "z": "ebaf6b5134c2a666",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 410,
        "y": 1550,
        "wires": [
            [
                "4cc11f3749f876b3"
            ]
        ]
    },
    {
        "id": "b8c6e192a33c4e3c",
        "type": "rbe",
        "z": "ebaf6b5134c2a666",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 410,
        "y": 1590,
        "wires": [
            [
                "7d4280f86ec97de4"
            ]
        ]
    },
    {
        "id": "42b381631f7c8f45",
        "type": "link out",
        "z": "ebaf6b5134c2a666",
        "g": "cf985e84.c7693",
        "name": "",
        "links": [],
        "x": 225,
        "y": 760,
        "wires": []
    },
    {
        "id": "182002c5c4c8544c",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 1350,
        "wires": [
            [
                "2fec3b77412d3575"
            ]
        ]
    },
    {
        "id": "601ae0699b01cdd3",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 1390,
        "wires": [
            [
                "c5bf1ce21ce3026d"
            ]
        ]
    },
    {
        "id": "9b21fbcd6e6d24fe",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 1470,
        "wires": [
            [
                "44db27a05bbb98e0"
            ]
        ]
    },
    {
        "id": "795fb108acceb110",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 1550,
        "wires": [
            [
                "95a2a921f2084108"
            ]
        ]
    },
    {
        "id": "2526ed297e0a39d0",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 1590,
        "wires": [
            [
                "b8c6e192a33c4e3c"
            ]
        ]
    },
    {
        "id": "a5b3774f1e8834f6",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "name": "/10",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1350,
        "wires": [
            [
                "9d8e59c75b8dad9c"
            ]
        ]
    },
    {
        "id": "c0e5763530197226",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "name": "/10",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1390,
        "wires": [
            [
                "2066b81e265609a7"
            ]
        ]
    },
    {
        "id": "ec1ff568797098fc",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "name": "/10",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1430,
        "wires": [
            [
                "cbba88b1bcd66399"
            ]
        ]
    },
    {
        "id": "19405c8af980b119",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "name": "/10",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1510,
        "wires": [
            [
                "cd74b1a4c3f0312e"
            ]
        ]
    },
    {
        "id": "4cc11f3749f876b3",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "name": "/10",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1550,
        "wires": [
            [
                "48df83ca2a151dbe"
            ]
        ]
    },
    {
        "id": "7d4280f86ec97de4",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "name": "/10",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1590,
        "wires": [
            [
                "5a3bad1003ed0ef0"
            ]
        ]
    },
    {
        "id": "b0b372bb1599d500",
        "type": "inject",
        "z": "ebaf6b5134c2a666",
        "name": "Local/Remoto",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "Input.Operation.ControlMode",
        "payloadType": "global",
        "x": 130,
        "y": 1210,
        "wires": [
            [
                "c5e53244e1647fac",
                "8f8e4f08a759b980"
            ]
        ]
    },
    {
        "id": "c5e53244e1647fac",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Remoto",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 1210,
        "wires": [
            [
                "b66745d4547dcf67"
            ]
        ]
    },
    {
        "id": "8f8e4f08a759b980",
        "type": "function",
        "z": "ebaf6b5134c2a666",
        "name": "Save dataPID Modbus",
        "func": "var PresKP = flow.get(\"PID.Presion.prop_band\") || 1;\nvar PresTI = flow.get(\"PID.Presion.t_integral\") || 1;\nvar PresTD = flow.get(\"PID.Presion.t_derivative\") || 0;\nvar PresSP = Math.abs(flow.get(\"PID.Presion.setpoint\")) || 1;\nvar DeadBand = flow.get(\"PID.Limits.DeadBand\") || 0;\nvar DHzUp = flow.get(\"PID.Limits.Delta_Hz_Max\") || 1;\nvar DHzDo = flow.get(\"PID.Limits.Delta_Hz_Min\") || 1;\n\nvar vector = [\n    PresKP*10,     // 79\n    PresTI*10,     // 80\n    PresTD*10,     // 81\n    PresSP,      // 82\n    DeadBand*10,      // 83\n    DHzUp*10,      // 84\n    DHzDo*10,     // 85\n]\nglobal.set(\"AuxiliarPIDModbus\", vector,\"memoryOnly\");",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 1250,
        "wires": []
    },
    {
        "id": "8b6fa7aad0992c0b",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "evento",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Arranque automático",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Arranque automático estable después de 10 min",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 1000,
        "wires": [
            [
                "fb18fc5d2d9efad1"
            ]
        ]
    },
    {
        "id": "fb18fc5d2d9efad1",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 1505,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f53306f8.1383d8",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "flag evento autstart",
        "property": "#:(memoryOnly)::autostartflag",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1160,
        "y": 1000,
        "wires": [
            [],
            [
                "8b6fa7aad0992c0b",
                "3b031b8.c62abe4"
            ]
        ]
    },
    {
        "id": "3b031b8.c62abe4",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "autostartflag",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::autostartflag",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "84a10c4b.f35cd",
        "type": "link in",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "6b3d4586f5261369"
        ],
        "x": 1325,
        "y": 330,
        "wires": [
            [
                "b2f289ce.2f9b78"
            ]
        ]
    },
    {
        "id": "b2f289ce.2f9b78",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "download",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::download",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 330,
        "wires": [
            []
        ]
    },
    {
        "id": "e14b4549.f7e448",
        "type": "switch",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "download?",
        "property": "#:(memoryOnly)::download",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1600,
        "y": 330,
        "wires": [
            [
                "deeb99bb.1de168",
                "f0f6dd30.db5d1"
            ]
        ]
    },
    {
        "id": "deeb99bb.1de168",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "download",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::download",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 370,
        "wires": [
            []
        ]
    },
    {
        "id": "f0f6dd30.db5d1",
        "type": "link out",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "8fb8cba5.d46188"
        ],
        "x": 1705,
        "y": 330,
        "wires": []
    },
    {
        "id": "8fb8cba5.d46188",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "name": "",
        "links": [
            "f0f6dd30.db5d1"
        ],
        "x": 717.3463745117188,
        "y": 291.0104064941406,
        "wires": [
            [
                "917c8ac6.aa72e8"
            ]
        ]
    },
    {
        "id": "917c8ac6.aa72e8",
        "type": "delay",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 820,
        "y": 290,
        "wires": [
            [
                "8f48d1f2.ceb62"
            ]
        ]
    },
    {
        "id": "6f28d8cd32960ae4",
        "type": "switch",
        "z": "3af652c9.6f9bee",
        "g": "a80677cf.4274c8",
        "name": "sesion",
        "property": "#:(memoryOnly)::sesion",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 990,
        "wires": [
            [
                "6d40adaa.11d2c4"
            ]
        ]
    },
    {
        "id": "f8489c5a6d52f42a",
        "type": "change",
        "z": "3af652c9.6f9bee",
        "g": "f3c2e7cf.5ed158",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::sesion",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "0b0df3a707795c4a",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "valor TCP",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[0]",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1630,
        "y": 480,
        "wires": []
    },
    {
        "id": "fda65d81e947c35c",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "ref first time",
        "func": "var ref = global.get(\"C2S.Last_Reference.Value\")||\"none\";\nif (ref == \"none\"){global.set(\"C2S.Last_Reference.Value\",msg.payload);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 130,
        "wires": [
            [
                "623eb47dc08d064b"
            ]
        ]
    },
    {
        "id": "87546f4f362a24f5",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 785,
        "y": 520,
        "wires": [
            [
                "76c9fc9ecefea5ef"
            ]
        ]
    },
    {
        "id": "76c9fc9ecefea5ef",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Archive empty?",
        "func": "var archivo = global.get(\"Datalogger.Archive\")||0;\nmsg.payload = \"Semanal\";\nif (archivo == 0) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 520,
        "wires": [
            [
                "3300d502.d9f2da"
            ]
        ]
    },
    {
        "id": "d685da5d5bb1ac2b",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 265,
        "y": 760,
        "wires": [
            [
                "b63fd9b5a4a85e3f"
            ]
        ]
    },
    {
        "id": "b63fd9b5a4a85e3f",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Magnitude empty?",
        "func": "var Magnitude  = global.get(\"Datalogger.Magnitude\")||0;\nmsg.payload = 30;\nif (Magnitude  == 0) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 760,
        "wires": [
            [
                "53de6e8d.a41ec",
                "793ef4d5.ef60dc",
                "cf7c1eb5ab4e32e7",
                "458b1cd4.6b15f4"
            ]
        ]
    },
    {
        "id": "cf7c1eb5ab4e32e7",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "default time",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Segundos",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 800,
        "wires": [
            [
                "b92820bf.a85cd",
                "138bf87b6179889b"
            ]
        ]
    },
    {
        "id": "70da6b8c3ca0227f",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "links": [
            "acd83647.191f48"
        ],
        "x": 655,
        "y": 760,
        "wires": [
            [
                "f06495c212d54952"
            ]
        ]
    },
    {
        "id": "f06495c212d54952",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "advertencia",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Acción no recomendada. Se activará dataloger automáticamente en 5 minutos",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Advertencia",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 760,
        "wires": [
            [
                "2ac8468b0d40dc4f",
                "b158c05a816f9d52"
            ]
        ]
    },
    {
        "id": "2ac8468b0d40dc4f",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "links": [
            "52f1e35a6b450a62"
        ],
        "x": 875,
        "y": 760,
        "wires": []
    },
    {
        "id": "b158c05a816f9d52",
        "type": "delay",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "hours",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 920,
        "y": 800,
        "wires": [
            [
                "035a2d04492a866a"
            ]
        ]
    },
    {
        "id": "0ccc179696cadb08",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "links": [
            "f125f8dc.4fc0e8"
        ],
        "x": 1125,
        "y": 800,
        "wires": []
    },
    {
        "id": "035a2d04492a866a",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 800,
        "wires": [
            [
                "0ccc179696cadb08"
            ]
        ]
    },
    {
        "id": "5d28c5ce6c26a9db",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 660,
        "wires": [
            [
                "6e2e57d6.1acb68"
            ]
        ]
    },
    {
        "id": "9533a235ad8c4ef2",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 445,
        "y": 520,
        "wires": [
            [
                "427ca275f0328dc3"
            ]
        ]
    },
    {
        "id": "427ca275f0328dc3",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "Active false?",
        "func": "var archivo = global.get(\"Datalogger.Activated\")||0;\nmsg.payload = true;\nif (archivo == false) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 520,
        "wires": [
            [
                "6e2e57d6.1acb68"
            ]
        ]
    },
    {
        "id": "138bf87b6179889b",
        "type": "delay",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 530,
        "y": 610,
        "wires": [
            [
                "5d28c5ce6c26a9db"
            ]
        ]
    },
    {
        "id": "15c20a65195e997c",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "encabezado?",
        "func": "var antfile = flow.get(\"AntNombre_Archivo_Datalogger\")||\"none\";\nvar file = flow.get(\"Nombre_Archivo_Datalogger\") || [];\nif(antfile !=file){\n    flow.set(\"AntNombre_Archivo_Datalogger\",file);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2170,
        "y": 580,
        "wires": [
            [
                "c7031429.d17478"
            ]
        ]
    },
    {
        "id": "d4815689f3a8cac7",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": "fecha",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "fecha_hora",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2030,
        "y": 610,
        "wires": [
            [
                "15c20a65195e997c"
            ],
            [
                "c7031429.d17478"
            ]
        ]
    },
    {
        "id": "af1e567e54d62d35",
        "type": "debug",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": "Valor RTU",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[0]",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1640,
        "y": 530,
        "wires": []
    },
    {
        "id": "2cbf4228734cf0ab",
        "type": "switch",
        "z": "e483884bee93bec2",
        "g": "f6e30287.8d13d",
        "name": ">=20",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "20",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1580,
        "y": 440,
        "wires": [
            [
                "25370127fccaf364"
            ]
        ]
    },
    {
        "id": "fd43d65633c388cf",
        "type": "debug",
        "z": "902fc438.e5d758",
        "g": "1178951067fce7a4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 860,
        "y": 3140,
        "wires": []
    },
    {
        "id": "e27b11d88be5d114",
        "type": "switch",
        "z": "1fbf295f73cccb97",
        "name": "number",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "number",
                "vt": "number"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 60,
        "wires": [
            [
                "eb883084.7d28d"
            ]
        ]
    },
    {
        "id": "f465608052b953d3",
        "type": "inject",
        "z": "902fc438.e5d758",
        "g": "6202107f.ed9aa",
        "name": "tracking manual",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "C2S.Last_Reference.Value",
        "payloadType": "global",
        "x": 1600,
        "y": 50,
        "wires": [
            [
                "623eb47dc08d064b"
            ]
        ]
    },
    {
        "id": "27d05faae193e4da",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "Borets Touch",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"No\":1,\"Descripción\":\"Presión de entrada\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":14,\"Multiplicador\":1},{\"No\":2,\"Descripción\":\"Presión de descarga\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":15,\"Multiplicador\":1},{\"No\":3,\"Descripción\":\"Temperatura de entrada\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":16,\"Multiplicador\":0.1},{\"No\":4,\"Descripción\":\"Temperatura de motor\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":17,\"Multiplicador\":0.1},{\"No\":5,\"Descripción\":\"Vibración X\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":4,\"Multiplicador\":0.001},{\"No\":6,\"Descripción\":\"Vibración Z\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":5,\"Multiplicador\":0.001},{\"No\":7,\"Descripción\":\"Corriente de fuga\",\"Tipo de dato\":\"UINT\",\"Tipo de registro\":\"HR\",\"Registro\":6,\"Multiplicador\":0.01}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 380,
        "wires": [
            [
                "e8d9bf36189ddebb",
                "b52f82cb1a7a7339"
            ]
        ]
    },
    {
        "id": "2aad8b543010b8e8",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "ef81d12e3dd41149",
        "name": "Spectrum",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"No\":1,\"Descripción\":\"Presión de entrada\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":8,\"Multiplicador\":0.1},{\"No\":2,\"Descripción\":\"Presión de descarga\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":9,\"Multiplicador\":0.1},{\"No\":3,\"Descripción\":\"Temperatura de entrada\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":10,\"Multiplicador\":0.1},{\"No\":4,\"Descripción\":\"Temperatura de motor\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":11,\"Multiplicador\":0.1},{\"No\":5,\"Descripción\":\"Vibración X\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":5,\"Multiplicador\":0.001},{\"No\":6,\"Descripción\":\"Corriente de fuga\",\"Tipo de dato\":\"INT\",\"Tipo de registro\":\"HR\",\"Registro\":15,\"Multiplicador\":0.1}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 420,
        "wires": [
            [
                "e8d9bf36189ddebb",
                "b52f82cb1a7a7339"
            ]
        ]
    },
    {
        "id": "94552363ac04ccfa",
        "type": "modbus-flex-connector",
        "z": "e483884bee93bec2",
        "g": "562a3cb193226c87",
        "name": "",
        "maxReconnectsPerMinute": 4,
        "emptyQueue": false,
        "showStatusActivities": false,
        "showErrors": false,
        "server": "f630cb55.8d18e8",
        "x": 340,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "f2171731a54fc371",
        "type": "inject",
        "z": "e483884bee93bec2",
        "g": "562a3cb193226c87",
        "name": "",
        "props": [
            {
                "p": "payload.serialPort",
                "v": "/dev/serial0",
                "vt": "str"
            },
            {
                "p": "payload.connectorType",
                "v": "SERIAL",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "x": 160,
        "y": 1440,
        "wires": [
            [
                "94552363ac04ccfa"
            ]
        ]
    },
    {
        "id": "cb232372.b3dee",
        "type": "function",
        "z": "3af652c9.6f9bee",
        "g": "a80677cf.4274c8",
        "name": "return",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 990,
        "wires": [
            [
                "b045615539735b86"
            ]
        ]
    },
    {
        "id": "b481da70f35d247b",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "sel temp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Seleccione unidades de temperatura de sensor de fondo (Si son ºC se convertirán a ºF)",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Atención",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 860,
        "wires": [
            [
                "49d404687fdfc7df"
            ]
        ]
    },
    {
        "id": "49d404687fdfc7df",
        "type": "ui_toast",
        "z": "38e901f121b52acb",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Grados ºF",
        "cancel": "Grados ºC",
        "raw": false,
        "topic": "",
        "name": "ºC?",
        "x": 1020,
        "y": 860,
        "wires": [
            [
                "7960b45b80f2f74e"
            ]
        ]
    },
    {
        "id": "56a2caa830913b60",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "ºC",
        "rules": [
            {
                "t": "set",
                "p": "DHSPerson.TemUnit",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 890,
        "wires": [
            [
                "ba29dc4297876c96",
                "8d366f5d44b3ef17",
                "150f0bc7bdd50580",
                "8b594665448cd43c",
                "b2e906025195d38f",
                "5f466722ad761724",
                "fed9aee6938492b4",
                "2dc44ae2c3cbfafa"
            ]
        ]
    },
    {
        "id": "7960b45b80f2f74e",
        "type": "switch",
        "z": "38e901f121b52acb",
        "name": "ºC/ºF",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Grados ºF",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1140,
        "y": 860,
        "wires": [
            [
                "864d50c94790c2d7"
            ],
            [
                "56a2caa830913b60"
            ]
        ]
    },
    {
        "id": "864d50c94790c2d7",
        "type": "change",
        "z": "38e901f121b52acb",
        "name": "ºF",
        "rules": [
            {
                "t": "set",
                "p": "DHSPerson.TemUnit",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 850,
        "wires": [
            [
                "ba29dc4297876c96",
                "8d366f5d44b3ef17",
                "150f0bc7bdd50580",
                "8b594665448cd43c",
                "b2e906025195d38f",
                "5f466722ad761724",
                "fed9aee6938492b4",
                "2dc44ae2c3cbfafa"
            ]
        ]
    },
    {
        "id": "8532777d984a303b",
        "type": "inject",
        "z": "38e901f121b52acb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 890,
        "y": 680,
        "wires": [
            [
                "6631fedd826801b0"
            ]
        ]
    },
    {
        "id": "6260bf964a453af8",
        "type": "function",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "Brand",
        "func": "msg.payload = global.get(\"Process_data.DHS.Brand_DHS\")||\"Ninguno\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 110,
        "wires": [
            [
                "c46d6edd.69e92"
            ]
        ]
    },
    {
        "id": "0f0573bfc77396d5",
        "type": "inject",
        "z": "38e901f121b52acb",
        "g": "62fac95632266b01",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "#:(memoryOnly)::Process_data.DHS.Comm",
        "payloadType": "global",
        "x": 2080,
        "y": 380,
        "wires": [
            [
                "d6ed5fb294847658"
            ]
        ]
    },
    {
        "id": "d6ed5fb294847658",
        "type": "rbe",
        "z": "38e901f121b52acb",
        "g": "62fac95632266b01",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 2290,
        "y": 380,
        "wires": [
            [
                "6ef36a66a2f5f9eb"
            ]
        ]
    },
    {
        "id": "6ef36a66a2f5f9eb",
        "type": "switch",
        "z": "38e901f121b52acb",
        "g": "62fac95632266b01",
        "name": "False",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2410,
        "y": 380,
        "wires": [
            [
                "f84b1d2c053bb108"
            ],
            [
                "368d9188a60b7fdd"
            ]
        ]
    },
    {
        "id": "f84b1d2c053bb108",
        "type": "delay",
        "z": "38e901f121b52acb",
        "g": "62fac95632266b01",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2540,
        "y": 380,
        "wires": [
            [
                "e4284fa872b282d4"
            ]
        ]
    },
    {
        "id": "e4284fa872b282d4",
        "type": "function",
        "z": "38e901f121b52acb",
        "g": "62fac95632266b01",
        "name": "",
        "func": "msg.payload = \"Falla de comunicación con sensor de fondo\";\nmsg.topic = \"COM\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2680,
        "y": 380,
        "wires": [
            [
                "97b2eb182dd8a393"
            ]
        ]
    },
    {
        "id": "97b2eb182dd8a393",
        "type": "link out",
        "z": "38e901f121b52acb",
        "g": "62fac95632266b01",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 2775,
        "y": 380,
        "wires": []
    },
    {
        "id": "368d9188a60b7fdd",
        "type": "function",
        "z": "38e901f121b52acb",
        "g": "62fac95632266b01",
        "name": "",
        "func": "var flag = context.get(\"flag\",\"memoryOnly\")||false;\nmsg.payload = \"Comunicación con sensor de fondo establecida\";\nmsg.topic = \"COM\";\nif(flag)\n    return msg;\nelse\n    context.set(\"flag\", true, \"memoryOnly\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2540,
        "y": 430,
        "wires": [
            [
                "a3e0a5db4f30662d"
            ]
        ]
    },
    {
        "id": "a3e0a5db4f30662d",
        "type": "link out",
        "z": "38e901f121b52acb",
        "g": "62fac95632266b01",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 2645,
        "y": 430,
        "wires": []
    },
    {
        "id": "c7031429.d17478",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "1dd5b051.a95e6",
        "name": ".trim();",
        "func": "msg.payload = msg.payload.trim()+\"\\n\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2330,
        "y": 610,
        "wires": [
            [
                "4a152bf2.aedbf4"
            ]
        ]
    },
    {
        "id": "c166035b.91e08",
        "type": "function",
        "z": "c8b77ff3.ab501",
        "name": "set Active0",
        "func": "msg.active0 = global.get(\"C2S.Drive_Status.Active\",\"memoryOnly\")||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 230,
        "wires": [
            [
                "db3132d3.18699"
            ]
        ]
    },
    {
        "id": "c660d8ba.ec2e48",
        "type": "function",
        "z": "c8b77ff3.ab501",
        "name": "set Active1",
        "func": "msg.active1 = global.get(\"C2S.Drive_Status.Active\",\"memoryOnly\")||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1860,
        "y": 190,
        "wires": [
            [
                "20a94e1f3f6e8848"
            ]
        ]
    },
    {
        "id": "20a94e1f3f6e8848",
        "type": "function",
        "z": "c8b77ff3.ab501",
        "name": "Arranque/Parada",
        "func": "var Active0     = msg.active0;\nvar Active1     = msg.active1;\nvar Arranque    = ((msg.command == \"Arranque 'Forward'\") || (msg.command==\"Arranque 'Reverse'\")) ? true:false;\nvar Parada      = msg.command == \"Parada del equipo\" ? true:false;\ndelete msg.topic;\n// Arranque exitoso\nif(Arranque && Active0 == 0 && Active0 != Active1){\n    msg.payload =\"Arranque exitoso\";\n    global.set(\"C2S.FlagStatus\",true);\n}\n// Arranque fallido\nelse if(Arranque && Active0 == 0 && Active0 == Active1){\n    msg.payload = \"Arranque fallido\";\n}\n// Parada Exitosa\nelse if (Parada && Active0 == 1 && Active0 != Active1){\n    msg.payload = \"Parada exitosa\";\n    global.set(\"C2S.FlagStatus\", false);\n}\n// Parada Fallida\nelse if (Parada && Active0 == 1 && Active0 == Active1){\n    msg.payload = \"Parada fallida\";\n}\nelse{\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2040,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "2264cd4e7e1c1e96",
        "type": "function",
        "z": "c8b77ff3.ab501",
        "name": "set Active0",
        "func": "msg.active0 = global.get(\"C2S.Drive_Status.Active\",\"memoryOnly\")||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 190,
        "wires": [
            [
                "0941bfa0e5e19a06"
            ]
        ]
    },
    {
        "id": "65c50b2d766f8a54",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "clean attemtps",
        "func": "var max = global.get(\"Control_functions.Automatic_Restart.Attempts.Max\")||5;\nvar act = global.get(\"Control_functions.Automatic_Restart.Attempts.Current_Attempt\") || 0;\nif(max==act)\n    global.set(\"Control_functions.Automatic_Restart.Attempts.Current_Attempt\",0);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "1c4082263cd5819b",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "clean attemtps",
        "func": "var max = global.get(\"Control_functions.Automatic_Restart.Attempts.Max\")||5;\nvar act = global.get(\"Control_functions.Automatic_Restart.Attempts.Current_Attempt\") || 0;\nif(max==act)\n    global.set(\"Control_functions.Automatic_Restart.Attempts.Current_Attempt\",0);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ab5dd4dcf08f666f",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Start failed",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Start failed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 840,
        "wires": [
            [
                "04f012cc78946963"
            ]
        ]
    },
    {
        "id": "04f012cc78946963",
        "type": "link out",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Automatic Restart E6",
        "links": [
            "14c9d205.a3aa7e"
        ],
        "x": 1765,
        "y": 840,
        "wires": []
    },
    {
        "id": "67dc130a552ed9f0",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Arranque ",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2090,
        "y": 860,
        "wires": [
            [
                "65c50b2d766f8a54"
            ]
        ]
    },
    {
        "id": "f963e8b3d0b4560f",
        "type": "link in",
        "z": "4c43e2ae2d9aec48",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 455,
        "y": 300,
        "wires": [
            [
                "7f75bcb4b0ff115c"
            ]
        ]
    },
    {
        "id": "7f75bcb4b0ff115c",
        "type": "function",
        "z": "4c43e2ae2d9aec48",
        "name": "Encendidos",
        "func": "var count = (flow.get(\"counter[0]\")||0)+1;\nvar fecha = date();\nflow.set(\"counter\", [count, fecha]);\nmsg.payload = count + \" veces. Último encendido: \" + fecha;\nreturn msg;\n\nfunction date(){\n    // Date and Time Object\n    var DT = new Date();\n\n    // Date\n    var year = DT.getFullYear();\n    var month = DT.getMonth() + 1;\n    var day = DT.getDate();\n\n    // Time\n    var hours = DT.getHours();\n    var minutes = DT.getMinutes(); minutes = minutes <= 9 ? \"0\" + minutes : minutes;\n    var seconds = DT.getSeconds(); seconds = seconds <= 9 ? \"0\" + seconds : seconds;\n\n    \n    return (day + \"/\" + month + \"/\" + year + \" \" + hours + \":\" + minutes + \":\" + seconds);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 300,
        "wires": [
            [
                "37b4f5dcfa22eaed"
            ]
        ]
    },
    {
        "id": "37b4f5dcfa22eaed",
        "type": "ui_text",
        "z": "4c43e2ae2d9aec48",
        "group": "bbd73f04.32559",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Encendido de SWC-Pro",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "ac7e51dfce92fbf7",
        "type": "ui_button",
        "z": "4c43e2ae2d9aec48",
        "name": "",
        "group": "bbd73f04.32559",
        "order": 13,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Limpiar conteo",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 520,
        "y": 350,
        "wires": [
            [
                "08d4f1a2fd6ce9f2",
                "4f9ea1fa4c582746"
            ]
        ]
    },
    {
        "id": "08d4f1a2fd6ce9f2",
        "type": "change",
        "z": "4c43e2ae2d9aec48",
        "name": "clean",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "----",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 350,
        "wires": [
            [
                "37b4f5dcfa22eaed"
            ]
        ]
    },
    {
        "id": "4f9ea1fa4c582746",
        "type": "change",
        "z": "4c43e2ae2d9aec48",
        "name": "delete counter",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 390,
        "wires": [
            []
        ]
    },
    {
        "id": "d2f91eb0e1d587bc",
        "type": "function",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "apagar piloto falla gen",
        "func": "global.set(\"IO.Functions.DO['Falla general']\", false, 'memoryOnly');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1580,
        "y": 290,
        "wires": [
            []
        ]
    },
    {
        "id": "a1b50cf6ed1c0958",
        "type": "delay",
        "z": "e483884bee93bec2",
        "g": "c117cee0146ec7e5",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1390,
        "y": 290,
        "wires": [
            [
                "d2f91eb0e1d587bc"
            ]
        ]
    },
    {
        "id": "4df7de2a24a0f655",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Decel?",
        "property": "#:(memoryOnly)::C2S.Drive_Status.Decel",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1420,
        "y": 890,
        "wires": [
            [
                "ab5dd4dcf08f666f",
                "8c91d4455998c1e3"
            ],
            [
                "a6252416.b477e8",
                "a03109bcfc45b245"
            ]
        ]
    },
    {
        "id": "736d904a50210d65",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Estado Funciones de control",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Control_functions.ActiveCF.AutomaticRestart",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 810,
        "wires": [
            []
        ]
    },
    {
        "id": "8cc0d170eac2b8a5",
        "type": "delay",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 750,
        "y": 800,
        "wires": [
            [
                "19987e51.456892"
            ]
        ]
    },
    {
        "id": "b7c86f2160305665",
        "type": "link out",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Staggered Start E1",
        "links": [
            "2da6eab8.1a0d46"
        ],
        "x": 615,
        "y": 1100,
        "wires": []
    },
    {
        "id": "460c509cea317bee",
        "type": "change",
        "z": "18d8f6b717fbdf76",
        "g": "fbbdc4b7.95b5c8",
        "name": "Continue",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Continue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1100,
        "wires": [
            [
                "b7c86f2160305665"
            ]
        ]
    },
    {
        "id": "bbb0593f5e861907",
        "type": "delay",
        "z": "bef159b0eb2cf912",
        "g": "9bdf522.eba6db",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 650,
        "y": 580,
        "wires": [
            [
                "cfde9e34.955e5"
            ]
        ]
    },
    {
        "id": "5ab224aea45fee3e",
        "type": "inject",
        "z": "9941a439.4b17c8",
        "g": "ee5753bdd6eedb72",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 540,
        "y": 180,
        "wires": [
            [
                "cc3a2f05.7f208"
            ]
        ]
    },
    {
        "id": "36f95f70ccf63de1",
        "type": "inject",
        "z": "4c43e2ae2d9aec48",
        "g": "cdf073be70c458e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 770,
        "y": 800,
        "wires": [
            [
                "20405d20297ca08d"
            ]
        ]
    },
    {
        "id": "20405d20297ca08d",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "cdf073be70c458e3",
        "command": "sudo rm ~/.node-red/node_modules/nodepccc/nodePCCC.js",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Eliminar librería PCCC actual",
        "x": 1060,
        "y": 800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "3539776256db88ec",
        "type": "complete",
        "z": "4c43e2ae2d9aec48",
        "g": "cdf073be70c458e3",
        "name": "",
        "scope": [
            "20405d20297ca08d"
        ],
        "uncaught": false,
        "x": 750,
        "y": 840,
        "wires": [
            [
                "f35238f5504731e5",
                "7d4643cba6304672"
            ]
        ]
    },
    {
        "id": "f35238f5504731e5",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "cdf073be70c458e3",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/Variadores/LibreriaVariadoresSWC/Libreria_PCCC_PF755_6_pulsos/root/nodePCCC.js /root/.node-red/node_modules/nodepccc/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Reemplazar librería PowerFlex755 ROOT",
        "x": 1060,
        "y": 860,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6c5df1518abcc7e9",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "cdf073be70c458e3",
        "command": "sudo reboot now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Reiniciar controlador",
        "x": 1160,
        "y": 1010,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bc05ec2a30e4c881",
        "type": "complete",
        "z": "4c43e2ae2d9aec48",
        "g": "cdf073be70c458e3",
        "name": "",
        "scope": [
            "f35238f5504731e5"
        ],
        "uncaught": false,
        "x": 750,
        "y": 1010,
        "wires": [
            [
                "a0a010e125181197"
            ]
        ]
    },
    {
        "id": "a0a010e125181197",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "cdf073be70c458e3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 960,
        "y": 1010,
        "wires": [
            [
                "6c5df1518abcc7e9"
            ]
        ]
    },
    {
        "id": "30bd0cb80ad79de5",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "cdf073be70c458e3",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/Variadores/LibreriaVariadoresSWC/Libreria_PCCC_PF755_6_pulsos/static/nodePCCC.js /home/bcpgrp/node_modules/nodepccc/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Reemplazar librería PowerFlex755 homeBCPGR",
        "x": 1090,
        "y": 930,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7d4643cba6304672",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "cdf073be70c458e3",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 770,
        "y": 890,
        "wires": [
            [
                "30bd0cb80ad79de5"
            ]
        ]
    },
    {
        "id": "8954035d0a8f1631",
        "type": "inject",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1160,
        "wires": [
            [
                "4f676190d3be32c2",
                "e68013d871eac1ad"
            ]
        ]
    },
    {
        "id": "e68013d871eac1ad",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "6202f66fd42f47be",
                "b9d51a758c063405"
            ]
        ]
    },
    {
        "id": "b9d51a758c063405",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 170,
        "y": 1280,
        "wires": [
            [
                "f8baf859808ea12a",
                "fb094e793357db7f"
            ]
        ]
    },
    {
        "id": "fb094e793357db7f",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 170,
        "y": 1340,
        "wires": [
            [
                "d381293ba6d9615d",
                "9ba6cd185a117255"
            ]
        ]
    },
    {
        "id": "4f676190d3be32c2",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "8939ae1589f73827",
        "command": "sudo rm -r /root/.node-red/node_modules/node-red-dashboard/dist/icon120x120.png",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "eliminar 120 dashboard",
        "x": 430,
        "y": 1160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6202f66fd42f47be",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "8939ae1589f73827",
        "command": "sudo rm -r /root/.node-red/node_modules/node-red-dashboard/dist/icon192x192.png",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "eliminar 192 dashboard",
        "x": 430,
        "y": 1220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f8baf859808ea12a",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "8939ae1589f73827",
        "command": "sudo rm -r /root/.node-red/node_modules/node-red-dashboard/dist/icon64x64.png",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "eliminar 64 dashboard",
        "x": 420,
        "y": 1280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d381293ba6d9615d",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "8939ae1589f73827",
        "command": "sudo rm -r /root/.node-red/node_modules/node-red-dashboard/dist/index.html",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "eliminar Index dashboard",
        "x": 430,
        "y": 1340,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2a74d2652ba40313",
        "type": "comment",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "Importante",
        "info": "Tener Actualizado el folder de configuración.\ny en la ruta /home/bcpgrp/Documents",
        "x": 160,
        "y": 1120,
        "wires": []
    },
    {
        "id": "eb54458a9f9594a8",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/SWC-C/Bootstrap_CSS/icon120x120.png /root/.node-red/node_modules/node-red-dashboard/dist/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "adicionar 120 dashboard",
        "x": 430,
        "y": 1440,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7678f4acbd0db084",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/SWC-C/Bootstrap_CSS/icon192x192.png /root/.node-red/node_modules/node-red-dashboard/dist/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "adicionar 192 dashboard",
        "x": 430,
        "y": 1500,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "59eca6c2abde58bc",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/SWC-C/Bootstrap_CSS/icon64x64.png /root/.node-red/node_modules/node-red-dashboard/dist/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "adicionar 64 dashboard",
        "x": 430,
        "y": 1560,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "253e92bec7f97195",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/SWC-C/Bootstrap_CSS/index.html /root/.node-red/node_modules/node-red-dashboard/dist/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "adicionar index dashboard",
        "x": 440,
        "y": 1620,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9ba6cd185a117255",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 170,
        "y": 1440,
        "wires": [
            [
                "eb54458a9f9594a8",
                "cdfbf8cd5bdab07e"
            ]
        ]
    },
    {
        "id": "cdfbf8cd5bdab07e",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 170,
        "y": 1500,
        "wires": [
            [
                "7678f4acbd0db084",
                "355c46fbbb336d6d"
            ]
        ]
    },
    {
        "id": "355c46fbbb336d6d",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 170,
        "y": 1560,
        "wires": [
            [
                "59eca6c2abde58bc",
                "6b17f15625324adb"
            ]
        ]
    },
    {
        "id": "6b17f15625324adb",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 170,
        "y": 1620,
        "wires": [
            [
                "253e92bec7f97195",
                "5a6a33ce45c42196"
            ]
        ]
    },
    {
        "id": "5a6a33ce45c42196",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 160,
        "y": 1680,
        "wires": [
            [
                "bd32ed88482e9c36"
            ]
        ]
    },
    {
        "id": "bd32ed88482e9c36",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "78ef64315cd0ce13",
        "command": "sudo reboot now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Reiniciar controlador",
        "x": 420,
        "y": 1680,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "91e55e6983bf455a",
        "type": "inject",
        "z": "4c43e2ae2d9aec48",
        "g": "40d3cefab634ddad",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 190,
        "y": 800,
        "wires": [
            [
                "5d824d49885ba783"
            ]
        ]
    },
    {
        "id": "5d824d49885ba783",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "40d3cefab634ddad",
        "command": "sudo rm /root/.node-red/node_modules/nodepccc/nodePCCC.js",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Eliminar librería PCCC actual",
        "x": 480,
        "y": 800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "fb9e86c361917fd8",
        "type": "complete",
        "z": "4c43e2ae2d9aec48",
        "g": "40d3cefab634ddad",
        "name": "",
        "scope": [
            "5d824d49885ba783"
        ],
        "uncaught": false,
        "x": 170,
        "y": 840,
        "wires": [
            [
                "b8d044e75c493a2b",
                "8ee841a674a90ec4"
            ]
        ]
    },
    {
        "id": "b8d044e75c493a2b",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "40d3cefab634ddad",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/Variadores/LibreriaVariadoresSWC/Libreria_PCCC_AFE/Node-Modules/nodePCCC.js /home/bcpgrp/node_modules/nodepccc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Reemplazar librería AFE",
        "x": 430,
        "y": 860,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "1902da7dd948937b",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "40d3cefab634ddad",
        "command": "sudo reboot now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Reiniciar controlador",
        "x": 480,
        "y": 990,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0157dedcb48ab813",
        "type": "complete",
        "z": "4c43e2ae2d9aec48",
        "g": "40d3cefab634ddad",
        "name": "",
        "scope": [
            "b8d044e75c493a2b"
        ],
        "uncaught": false,
        "x": 150,
        "y": 990,
        "wires": [
            [
                "a579cd13d184ebae"
            ]
        ]
    },
    {
        "id": "a579cd13d184ebae",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "40d3cefab634ddad",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 300,
        "y": 990,
        "wires": [
            [
                "1902da7dd948937b"
            ]
        ]
    },
    {
        "id": "af07bd6da4e63f8f",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "40d3cefab634ddad",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/Variadores/LibreriaVariadoresSWC/Libreria_PCCC_AFE/Node-Red/nodePCCC.js /root/.node-red/node_modules/nodepccc",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "reemplazarRoot",
        "x": 400,
        "y": 910,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8ee841a674a90ec4",
        "type": "delay",
        "z": "4c43e2ae2d9aec48",
        "g": "40d3cefab634ddad",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 230,
        "y": 910,
        "wires": [
            [
                "af07bd6da4e63f8f"
            ]
        ]
    },
    {
        "id": "8ff160913729fcb1",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "605d50dc83a98078",
        "command": "sudo rm /usr/share/plymouth/themes/pix/splash.png",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Remover Splash actual",
        "x": 950,
        "y": 1140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "510b47c4f9f0e95c",
        "type": "inject",
        "z": "4c43e2ae2d9aec48",
        "d": true,
        "g": "605d50dc83a98078",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 770,
        "y": 1140,
        "wires": [
            [
                "8ff160913729fcb1"
            ]
        ]
    },
    {
        "id": "0855ddfdc4bcf012",
        "type": "complete",
        "z": "4c43e2ae2d9aec48",
        "g": "605d50dc83a98078",
        "name": "",
        "scope": [
            "8ff160913729fcb1"
        ],
        "uncaught": false,
        "x": 750,
        "y": 1200,
        "wires": [
            [
                "54f95f30bf9a6bbe"
            ]
        ]
    },
    {
        "id": "54f95f30bf9a6bbe",
        "type": "exec",
        "z": "4c43e2ae2d9aec48",
        "g": "605d50dc83a98078",
        "command": "sudo cp /home/pi/Documents/splash.png /usr/share/plymouth/themes/pix/splash.png",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Insertar Splash",
        "x": 920,
        "y": 1200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ce96fe756e53c0a0",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "5c9801fdee1b9e98",
        "group": "764d8ce4.3c81b4",
        "name": "Logo / Clock",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<script id=\"clockScript1\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n        //add logo\n        var div1 = $('<div/>');\n        var logo = new Image();\n        var user =new Image();\n        logo.src = 'http://localhost:1880/swcpro-images/logoBCPGroup_bordeado.png'\n        logo.height = 60;\n        div1[0].style.margin = '5px auto';\n\n        div1.append(logo);\n        \n        //add clock\n        var div2 = $('<div/>');\n        var p = $('<p/>');\n\n        div2.append(p);\n        div2[0].style.margin = '10px auto';\n        \n        function displayTime() {\n        p.text(new Date().toLocaleString());\n        }\n        \n        clockInterval = setInterval(displayTime, 1000);\n        \n        \n        var div3=$('<div />');\n        var pol = $('<p id=\"headerStatus\" />');\n        \n        div3[0].style.margin = '5px 5px 5px auto';\n        div3.append(pol);\n        \n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n\n            if(!toolbar.length) return;\n            toolbar.append(div3);\n            toolbar.append(div2);\n            toolbar.append(div1);\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 100);\n    });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1150,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3fb8bbbc0defe6a6",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "5c9801fdee1b9e98",
        "group": "4f5b8416.cada1c",
        "name": "Principal",
        "order": 2,
        "width": 1,
        "height": 1,
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(data) {\n            var elem = document.getElementById(\"headerStatus\")\n            if(elem !== null) {\n                elem.className = data.payload;\n                elem.innerHTML = data.payload;\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1140,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "f57c6beca1b20786",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "5c9801fdee1b9e98",
        "name": "",
        "links": [
            "8f8a6a475ac5ee0b"
        ],
        "x": 1015,
        "y": 540,
        "wires": [
            [
                "3fb8bbbc0defe6a6",
                "88dee94e10e8741d",
                "2302ffda8592e4b4",
                "e4251ebaa452dc47",
                "186ee7f203734f85",
                "7c6ff4da66ac0cc1",
                "dad6e54bbf3f8ac8"
            ]
        ]
    },
    {
        "id": "e4251ebaa452dc47",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "5c9801fdee1b9e98",
        "group": "4b33f8ea.b34188",
        "name": "Protecciones",
        "order": 20,
        "width": "5",
        "height": "1",
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(data) {\n            var elem = document.getElementById(\"headerStatus\")\n            if(elem !== null) {\n                elem.className = data.payload;\n                elem.innerHTML = data.payload;\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "186ee7f203734f85",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "5c9801fdee1b9e98",
        "group": "73d37e5b1f2a302a",
        "name": "Configuracion vsd",
        "order": 2,
        "width": "1",
        "height": "1",
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(data) {\n            var elem = document.getElementById(\"headerStatus\")\n            if(elem !== null) {\n                elem.className = data.payload;\n                elem.innerHTML = data.payload;\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1170,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "7c6ff4da66ac0cc1",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "5c9801fdee1b9e98",
        "group": "4190699f61725da4",
        "name": "IO",
        "order": 3,
        "width": 1,
        "height": 1,
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(data) {\n            var elem = document.getElementById(\"headerStatus\")\n            if(elem !== null) {\n                elem.className = data.payload;\n                elem.innerHTML = data.payload;\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1130,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "dad6e54bbf3f8ac8",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "5c9801fdee1b9e98",
        "group": "ab77be5a0af25d0a",
        "name": "DHS",
        "order": 2,
        "width": "1",
        "height": "1",
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(data) {\n            var elem = document.getElementById(\"headerStatus\")\n            if(elem !== null) {\n                elem.className = data.payload;\n                elem.innerHTML = data.payload;\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1130,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "88dee94e10e8741d",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "5c9801fdee1b9e98",
        "group": "ac27a3905053ab85",
        "name": "Otr. Control",
        "order": 3,
        "width": 1,
        "height": 1,
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(data) {\n            var elem = document.getElementById(\"headerStatus\")\n            if(elem !== null) {\n                elem.className = data.payload;\n                elem.innerHTML = data.payload;\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "2302ffda8592e4b4",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "5c9801fdee1b9e98",
        "group": "91f407cc.9e95a8",
        "name": "Eventos y alarmas",
        "order": 5,
        "width": "4",
        "height": "1",
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(data) {\n            var elem = document.getElementById(\"headerStatus\")\n            if(elem !== null) {\n                elem.className = data.payload;\n                elem.innerHTML = data.payload;\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1170,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "9913875f5cc5f0f2",
        "type": "function",
        "z": "3af652c9.6f9bee",
        "name": "",
        "func": "var loged = global.get(\"UserStatus\",\"memoryOnly\")||0;\nvar user;\nif (loged==0)user = \"Ninguno\";\nif (loged == 1) user = \"Operador\";\nif (loged == 2) user = \"Admin\";\nif (loged == 3) user = \"Root\";\n\nvar name_pozo = global.get(\"Input.Pozo\")||\"NaN\";\n\nmsg.payload = name_pozo + \"/ /\" +user;\nnode.status({fill:\"red\",shape:\"ring\",text:msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 860,
        "wires": [
            [
                "8f8a6a475ac5ee0b"
            ]
        ]
    },
    {
        "id": "8f8a6a475ac5ee0b",
        "type": "link out",
        "z": "3af652c9.6f9bee",
        "g": "be55ea76.ed4478",
        "name": "Usuario actual",
        "links": [
            "31c11db01979b2fc",
            "f57c6beca1b20786"
        ],
        "x": 995,
        "y": 860,
        "wires": []
    },
    {
        "id": "825a31a31582b84f",
        "type": "function",
        "z": "2026898575f7aa56",
        "name": "getting data",
        "func": "// Variables de control de animación de tendencias\nvar time = msg.payload;\nvar realtime = flow.get(\"trends.realtime\", \"memoryOnly\") || null;\nvar lasthour = flow.get(\"trends.lasthour\") || null;\nvar lastday = flow.get(\"trends.lastday\") || null;\nvar counth = context.get(\"counth\",\"memoryOnly\")||0;\nvar countd = context.get(\"countd\", \"memoryOnly\") || 0;\n\n\n// Variables de CILA2S\nvar C2S = global.get(\"C2S.Implicit\", \"memoryOnly\") || [];\nvar RelTx = global.get(\"C2S.RelTx\") || 1;\nvar LNVoltage = global.get(\"PQA.Real_Time_Parameters.Average_Phase_Voltage\",\"memoryOnly\")||0;\nvar LLVoltage = global.get(\"PQA.Real_Time_Parameters.Average_Line_Voltage\",\"memoryOnly\")||0;\nvar PIP = global.get(\"Prolonged_Reference.DHS['Presión de entrada']\", \"memoryOnly\")||0;\nvar PDP = global.get(\"Prolonged_Reference.DHS['Presión de descarga']\", \"memoryOnly\") || 0;\nvar Input_Temp = global.get(\"Prolonged_Reference.DHS['Temperatura de entrada']\", \"memoryOnly\") || 0;\nvar Motor_Temp = global.get(\"Prolonged_Reference.DHS['Temperatura de motor']\", \"memoryOnly\") || 0;\nvar Submergence = global.get(\"SENSORLESS.Sumergencia_inferida\", \"memoryOnly\") || 0;\nvar DynamicFluidLevel = global.get(\"SENSORLESS.Nivel_de_fluido_inferido\", \"memoryOnly\") || 0;\nvar Flow = global.get(\"SENSORLESS.Caudal_ajustado_con_la_viscosidad\", \"memoryOnly\") || 0;\n\nmsg.Output_Frequency = (C2S.Output_Frequency || 0).toFixed(2);\nmsg.Output_Current = (C2S.Output_Current || 0).toFixed(2);\nmsg.Motor_Current = (C2S.Output_Current / RelTx || 0).toFixed(1);\nmsg.LNVoltage = LNVoltage.toFixed(1);\nmsg.LLVoltage = LLVoltage.toFixed(1);\nmsg.Output_Power = (C2S.Output_Power || 0).toFixed(1);\nmsg.PIP = PIP.toFixed(1);\nmsg.PDP = PDP.toFixed(1);\nmsg.Input_Temp = Input_Temp.toFixed(1);\nmsg.Motor_Temp = Motor_Temp.toFixed(1);\nmsg.Submergence = Submergence.toFixed(1);\nmsg.DynamicFluidLevel = DynamicFluidLevel.toFixed(1);\nmsg.Flow = Flow.toFixed(1);\n\n\nif (realtime == null) {\n    realtime = {\n        'Output_Frequency': [{ \"x\": time, \"y\": C2S.Output_Frequency || 0 }],\n        'Output_Current': [{ \"x\": time, \"y\": C2S.Output_Current || 0 }],\n        'Motor_Current': [{ \"x\": time, \"y\": C2S.Output_Current/RelTx || 0 }],\n        'LNVoltage': [{ \"x\": time, \"y\": LNVoltage}],\n        'LLVoltage': [{ \"x\": time, \"y\": LLVoltage }],\n        'Output_Power': [{ \"x\": time, \"y\": C2S.Output_Power || 0 }],\n        'PIP': [{ \"x\": time, \"y\": PIP }],\n        'PDP': [{ \"x\": time, \"y\": PDP }],\n        'Input_Temp': [{ \"x\": time, \"y\": Input_Temp }],\n        'Motor_Temp': [{ \"x\": time, \"y\": Motor_Temp }],\n        'Submergence': [{ \"x\": time, \"y\": Submergence }],\n        'DynamicFluidLevel': [{ \"x\": time, \"y\": DynamicFluidLevel }],\n        'Flow': [{ \"x\": time, \"y\": Flow }],\n    };\n}\nelse {\n    if (realtime.Output_Frequency.length > 30) {\n        realtime.Output_Frequency.shift();\n        realtime.Output_Current.shift();\n        realtime.Motor_Current.shift();\n        realtime.LNVoltage.shift();\n        realtime.LLVoltage.shift();\n        realtime.Output_Power.shift();\n        realtime.PIP.shift();\n        realtime.PDP.shift();\n        realtime.Input_Temp.shift();\n        realtime.Motor_Temp.shift();\n        realtime.Submergence.shift();\n        realtime.DynamicFluidLevel.shift();\n        realtime.Flow.shift();\n    }\n    \n    realtime.Output_Frequency.push({ \"x\": time, \"y\": C2S.Output_Frequency || 0 }),\n    realtime.Output_Current.push({ \"x\": time, \"y\": C2S.Output_Current || 0 }),\n    realtime.Motor_Current.push({ \"x\": time, \"y\": C2S.Output_Current/RelTx || 0 }),\n    realtime.LNVoltage.push({ \"x\": time, \"y\": LNVoltage}),\n    realtime.LLVoltage.push({ \"x\": time, \"y\": LLVoltage }),\n    realtime.Output_Power.push({ \"x\": time, \"y\": C2S.Output_Power || 0 }),\n    realtime.PIP.push({ \"x\": time, \"y\": PIP }),\n    realtime.PDP.push({ \"x\": time, \"y\": PDP }),\n    realtime.Input_Temp.push({ \"x\": time, \"y\": Input_Temp }),\n    realtime.Motor_Temp.push({ \"x\": time, \"y\": Motor_Temp }),\n    realtime.Submergence.push({ \"x\": time, \"y\": Submergence }),\n    realtime.DynamicFluidLevel.push({ \"x\": time, \"y\": DynamicFluidLevel }),\n    realtime.Flow.push({ \"x\": time, \"y\": Flow })\n\n}\n\nif (lasthour == null) {\n    lasthour = {\n        'Output_Frequency': [{ \"x\": time, \"y\": C2S.Output_Frequency || 0 }],\n        'Output_Current': [{ \"x\": time, \"y\": C2S.Output_Current || 0 }],\n        'Motor_Current': [{ \"x\": time, \"y\": C2S.Output_Current / RelTx || 0 }],\n        'LNVoltage': [{ \"x\": time, \"y\": LNVoltage }],\n        'LLVoltage': [{ \"x\": time, \"y\": LLVoltage }],\n        'Output_Power': [{ \"x\": time, \"y\": C2S.Output_Power || 0 }],\n        'PIP': [{ \"x\": time, \"y\": PIP }],\n        'PDP': [{ \"x\": time, \"y\": PDP }],\n        'Input_Temp': [{ \"x\": time, \"y\": Input_Temp }],\n        'Motor_Temp': [{ \"x\": time, \"y\": Motor_Temp }],\n        'Submergence': [{ \"x\": time, \"y\": Submergence }],\n        'DynamicFluidLevel': [{ \"x\": time, \"y\": DynamicFluidLevel }],\n        'Flow': [{ \"x\": time, \"y\": Flow }],\n    };\n}\nelse {\n    if (counth==15){\n        if (lasthour.Output_Frequency.length > 240) {\n            lasthour.Output_Frequency.shift();\n            lasthour.Output_Current.shift();\n            lasthour.Motor_Current.shift();\n            lasthour.LNVoltage.shift();\n            lasthour.LLVoltage.shift();\n            lasthour.Output_Power.shift();\n            lasthour.PIP.shift();\n            lasthour.PDP.shift();\n            lasthour.Input_Temp.shift();\n            lasthour.Motor_Temp.shift();\n            lasthour.Submergence.shift();\n            lasthour.DynamicFluidLevel.shift();\n            lasthour.Flow.shift();\n        }\n\n        lasthour.Output_Frequency.push({ \"x\": time, \"y\": C2S.Output_Frequency || 0 }),\n        lasthour.Output_Current.push({ \"x\": time, \"y\": C2S.Output_Current || 0 }),\n        lasthour.Motor_Current.push({ \"x\": time, \"y\": C2S.Output_Current / RelTx || 0 }),\n        lasthour.LNVoltage.push({ \"x\": time, \"y\": LNVoltage }),\n        lasthour.LLVoltage.push({ \"x\": time, \"y\": LLVoltage }),\n        lasthour.Output_Power.push({ \"x\": time, \"y\": C2S.Output_Power || 0 }),\n        lasthour.PIP.push({ \"x\": time, \"y\": PIP }),\n        lasthour.PDP.push({ \"x\": time, \"y\": PDP }),\n        lasthour.Input_Temp.push({ \"x\": time, \"y\": Input_Temp }),\n        lasthour.Motor_Temp.push({ \"x\": time, \"y\": Motor_Temp }),\n        lasthour.Submergence.push({ \"x\": time, \"y\": Submergence }),\n        lasthour.DynamicFluidLevel.push({ \"x\": time, \"y\": DynamicFluidLevel }),\n        lasthour.Flow.push({ \"x\": time, \"y\": Flow })\n\n        countd > 24 ? countd = 1 : countd = countd + 1;\n        context.set(\"countd\", countd, \"memoryOnly\");\n    }\n\n}\n\nif (lastday == null) {\n    lastday = {\n        'Output_Frequency': [{ \"x\": time, \"y\": C2S.Output_Frequency || 0 }],\n        'Output_Current': [{ \"x\": time, \"y\": C2S.Output_Current || 0 }],\n        'Motor_Current': [{ \"x\": time, \"y\": C2S.Output_Current / RelTx || 0 }],\n        'LNVoltage': [{ \"x\": time, \"y\": LNVoltage }],\n        'LLVoltage': [{ \"x\": time, \"y\": LLVoltage }],\n        'Output_Power': [{ \"x\": time, \"y\": C2S.Output_Power || 0 }],\n        'PIP': [{ \"x\": time, \"y\": PIP }],\n        'PDP': [{ \"x\": time, \"y\": PDP }],\n        'Input_Temp': [{ \"x\": time, \"y\": Input_Temp }],\n        'Motor_Temp': [{ \"x\": time, \"y\": Motor_Temp }],\n        'Submergence': [{ \"x\": time, \"y\": Submergence }],\n        'DynamicFluidLevel': [{ \"x\": time, \"y\": DynamicFluidLevel }],\n        'Flow': [{ \"x\": time, \"y\": Flow }],\n    };\n}\nelse {\n    if (countd==24){\n        context.set(\"countd\", 0, \"memoryOnly\");\n        if (lastday.Output_Frequency.length > 240) {\n            lastday.Output_Frequency.shift();\n            lastday.Output_Current.shift();\n            lastday.Motor_Current.shift();\n            lastday.LNVoltage.shift();\n            lastday.LLVoltage.shift();\n            lastday.Output_Power.shift();\n            lastday.PIP.shift();\n            lastday.PDP.shift();\n            lastday.Input_Temp.shift();\n            lastday.Motor_Temp.shift();\n            lastday.Submergence.shift();\n            lastday.DynamicFluidLevel.shift();\n            lastday.Flow.shift();\n        }\n\n        lastday.Output_Frequency.push({ \"x\": time, \"y\": C2S.Output_Frequency || 0 }),\n        lastday.Output_Current.push({ \"x\": time, \"y\": C2S.Output_Current || 0 }),\n        lastday.Motor_Current.push({ \"x\": time, \"y\": C2S.Output_Current / RelTx || 0 }),\n        lastday.LNVoltage.push({ \"x\": time, \"y\": LNVoltage }),\n        lastday.LLVoltage.push({ \"x\": time, \"y\": LLVoltage }),\n        lastday.Output_Power.push({ \"x\": time, \"y\": C2S.Output_Power || 0 }),\n        lastday.PIP.push({ \"x\": time, \"y\": PIP }),\n        lastday.PDP.push({ \"x\": time, \"y\": PDP }),\n        lastday.Input_Temp.push({ \"x\": time, \"y\": Input_Temp }),\n        lastday.Motor_Temp.push({ \"x\": time, \"y\": Motor_Temp }),\n        lastday.Submergence.push({ \"x\": time, \"y\": Submergence }),\n        lastday.DynamicFluidLevel.push({ \"x\": time, \"y\": DynamicFluidLevel }),\n        lastday.Flow.push({ \"x\": time, \"y\": Flow })\n    }\n\n}\n\ncounth > 14 ? counth=1 : counth = counth + 1;\ncontext.set(\"counth\", counth, \"memoryOnly\");\n\nflow.set(\"trends.realtime\", realtime, \"memoryOnly\");\nflow.set(\"trends.lasthour\", lasthour);\nflow.set(\"trends.lastday\", lastday);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 100,
        "wires": [
            [
                "4297de21af954e7c"
            ]
        ]
    },
    {
        "id": "360dcafc238d706c",
        "type": "inject",
        "z": "2026898575f7aa56",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "825a31a31582b84f"
            ]
        ]
    },
    {
        "id": "1c4e319074fb108b",
        "type": "function",
        "z": "2026898575f7aa56",
        "name": "request",
        "func": "var i,request={};\nfor (i = 0; i < msg.payload.length ;i++){\n    if (msg.payload[i] ==\"Output_Frequency\") request.Output_Frequency=true;\n    if (msg.payload[i] == \"Output_Current\") request.Output_Current=true;\n    if (msg.payload[i] == \"Motor_Current\") request.Motor_Current = true;\n    if (msg.payload[i] == \"LNVoltage\") request.LNVoltage = true;\n    if (msg.payload[i] == \"LLVoltage\") request.LLVoltage = true;\n    if (msg.payload[i] == \"Output_Power\") request.Output_Power = true;\n    if (msg.payload[i] == \"PIP\") request.PIP = true;\n    if (msg.payload[i] == \"PDP\") request.PDP = true;\n    if (msg.payload[i] == \"Input_Temp\") request.Input_Temp = true;\n    if (msg.payload[i] == \"Motor_Temp\") request.Motor_Temp = true;\n    if (msg.payload[i] == \"Submergence\") request.Submergence = true;\n    if (msg.payload[i] == \"DynamicFluidLevel\") request.DynamicFluidLevel = true;\n    if (msg.payload[i] == \"Flow\") request.Flow = true;\n}\nmsg.payload = request;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 40,
        "wires": [
            [
                "f55bcf1b9afa8eaa"
            ]
        ]
    },
    {
        "id": "f55bcf1b9afa8eaa",
        "type": "change",
        "z": "2026898575f7aa56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::trends.request",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "2c94ceb6cbbb8cd1",
        "type": "inject",
        "z": "902fc438.e5d758",
        "g": "a55fe2f884c89e71",
        "name": "time",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 110,
        "y": 1720,
        "wires": [
            [
                "83023dd30811818a"
            ]
        ]
    },
    {
        "id": "83023dd30811818a",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "a55fe2f884c89e71",
        "name": "Trends",
        "func": "var REF = parseFloat((Math.abs(global.get(\"C2S.Implicit.Commanded_SpdRef\", \"memoryOnly\"))).toFixed(3));\nvar SPEED = parseFloat((Math.abs(global.get(\"C2S.Implicit.Output_Frequency\", \"memoryOnly\"))).toFixed(3));\n\nvar time = msg.payload;\n\nvar datos = context.get(\"trend\",\"memoryOnly\")||null;\n\nif (datos==null){\n    datos = {   //Datos de suministro de agua\n                'ref': [{ \"x\": time, \"y\": REF }],\n                'speed': [{ \"x\": time, \"y\": SPEED }]\n            };\n}\nelse{\n    if (datos.ref.length > 59) {\n        datos.ref.shift();\n        datos.speed.shift();\n    }\n        \n\n    datos.ref.push({ \"x\": time, \"y\": REF });\n    datos.speed.push({ \"x\": time, \"y\": SPEED });\n}\n\ncontext.set(\"trend\",datos,\"memoryOnly\");\n\nvar series = [];\n\nseries.push(\"Referencia \" + REF + \" Hz\");\nseries.push(\"Frecuencia de salida \" + SPEED + \" Hz\");\n\n\n\nvar data = [];\n\ndata.push(datos.ref);\ndata.push(datos.speed);\n\n\nvar chart = [{\n    \"series\": series,\n    \"data\": data,\n    \"labels\": [\"\"]\n}];\n\nif (data.length != 0)\n    msg.payload = chart;\nelse\n    msg.payload = [];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 90,
        "y": 1780,
        "wires": [
            [
                "d6ca01c917296363"
            ]
        ]
    },
    {
        "id": "7841d296e32be02e",
        "type": "ui_chart",
        "z": "902fc438.e5d758",
        "g": "a55fe2f884c89e71",
        "name": "",
        "group": "13df98319c7579a6",
        "order": 0,
        "width": "16",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#420d5e",
            "#16700f",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 470,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "d6ca01c917296363",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "a55fe2f884c89e71",
        "name": "home?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 1780,
        "wires": [
            [
                "7841d296e32be02e"
            ]
        ]
    },
    {
        "id": "d02f5d5ee0c770af",
        "type": "delay",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1210,
        "y": 480,
        "wires": [
            [
                "853cd9a2.d77cf8"
            ]
        ]
    },
    {
        "id": "6a229694c9c0fbca",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "99671f60976b1d2a",
        "name": "FlagStatus",
        "rules": [
            {
                "t": "set",
                "p": "C2S.FlagStatus",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "fadff7a7b6574e6e",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "9ede9b9e7f6ac7f4",
        "name": "",
        "links": [
            "2b924384003578aa",
            "a1956d7f8e9c73a6"
        ],
        "x": 2315,
        "y": 1260,
        "wires": []
    },
    {
        "id": "a1956d7f8e9c73a6",
        "type": "link in",
        "z": "3af652c9.6f9bee",
        "g": "be55ea76.ed4478",
        "name": "",
        "links": [
            "fadff7a7b6574e6e"
        ],
        "x": 835,
        "y": 820,
        "wires": [
            [
                "9913875f5cc5f0f2"
            ]
        ]
    },
    {
        "id": "eb3c3b3196b499d2",
        "type": "delay",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "pauseType": "delay",
        "timeout": "8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1320,
        "y": 600,
        "wires": [
            [
                "dba5a375ebc26199"
            ]
        ]
    },
    {
        "id": "2f283ff35941d8fd",
        "type": "change",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "Comunicacion_Drive",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::C2S.Comunicacion_Drive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 540,
        "wires": [
            [
                "e5c936c9725329c6"
            ]
        ]
    },
    {
        "id": "c8bc621a82792de1",
        "type": "delay",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 300,
        "y": 480,
        "wires": [
            [
                "2f283ff35941d8fd"
            ]
        ]
    },
    {
        "id": "e5c936c9725329c6",
        "type": "switch",
        "z": "d08f14e12055286a",
        "g": "dad84feb.d4773",
        "name": "true?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 480,
        "wires": [
            [
                "a5e1205e8fe1feed"
            ],
            [
                "c8bc621a82792de1"
            ]
        ]
    },
    {
        "id": "8eb0770368c697e5",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 55,
        "y": 400,
        "wires": [
            [
                "7b211215.487a7c",
                "669c22af8e42e6cb",
                "77cd4010fe016c65"
            ]
        ]
    },
    {
        "id": "2db25cfef9829aac",
        "type": "trigger",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "name": "",
        "op1": "1",
        "op2": "2",
        "op1type": "str",
        "op2type": "str",
        "duration": "1.5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 270,
        "y": 120,
        "wires": [
            [
                "07fdea154e1be602"
            ]
        ]
    },
    {
        "id": "320aa1af1a983da1",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "name": "Actualizar Alarmas In",
        "links": [
            "c98bd2dc.e9d39",
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 155,
        "y": 120,
        "wires": [
            [
                "2db25cfef9829aac"
            ]
        ]
    },
    {
        "id": "07fdea154e1be602",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "name": "a Tabla",
        "func": "var datos = JSON.parse(JSON.stringify(flow.get(\"Events\") || null));\nvar i;\nmsg.payload = [];\nfor (i=0;i<datos.length;i++){\n    if(datos[i].evento.includes(\"Disparo\")){\n        datos[i].evento = '<font color= red><b>' + datos[i].evento +'<b>';\n    }\n    if (datos[i].evento.includes(\"Falla de com\") || datos[i].evento.includes(\"Pérdida de com\")) {\n        datos[i].evento = '<font color= orange><b>' + datos[i].evento + '<b>';\n    }\n    msg.payload.push(datos[i]);\n    \n}\nif (datos != null)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 120,
        "wires": [
            [
                "7f9ef622.6d0448"
            ]
        ]
    },
    {
        "id": "f9b9d7a57c57d25e",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "31895ea6.22f372",
        "name": "a Tabla",
        "func": "var datos = flow.get(\"Alarms\")||null;\nvar i;\nmsg.payload = [];\nfor (i=0;i<datos.length;i++){\n    msg.payload.push(datos[i])\n}\nif (datos != null)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 120,
        "wires": [
            [
                "dafe5a37.3d7818"
            ]
        ]
    },
    {
        "id": "56c9781860235a31",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-ComandosC2S-tab\" data-toggle=\"tab\" href=\"#nav-ComandosC2S\"\n                role=\"tab\" aria-controls=\"nav-ComandosC2S\" aria-selected=\"false\"\n                ng-click=\"send({payload:ComandosC2S()})\">Comandos C2S</a>\n            <a class=\"nav-item nav-link\" id=\"nav-C2S-tab\" data-toggle=\"tab\" href=\"#nav-C2S\" role=\"tab\"\n                aria-controls=\"nav-C2S\" aria-selected=\"false\" ng-click=\"send({payload:C2S()})\">Datos C2S</a>\n            <a class=\"nav-item nav-link\" id=\"nav-electricos-tab\" data-toggle=\"tab\" href=\"#nav-electricos\" role=\"tab\"\n                aria-controls=\"nav-electricos\" aria-selected=\"false\" ng-click=\"send({payload:electricos()})\">Datos\n                eléctricos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-fondo-tab\" data-toggle=\"tab\" href=\"#nav-fondo\" role=\"tab\"\n                aria-controls=\"nav-fondo\" aria-selected=\"true\" ng-click=\"send({payload:fondo()})\">Datos de proceso</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.fondo = function() { return \"Fondo\"; };\n        this.scope.C2S = function() { return \"C2S\"; };\n        this.scope.electricos = function() { return \"Eléctricos\"; };\n        this.scope.ComandosC2S = function() { return \"ComandosC2S\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n</body>\n\n</html>",
        "output": "str",
        "x": 280,
        "y": 360,
        "wires": [
            [
                "e765ca36.69fb98"
            ]
        ]
    },
    {
        "id": "d99efa50f8eed7c5",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-ComandosC2S-tab\" data-toggle=\"tab\" href=\"#nav-ComandosC2S\"\n                role=\"tab\" aria-controls=\"nav-ComandosC2S\" aria-selected=\"false\"\n                ng-click=\"send({payload:ComandosC2S()})\">Comandos C2S</a>\n            <a class=\"nav-item nav-link\" id=\"nav-C2S-tab\" data-toggle=\"tab\" href=\"#nav-C2S\" role=\"tab\"\n                aria-controls=\"nav-C2S\" aria-selected=\"false\" ng-click=\"send({payload:C2S()})\">Datos C2S</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-electricos-tab\" data-toggle=\"tab\" href=\"#nav-electricos\" role=\"tab\"\n                aria-controls=\"nav-electricos\" aria-selected=\"false\" ng-click=\"send({payload:electricos()})\">Datos\n                eléctricos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-fondo-tab\" data-toggle=\"tab\" href=\"#nav-fondo\" role=\"tab\"\n                aria-controls=\"nav-fondo\" aria-selected=\"true\" ng-click=\"send({payload:fondo()})\">Datos de proceso</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.fondo = function() { return \"Fondo\"; };\n        this.scope.C2S = function() { return \"C2S\"; };\n        this.scope.electricos = function() { return \"Eléctricos\"; };\n        this.scope.ComandosC2S = function() { return \"ComandosC2S\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n</body>\n\n</html>",
        "output": "str",
        "x": 280,
        "y": 320,
        "wires": [
            [
                "e765ca36.69fb98"
            ]
        ]
    },
    {
        "id": "2bc0495b1bd3fa65",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-ComandosC2S-tab\" data-toggle=\"tab\" href=\"#nav-ComandosC2S\"\n                role=\"tab\" aria-controls=\"nav-ComandosC2S\" aria-selected=\"false\"\n                ng-click=\"send({payload:ComandosC2S()})\">Comandos C2S</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-C2S-tab\" data-toggle=\"tab\" href=\"#nav-C2S\" role=\"tab\"\n                aria-controls=\"nav-C2S\" aria-selected=\"false\" ng-click=\"send({payload:C2S()})\">Datos C2S</a>\n            <a class=\"nav-item nav-link\" id=\"nav-electricos-tab\" data-toggle=\"tab\" href=\"#nav-electricos\" role=\"tab\"\n                aria-controls=\"nav-electricos\" aria-selected=\"false\" ng-click=\"send({payload:electricos()})\">Datos\n                eléctricos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-fondo-tab\" data-toggle=\"tab\" href=\"#nav-fondo\" role=\"tab\"\n                aria-controls=\"nav-fondo\" aria-selected=\"true\" ng-click=\"send({payload:fondo()})\">Datos de proceso</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.fondo = function() { return \"Fondo\"; };\n        this.scope.C2S = function() { return \"C2S\"; };\n        this.scope.electricos = function() { return \"Eléctricos\"; };\n        this.scope.ComandosC2S = function() { return \"ComandosC2S\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n</body>\n\n</html>",
        "output": "str",
        "x": 280,
        "y": 280,
        "wires": [
            [
                "e765ca36.69fb98"
            ]
        ]
    },
    {
        "id": "b03aee65d7a42da4",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-ComandosC2S-tab\" data-toggle=\"tab\" href=\"#nav-ComandosC2S\"\n                role=\"tab\" aria-controls=\"nav-ComandosC2S\" aria-selected=\"false\"\n                ng-click=\"send({payload:ComandosC2S()})\">Comandos C2S</a>\n            <a class=\"nav-item nav-link\" id=\"nav-C2S-tab\" data-toggle=\"tab\" href=\"#nav-C2S\" role=\"tab\"\n                aria-controls=\"nav-C2S\" aria-selected=\"false\" ng-click=\"send({payload:C2S()})\">Datos C2S</a>\n            <a class=\"nav-item nav-link\" id=\"nav-electricos-tab\" data-toggle=\"tab\" href=\"#nav-electricos\" role=\"tab\"\n                aria-controls=\"nav-electricos\" aria-selected=\"false\" ng-click=\"send({payload:electricos()})\">Datos\n                eléctricos</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-fondo-tab\" data-toggle=\"tab\" href=\"#nav-fondo\" role=\"tab\"\n                aria-controls=\"nav-fondo\" aria-selected=\"true\" ng-click=\"send({payload:fondo()})\">Datos de proceso</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.fondo = function() { return \"Fondo\"; };\n        this.scope.C2S = function() { return \"C2S\"; };\n        this.scope.electricos = function() { return \"Eléctricos\"; };\n        this.scope.ComandosC2S = function() { return \"ComandosC2S\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n</body>\n\n</html>",
        "output": "str",
        "x": 280,
        "y": 240,
        "wires": [
            [
                "e765ca36.69fb98"
            ]
        ]
    },
    {
        "id": "3c155817e9114c24",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Fondo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C2S",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Eléctricos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ComandosC2S",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 90,
        "y": 260,
        "wires": [
            [
                "b03aee65d7a42da4"
            ],
            [
                "2bc0495b1bd3fa65"
            ],
            [
                "d99efa50f8eed7c5"
            ],
            [
                "56c9781860235a31"
            ]
        ]
    },
    {
        "id": "16335e2c56b3d940",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "3c155817e9114c24"
            ]
        ]
    },
    {
        "id": "669c22af8e42e6cb",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 130,
        "y": 360,
        "wires": [
            [
                "56c9781860235a31"
            ]
        ]
    },
    {
        "id": "09fa25235c1ac304",
        "type": "link in",
        "z": "3af652c9.6f9bee",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 835,
        "y": 780,
        "wires": [
            [
                "1dd77604fce864da"
            ]
        ]
    },
    {
        "id": "1dd77604fce864da",
        "type": "delay",
        "z": "3af652c9.6f9bee",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 940,
        "y": 780,
        "wires": [
            [
                "9913875f5cc5f0f2"
            ]
        ]
    },
    {
        "id": "dcd696d0.332638",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "usuario",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 840,
        "y": 1200,
        "wires": [
            [
                "312d9def.84df32"
            ],
            [
                "b6e49e7b8af2df41"
            ]
        ]
    },
    {
        "id": "b6e49e7b8af2df41",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Para configurar datalogger debe iniciar sesióin primero",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡Atención!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1260,
        "wires": [
            [
                "25a8d0d2661ecaf2"
            ]
        ]
    },
    {
        "id": "25a8d0d2661ecaf2",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "links": [
            "52f1e35a6b450a62"
        ],
        "x": 1115,
        "y": 1260,
        "wires": []
    },
    {
        "id": "ba6763dbf23cbb5a",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 110,
        "y": 1120,
        "wires": [
            [
                "b9261a31b4bbd186"
            ]
        ]
    },
    {
        "id": "b9261a31b4bbd186",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Eventos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Alarmas",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Datalogger",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PQA",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 90,
        "y": 1180,
        "wires": [
            [
                "35a52a0820bebc23"
            ],
            [
                "f0d5aa40cd56628f"
            ],
            [
                "ec06c2c2ff2f48b5"
            ],
            [
                "529deff5ef6dbaa8"
            ]
        ]
    },
    {
        "id": "35a52a0820bebc23",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:Eventos()})\">Eventos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:Alarmas()})\">Alarmas</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-EntradasAnalogicas\" role=\"tab\"\n                aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\" ng-click=\"send({payload:PQA()})\">PQA</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:Datalogger()})\">Datalogger</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Eventos = function() { return \"Eventos\"; };\n        this.scope.Alarmas = function() { return \"Alarmas\"; };\n        this.scope.Datalogger = function() { return \"Datalogger\"; };\n        this.scope.PQA = function() { return \"PQA\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 260,
        "y": 1180,
        "wires": [
            [
                "890323f.ee684e"
            ]
        ]
    },
    {
        "id": "34c5a0aa2b3d052d",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 95,
        "y": 1300,
        "wires": [
            [
                "35a52a0820bebc23"
            ]
        ]
    },
    {
        "id": "f0d5aa40cd56628f",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:Eventos()})\">Eventos</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:Alarmas()})\">Alarmas</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-EntradasAnalogicas\" role=\"tab\"\n                aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\" ng-click=\"send({payload:PQA()})\">PQA</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:Datalogger()})\">Datalogger</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Eventos = function() { return \"Eventos\"; };\n        this.scope.Alarmas = function() { return \"Alarmas\"; };\n        this.scope.Datalogger = function() { return \"Datalogger\"; };\n        this.scope.PQA = function() { return \"PQA\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 260,
        "y": 1220,
        "wires": [
            [
                "890323f.ee684e"
            ]
        ]
    },
    {
        "id": "ec06c2c2ff2f48b5",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:Eventos()})\">Eventos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:Alarmas()})\">Alarmas</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-EntradasAnalogicas\" role=\"tab\"\n                aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\" ng-click=\"send({payload:PQA()})\">PQA</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:Datalogger()})\">Datalogger</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Eventos = function() { return \"Eventos\"; };\n        this.scope.Alarmas = function() { return \"Alarmas\"; };\n        this.scope.Datalogger = function() { return \"Datalogger\"; };\n        this.scope.PQA = function() { return \"PQA\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 260,
        "y": 1260,
        "wires": [
            [
                "f57c522aea6111e7"
            ]
        ]
    },
    {
        "id": "f57c522aea6111e7",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "usuario",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 1260,
        "wires": [
            [
                "890323f.ee684e"
            ]
        ]
    },
    {
        "id": "dc03e803896e0929",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 175,
        "y": 1460,
        "wires": [
            [
                "0cb1b9b3bb70aef9",
                "bf383a9670894a6e"
            ]
        ]
    },
    {
        "id": "0cb1b9b3bb70aef9",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:Eventos()})\">Arranque Automático</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:Alarmas()})\">Rocking Start</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:Datalogger()})\">Control PID</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Eventos = function() { return \"ArranqueAuto\"; };\n        this.scope.Alarmas = function() { return \"RockingStart\"; };\n        this.scope.Datalogger = function() { return \"PIDControl\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 300,
        "y": 1540,
        "wires": [
            [
                "7acc47cbe9990f19"
            ]
        ]
    },
    {
        "id": "80d606957859a016",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 855,
        "y": 1120,
        "wires": [
            [
                "c2e14be8.387158"
            ]
        ]
    },
    {
        "id": "dc1f3421fd7b7c84",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 595,
        "y": 1440,
        "wires": [
            [
                "99e2af3d95892f16"
            ]
        ]
    },
    {
        "id": "a969f81453a84932",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:Eventos()})\">Arranque Automático</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:Alarmas()})\">Rocking Start</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:Datalogger()})\">Control PID</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Eventos = function() { return \"ArranqueAuto\"; };\n        this.scope.Alarmas = function() { return \"RockingStart\"; };\n        this.scope.Datalogger = function() { return \"PIDControl\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 300,
        "y": 1580,
        "wires": [
            [
                "7acc47cbe9990f19"
            ]
        ]
    },
    {
        "id": "43c5b35d32c86d63",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:Eventos()})\">Arranque Automático</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:Alarmas()})\">Rocking Start</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:Datalogger()})\">Control PID</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Eventos = function() { return \"ArranqueAuto\"; };\n        this.scope.Alarmas = function() { return \"RockingStart\"; };\n        this.scope.Datalogger = function() { return \"PIDControl\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 300,
        "y": 1620,
        "wires": [
            [
                "7acc47cbe9990f19"
            ]
        ]
    },
    {
        "id": "2d3e026b35cdd9cc",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ArranqueAuto",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RockingStart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PIDControl",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 130,
        "y": 1580,
        "wires": [
            [
                "0cb1b9b3bb70aef9"
            ],
            [
                "a969f81453a84932"
            ],
            [
                "43c5b35d32c86d63"
            ]
        ]
    },
    {
        "id": "a9a50228154fac64",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 110,
        "y": 1520,
        "wires": [
            [
                "2d3e026b35cdd9cc"
            ]
        ]
    },
    {
        "id": "72b3150f9f310688",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 475,
        "y": 500,
        "wires": [
            [
                "d1b70a55.083b88"
            ]
        ]
    },
    {
        "id": "98e9311ebc924c66",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-PlacaMotor-tab\" data-toggle=\"tab\" href=\"#nav-PlacaMotor\"\n                role=\"tab\" aria-controls=\"nav-PlacaMotor\" aria-selected=\"true\"\n                ng-click=\"send({payload:Motor()})\">Motor, rampas y límites</a>\n            <a class=\"nav-item nav-link\" id=\"nav-RampsLimits-tab\" data-toggle=\"tab\" href=\"#nav-RampsLimits\" role=\"tab\"\n                aria-controls=\"nav-RampsLimits\" aria-selected=\"false\" ng-click=\"send({payload:RefuerzoTx()})\">Refuerzo y transformador</a>\n            <a class=\"nav-item nav-link\" id=\"nav-CajaReductora-tab\" data-toggle=\"tab\" href=\"#nav-CajaReductora\" role=\"tab\"\n                aria-controls=\"nav-CajaReductora\" aria-selected=\"false\" ng-click=\"send({payload:CajaReductora()})\">Caja Reductora</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Motor = function() { return \"MotorVelocidad\"; };\n        this.scope.RefuerzoTx = function() { return \"RefuerzoTx\"; };\n        this.scope.CajaReductora = function() { return \"CajaReductora\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n</body>\n\n</html>",
        "output": "str",
        "x": 220,
        "y": 540,
        "wires": [
            [
                "3333030b.c56a6c"
            ]
        ]
    },
    {
        "id": "228eb994177c4301",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 75,
        "y": 500,
        "wires": [
            [
                "98e9311ebc924c66"
            ]
        ]
    },
    {
        "id": "980eb62d2bc87e1c",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 230,
        "y": 500,
        "wires": [
            [
                "e0ebe56beee379ef"
            ]
        ]
    },
    {
        "id": "fa907c59507b08c4",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-PlacaMotor-tab\" data-toggle=\"tab\" href=\"#nav-PlacaMotor\"\n                role=\"tab\" aria-controls=\"nav-PlacaMotor\" aria-selected=\"true\"\n                ng-click=\"send({payload:Motor()})\">Motor, rampas y límites</a>\n            <a class=\"nav-item nav-link  active\" id=\"nav-RampsLimits-tab\" data-toggle=\"tab\" href=\"#nav-RampsLimits\" role=\"tab\"\n                aria-controls=\"nav-RampsLimits\" aria-selected=\"false\" ng-click=\"send({payload:RefuerzoTx()})\">Refuerzo y transformador</a>\n            <a class=\"nav-item nav-link\" id=\"nav-CajaReductora-tab\" data-toggle=\"tab\" href=\"#nav-CajaReductora\" role=\"tab\"\n                aria-controls=\"nav-CajaReductora\" aria-selected=\"false\" ng-click=\"send({payload:CajaReductora()})\">Caja Reductora</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Motor = function() { return \"MotorVelocidad\"; };\n        this.scope.RefuerzoTx = function() { return \"RefuerzoTx\"; };\n        this.scope.CajaReductora = function() { return \"CajaReductora\"; };\n        \n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n\n</body>\n\n</html>",
        "output": "str",
        "x": 220,
        "y": 580,
        "wires": [
            [
                "3333030b.c56a6c"
            ]
        ]
    },
    {
        "id": "34d0978b94237bdb",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 575,
        "y": 760,
        "wires": [
            [
                "c1f7c147.2e2dd"
            ]
        ]
    },
    {
        "id": "61c5e328a04409ef",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:EntradasDigitales()})\">Entradas Dig.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:EntradasAnalogicas()})\">Entradas Ana.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasDigitales()})\">Salidas Dig.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:FiltroArmonicos()})\">Filtro armónicos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasAnalogicas()})\">Salidas Ana.</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.EntradasDigitales = function() { return \"EntradasDigitales\"; };\n        this.scope.EntradasAnalogicas = function() { return \"EntradasAnalogicas\"; };\n        this.scope.SalidasDigitales = function() { return \"SalidasDigitales\"; };\n        this.scope.SalidasAnalogicas = function() { return \"SalidasAnalogicas\"; };\n        this.scope.FiltroArmonicos = function() { return \"FiltroArmonicos\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 260,
        "y": 840,
        "wires": [
            [
                "461615d3.efcb8c"
            ]
        ]
    },
    {
        "id": "4fb7354230af86db",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 250,
        "y": 780,
        "wires": [
            [
                "3d5229b6c4b0f5b3"
            ]
        ]
    },
    {
        "id": "9429fcb37217992b",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 115,
        "y": 800,
        "wires": [
            [
                "61c5e328a04409ef"
            ]
        ]
    },
    {
        "id": "3d5229b6c4b0f5b3",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "EntradasDigitales",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EntradasAnalogicas",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SalidasDigitales",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SalidasAnalogicas",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FiltroArmonicos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 130,
        "y": 880,
        "wires": [
            [
                "61c5e328a04409ef"
            ],
            [
                "bdea02d8ef94c62c"
            ],
            [
                "b0149f3837310cf3"
            ],
            [
                "cae90cc36eb53039"
            ],
            [
                "de4f39a85d994607"
            ]
        ]
    },
    {
        "id": "bdea02d8ef94c62c",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:EntradasDigitales()})\">Entradas Dig.</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:EntradasAnalogicas()})\">Entradas Ana.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasDigitales()})\">Salidas Dig.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:FiltroArmonicos()})\">Filtro armónicos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasAnalogicas()})\">Salidas Ana.</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.EntradasDigitales = function() { return \"EntradasDigitales\"; };\n        this.scope.EntradasAnalogicas = function() { return \"EntradasAnalogicas\"; };\n        this.scope.SalidasDigitales = function() { return \"SalidasDigitales\"; };\n        this.scope.SalidasAnalogicas = function() { return \"SalidasAnalogicas\"; };\n        this.scope.FiltroArmonicos = function() { return \"FiltroArmonicos\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 260,
        "y": 880,
        "wires": [
            [
                "461615d3.efcb8c"
            ]
        ]
    },
    {
        "id": "b0149f3837310cf3",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:EntradasDigitales()})\">Entradas Dig.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:EntradasAnalogicas()})\">Entradas Ana.</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasDigitales()})\">Salidas Dig.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:FiltroArmonicos()})\">Filtro armónicos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasAnalogicas()})\">Salidas Ana.</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.EntradasDigitales = function() { return \"EntradasDigitales\"; };\n        this.scope.EntradasAnalogicas = function() { return \"EntradasAnalogicas\"; };\n        this.scope.SalidasDigitales = function() { return \"SalidasDigitales\"; };\n        this.scope.SalidasAnalogicas = function() { return \"SalidasAnalogicas\"; };\n        this.scope.FiltroArmonicos = function() { return \"FiltroArmonicos\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 260,
        "y": 920,
        "wires": [
            [
                "461615d3.efcb8c"
            ]
        ]
    },
    {
        "id": "de4f39a85d994607",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:EntradasDigitales()})\">Entradas Dig.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:EntradasAnalogicas()})\">Entradas Ana.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasDigitales()})\">Salidas Dig.</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:FiltroArmonicos()})\">Filtro armónicos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasAnalogicas()})\">Salidas Ana.</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.EntradasDigitales = function() { return \"EntradasDigitales\"; };\n        this.scope.EntradasAnalogicas = function() { return \"EntradasAnalogicas\"; };\n        this.scope.SalidasDigitales = function() { return \"SalidasDigitales\"; };\n        this.scope.SalidasAnalogicas = function() { return \"SalidasAnalogicas\"; };\n        this.scope.FiltroArmonicos = function() { return \"FiltroArmonicos\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 260,
        "y": 960,
        "wires": [
            [
                "461615d3.efcb8c"
            ]
        ]
    },
    {
        "id": "cae90cc36eb53039",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "9132da2c.b8c6b8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:EntradasDigitales()})\">Entradas Dig.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:EntradasAnalogicas()})\">Entradas Ana.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasDigitales()})\">Salidas Dig.</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:FiltroArmonicos()})\">Filtro armónicos</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-SalidasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-SalidasAnalogicas\"\n                role=\"tab\" aria-controls=\"nav-SalidasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:SalidasAnalogicas()})\">Salidas Ana.</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.EntradasDigitales = function() { return \"EntradasDigitales\"; };\n        this.scope.EntradasAnalogicas = function() { return \"EntradasAnalogicas\"; };\n        this.scope.SalidasDigitales = function() { return \"SalidasDigitales\"; };\n        this.scope.SalidasAnalogicas = function() { return \"SalidasAnalogicas\"; };\n        this.scope.FiltroArmonicos = function() { return \"FiltroArmonicos\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 260,
        "y": 1000,
        "wires": [
            [
                "461615d3.efcb8c"
            ]
        ]
    },
    {
        "id": "2069ef42c04cbfaf",
        "type": "link in",
        "z": "38e901f121b52acb",
        "g": "af8e6105.775618",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 175,
        "y": 120,
        "wires": [
            [
                "6260bf964a453af8",
                "efaec9be.df9588",
                "6631fedd826801b0"
            ]
        ]
    },
    {
        "id": "8080cedd65508fc1",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "0474082dbe49e1c2",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 85,
        "y": 2330,
        "wires": [
            [
                "95c97983.71d388"
            ]
        ]
    },
    {
        "id": "e0ebe56beee379ef",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "MotorVelocidad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RefuerzoTx",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 90,
        "y": 560,
        "wires": [
            [
                "98e9311ebc924c66"
            ],
            [
                "fa907c59507b08c4"
            ]
        ]
    },
    {
        "id": "2dbce9795a096dfe",
        "type": "link out",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "",
        "links": [
            "207ea8ce.3dea68"
        ],
        "x": 815,
        "y": 1820,
        "wires": []
    },
    {
        "id": "bde48f770f85aba2",
        "type": "change",
        "z": "9941a439.4b17c8",
        "g": "95daead77be77494",
        "name": "LL Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Guardando ajustes de protección por +++",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::proteccionSelec",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Guardando",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1820,
        "wires": [
            [
                "2dbce9795a096dfe"
            ]
        ]
    },
    {
        "id": "8832b98054f3f184",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "g": "e9d2f5f0.86a518",
        "name": "Motor Type",
        "property": "C2S.Motor_Control.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "IM",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PMM",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 1040,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "430e037a.b0c2ec",
        "type": "change",
        "z": "e6caea2d.94f508",
        "name": "Read command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "python3 -m cpppo.server.enip.get_attribute '@0x93/+++/9' -S -a IP",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "Parameter",
                "tot": "env"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "IP",
                "fromt": "str",
                "to": "C2S.IP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 70,
        "wires": [
            [
                "bb5d72d2.8bb36"
            ]
        ]
    },
    {
        "id": "bb5d72d2.8bb36",
        "type": "exec",
        "z": "e6caea2d.94f508",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "3",
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 70,
        "wires": [
            [
                "977ba8de.b9cf38"
            ],
            [],
            []
        ]
    },
    {
        "id": "977ba8de.b9cf38",
        "type": "function",
        "z": "e6caea2d.94f508",
        "name": "",
        "func": "var Datatype    = env.get(\"Datatype\");\nvar Parameter   = env.get(\"Parameter\");\nvar inicio      = msg.payload.indexOf(\"[\")+1;\nvar fin         = msg.payload.indexOf(\"]\");\nvar array       = msg.payload.slice(inicio,fin);\narray           = array.split(',');\nvar intvalue = [];\n\nfor(var i=0; i<array.length; i++){\n    array[i] = parseInt(array[i]);\n    array[i] = array[i] << 8*i;\n    // @ts-ignore\n    intvalue = intvalue | array[i];\n}\nif(Datatype == \"REAL\"){\n    msg.payload = parseFloat(Int2Float32(intvalue).toFixed(6));\n}\nelse if(Datatype == \"DINT\"){\n    msg.payload = parseInt(intvalue);\n}\nmsg.parameter = Parameter;\nreturn msg;\n\n// IEC 754 to Float Function\nfunction Int2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128) \n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand === 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}\n// Créditos: https://flows.nodered.org/flow/359ead34237b7ab6ec0465ee85a34b62",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "df6a889a303bdca1",
        "type": "ui_button",
        "z": "43b51d90.0b47f4",
        "name": "",
        "group": "9bfa57e13e5326f8",
        "order": 2,
        "width": "5",
        "height": "1",
        "passthru": false,
        "label": "Sincronizar con Drive",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "¿Desea sincronizar con los valores actuales de drive?",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1800,
        "y": 2700,
        "wires": [
            [
                "075979c193466cc4"
            ]
        ]
    },
    {
        "id": "075979c193466cc4",
        "type": "ui_toast",
        "z": "43b51d90.0b47f4",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Sincronizar",
        "cancel": "Cancelar",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2010,
        "y": 2700,
        "wires": [
            [
                "9af777e086bcf57f"
            ]
        ]
    },
    {
        "id": "9af777e086bcf57f",
        "type": "switch",
        "z": "43b51d90.0b47f4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Sincronizar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2150,
        "y": 2700,
        "wires": [
            [
                "1b9c82541b5b7d8c"
            ]
        ]
    },
    {
        "id": "1b9c82541b5b7d8c",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "name": "",
        "links": [
            "c6c5e054dc073c7c",
            "1123964175133a16",
            "9f416dcef46dd3d4"
        ],
        "x": 2235,
        "y": 2700,
        "wires": []
    },
    {
        "id": "88d45e925bb0a53f",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Voltage",
        "env": [
            {
                "name": "Parameter",
                "value": "41360",
                "type": "num"
            }
        ],
        "x": 460,
        "y": 750,
        "wires": [
            [
                "b97c0cba.aea3",
                "f77ad42ee258fcf3"
            ]
        ]
    },
    {
        "id": "1123964175133a16",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "1b9c82541b5b7d8c"
        ],
        "x": 355,
        "y": 750,
        "wires": [
            [
                "88d45e925bb0a53f"
            ]
        ]
    },
    {
        "id": "09f37d36d65bf3a4",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Amps",
        "env": [
            {
                "name": "Parameter",
                "value": "41361",
                "type": "num"
            }
        ],
        "x": 450,
        "y": 860,
        "wires": [
            [
                "625acf36.28ca1",
                "5e95ce70c9780198"
            ]
        ]
    },
    {
        "id": "f77ad42ee258fcf3",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "5b00382c3aa9c08a"
        ],
        "x": 575,
        "y": 750,
        "wires": []
    },
    {
        "id": "5b00382c3aa9c08a",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "f77ad42ee258fcf3"
        ],
        "x": 355,
        "y": 870,
        "wires": [
            [
                "09f37d36d65bf3a4"
            ]
        ]
    },
    {
        "id": "5e95ce70c9780198",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "6a0fed7ca364e043"
        ],
        "x": 555,
        "y": 870,
        "wires": []
    },
    {
        "id": "9bed0f621baa53b3",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Hertz",
        "env": [
            {
                "name": "Parameter",
                "value": "41362",
                "type": "num"
            }
        ],
        "x": 450,
        "y": 970,
        "wires": [
            [
                "52666b13.2f23b4",
                "64264957cd067edd"
            ]
        ]
    },
    {
        "id": "6a0fed7ca364e043",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "5e95ce70c9780198"
        ],
        "x": 355,
        "y": 970,
        "wires": [
            [
                "9bed0f621baa53b3"
            ]
        ]
    },
    {
        "id": "64264957cd067edd",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "6d449132863bfaa3"
        ],
        "x": 555,
        "y": 970,
        "wires": []
    },
    {
        "id": "04edf6add93f3e0a",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "RPM",
        "env": [
            {
                "name": "Parameter",
                "value": "41363",
                "type": "num"
            }
        ],
        "x": 450,
        "y": 1070,
        "wires": [
            [
                "9fce2d60.4554b",
                "372ef6730ba0963c"
            ]
        ]
    },
    {
        "id": "6d449132863bfaa3",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "64264957cd067edd"
        ],
        "x": 355,
        "y": 1070,
        "wires": [
            [
                "04edf6add93f3e0a"
            ]
        ]
    },
    {
        "id": "d8318d743aa640d3",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Power",
        "env": [
            {
                "name": "Parameter",
                "value": "41366",
                "type": "num"
            }
        ],
        "x": 450,
        "y": 1160,
        "wires": [
            [
                "a5bfded0.8a3cf",
                "df300b03b43a428a"
            ]
        ]
    },
    {
        "id": "372ef6730ba0963c",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "fed8f4b7d58907b7"
        ],
        "x": 555,
        "y": 1070,
        "wires": []
    },
    {
        "id": "fed8f4b7d58907b7",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "372ef6730ba0963c"
        ],
        "x": 355,
        "y": 1170,
        "wires": [
            [
                "d8318d743aa640d3"
            ]
        ]
    },
    {
        "id": "df300b03b43a428a",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "5ba45362a29ceb5d"
        ],
        "x": 555,
        "y": 1170,
        "wires": []
    },
    {
        "id": "0c62e444e693c77d",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Poles",
        "env": [
            {
                "name": "Parameter",
                "value": "41367",
                "type": "num"
            },
            {
                "name": "Datatype",
                "value": "DINT",
                "type": "str"
            }
        ],
        "x": 430,
        "y": 1260,
        "wires": [
            [
                "dc569dcc.729",
                "f060cfc58dd20231"
            ]
        ]
    },
    {
        "id": "5ba45362a29ceb5d",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "df300b03b43a428a"
        ],
        "x": 355,
        "y": 1270,
        "wires": [
            [
                "0c62e444e693c77d"
            ]
        ]
    },
    {
        "id": "f060cfc58dd20231",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "a379cf5705b7c2eb"
        ],
        "x": 555,
        "y": 1270,
        "wires": []
    },
    {
        "id": "a379cf5705b7c2eb",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "f060cfc58dd20231"
        ],
        "x": 255,
        "y": 1390,
        "wires": [
            [
                "c1b33094c533ed83"
            ]
        ]
    },
    {
        "id": "c1b33094c533ed83",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "Power Units",
        "env": [
            {
                "name": "Parameter",
                "value": "41365",
                "type": "num"
            },
            {
                "name": "Datatype",
                "value": "DINT",
                "type": "str"
            }
        ],
        "x": 370,
        "y": 1390,
        "wires": [
            [
                "c3259a58.4fe088",
                "e61bc8c044b0b30f"
            ]
        ]
    },
    {
        "id": "e61bc8c044b0b30f",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "27c43941.e9e0c6",
        "name": "",
        "links": [
            "7787993fb7221125",
            "ac2cdd9baa7fe6f8"
        ],
        "x": 505,
        "y": 1390,
        "wires": []
    },
    {
        "id": "7787993fb7221125",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "links": [
            "e61bc8c044b0b30f"
        ],
        "x": 355,
        "y": 160,
        "wires": [
            [
                "2fd1ed2e5df4231a"
            ]
        ]
    },
    {
        "id": "2fd1ed2e5df4231a",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "VRef Accel Time",
        "env": [
            {
                "name": "Parameter",
                "value": "42875",
                "type": "num"
            }
        ],
        "x": 480,
        "y": 160,
        "wires": [
            [
                "645e5a91.8ccef4",
                "aec6098c8c25d147"
            ]
        ]
    },
    {
        "id": "aec6098c8c25d147",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "links": [
            "f0339fb685ad9574"
        ],
        "x": 635,
        "y": 160,
        "wires": []
    },
    {
        "id": "f0339fb685ad9574",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "links": [
            "aec6098c8c25d147"
        ],
        "x": 355,
        "y": 260,
        "wires": [
            [
                "342c2a02039a907d"
            ]
        ]
    },
    {
        "id": "342c2a02039a907d",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "VRef Decel Time",
        "env": [
            {
                "name": "Parameter",
                "value": "42877",
                "type": "num"
            }
        ],
        "x": 490,
        "y": 260,
        "wires": [
            [
                "faa40213.086fa",
                "22759c960f6c0f40"
            ]
        ]
    },
    {
        "id": "22759c960f6c0f40",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "links": [
            "643c6ef985fbeb3a"
        ],
        "x": 635,
        "y": 260,
        "wires": []
    },
    {
        "id": "643c6ef985fbeb3a",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "links": [
            "22759c960f6c0f40"
        ],
        "x": 355,
        "y": 360,
        "wires": [
            [
                "66245871913bcba0"
            ]
        ]
    },
    {
        "id": "66245871913bcba0",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "Vel Low Lim Pos",
        "env": [
            {
                "name": "Parameter",
                "value": "42860",
                "type": "num"
            }
        ],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "ebeef8ea.3def58",
                "230c2a4fd67a60e3"
            ]
        ]
    },
    {
        "id": "d0b40d4094928563",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Min Limit Rvs",
        "env": [
            {
                "name": "Parameter",
                "value": "42861",
                "type": "num"
            }
        ],
        "x": 1520,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c3c49381858b2d5e",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "a7e99088.c8108",
        "name": "Invertir",
        "func": "msg.payload = msg.payload*-1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1370,
        "y": 280,
        "wires": [
            [
                "d0b40d4094928563"
            ]
        ]
    },
    {
        "id": "230c2a4fd67a60e3",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "links": [
            "8bb2754a544a32a3"
        ],
        "x": 615,
        "y": 360,
        "wires": []
    },
    {
        "id": "8bb2754a544a32a3",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "",
        "links": [
            "230c2a4fd67a60e3"
        ],
        "x": 355,
        "y": 460,
        "wires": [
            [
                "a823bab656932f36"
            ]
        ]
    },
    {
        "id": "a823bab656932f36",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "Vel Limit Pos",
        "env": [
            {
                "name": "Parameter",
                "value": "42858",
                "type": "num"
            }
        ],
        "x": 470,
        "y": 460,
        "wires": [
            [
                "7b0522e.ed903dc"
            ]
        ]
    },
    {
        "id": "5039c34e9497432a",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Start Acc Boost",
        "env": [
            {
                "name": "Parameter",
                "value": "41440",
                "type": "num"
            }
        ],
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "4439aa38bfddcf38",
                "5c27d2c5.3f268c"
            ]
        ]
    },
    {
        "id": "ac2cdd9baa7fe6f8",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "links": [
            "e61bc8c044b0b30f"
        ],
        "x": 355,
        "y": 1540,
        "wires": [
            [
                "5039c34e9497432a"
            ]
        ]
    },
    {
        "id": "4439aa38bfddcf38",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "links": [
            "8adf9c244d0720dd"
        ],
        "x": 595,
        "y": 1540,
        "wires": []
    },
    {
        "id": "61a1dfd07f85203a",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Run_Boost",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Volts_per_Hertz.Run_Boost",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1600,
        "wires": [
            [
                "93a963e82ada3353"
            ]
        ]
    },
    {
        "id": "93a963e82ada3353",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "label": "Run Boost (V)",
        "tooltip": "",
        "group": "c9a29e84.68bd",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "Accel",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 560,
        "y": 1600,
        "wires": [
            [
                "50d29025ecaf8df6"
            ]
        ]
    },
    {
        "id": "50d29025ecaf8df6",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Run_Boost",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Volts_per_Hertz.Run_Boost",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "f4d9092eba3243ad",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Run_Boost",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Volts_per_Hertz.Run_Boost",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1620,
        "wires": [
            [
                "22f08d51067fe2b8"
            ]
        ]
    },
    {
        "id": "22f08d51067fe2b8",
        "type": "subflow:1ae6c379.02ea3d",
        "z": "43b51d90.0b47f4",
        "name": "Run_Boost",
        "env": [
            {
                "name": "Parameter",
                "value": "41441",
                "type": "num"
            }
        ],
        "x": 1450,
        "y": 1620,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8adf9c244d0720dd",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "links": [
            "4439aa38bfddcf38"
        ],
        "x": 355,
        "y": 1640,
        "wires": [
            [
                "0a47c45733293452"
            ]
        ]
    },
    {
        "id": "0a47c45733293452",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Run Boost",
        "env": [
            {
                "name": "Parameter",
                "value": "41441",
                "type": "num"
            }
        ],
        "x": 470,
        "y": 1640,
        "wires": [
            [
                "93a963e82ada3353",
                "b36fa25daa569196"
            ]
        ]
    },
    {
        "id": "b36fa25daa569196",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "links": [
            "9868544bf8a521ce"
        ],
        "x": 595,
        "y": 1640,
        "wires": []
    },
    {
        "id": "9868544bf8a521ce",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "links": [
            "b36fa25daa569196"
        ],
        "x": 355,
        "y": 1740,
        "wires": [
            [
                "c31591ac84f99b45"
            ]
        ]
    },
    {
        "id": "c31591ac84f99b45",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Break Voltage",
        "env": [
            {
                "name": "Parameter",
                "value": "41443",
                "type": "num"
            }
        ],
        "x": 480,
        "y": 1740,
        "wires": [
            [
                "9b007129.593e9",
                "e95ec941ba45f078"
            ]
        ]
    },
    {
        "id": "e95ec941ba45f078",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "links": [
            "07daee8465dca7bf"
        ],
        "x": 615,
        "y": 1740,
        "wires": []
    },
    {
        "id": "07daee8465dca7bf",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "links": [
            "e95ec941ba45f078"
        ],
        "x": 355,
        "y": 1840,
        "wires": [
            [
                "68960b669106b8e0"
            ]
        ]
    },
    {
        "id": "68960b669106b8e0",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Break Frequency",
        "env": [
            {
                "name": "Parameter",
                "value": "41444",
                "type": "num"
            }
        ],
        "x": 490,
        "y": 1840,
        "wires": [
            [
                "d290dc22.ecd03",
                "0238a15a00d7e007"
            ]
        ]
    },
    {
        "id": "c245e8a8b48db5ab",
        "type": "subflow:e6caea2d.94f508",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Current Limit",
        "env": [
            {
                "name": "Parameter",
                "value": "41182",
                "type": "num"
            }
        ],
        "x": 470,
        "y": 1940,
        "wires": [
            [
                "5a72c82c.208f48",
                "9bd9b6cfa517c920"
            ]
        ]
    },
    {
        "id": "0238a15a00d7e007",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "links": [
            "e9a747d5f95a0cbc"
        ],
        "x": 635,
        "y": 1840,
        "wires": []
    },
    {
        "id": "e9a747d5f95a0cbc",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "",
        "links": [
            "0238a15a00d7e007"
        ],
        "x": 355,
        "y": 1940,
        "wires": [
            [
                "c245e8a8b48db5ab"
            ]
        ]
    },
    {
        "id": "7328b1fd6e58fbd8",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "group": "f7aa27b.6c2ded8",
        "order": 11,
        "width": "4",
        "height": "1",
        "name": "Estado funciones de control",
        "label": "",
        "format": "<font size= 3px><font color = red>{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 680,
        "y": 880,
        "wires": []
    },
    {
        "id": "a30b8826e30e6eab",
        "type": "function",
        "z": "902fc438.e5d758",
        "name": "Iniciar sesión",
        "func": "var active = global.get(\"C2S.Drive_Status.Active\",\"memoryOnly\")||0;\nvar user = global.get(\"UserStatus\", \"memoryOnly\") || 0;\nvar count = context.get(\"count\", \"memoryOnly\") || 0;\ncount<5?count++:count=1;\ncontext.set(\"count\", count, \"memoryOnly\");\nif((active==0)&&(user==0)&&(count>2))\n    msg.payload = \"Iniciar sesión para operar\";\nelse if ((active == 1) && (user == 0) && (count > 2))\n    msg.payload = \"Iniciar sesión para cambiar referencia\";\nelse\n    msg.payload = \"\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 880,
        "wires": [
            [
                "7328b1fd6e58fbd8"
            ]
        ]
    },
    {
        "id": "5c5b638c.a8f91c",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "70a63b74.44894c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PQA.CTS.CT1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 990,
        "wires": [
            []
        ]
    },
    {
        "id": "cf0d5223.b4dab",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "70a63b74.44894c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PQA.CTS.CT2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1030,
        "wires": [
            []
        ]
    },
    {
        "id": "7cc997fc.b5d5b8",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "70a63b74.44894c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PQA.CTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 1070,
        "wires": [
            []
        ]
    },
    {
        "id": "ed025e5c.648858",
        "type": "modbus-flex-getter",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "PQA Modbus TCP",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "ae58460d.12c698",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 460,
        "y": 270,
        "wires": [
            [
                "a65e22e6.71c65",
                "d3d2bf92f1387fd6",
                "f54284edcaf056e4"
            ],
            []
        ]
    },
    {
        "id": "6188debb.009948",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Lectura PQA",
        "func": "var count = context.get(\"Count\")||0;\n\n// Real Time Parameters\nif(count === 0){\n    msg.topic = \"Real Time Parameters\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16384, \n                    'quantity': 39*2 \n    }\n    count ++;\n}\n\n// Energy Parameters\nelse if (count == 1){\n    msg.topic = \"Energy Parameters\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16456, \n                    'quantity': 24*2 \n    }\n    count ++;\n}\n\n// Harmonics - Power Quality\nelse if (count == 2){\n    msg.topic = \"Power Quality\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16474, \n                    'quantity': 8 \n    }\n    count ++;\n}\n\n// Phase Angles\nelse if (count == 3){\n    msg.topic = \"Phase Angles\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 17056, \n                    'quantity': 5 \n    }\n    count ++;\n}\nelse if (count == 4){\n    msg.topic = \"Harmonics_V1(V12)\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16482, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 5){\n    msg.topic = \"Harmonics_V2(V31)\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16516, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 6){\n    msg.topic = \"Harmonics_V3(V23)\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16550, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 7){\n    msg.topic = \"Harmonics_I1\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16584, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 8){\n    msg.topic = \"Harmonics_I2\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16617, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 9){\n    msg.topic = \"Harmonics_I3\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16650, \n                    'quantity': 12 \n    }\n    count ++;\n}\n\n// Error\nelse {\n    msg.topic = msg.payload;\n    msg.payload = \"Function Error!\";\n}\n\n// Count Reset\nif(count > 9){count = 0;}\n\n// Context update\ncontext.set(\"Count\",count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 270,
        "wires": [
            [
                "ed025e5c.648858",
                "3bd8b039f4c56513"
            ]
        ]
    },
    {
        "id": "5fe9be31.70c2a",
        "type": "inject",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 140,
        "y": 270,
        "wires": [
            [
                "6188debb.009948"
            ]
        ]
    },
    {
        "id": "1f4cd023.43eb4",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Real Time Parameters IEC754 to Float ",
        "func": "var CTS = global.get('PQA.CTS') || null;\nvar RelCT = CTS !== null ? CTS.CT1/CTS.CT2 :1;\n\n// Convert 2 registers of 16 bits in one of 32 bits\nvar Frequency               = ((msg.payload[0] << 16) + msg.payload[1]); Frequency                  = Int2Float32(Frequency);\nvar Phase_1_Voltage\t        = ((msg.payload[2] << 16) + msg.payload[3]); Phase_1_Voltage            = Int2Float32(Phase_1_Voltage);\nvar Phase_2_Voltage         = ((msg.payload[4] << 16) + msg.payload[5]); Phase_2_Voltage            = Int2Float32(Phase_2_Voltage);\nvar Phase_3_Voltage         = ((msg.payload[6] << 16) + msg.payload[7]); Phase_3_Voltage            = Int2Float32(Phase_3_Voltage);\nvar Average_Phase_Voltage\t= ((msg.payload[8] << 16) + msg.payload[9]); Average_Phase_Voltage      = Int2Float32(Average_Phase_Voltage);\n\nvar Line_Voltage_1_2        = ((msg.payload[10] << 16) + msg.payload[11]); Line_Voltage_1_2         = Int2Float32(Line_Voltage_1_2);\nvar Line_Voltage_2_3        = ((msg.payload[12] << 16) + msg.payload[13]); Line_Voltage_2_3         = Int2Float32(Line_Voltage_2_3);\nvar Line_Voltage_3_1        = ((msg.payload[14] << 16) + msg.payload[15]); Line_Voltage_3_1         = Int2Float32(Line_Voltage_3_1);\nvar Average_Line_Voltage\t= ((msg.payload[16] << 16) + msg.payload[17]); Average_Line_Voltage     = Int2Float32(Average_Line_Voltage);\n\nvar Total_Phase_A_Current   = ((msg.payload[18] << 16) + msg.payload[19]); Total_Phase_A_Current    = Int2Float32(Total_Phase_A_Current);\nvar Total_Phase_B_Current\t= ((msg.payload[20] << 16) + msg.payload[21]); Total_Phase_B_Current    = Int2Float32(Total_Phase_B_Current);\nvar Total_Phase_C_Current   = ((msg.payload[22] << 16) + msg.payload[23]); Total_Phase_C_Current    = Int2Float32(Total_Phase_C_Current);\nvar Average_Phase_Current\t= ((msg.payload[24] << 16) + msg.payload[25]); Average_Phase_Current    = Int2Float32(Average_Phase_Current);\nvar Neutral_Current         = ((msg.payload[26] << 16) + msg.payload[27]); Neutral_Current          = Int2Float32(Neutral_Current);\n\nvar Phase_A_Power           = ((msg.payload[28] << 16) + msg.payload[29]); Phase_A_Power            = Int2Float32(Phase_A_Power);\nvar Phase_B_Power\t        = ((msg.payload[30] << 16) + msg.payload[31]); Phase_B_Power            = Int2Float32(Phase_B_Power);\nvar Phase_C_Power           = ((msg.payload[32] << 16) + msg.payload[33]); Phase_C_Power\t        = Int2Float32(Phase_C_Power);\nvar Total_System_Power      = ((msg.payload[34] << 16) + msg.payload[35]); Total_System_Power       = Int2Float32(Total_System_Power);\n\nvar Phase_A_Reactive_Power  = ((msg.payload[36] << 16) + msg.payload[37]); Phase_A_Reactive_Power   = Int2Float32(Phase_A_Reactive_Power);\nvar Phase_B_Reactive_Power\t= ((msg.payload[38] << 16) + msg.payload[39]); Phase_B_Reactive_Power   = Int2Float32(Phase_B_Reactive_Power);\nvar Phase_C_Reactive_Power\t= ((msg.payload[40] << 16) + msg.payload[41]); Phase_C_Reactive_Power   = Int2Float32(Phase_C_Reactive_Power);\nvar Total_Reactive_Power    = ((msg.payload[42] << 16) + msg.payload[43]); Total_Reactive_Power     = Int2Float32(Total_Reactive_Power);\n\nvar Phase_A_Apparent_Power\t= ((msg.payload[44] << 16) + msg.payload[45]); Phase_A_Apparent_Power   = Int2Float32(Phase_A_Apparent_Power);\nvar Phase_B_Apparent_Power\t= ((msg.payload[46] << 16) + msg.payload[47]); Phase_B_Apparent_Power   = Int2Float32(Phase_B_Apparent_Power);\nvar Phase_C_Apparent_Power\t= ((msg.payload[48] << 16) + msg.payload[49]); Phase_C_Apparent_Power   = Int2Float32(Phase_C_Apparent_Power);\nvar Total_Apparent_Power\t= ((msg.payload[50] << 16) + msg.payload[51]); Total_Apparent_Power     = Int2Float32(Total_Apparent_Power);\n\nvar Phase_A_Power_Factor\t= ((msg.payload[52] << 16) + msg.payload[53]); Phase_A_Power_Factor     = Int2Float32(Phase_A_Power_Factor);\nvar Phase_B_Power_Factor    = ((msg.payload[54] << 16) + msg.payload[55]); Phase_B_Power_Factor     = Int2Float32(Phase_B_Power_Factor);\nvar Phase_C_Power_Factor    = ((msg.payload[56] << 16) + msg.payload[57]); Phase_C_Power_Factor     = Int2Float32(Phase_C_Power_Factor);\nvar Total_Power_Factor\t    = ((msg.payload[58] << 16) + msg.payload[59]); Total_Power_Factor       = Int2Float32(Total_Power_Factor);\n\n// Output Message\nmsg.payload = {\n    \"Frequency\"                 : Frequency,\n    \"Phase_1_Voltage\"           : Phase_1_Voltage,\n    \"Phase_2_Voltage\"           : Phase_2_Voltage,\n    \"Phase_3_Voltage\"           : Phase_3_Voltage,\n    \"Average_Phase_Voltage\"     : Average_Phase_Voltage,\n    \"Line_Voltage_1_2\"          : Line_Voltage_1_2,\n    \"Line_Voltage_2_3\"          : Line_Voltage_2_3,\n    \"Line_Voltage_3_1\"          : Line_Voltage_3_1,\n    \"Average_Line_Voltage\"      : Average_Line_Voltage,\n    \"Total_Phase_A_Current\"     : RelCT * Total_Phase_A_Current,\n    \"Total_Phase_B_Current\"     : RelCT * Total_Phase_B_Current,\n    \"Total_Phase_C_Current\"     : RelCT * Total_Phase_C_Current,\n    \"Average_Phase_Current\"     : RelCT * Average_Phase_Current,\n    \"Neutral_Current\"           : Neutral_Current,\n    \"Phase_A_Power\"             : RelCT * Phase_A_Power/1000,\n    \"Phase_B_Power\"             : RelCT * Phase_B_Power/1000,\n    \"Phase_C_Power\"             : RelCT * Phase_C_Power/1000,\n    \"Total_System_Power\"        : RelCT * Total_System_Power/1000,\n    \"Phase_A_Reactive_Power\"    : RelCT * Phase_A_Reactive_Power/1000,\n    \"Phase_B_Reactive_Power\"    : RelCT * Phase_B_Reactive_Power/1000,\n    \"Phase_C_Reactive_Power\"    : RelCT * Phase_C_Reactive_Power/1000,\n    \"Total_Reactive_Power\"      : RelCT * Total_Reactive_Power/1000,\n    \"Phase_A_Apparent_Power\"    : RelCT * Phase_A_Apparent_Power/1000,\n    \"Phase_B_Apparent_Power\"    : RelCT * Phase_B_Apparent_Power/1000,\n    \"Phase_C_Apparent_Power\"    : RelCT * Phase_C_Apparent_Power/1000,\n    \"Total_Apparent_Power\"      : RelCT * Total_Apparent_Power/1000,\n    \"Phase_A_Power_Factor\"      : Phase_A_Power_Factor,\n    \"Phase_B_Power_Factor\"      : Phase_B_Power_Factor,\n    \"Phase_C_Power_Factor\"      : Phase_C_Power_Factor,\n    \"Total_Power_Factor\"        : Total_Power_Factor\n}\n\nreturn msg;\n\n\n\n\n// IEC 754 to Float Function\n\n/* Converts from an number, string, buffer or array representing an IEEE-754 value\n * to a javascript float.\n * The following may be given in msg.payload:\n *      A string representing a number, which may be hex or binary\n *        examples, \"1735\"  \"0x02045789\"  0b01000000010010010000111111011011\n *      An integer value\n *      A four element array or buffer of 8 bit values, most significant byte first.\n*/ \n// first make a number from the given payload if necessary\n\nfunction Int2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128) \n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand === 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}\n\n// Créditos: https://flows.nodered.org/flow/359ead34237b7ab6ec0465ee85a34b62RelCT",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 920,
        "y": 90,
        "wires": [
            [
                "329a20ae.addd08"
            ]
        ]
    },
    {
        "id": "a65e22e6.71c65",
        "type": "switch",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Real Time Parameters",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Energy Parameters",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Power Quality",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Phase Angles",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_V1(V12)",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_V2(V31)",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_V3(V23)",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_I1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_I2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_I3",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 10,
        "x": 620,
        "y": 270,
        "wires": [
            [
                "1f4cd023.43eb4"
            ],
            [
                "d1a9dbc4.33f7e"
            ],
            [
                "993f38ab.482e9"
            ],
            [
                "3f9fcc24.6fac3c"
            ],
            [
                "8d348d63.134818"
            ],
            [
                "339b7b9a.f4bb14"
            ],
            [
                "9d6fe8b8.eb7cf8"
            ],
            [
                "72ceef76.7f8f1"
            ],
            [
                "139d011a.841abf"
            ],
            [
                "ddee4aa9.906988"
            ]
        ]
    },
    {
        "id": "993f38ab.482e9",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics - Power Quality",
        "func": "msg.payload = {\n    \"THD_V1(V12)\"   : msg.payload[0]/100,\n    \"THD_V2(V31)\"   : msg.payload[1]/100,\n    \"THD_V3(V23)\"   : msg.payload[2]/100,\n    \"THD_avg\"       : msg.payload[3]/100,\n    \"THD_I1\"        : msg.payload[4]/100,\n    \"THD_I2\"        : msg.payload[5]/100,\n    \"THD_I3\"        : msg.payload[6]/100,\n    \"THD_Iavg\"      : msg.payload[7]/100\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 170,
        "wires": [
            [
                "7bbced0c.e692d4"
            ]
        ]
    },
    {
        "id": "3f9fcc24.6fac3c",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Phase Angles",
        "func": "msg.payload = {\n    \"Phase_Angle_of_V2_to_V1\"   : msg.payload[0]/10,\n    \"Phase_Angle_of_V3_to_V1\"   : msg.payload[1]/10,\n    \"Phase_Angle_of_I1_to_V1\"   : msg.payload[2]/10,\n    \"Phase_Angle_of_I2_to_V1\"   : msg.payload[3]/10,\n    \"Phase_Angle_of_I3_to_V1\"   : msg.payload[4]/10\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 210,
        "wires": [
            [
                "8f2ea546.30e13"
            ]
        ]
    },
    {
        "id": "d1a9dbc4.33f7e",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Energy Parameters IEC754 to Float ",
        "func": "/* Converts from an number, string, buffer or array representing an IEEE-754 value\n * to a javascript float.\n * The following may be given in msg.payload:\n *      A string representing a number, which may be hex or binary\n *        examples, \"1735\"  \"0x02045789\"  0b01000000010010010000111111011011\n *      An integer value\n *      A four element array or buffer of 8 bit values, most significant byte first.\n*/ \n// first make a number from the given payload if necessary\n\n\n// Convert 2 registers of 16 bits in one of 32 bits\nvar Consumed_Energy\t            = ((msg.payload[0] << 16) + msg.payload[1]); Consumed_Energy            = Int2Float32(Consumed_Energy);\nvar Generated_Energy\t\t    = ((msg.payload[2] << 16) + msg.payload[3]); Generated_Energy           = Int2Float32(Generated_Energy);\nvar Consumed_Reactive_Energy    = ((msg.payload[4] << 16) + msg.payload[5]); Consumed_Reactive_Energy   = Int2Float32(Consumed_Reactive_Energy);\nvar Generated_Reactive_Energy   = ((msg.payload[6] << 16) + msg.payload[7]); Generated_Reactive_Energy  = Int2Float32(Generated_Reactive_Energy);\nvar Total_Energy\t\t        = ((msg.payload[8] << 16) + msg.payload[9]); Total_Energy               = Int2Float32(Total_Energy);\n\n// Output Message\nmsg.payload = {\n    \"Consumed_Energy\"           : Consumed_Energy,\n    \"Generated_Energy\"          : Generated_Energy,\n    \"Consumed_Reactive_Energy\"  : Consumed_Reactive_Energy,\n    \"Generated_Reactive_Energy\" : Generated_Energy,\n    \"Total_Energy\"              : Total_Energy\n}\n\nreturn msg;\n\n// IEC 754 to Float Function\nfunction Int2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128) \n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand === 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}\n\n// Créditos: https://flows.nodered.org/flow/359ead34237b7ab6ec0465ee85a34b62",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 130,
        "wires": [
            [
                "f69145ec.595428"
            ]
        ]
    },
    {
        "id": "329a20ae.addd08",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Real_Time_Parameters",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 90,
        "wires": [
            []
        ]
    },
    {
        "id": "f69145ec.595428",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Energy_Parameters",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 130,
        "wires": [
            []
        ]
    },
    {
        "id": "7bbced0c.e692d4",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.Power_Quality",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 170,
        "wires": [
            []
        ]
    },
    {
        "id": "8f2ea546.30e13",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Phase_Angles",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 210,
        "wires": [
            []
        ]
    },
    {
        "id": "8d348d63.134818",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics - V1(V12)",
        "func": "msg.payload = {\n    \"THD_V1(V12)_3o\"    : msg.payload[1]/100,\n    \"THD_V1(V12)_5o\"    : msg.payload[3]/100,\n    \"THD_V1(V12)_7o\"    : msg.payload[5]/100,\n    \"THD_V1(V12)_9o\"    : msg.payload[7]/100,\n    \"THD_V1(V12)_11o\"   : msg.payload[9]/100,\n    \"THD_V1(V12)_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 250,
        "wires": [
            [
                "5ff5e28d.2c7d74"
            ]
        ]
    },
    {
        "id": "5ff5e28d.2c7d74",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.V1_V12",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 250,
        "wires": [
            []
        ]
    },
    {
        "id": "9d6fe8b8.eb7cf8",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_V3(V23)",
        "func": "msg.payload = {\n    \"THD_V3(V23)_3o\"    : msg.payload[1]/100,\n    \"THD_V3(V23)_5o\"    : msg.payload[3]/100,\n    \"THD_V3(V23)_7o\"    : msg.payload[5]/100,\n    \"THD_V3(V23)_9o\"    : msg.payload[7]/100,\n    \"THD_V3(V23)_11o\"   : msg.payload[9]/100,\n    \"THD_V3(V23)_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 330,
        "wires": [
            [
                "f8287ebe.9bb3c8"
            ]
        ]
    },
    {
        "id": "f8287ebe.9bb3c8",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.V3_V23",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 330,
        "wires": [
            []
        ]
    },
    {
        "id": "eaf2e52.a8fae18",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.V2_V31",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 290,
        "wires": [
            []
        ]
    },
    {
        "id": "72ceef76.7f8f1",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_I1",
        "func": "msg.payload = {\n    \"THD_I1_3o\"    : msg.payload[1]/100,\n    \"THD_I1_5o\"    : msg.payload[3]/100,\n    \"THD_I1_7o\"    : msg.payload[5]/100,\n    \"THD_I1_9o\"    : msg.payload[7]/100,\n    \"THD_I1_11o\"   : msg.payload[9]/100,\n    \"THD_I1_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 370,
        "wires": [
            [
                "43ffc14d.a3cac8"
            ]
        ]
    },
    {
        "id": "139d011a.841abf",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_I2",
        "func": "msg.payload = {\n    \"THD_I2_3o\"    : msg.payload[1]/100,\n    \"THD_I2_5o\"    : msg.payload[3]/100,\n    \"THD_I2_7o\"    : msg.payload[5]/100,\n    \"THD_I2_9o\"    : msg.payload[7]/100,\n    \"THD_I2_11o\"   : msg.payload[9]/100,\n    \"THD_I2_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 410,
        "wires": [
            [
                "23986012.d8fc9"
            ]
        ]
    },
    {
        "id": "ddee4aa9.906988",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_I3",
        "func": "msg.payload = {\n    \"THD_I3_3o\"    : msg.payload[1]/100,\n    \"THD_I3_5o\"    : msg.payload[3]/100,\n    \"THD_I3_7o\"    : msg.payload[5]/100,\n    \"THD_I3_9o\"    : msg.payload[7]/100,\n    \"THD_I3_11o\"   : msg.payload[9]/100,\n    \"THD_I3_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 450,
        "wires": [
            [
                "894eb396.e8f0c"
            ]
        ]
    },
    {
        "id": "339b7b9a.f4bb14",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_V2(V31)",
        "func": "msg.payload = {\n    \"THD_V2(V31)_3o\"    : msg.payload[1]/100,\n    \"THD_V2(V31)_5o\"    : msg.payload[3]/100,\n    \"THD_V2(V31)_7o\"    : msg.payload[5]/100,\n    \"THD_V2(V31)_9o\"    : msg.payload[7]/100,\n    \"THD_V2(V31)_11o\"   : msg.payload[9]/100,\n    \"THD_V2(V31)_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 290,
        "wires": [
            [
                "eaf2e52.a8fae18"
            ]
        ]
    },
    {
        "id": "894eb396.e8f0c",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.I3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 450,
        "wires": [
            []
        ]
    },
    {
        "id": "23986012.d8fc9",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.I2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 410,
        "wires": [
            []
        ]
    },
    {
        "id": "43ffc14d.a3cac8",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.I1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 370,
        "wires": [
            []
        ]
    },
    {
        "id": "83dce8ae2adb063d",
        "type": "inject",
        "z": "2858ae04397c7488",
        "g": "70a63b74.44894c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "500",
        "payloadType": "num",
        "x": 140,
        "y": 990,
        "wires": [
            [
                "5c5b638c.a8f91c"
            ]
        ]
    },
    {
        "id": "d22f737e1faaee45",
        "type": "inject",
        "z": "2858ae04397c7488",
        "g": "70a63b74.44894c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 140,
        "y": 1030,
        "wires": [
            [
                "cf0d5223.b4dab"
            ]
        ]
    },
    {
        "id": "ead83bdf05616014",
        "type": "inject",
        "z": "2858ae04397c7488",
        "g": "38940f8.c9c27f",
        "name": "IP pqa",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "192.168.2.13",
        "payloadType": "str",
        "x": 540,
        "y": 1010,
        "wires": [
            [
                "acb738077324d4f5"
            ]
        ]
    },
    {
        "id": "acb738077324d4f5",
        "type": "link out",
        "z": "2858ae04397c7488",
        "g": "38940f8.c9c27f",
        "name": "",
        "links": [
            "756bcd33a6cec802"
        ],
        "x": 635,
        "y": 1010,
        "wires": []
    },
    {
        "id": "dc201b4c96bf9cb8",
        "type": "comment",
        "z": "2858ae04397c7488",
        "g": "38940f8.c9c27f",
        "name": "Si Cambia dirección IP PQA escribirla aquí",
        "info": "",
        "x": 630,
        "y": 970,
        "wires": []
    },
    {
        "id": "3bd8b039f4c56513",
        "type": "trigger",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "op1": "0",
        "op2": "lostconnection",
        "op1type": "num",
        "op2type": "str",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "30c7e65d47bd2971"
            ]
        ]
    },
    {
        "id": "d3d2bf92f1387fd6",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 180,
        "wires": [
            [
                "3bd8b039f4c56513"
            ]
        ]
    },
    {
        "id": "30c7e65d47bd2971",
        "type": "switch",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 180,
        "wires": [
            [
                "1bd0aa4e49b351af"
            ]
        ]
    },
    {
        "id": "2003f49f54e21777",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Real Time Parameters IEC754 to Float ",
        "func": "// Output Message\nmsg.payload = {\n    \"Frequency\"                 : 0,\n    \"Phase_1_Voltage\"           : 0,\n    \"Phase_2_Voltage\"           : 0,\n    \"Phase_3_Voltage\"           : 0,\n    \"Average_Phase_Voltage\"     : 0,\n    \"Line_Voltage_1_2\"          : 0,\n    \"Line_Voltage_2_3\"          : 0,\n    \"Line_Voltage_3_1\"          : 0,\n    \"Average_Line_Voltage\"      : 0,\n    \"Total_Phase_A_Current\"     : 0,\n    \"Total_Phase_B_Current\"     : 0,\n    \"Total_Phase_C_Current\"     : 0,\n    \"Average_Phase_Current\"     : 0,\n    \"Neutral_Current\"           : 0,\n    \"Phase_A_Power\"             : 0,\n    \"Phase_B_Power\"             : 0,\n    \"Phase_C_Power\"             : 0,\n    \"Total_System_Power\"        : 0,\n    \"Phase_A_Reactive_Power\"    : 0,\n    \"Phase_B_Reactive_Power\"    : 0,\n    \"Phase_C_Reactive_Power\"    : 0,\n    \"Total_Reactive_Power\"      : 0,\n    \"Phase_A_Apparent_Power\"    : 0,\n    \"Phase_C_Apparent_Power\"    : 0,\n    \"Phase_B_Apparent_Power\"    : 0,\n    \"Total_Apparent_Power\"      : 0,\n    \"Phase_A_Power_Factor\"      : 0,\n    \"Phase_B_Power_Factor\"      : 0,\n    \"Phase_C_Power_Factor\"      : 0,\n    \"Total_Power_Factor\"        : 0\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 530,
        "wires": [
            [
                "329a20ae.addd08"
            ]
        ]
    },
    {
        "id": "d51a596fcfbf93f0",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Energy Parameters IEC754 to Float ",
        "func": "\n// Output Message\nmsg.payload = {\n    \"Consumed_Energy\"           : 0,\n    \"Generated_Energy\"          : 0,\n    \"Consumed_Reactive_Energy\"  : 0,\n    \"Generated_Reactive_Energy\" : 0,\n    \"Total_Energy\"              : 0\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 570,
        "wires": [
            [
                "f69145ec.595428"
            ]
        ]
    },
    {
        "id": "d7c4d57611493bd3",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics - Power Quality",
        "func": "msg.payload = {\n    \"THD_V1(V12)\"   : 0,\n    \"THD_V2(V31)\"   : 0,\n    \"THD_V3(V23)\"   : 0,\n    \"THD_avg\"       : 0,\n    \"THD_I1\"        : 0,\n    \"THD_I2\"        : 0,\n    \"THD_I3\"        : 0,\n    \"THD_Iavg\"      : 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 610,
        "wires": [
            [
                "7bbced0c.e692d4"
            ]
        ]
    },
    {
        "id": "2ceb25cffb9d80e4",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Phase Angles",
        "func": "msg.payload = {\n    \"Phase_Angle_of_V2_to_V1\"   : 0,\n    \"Phase_Angle_of_V3_to_V1\"   : 0,\n    \"Phase_Angle_of_I1_to_V1\"   : 0,\n    \"Phase_Angle_of_I2_to_V1\"   : 0,\n    \"Phase_Angle_of_I3_to_V1\"   : 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 650,
        "wires": [
            [
                "8f2ea546.30e13"
            ]
        ]
    },
    {
        "id": "5e2a332d18ad3650",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics - V1(V12)",
        "func": "msg.payload = {\n    \"THD_V1(V12)_3o\"    : 0,\n    \"THD_V1(V12)_5o\"    : 0,\n    \"THD_V1(V12)_7o\"    : 0,\n    \"THD_V1(V12)_9o\"    : 0,\n    \"THD_V1(V12)_11o\"   : 0,\n    \"THD_V1(V12)_13o\"   : 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 690,
        "wires": [
            [
                "5ff5e28d.2c7d74"
            ]
        ]
    },
    {
        "id": "1a122bae4ed0bf36",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_V2(V31)",
        "func": "msg.payload = {\n    \"THD_V2(V31)_3o\"    : 0,\n    \"THD_V2(V31)_5o\"    : 0,\n    \"THD_V2(V31)_7o\"    : 0,\n    \"THD_V2(V31)_9o\"    : 0,\n    \"THD_V2(V31)_11o\"   : 0,\n    \"THD_V2(V31)_13o\"   : 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 730,
        "wires": [
            [
                "eaf2e52.a8fae18"
            ]
        ]
    },
    {
        "id": "da4c68da2f239de1",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_V3(V23)",
        "func": "msg.payload = {\n    \"THD_V3(V23)_3o\"    : 0,\n    \"THD_V3(V23)_5o\"    : 0,\n    \"THD_V3(V23)_7o\"    : 0,\n    \"THD_V3(V23)_9o\"    : 0,\n    \"THD_V3(V23)_11o\"   : 0,\n    \"THD_V3(V23)_13o\"   : 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 770,
        "wires": [
            [
                "f8287ebe.9bb3c8"
            ]
        ]
    },
    {
        "id": "c362c1dcf4cc0796",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_I1",
        "func": "msg.payload = {\n    \"THD_I1_3o\"    : 0,\n    \"THD_I1_5o\"    : 0,\n    \"THD_I1_7o\"    : 0,\n    \"THD_I1_9o\"    : 0,\n    \"THD_I1_11o\"   : 0,\n    \"THD_I1_13o\"   : 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 810,
        "wires": [
            [
                "43ffc14d.a3cac8"
            ]
        ]
    },
    {
        "id": "3878a4d12166cb8d",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_I2",
        "func": "msg.payload = {\n    \"THD_I2_3o\"    : 0,\n    \"THD_I2_5o\"    : 0,\n    \"THD_I2_7o\"    : 0,\n    \"THD_I2_9o\"    : 0,\n    \"THD_I2_11o\"   : 0,\n    \"THD_I2_13o\"   : 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 850,
        "wires": [
            [
                "23986012.d8fc9"
            ]
        ]
    },
    {
        "id": "c11fe0bdbc916732",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_I3",
        "func": "msg.payload = {\n    \"THD_I3_3o\"    : 0,\n    \"THD_I3_5o\"    : 0,\n    \"THD_I3_7o\"    : 0,\n    \"THD_I3_9o\"    : 0,\n    \"THD_I3_11o\"   : 0,\n    \"THD_I3_13o\"   : 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 890,
        "wires": [
            [
                "894eb396.e8f0c"
            ]
        ]
    },
    {
        "id": "1bd0aa4e49b351af",
        "type": "link out",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "links": [
            "1c1081933f39a28b",
            "cd759f2045b5bef1",
            "815a917abb15058c"
        ],
        "x": 605,
        "y": 170,
        "wires": []
    },
    {
        "id": "cd759f2045b5bef1",
        "type": "link in",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "links": [
            "1bd0aa4e49b351af"
        ],
        "x": 685,
        "y": 680,
        "wires": [
            [
                "2003f49f54e21777",
                "d51a596fcfbf93f0",
                "d7c4d57611493bd3",
                "2ceb25cffb9d80e4",
                "5e2a332d18ad3650",
                "1a122bae4ed0bf36",
                "da4c68da2f239de1",
                "c362c1dcf4cc0796",
                "3878a4d12166cb8d",
                "c11fe0bdbc916732"
            ]
        ]
    },
    {
        "id": "56708d2b8fa5451d",
        "type": "rbe",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 310,
        "y": 400,
        "wires": [
            [
                "7ef87d44828138c4",
                "bb92b76588cce739"
            ]
        ]
    },
    {
        "id": "815a917abb15058c",
        "type": "link in",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "links": [
            "1bd0aa4e49b351af"
        ],
        "x": 105,
        "y": 400,
        "wires": [
            [
                "56708d2b8fa5451d"
            ]
        ]
    },
    {
        "id": "f54284edcaf056e4",
        "type": "change",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "data",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "56708d2b8fa5451d"
            ]
        ]
    },
    {
        "id": "7ef87d44828138c4",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "evento",
        "func": "if (msg.payload ==\"lostconnection\"){\n    msg.payload = \"Pérdida de comunicación con PQA\";\n    msg.topic = \"PQA\";\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 400,
        "wires": [
            [
                "79ed59278564eccd"
            ]
        ]
    },
    {
        "id": "79ed59278564eccd",
        "type": "link out",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e"
        ],
        "x": 555,
        "y": 400,
        "wires": []
    },
    {
        "id": "bb92b76588cce739",
        "type": "function",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "evento",
        "func": "var count = context.get(\"count\",\"memoryOnly\")||0;\nif (count == 0) context.set(\"count\", 1,\"memoryOnly\");\nif ((msg.payload ==\"data\")&&(count>0)){\n    msg.payload = \"Comunicación PQA establecida\";\n    msg.topic = \"PQA\";\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 450,
        "wires": [
            [
                "20a33011be6557f7"
            ]
        ]
    },
    {
        "id": "20a33011be6557f7",
        "type": "link out",
        "z": "2858ae04397c7488",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "links": [
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 555,
        "y": 450,
        "wires": []
    },
    {
        "id": "ab9b5405ffa4ec4c",
        "type": "inject",
        "z": "dd18d94e.4b1408",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "#:(memoryOnly)::C2S.Comunicacion_Drive",
        "payloadType": "global",
        "x": 190,
        "y": 460,
        "wires": [
            [
                "feef3366fb383129"
            ]
        ]
    },
    {
        "id": "d4ba4dd25d619404",
        "type": "function",
        "z": "dd18d94e.4b1408",
        "name": "",
        "func": "if(msg.payload==false){\n    msg.payload = \"Falla de comunicación drive\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 460,
        "wires": [
            [
                "b41db225cceb93c5"
            ]
        ]
    },
    {
        "id": "b41db225cceb93c5",
        "type": "link out",
        "z": "dd18d94e.4b1408",
        "name": "",
        "links": [
            "ea32976ff44ab826"
        ],
        "x": 665,
        "y": 460,
        "wires": []
    },
    {
        "id": "feef3366fb383129",
        "type": "rbe",
        "z": "dd18d94e.4b1408",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "d4ba4dd25d619404"
            ]
        ]
    },
    {
        "id": "36360dbdb98b1543",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "name": "User?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1910,
        "y": 740,
        "wires": [
            [
                "6f70ed027077dcb6",
                "b63822f42aec0cf5"
            ],
            [
                "4e7a14d63d254323",
                "b63822f42aec0cf5"
            ],
            [
                "4b0350de0c7aa3a9",
                "b63822f42aec0cf5"
            ],
            [
                "c958ccf4c750021b",
                "1d0f1ca6b735a04a",
                "20fa6985602b85a3"
            ]
        ]
    },
    {
        "id": "4b0350de0c7aa3a9",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "root",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":\t    {\"hide\":\t        [],\t    \"show\":\t        [\"Principal\",\t        \"Eventos_y_Datalog\",\t        \"Tendencias\",\t        \"Protecciones\",\t        \"Entradas_y_Salidas\",\t        \"Configuración_VSD\",\t        \"Usuario\",\t        \"Sensor_de_Fondo\",\t        \"SWC\",\t        \"AVAS®\",\t        \"Otras_Funciones_de_Control\"]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 680,
        "wires": [
            [
                "b9e2d52df918f5f6"
            ]
        ]
    },
    {
        "id": "4e7a14d63d254323",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "admin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":\t    {\"hide\":\t        [\"SWC\"],\t    \"show\":\t        [\"Principal\",\t        \"Eventos_y_Datalog\",\t        \"Tendencias\",\t        \"Protecciones\",\t        \"Entradas_y_Salidas\",\t        \"Configuración_VSD\",\t        \"Usuario\",\t        \"Sensor_de_Fondo\",\t        \"AVAS®\",\t         \"Otras_Funciones_de_Control\"]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 720,
        "wires": [
            [
                "b9e2d52df918f5f6"
            ]
        ]
    },
    {
        "id": "6f70ed027077dcb6",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "oper",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":\t    {\"hide\":\t        [\"Protecciones\",\t        \"Entradas_y_Salidas\",\t        \"Configuración_VSD\",\t        \"Sensor_de_Fondo\",\t        \"SWC\"],\t    \"show\":\t        [\"Principal\",\t        \"Eventos_y_Datalog\",\t        \"Tendencias\",\t         \"Otras_Funciones_de_Control\",\t         \"AVAS®\",\t        \"Usuario\"]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 760,
        "wires": [
            [
                "b9e2d52df918f5f6"
            ]
        ]
    },
    {
        "id": "c958ccf4c750021b",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "nouser",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":\t    {\"hide\":\t        [\"Protecciones\",\t        \"Entradas_y_Salidas\",\t        \"Configuración_VSD\",\t        \"Sensor_de_Fondo\",\t        \"SWC\",\t        \"Otras_Funciones_de_Control\"],\t    \"show\":\t        [\"Principal\",\t        \"Eventos_y_Datalog\",\t        \"Tendencias\",\t        \"AVAS®\",\t        \"Usuario\"]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 800,
        "wires": [
            [
                "b9e2d52df918f5f6"
            ]
        ]
    },
    {
        "id": "b9e2d52df918f5f6",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "name": "",
        "links": [
            "8a17d991.081178"
        ],
        "x": 2245,
        "y": 720,
        "wires": []
    },
    {
        "id": "2a4eeca76cd52022",
        "type": "inject",
        "z": "2e27dea6.c4c362",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payload": "#:(memoryOnly)::UserStatus",
        "payloadType": "global",
        "x": 1430,
        "y": 740,
        "wires": [
            [
                "fb5398d01aa00bfb"
            ]
        ]
    },
    {
        "id": "fb5398d01aa00bfb",
        "type": "rbe",
        "z": "2e27dea6.c4c362",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1600,
        "y": 740,
        "wires": [
            [
                "e5dfc59c6c25db4e",
                "54fca041998ebf96"
            ]
        ]
    },
    {
        "id": "cd6b869657ebbb68",
        "type": "inject",
        "z": "2e27dea6.c4c362",
        "name": "restart Kiosk",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "30 15 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sudo systemctl restart kiosk",
        "payloadType": "str",
        "x": 1420,
        "y": 500,
        "wires": [
            [
                "1454ec1ef69ea77c",
                "d4b4b6e19911ee5c"
            ]
        ]
    },
    {
        "id": "1454ec1ef69ea77c",
        "type": "exec",
        "z": "2e27dea6.c4c362",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "0.5",
        "oldrc": false,
        "name": "",
        "x": 1690,
        "y": 500,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "fa8ed427a4d7aea2",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "name": "restart dasboard",
        "links": [
            "ad87cee4.7dbb5",
            "1a9a6f18a5684170"
        ],
        "x": 1395,
        "y": 620,
        "wires": [
            [
                "d4b4b6e19911ee5c"
            ]
        ]
    },
    {
        "id": "d4b4b6e19911ee5c",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "name": "",
        "pauseType": "delay",
        "timeout": "5.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1530,
        "y": 620,
        "wires": [
            [
                "c4e5b48a61ef3ffd"
            ]
        ]
    },
    {
        "id": "c4e5b48a61ef3ffd",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "name": "iniciar graf",
        "links": [
            "8eb0770368c697e5",
            "320aa1af1a983da1",
            "f765b5464b9d3c6b",
            "09fa25235c1ac304",
            "34c5a0aa2b3d052d",
            "dc03e803896e0929",
            "80d606957859a016",
            "dc1f3421fd7b7c84",
            "cc30133c95962075",
            "45338256d4ef11b7",
            "72b3150f9f310688",
            "228eb994177c4301",
            "34d0978b94237bdb",
            "9429fcb37217992b",
            "5abefcf097f90f7b",
            "2069ef42c04cbfaf",
            "8080cedd65508fc1",
            "d5ba2ecbce42ca80",
            "55b01149d3480808",
            "3210e2130b238f3d",
            "44ea48cb2ca745c9",
            "dbce895a0f6ce0d4",
            "a35fe3447df55cee",
            "6092027b3ec84b2c",
            "485f8467108ee0df",
            "5d1f6d0f9daa5340",
            "e98dd739696465de",
            "66b7954d9cda34af"
        ],
        "x": 1635,
        "y": 620,
        "wires": []
    },
    {
        "id": "b63822f42aec0cf5",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "to home",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 640,
        "wires": [
            [
                "b9e2d52df918f5f6"
            ]
        ]
    },
    {
        "id": "e067a1921f82df48",
        "type": "link out",
        "z": "3af652c9.6f9bee",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "fa970f25a0c7f493",
            "29cdb7608212b8af"
        ],
        "x": 1315,
        "y": 120,
        "wires": []
    },
    {
        "id": "29cdb7608212b8af",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "name": "",
        "links": [
            "e067a1921f82df48"
        ],
        "x": 1655,
        "y": 860,
        "wires": [
            [
                "e8cd81b406c9dec3"
            ]
        ]
    },
    {
        "id": "e5dfc59c6c25db4e",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1740,
        "y": 740,
        "wires": [
            [
                "36360dbdb98b1543"
            ]
        ]
    },
    {
        "id": "e8cd81b406c9dec3",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::tohomeflag",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "1d0f1ca6b735a04a",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "name": "",
        "property": "#:(memoryOnly)::tohomeflag",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2010,
        "y": 860,
        "wires": [
            [
                "c47a0e27bafba4cf"
            ],
            [
                "3b87f91444345cbe"
            ]
        ]
    },
    {
        "id": "3b87f91444345cbe",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "home",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 880,
        "wires": [
            [
                "b9e2d52df918f5f6"
            ]
        ]
    },
    {
        "id": "c47a0e27bafba4cf",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::tohomeflag",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "20fa6985602b85a3",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "name": "",
        "links": [
            "2b8d74d9fbdf0c29",
            "a7b76a6f68de8ef5"
        ],
        "x": 1995,
        "y": 920,
        "wires": []
    },
    {
        "id": "a7b76a6f68de8ef5",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "links": [
            "20fa6985602b85a3"
        ],
        "x": 255,
        "y": 1120,
        "wires": [
            [
                "35a52a0820bebc23",
                "c2e14be8.387158"
            ]
        ]
    },
    {
        "id": "c6df69643b03cfe5",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-SintonizacionLimitesOper-tab\" data-toggle=\"tab\"\n                href=\"#nav-SintonizacionLimitesOper\" role=\"tab\" aria-controls=\"nav-SintonizacionLimitesOper\"\n                aria-selected=\"true\" ng-click=\"send({payload:SintonizacionLimitesOper()})\">Sintonización y límites</a>\n            <a class=\"nav-item nav-link\" id=\"nav-ReglasActivacion-tab\" data-toggle=\"tab\" href=\"#nav-ReglasActivacion\"\n                role=\"tab\" aria-controls=\"nav-ReglasActivacion\" aria-selected=\"false\"\n                ng-click=\"send({payload:ReglasActivacion()})\">Reglas de activación</a>\n            <a class=\"nav-item nav-link\" id=\"nav-Tendencia-tab\" data-toggle=\"tab\" href=\"#nav-Tendencia\" role=\"tab\"\n                aria-controls=\"nav-Tendencia\" aria-selected=\"false\" ng-click=\"send({payload:Tendencia()})\">Tendencia</a>\n\n        </div>\n    </nav>\n\n    <script>\n        this.scope.SintonizacionLimitesOper = function() { return \"SintonizacionLimitesOper\"; };\n        this.scope.ReglasActivacion = function() { return \"ReglasActivacion\"; };\n        this.scope.Tendencia = function() { return \"Tendencia\"; };\n        \n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n    <script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n    <script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n    <script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n</body>\n\n</html>",
        "output": "str",
        "x": 860,
        "y": 1680,
        "wires": [
            [
                "606a3e77.9d00f"
            ]
        ]
    },
    {
        "id": "d5ba2ecbce42ca80",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 735,
        "y": 1640,
        "wires": [
            [
                "c6df69643b03cfe5"
            ]
        ]
    },
    {
        "id": "3108fe8ac8386097",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-SintonizacionLimitesOper-tab\" data-toggle=\"tab\"\n                href=\"#nav-SintonizacionLimitesOper\" role=\"tab\" aria-controls=\"nav-SintonizacionLimitesOper\"\n                aria-selected=\"true\" ng-click=\"send({payload:SintonizacionLimitesOper()})\">Sintonización y límites</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-ReglasActivacion-tab\" data-toggle=\"tab\" href=\"#nav-ReglasActivacion\"\n                role=\"tab\" aria-controls=\"nav-ReglasActivacion\" aria-selected=\"false\"\n                ng-click=\"send({payload:ReglasActivacion()})\">Reglas de activación</a>\n            <a class=\"nav-item nav-link\" id=\"nav-Tendencia-tab\" data-toggle=\"tab\" href=\"#nav-Tendencia\" role=\"tab\"\n                aria-controls=\"nav-Tendencia\" aria-selected=\"false\" ng-click=\"send({payload:Tendencia()})\">Tendencia</a>\n\n        </div>\n    </nav>\n\n    <script>\n        this.scope.SintonizacionLimitesOper = function() { return \"SintonizacionLimitesOper\"; };\n        this.scope.ReglasActivacion = function() { return \"ReglasActivacion\"; };\n        this.scope.Tendencia = function() { return \"Tendencia\"; };\n        \n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n    <script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n    <script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n    <script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n</body>\n\n</html>",
        "output": "str",
        "x": 860,
        "y": 1720,
        "wires": [
            [
                "606a3e77.9d00f"
            ]
        ]
    },
    {
        "id": "bc6a76eddcdfd1e1",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-SintonizacionLimitesOper-tab\" data-toggle=\"tab\"\n                href=\"#nav-SintonizacionLimitesOper\" role=\"tab\" aria-controls=\"nav-SintonizacionLimitesOper\"\n                aria-selected=\"true\" ng-click=\"send({payload:SintonizacionLimitesOper()})\">Sintonización y límites</a>\n            <a class=\"nav-item nav-link\" id=\"nav-ReglasActivacion-tab\" data-toggle=\"tab\" href=\"#nav-ReglasActivacion\"\n                role=\"tab\" aria-controls=\"nav-ReglasActivacion\" aria-selected=\"false\"\n                ng-click=\"send({payload:ReglasActivacion()})\">Reglas de activación</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-Tendencia-tab\" data-toggle=\"tab\" href=\"#nav-Tendencia\" role=\"tab\"\n                aria-controls=\"nav-Tendencia\" aria-selected=\"false\" ng-click=\"send({payload:Tendencia()})\">Tendencia</a>\n\n        </div>\n    </nav>\n\n    <script>\n        this.scope.SintonizacionLimitesOper = function() { return \"SintonizacionLimitesOper\"; };\n        this.scope.ReglasActivacion = function() { return \"ReglasActivacion\"; };\n        this.scope.Tendencia = function() { return \"Tendencia\"; };\n        \n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n    <script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n    <script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n    <script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n</body>\n\n</html>",
        "output": "str",
        "x": 860,
        "y": 1760,
        "wires": [
            [
                "606a3e77.9d00f"
            ]
        ]
    },
    {
        "id": "da31c60bdaccad48",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 630,
        "y": 1680,
        "wires": [
            [
                "f97ac2ea32babdcc"
            ]
        ]
    },
    {
        "id": "f97ac2ea32babdcc",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SintonizacionLimitesOper",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ReglasActivacion",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Tendencia",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 1740,
        "wires": [
            [
                "c6df69643b03cfe5"
            ],
            [
                "3108fe8ac8386097"
            ],
            [
                "bc6a76eddcdfd1e1"
            ]
        ]
    },
    {
        "id": "2c3d112e1697d71d",
        "type": "ui_dropdown",
        "z": "2026898575f7aa56",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar una o mas variables",
        "group": "e3ea45406021c442",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Frecuencia de salida",
                "value": "Output_Frequency",
                "type": "str"
            },
            {
                "label": "Corriente salida drive",
                "value": "Output_Current",
                "type": "str"
            },
            {
                "label": "Corriente de motor",
                "value": "Motor_Current",
                "type": "str"
            },
            {
                "label": "Tensión de fase promedio",
                "value": "LNVoltage",
                "type": "str"
            },
            {
                "label": "Tensión línea a línea promedio",
                "value": "LLVoltage",
                "type": "str"
            },
            {
                "label": "Potencia de salida",
                "value": "Output_Power",
                "type": "str"
            },
            {
                "label": "Presión de entrada",
                "value": "PIP",
                "type": "str"
            },
            {
                "label": "Presión de descarga",
                "value": "PDP",
                "type": "str"
            },
            {
                "label": "Temperatura de entrada",
                "value": "Input_Temp",
                "type": "str"
            },
            {
                "label": "Temperatura de motor",
                "value": "Motor_Temp",
                "type": "str"
            },
            {
                "label": "Sumergencia (Sensorless®)",
                "value": "Submergence",
                "type": "str"
            },
            {
                "label": "Nivel de fluido dinámico (Sensorless®)",
                "value": "DynamicFluidLevel",
                "type": "str"
            },
            {
                "label": "Caudal  (Sensorless®)",
                "value": "Flow",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "1c4e319074fb108b"
            ]
        ]
    },
    {
        "id": "a48d5b8e2525907d",
        "type": "ui_dropdown",
        "z": "2026898575f7aa56",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar tiempo",
        "group": "514fcb790b3b8279",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Tiempo real",
                "value": "realtime",
                "type": "str"
            },
            {
                "label": "Última hora",
                "value": "lasthour",
                "type": "str"
            },
            {
                "label": "24 horas anteriores",
                "value": "lastday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 900,
        "y": 40,
        "wires": [
            [
                "28ccd0a0989b24aa"
            ]
        ]
    },
    {
        "id": "28ccd0a0989b24aa",
        "type": "change",
        "z": "2026898575f7aa56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::trends.selec_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "3edd4a184747ecab",
        "type": "ui_chart",
        "z": "2026898575f7aa56",
        "name": "",
        "group": "73e7292f7ff015d8",
        "order": 0,
        "width": "16",
        "height": "11",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#073a5f",
            "#791b93",
            "#ff7f0e",
            "#2ca02c",
            "#453d4d",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#e1c823"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 930,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "da3092c416342d37",
        "type": "function",
        "z": "2026898575f7aa56",
        "name": "Preparing to chart",
        "func": "var select_Trend = flow.get(\"trends.request\",\"memoryOnly\")||{};\nvar select_Time = flow.get(\"trends.selec_time\", \"memoryOnly\") || \"realtime\";\n\n\nvar data = [];\n\nif (select_Trend.Output_Frequency == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Output_Frequency\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Output_Frequency\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Output_Frequency\") || []);\n}\nif (select_Trend.Output_Current == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Output_Current\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Output_Current\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Output_Current\") || []);\n}\nif (select_Trend.Motor_Current == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Motor_Current\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Motor_Current\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Motor_Current\") || []);\n}\nif (select_Trend.LNVoltage == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.LNVoltage\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.LNVoltage\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.LNVoltage\") || []);\n}\nif (select_Trend.LLVoltage == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.LLVoltage\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.LLVoltage\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.LLVoltage\") || []);\n}\nif (select_Trend.Output_Power == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Output_Power\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Output_Power\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Output_Power\") || []);\n}\nif (select_Trend.PIP == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.PIP\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.PIP\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.PIP\") || []);\n}\nif (select_Trend.PDP == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.PDP\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.PDP\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.PDP\") || []);\n}\nif (select_Trend.Input_Temp == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Input_Temp\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Input_Temp\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Input_Temp\") || []);\n}\nif (select_Trend.Motor_Temp == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Motor_Temp\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Motor_Temp\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Motor_Temp\") || []);\n}\nif (select_Trend.Submergence == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Submergence\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Submergence\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Submergence\") || []);\n}\nif (select_Trend.DynamicFluidLevel == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.DynamicFluidLevel\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.DynamicFluidLevel\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.DynamicFluidLevel\") || []);\n}\nif (select_Trend.Flow == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Flow\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Flow\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Flow\") || []);\n}\n\n\n\nvar series = [];\n\nif (select_Trend.Output_Frequency == true) select_Time != \"realtime\" ? series.push(\"Frecuencia salida (Hz)\") : series.push(\"Frecuencia salida \" + msg.Output_Frequency + \" Hz\");\nif (select_Trend.Output_Current == true) select_Time != \"realtime\" ? series.push(\"Corriente salida drive (A)\") : series.push(\"Corriente salida drive \" + msg.Output_Current +\" A\");\nif (select_Trend.Motor_Current == true) select_Time != \"realtime\" ? series.push(\"Corriente motor (A)\") : series.push(\"Corriente motor \" + msg.Motor_Current +\" A\");\nif (select_Trend.LNVoltage == true) select_Time != \"realtime\" ? series.push(\"Tensión LN promedio (V)\") : series.push(\"Tensión LN promedio \" + msg.LNVoltage + \" V\");\nif (select_Trend.LLVoltage == true) select_Time != \"realtime\" ? series.push(\"Tensión LL promedio (V)\") : series.push(\"Tensión LL promedio \" + msg.LLVoltage +\" V\");\nif (select_Trend.Output_Power == true) select_Time != \"realtime\" ? series.push(\"Potencia salida (KW)\") : series.push(\"Potencia salida \" + msg.Output_Power +\" KW\");\nif (select_Trend.PIP == true) select_Time != \"realtime\" ? series.push(\"Presión entrada (psi)\") : series.push(\"Presión entrada \"+msg.PIP +\" psi\");\nif (select_Trend.PDP == true) select_Time != \"realtime\" ? series.push(\"Presión descarga (psi)\") : series.push(\"Presión descarga \"+msg.PDP +\" psi\");\nif (select_Trend.Input_Temp == true) select_Time != \"realtime\" ? series.push(\"Temperatura entrada (ºF)\") : series.push(\"Temperatura entrada \" + msg.Input_Temp +\" ºF\");\nif (select_Trend.Motor_Temp == true) select_Time != \"realtime\" ? series.push(\"Temperatura motor (ºF)\") : series.push(\"Temperatura motor \" + msg.Motor_Temp +\" ºF\");\nif (select_Trend.Submergence == true) select_Time != \"realtime\" ? series.push(\"Sumergencia (ft)\") : series.push(\"Sumergencia \" + msg.Submergence +\" ft\");\nif (select_Trend.DynamicFluidLevel == true) select_Time != \"realtime\" ? series.push(\"Nivel fluido dinámico (ft)\") : series.push(\"Nivel fluido dinámico \" + msg.DynamicFluidLevel +\" ft\");\nif (select_Trend.Flow == true) select_Time != \"realtime\" ? series.push(\"Caudal (m^3/s)\") : series.push(\"Caudal \" + msg.Flow +\" m^3/s\");\n\n\n\nvar chart = [{\n    \"series\": series,\n    \"data\": data,\n    \"labels\": [\"\"]\n}];\n\nif (data.length != 0)\n    msg.payload = chart;\nelse\n    msg.payload = [];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 100,
        "wires": [
            [
                "60eaf9a4dd833054"
            ]
        ]
    },
    {
        "id": "4297de21af954e7c",
        "type": "switch",
        "z": "2026898575f7aa56",
        "name": "pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Tendencias",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 100,
        "wires": [
            [
                "da3092c416342d37"
            ],
            [
                "3ee665ec6a03bb0d"
            ]
        ]
    },
    {
        "id": "44ea48cb2ca745c9",
        "type": "link in",
        "z": "2026898575f7aa56",
        "name": "",
        "links": [
            "c4e5b48a61ef3ffd"
        ],
        "x": 635,
        "y": 40,
        "wires": [
            [
                "3ee665ec6a03bb0d"
            ]
        ]
    },
    {
        "id": "3ee665ec6a03bb0d",
        "type": "change",
        "z": "2026898575f7aa56",
        "name": "realtime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "realtime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 40,
        "wires": [
            [
                "a48d5b8e2525907d"
            ]
        ]
    },
    {
        "id": "60eaf9a4dd833054",
        "type": "rbe",
        "z": "2026898575f7aa56",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 100,
        "wires": [
            [
                "3edd4a184747ecab"
            ]
        ]
    },
    {
        "id": "5faec54fa60a7f30",
        "type": "inject",
        "z": "2e27dea6.c4c362",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1470,
        "y": 800,
        "wires": [
            [
                "c958ccf4c750021b"
            ]
        ]
    },
    {
        "id": "afa7cc8cdf628598",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "b1830307.ee865",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 320,
        "y": 160,
        "wires": [
            [
                "07fdea154e1be602"
            ]
        ]
    },
    {
        "id": "60e038d3b3bf8b56",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegación.hometab",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c4507372adf32737",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "Datos C2S",
        "property": "#:(memoryOnly)::Navegación.hometab",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "C2S",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 1560,
        "wires": [
            [
                "da849ce7.0ef51"
            ]
        ]
    },
    {
        "id": "8f8ff381bd9d2c1f",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Datos Proceso",
        "property": "#:(memoryOnly)::Navegación.hometab",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Fondo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1620,
        "y": 1640,
        "wires": [
            [
                "6da4bb9c.3ee354"
            ]
        ]
    },
    {
        "id": "8a9d0c3be8d8b701",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1370,
        "y": 2720,
        "wires": [
            [
                "c8a0d32e8d573a65"
            ]
        ]
    },
    {
        "id": "c8a0d32e8d573a65",
        "type": "switch",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "Elec.",
        "property": "#:(memoryOnly)::Navegación.hometab",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Eléctricos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1490,
        "y": 2720,
        "wires": [
            [
                "c8aa3a95.12b518"
            ]
        ]
    },
    {
        "id": "2de6306e939a0ffe",
        "type": "comment",
        "z": "43b51d90.0b47f4",
        "name": "Leeme",
        "info": "__**Número de parámetro:**__\n\nEl número de parámetro de los variadores AFE no\npara escritura o consulta por mensajería\nexplícita, no corresponde al número con el\nque se identifíca en la HIM o con CCW, sino\nque debe sumarse una constante dependiente\ndel puerto correspondiente y según la tabla\nde la página 96 del manual titulado:\nPowerFlex Drives with\nTotalFORCE Control Built-in\nEtherNet/IP Adapter",
        "x": 130,
        "y": 20,
        "wires": []
    },
    {
        "id": "eb431166fc1c96a0",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegación.otrfunc",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "16bbbec3a6d114f6",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "77dcd918.f8c298",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegación.otrfunc",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "77cd4010fe016c65",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "82fde41a.c6f8d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ComandosC2S",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 400,
        "wires": [
            [
                "60e038d3b3bf8b56"
            ]
        ]
    },
    {
        "id": "bf383a9670894a6e",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "e1e65313b5eaa836",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ArranqueAuto",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1440,
        "wires": [
            [
                "eb431166fc1c96a0"
            ]
        ]
    },
    {
        "id": "10b60fbfd88b46af",
        "type": "switch",
        "z": "fb40d997e0f412a5",
        "g": "4384031.9ff1afc",
        "name": "otrfunc",
        "property": "#:(memoryOnly)::Navegación.otrfunc",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "RockingStart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2130,
        "y": 200,
        "wires": [
            [
                "9b8ae752.54eb48"
            ]
        ]
    },
    {
        "id": "c128eecc26e4da4f",
        "type": "switch",
        "z": "fb40d997e0f412a5",
        "g": "4384031.9ff1afc",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Otras Funciones de Control",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1960,
        "y": 200,
        "wires": [
            [
                "10b60fbfd88b46af"
            ]
        ]
    },
    {
        "id": "fbf0ac29aa515aa8",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Otras Funciones de Control",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1800,
        "y": 500,
        "wires": [
            [
                "32f2e49688936893"
            ]
        ]
    },
    {
        "id": "32f2e49688936893",
        "type": "switch",
        "z": "ebaf6b5134c2a666",
        "g": "dd4ef7f.6489508",
        "name": "otrfunc",
        "property": "#:(memoryOnly)::Navegación.otrfunc",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Tendencia",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1950,
        "y": 500,
        "wires": [
            [
                "962b19d2.c18838"
            ]
        ]
    },
    {
        "id": "23f92de5ec381106",
        "type": "modbus-flex-connector",
        "z": "38e901f121b52acb",
        "g": "6ce8e77fdd3e0883",
        "name": "",
        "maxReconnectsPerMinute": 4,
        "emptyQueue": false,
        "showStatusActivities": false,
        "showErrors": false,
        "server": "aeef0dfe.74e9c",
        "x": 2510,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5a5c7bbde1986cca",
        "type": "inject",
        "z": "38e901f121b52acb",
        "g": "6ce8e77fdd3e0883",
        "name": "",
        "props": [
            {
                "p": "payload.serialPort",
                "v": "/dev/serial1",
                "vt": "str"
            },
            {
                "p": "payload.connectorType",
                "v": "SERIAL",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "x": 2330,
        "y": 280,
        "wires": [
            [
                "23f92de5ec381106"
            ]
        ]
    },
    {
        "id": "98c32ee0a85b9ad7",
        "type": "modbus-flex-connector",
        "z": "2858ae04397c7488",
        "g": "14f2aa5a616905b0",
        "name": "",
        "maxReconnectsPerMinute": 4,
        "emptyQueue": false,
        "showStatusActivities": false,
        "showErrors": false,
        "server": "ae58460d.12c698",
        "x": 750,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "d6617fe34e1242e1",
        "type": "inject",
        "z": "2858ae04397c7488",
        "g": "14f2aa5a616905b0",
        "name": "",
        "props": [
            {
                "p": "payload.tcpHost",
                "v": "192.168.2.13",
                "vt": "str"
            },
            {
                "p": "payload.connectorType",
                "v": "TCP",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "x": 570,
        "y": 1080,
        "wires": [
            [
                "98c32ee0a85b9ad7"
            ]
        ]
    },
    {
        "id": "529deff5ef6dbaa8",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:Eventos()})\">Eventos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:Alarmas()})\">Alarmas</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-EntradasAnalogicas\" role=\"tab\"\n                aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\" ng-click=\"send({payload:PQA()})\">PQA</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:Datalogger()})\">Datalogger</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Eventos = function() { return \"Eventos\"; };\n        this.scope.Alarmas = function() { return \"Alarmas\"; };\n        this.scope.Datalogger = function() { return \"Datalogger\"; };\n        this.scope.PQA = function() { return \"PQA\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 260,
        "y": 1300,
        "wires": [
            [
                "890323f.ee684e"
            ]
        ]
    },
    {
        "id": "cd2627ac2843f441",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "e98dc6a9.24ece8",
        "name": "menu usuario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Eventos_y_Datalog_Eventos\",\t                \"Eventos_y_Datalog_Alarmas\",\t                \"Eventos_y_Datalog_Settings\",\t                \"Eventos_y_Datalog_Buttons\",\t                \"Eventos_y_Datalog_Smart_Datalogger®\",\t                \"Eventos_y_Datalog_Memorias_USB\"\t                ],\t       \"show\":[ \"Eventos_y_Datalog_Nav_Bar_User\",\t                \"Eventos_y_Datalog_PQAevents\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1300,
        "wires": [
            [
                "c98bd2dc.e9d39"
            ]
        ]
    },
    {
        "id": "b12eba6fd0e17d1b",
        "type": "modbus-flex-getter",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "PQA Modbus TCP",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "ae58460d.12c698",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 550,
        "y": 1200,
        "wires": [
            [
                "1c0275c34f3f9e2d"
            ],
            []
        ]
    },
    {
        "id": "1643986494e61d09",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "Lectura PQA",
        "func": "//Lee desde la direcion 8CFDH hasta la 8D07H\n//Tres parametros y Ocho datos del evento\nmsg.topic = \"LecturaPQA\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 36093, \n                    'quantity': 11\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1200,
        "wires": [
            [
                "b12eba6fd0e17d1b"
            ]
        ]
    },
    {
        "id": "1c0275c34f3f9e2d",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "LecturaPQA",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "LecturaPQA",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1200,
        "wires": [
            [
                "1d092dec161ff8be"
            ]
        ]
    },
    {
        "id": "be1dcb53f06bb73c",
        "type": "ui_table",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "group": "5506d219e1b48a22",
        "name": "Principal",
        "order": 5,
        "width": "16",
        "height": "9",
        "columns": [
            {
                "field": "ID",
                "title": "ID.",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "StartingGroup",
                "title": "Evento PQA",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Fecha",
                "title": "Fecha",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Hora",
                "title": "Hora",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Milisegundos",
                "title": "Duración  (ms)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "VSagVSwell",
                "title": "Tipo",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "EstadoC2S",
                "title": "Estado del C2S",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1270,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5d0d0564b7be518e",
        "type": "ui_table",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "group": "5506d219e1b48a22",
        "name": "Resumen",
        "order": 7,
        "width": "4",
        "height": "2",
        "columns": [
            {
                "field": "Cant_Sag",
                "title": "No. Sag",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Cant_Swell",
                "title": "No. Swell",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1270,
        "y": 1240,
        "wires": []
    },
    {
        "id": "1d092dec161ff8be",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "Eventos PQA",
        "func": "//Declaración de variables \nvar lastEvent = flow.get(\"lastEvent\", \"memoryOnly\") || 0;\nvar lastEventflag = flow.get(\"lastEventflag\", \"memoryOnly\") || false;\nvar IDPQAEvents = global.get(\"PQAEvents.ID\") || 0; //ID del ultimo evento guardado\nvar PQAEvents = global.get(\"PQAEvents.data\") || []; //Array de aventos guardados\nvar EstadoC2S = global.get(\"C2S.Drive_Status.Active\", \"memoryOnly\") || 0; // Muestra el estado del C2S\n\n//Adquisicion de los datos de un evento\nvar Uint8 = new Uint8Array(6);\nvar NewestEvent = msg.payload[0];\nvar StartingGroup = msg.payload[1];\nvar Timestamp1 = msg.payload[3];\nvar Timestamp2 = msg.payload[4];\nvar Timestamp3 = msg.payload[5];\nvar Timestamp4 = msg.payload[6];\nvar VSagVSwell = msg.payload[7];\nvar RatedValue = msg.payload[8];\nvar Threshold = msg.payload[9];\nvar HalfCycle = msg.payload[10];\n\n//Corrimiento de datos\nUint8[0] = Timestamp1; //Month\nUint8[1] = Timestamp1 >> 8;\nUint8[2] = Timestamp2; //Hora\nUint8[3] = Timestamp2 >> 8; //Day\nUint8[4] = Timestamp3;  //Second\nUint8[5] = Timestamp3 >> 8; //Minute\n\nvar VSagVSwell1 = \"\";\n//Define Power Sag o Power Swell\nif (Threshold <= 100 ){\n     VSagVSwell1 = \"Voltaje Sag\";\n} else {\n    VSagVSwell1 = \"Voltaje Swell\";\n}\n\n//Formato de Timestamp\nvar year = Uint8[1] + 2000;\nif (Uint8[0] < 10) { // Para el mes\n    var Month = '0' + Uint8[0];\n} else { Month = Uint8[0]; }\nif (Uint8[3] < 10) { // Para el día\n    var Day = '0' + Uint8[3];\n} else {Day = Uint8[3];}\nif (Uint8[2] < 10) { // Para la Hora\n    var Hora = '0' + Uint8[2];\n} else { Hora = Uint8[2]; }\nif (Uint8[5] < 10) { // Para los Minutos\n    var Minute = '0' + Uint8[5];\n} else { Minute = Uint8[5]; }\nif (Uint8[4] < 10) { // Para los Segundos\n    var Second = '0' + Uint8[4];\n} else { Second = Uint8[4]; }\n\n\n//Data del evento consultado - estructura\nvar dataEvento = {\n    \"ID\":  null,\n    \"NewestEvent\": NewestEvent,\n    \"StartingGroup\": StartingGroup,\n    \"Fecha\": year + \"/\" + Month + \"/\" + Day,\n    \"Hora\": Hora + \":\" + Minute + \":\" + Second,\n    \"Milisegundos\": Timestamp4,\n    \"VSagVSwell\": VSagVSwell1,\n    \"RatedValue\": RatedValue,\n    \"Threshold\": Threshold,\n    \"HalfCycle\": HalfCycle,\n    \"EstadoC2S\": EstadoC2S == 1 ? \"Activo\" : \"Detenido\"\n};\n\n//Adquisición de los eventos en el array PQAEvents \nflow.set(\"NewestEvent\", NewestEvent, \"memoryOnly\");\nif (lastEvent == 0 && !lastEventflag) { flow.set(\"lastEventflag\", true,\"memoryOnly\"); lastEvent = NewestEvent; flow.set(\"lastEvent\", lastEvent, \"memoryOnly\");}\nif (lastEvent > NewestEvent) { flow.set(\"lastEvent\", NewestEvent, \"memoryOnly\"); lastEvent = NewestEvent};\nif (NewestEvent - lastEvent > 50) { flow.set(\"lastEvent\", NewestEvent, \"memoryOnly\"); lastEvent = NewestEvent};\nif (lastEvent != NewestEvent) { // Si hay un evento nuevo....\n    if ((lastEvent + 1) == StartingGroup) {\n        dataEvento.ID = IDPQAEvents + 1\n        PQAEvents.unshift( dataEvento);\n        if (PQAEvents.length == 501) PQAEvents.pop(); //Limita la cantidad de eventos registrados \n        global.set(\"PQAEvents.data\", PQAEvents);\n        global.set(\"PQAEvents.ID\", IDPQAEvents + 1);\n        flow.set(\"lastEvent\", lastEvent+1, \"memoryOnly\");\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "//context.set(\"m\", 0, \"memoryOnly\");\n\n\n//context.set(\"EventoGuardado\", [], \"memoryOnly\");\n\n// Code added here will be run once\n// whenever the node is started.\n",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1200,
        "wires": [
            [
                "8cf1c791b0b47299"
            ]
        ]
    },
    {
        "id": "fa5e45a53a5caf5e",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "EscrituraPQA",
        "func": "var lastEvent = flow.get(\"lastEvent\", \"memoryOnly\") || null;\n\n//Lee la dirección del StartingGroup (8CFEH)\nmsg.payload = {\n    value: [lastEvent + 1],\n    'fc': 16,\n    'unitid': 5,\n    'address': 36094,\n    'quantity': 1\n}\nif (lastEvent != null)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1280,
        "wires": [
            [
                "bab297d8e38d1fcc"
            ]
        ]
    },
    {
        "id": "bab297d8e38d1fcc",
        "type": "modbus-flex-write",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "PQA Modbus TCP",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "ae58460d.12c698",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 540,
        "y": 1280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "490a325563bb2b0f",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 180,
        "y": 1280,
        "wires": [
            [
                "1643986494e61d09",
                "fa5e45a53a5caf5e"
            ]
        ]
    },
    {
        "id": "8cdf9e74dbd5c0c5",
        "type": "ui_dropdown",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "tiempo",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar periodo de tiempo",
        "group": "5506d219e1b48a22",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Todos los eventos",
                "value": "all",
                "type": "str"
            },
            {
                "label": "Últimas 24 horas",
                "value": "lastday",
                "type": "str"
            },
            {
                "label": "Última semana",
                "value": "lastweek",
                "type": "str"
            },
            {
                "label": "Último mes",
                "value": "lastmonth",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 690,
        "y": 1040,
        "wires": [
            [
                "e48317a5283cbf0a"
            ]
        ]
    },
    {
        "id": "e48317a5283cbf0a",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::eventsviewer.time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1040,
        "wires": [
            [
                "8cf1c791b0b47299"
            ]
        ]
    },
    {
        "id": "d30eebef31591926",
        "type": "ui_dropdown",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "estado cila",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar estado de CILA",
        "group": "5506d219e1b48a22",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Todos",
                "value": "all",
                "type": "str"
            },
            {
                "label": "CILA2S operativo",
                "value": "active",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 670,
        "y": 1100,
        "wires": [
            [
                "00d05a309c7c6ed1"
            ]
        ]
    },
    {
        "id": "00d05a309c7c6ed1",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::eventsviewer.status",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 1100,
        "wires": [
            [
                "8cf1c791b0b47299"
            ]
        ]
    },
    {
        "id": "09f6acfa5e5cc6f3",
        "type": "ui_dropdown",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "evento",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar tipo de evento",
        "group": "5506d219e1b48a22",
        "order": 3,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Todos los eventos",
                "value": "all",
                "type": "str"
            },
            {
                "label": "Power SAG",
                "value": "powsag",
                "type": "str"
            },
            {
                "label": "Power SWELL",
                "value": "powswell",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 690,
        "y": 1160,
        "wires": [
            [
                "a26de32e2dcd2d22"
            ]
        ]
    },
    {
        "id": "a26de32e2dcd2d22",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::eventsviewer.type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1160,
        "wires": [
            [
                "8cf1c791b0b47299"
            ]
        ]
    },
    {
        "id": "8cf1c791b0b47299",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "a tabla",
        "func": "var selectorestado = flow.get(\"eventsviewer.status\",\"memoryOnly\")||\"all\";\nvar selectortiempo = flow.get(\"eventsviewer.time\", \"memoryOnly\") || \"all\";\nvar selectortipo = flow.get(\"eventsviewer.type\", \"memoryOnly\") || \"all\";\nvar eventos = JSON.parse(JSON.stringify(global.get(\"PQAEvents.data\") || null)); \nvar count = [0,0];\n//obtiene el objeto PQAEvents y lo convierte en un  objeto nuevo para que las modificaciones no afeten  el objeto original \nvar retorno;\nvar payload1 = [];\n\nretorno = filtrarportiempo(selectortiempo, eventos);\nretorno = filtrarporestado(selectorestado,retorno);\nretorno = filtrarportipo(selectortipo, retorno);\npayload1 = retorno;\n\nfunction filtrarportiempo(selectortiempo, eventos){\n    var i, a=[], aux,flag;\n    var DT = new Date(); // Instancia que representa un único momento en el tiempo (ms)\n    var date = new Date(eventos[0].Fecha + \",\" + eventos[0].Hora);\n    aux = (DT.getTime() - date.getTime()) / (1000 * 60 * 60 * 24);//(1000*60*60*24);\n\n    for (i = 0; i < eventos.length; i++) {\n        flag = false\n        if(selectortiempo == \"all\") flag=true;\n        else{\n            var date = new Date(eventos[i].Fecha + \",\" + eventos[i].Hora);\n            aux = (DT.getTime() - date.getTime())/(1000*60*60*24);\n        }\n        if (selectortiempo == \"lastday\" && aux <= 1) flag = true;\n        if (selectortiempo == \"lastweek\" && aux <= 7) flag = true;\n        if (selectortiempo == \"lastmonth\" && aux <= 30) flag = true;\n        if (flag) a.push({ \"ID\": eventos[i].ID, \"StartingGroup\": eventos[i].StartingGroup, \"Fecha\": eventos[i].Fecha, \"Hora\": eventos[i].Hora, \"Milisegundos\": eventos[i].Milisegundos, \"VSagVSwell\": eventos[i].VSagVSwell, \"EstadoC2S\": eventos[i].EstadoC2S });\n    }\n    return a;\n}\n\nfunction filtrarporestado(selectorestado, eventos){\n    var i; var a = [];var flag;\n    for (i = 0; i < eventos.length; i++) {\n        flag = false\n        if (selectorestado == \"all\") flag = true;\n        if (selectorestado == \"active\" && eventos[i].EstadoC2S==\"Activo\") flag = true;\n        if (flag) a.push({ \"ID\": eventos[i].ID, \"StartingGroup\": eventos[i].StartingGroup, \"Fecha\": eventos[i].Fecha, \"Hora\": eventos[i].Hora, \"Milisegundos\": eventos[i].Milisegundos, \"VSagVSwell\": eventos[i].VSagVSwell, \"EstadoC2S\": eventos[i].EstadoC2S });\n    }\n    return a;\n\n}\n\nfunction filtrarportipo(selectortipo, eventos){\n    var i; var a = []; var flag;\n    for (i = 0; i < eventos.length; i++) {\n        flag = false\n        if (selectortipo == \"all\") flag = true;\n        if (selectortipo == \"powsag\" && eventos[i].VSagVSwell != \"Voltaje Swell\") flag = true;\n        if (selectortipo == \"powswell\" && eventos[i].VSagVSwell == \"Voltaje Swell\") flag = true;\n        if (flag && eventos[i].VSagVSwell != \"Voltaje Swell\") count[0] ++;\n        if (flag && eventos[i].VSagVSwell == \"Voltaje Swell\") count[1] ++;\n        if (flag) a.push({ \"ID\": eventos[i].ID, \"StartingGroup\": eventos[i].StartingGroup, \"Fecha\": eventos[i].Fecha, \"Hora\": eventos[i].Hora, \"Milisegundos\": eventos[i].Milisegundos, \"VSagVSwell\": eventos[i].VSagVSwell, \"EstadoC2S\": eventos[i].EstadoC2S });\n    }\n    return a;\n}\n\nmsg = [{ \"payload\": payload1 }, { \"payload\": [{\"Cant_Sag\": count[0], \"Cant_Swell\": count[1]}]}];\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1200,
        "wires": [
            [
                "be1dcb53f06bb73c"
            ],
            [
                "5d0d0564b7be518e"
            ]
        ]
    },
    {
        "id": "dbce895a0f6ce0d4",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 315,
        "y": 1100,
        "wires": [
            [
                "7d85f80cc3c27c5f"
            ]
        ]
    },
    {
        "id": "7d85f80cc3c27c5f",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "all",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1100,
        "wires": [
            [
                "8cdf9e74dbd5c0c5",
                "d30eebef31591926",
                "09f6acfa5e5cc6f3"
            ]
        ]
    },
    {
        "id": "4d34d9c39ea9ded2",
        "type": "ui_switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "check_ampdrive",
        "label": "",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 12,
        "width": "1",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1820,
        "y": 1140,
        "wires": [
            [
                "4a9f332cf0866f31"
            ]
        ]
    },
    {
        "id": "d38e41d42749671a",
        "type": "ui_switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "check_ampmot",
        "label": "",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 16,
        "width": "1",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1820,
        "y": 1200,
        "wires": [
            [
                "0ee3bd6b8995e671"
            ]
        ]
    },
    {
        "id": "969d8fb4a4d15631",
        "type": "ui_switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "check_phasevoltage",
        "label": "",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 20,
        "width": "1",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1840,
        "y": 1260,
        "wires": [
            [
                "f0241497e5ab15d9"
            ]
        ]
    },
    {
        "id": "97c807c1cde7d7ad",
        "type": "ui_switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "check_linevoltage",
        "label": "",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 24,
        "width": "1",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1830,
        "y": 1320,
        "wires": [
            [
                "1e62621c23af5836"
            ]
        ]
    },
    {
        "id": "054ce8d4b4d3feaa",
        "type": "ui_switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "check_outpower",
        "label": "",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 28,
        "width": "1",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1820,
        "y": 1380,
        "wires": [
            [
                "e9e2cd19031e3496"
            ]
        ]
    },
    {
        "id": "f721ad059ebe8c87",
        "type": "ui_switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "check_inpressure",
        "label": "",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 32,
        "width": "1",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1830,
        "y": 1440,
        "wires": [
            [
                "4081874fcc1e456f"
            ]
        ]
    },
    {
        "id": "7e23e60415c042ca",
        "type": "ui_switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "check_dispressure",
        "label": "",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 36,
        "width": "1",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1830,
        "y": 1500,
        "wires": [
            [
                "bd2caffeba935272"
            ]
        ]
    },
    {
        "id": "99c66c0d456be274",
        "type": "ui_switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "check_intemp",
        "label": "",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 40,
        "width": "1",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1820,
        "y": 1560,
        "wires": [
            [
                "575e2c87503e8e40"
            ]
        ]
    },
    {
        "id": "7f68e60b6bcca236",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "% corriente drive",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 13,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1830,
        "y": 1660,
        "wires": [
            [
                "a2c7905d2fd47522"
            ]
        ]
    },
    {
        "id": "3e1b13e612db7827",
        "type": "ui_text",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "group": "d4ce0f7379428df9",
        "order": 5,
        "width": "2",
        "height": "1",
        "name": "activar titulo",
        "label": "",
        "format": "Activar",
        "layout": "row-spread",
        "className": "",
        "x": 1820,
        "y": 1100,
        "wires": []
    },
    {
        "id": "dac1d568dc8320ef",
        "type": "ui_text",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "group": "d4ce0f7379428df9",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "% titulo",
        "label": "",
        "format": "% variación",
        "layout": "row-spread",
        "className": "",
        "x": 1800,
        "y": 1620,
        "wires": []
    },
    {
        "id": "fe70b631c41feb58",
        "type": "ui_text",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "group": "d4ce0f7379428df9",
        "order": 7,
        "width": "3",
        "height": "1",
        "name": "tiempo monitoreo (min)",
        "label": "",
        "format": "Monitoreo (min)",
        "layout": "row-spread",
        "className": "",
        "x": 2730,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f23a659cd0a28f68",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "tiempo corriente drive",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 14,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2720,
        "y": 1140,
        "wires": [
            [
                "2db8861f9036d4b5"
            ]
        ]
    },
    {
        "id": "45ea2f3b7b0db088",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "% corriente motor",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 17,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1830,
        "y": 1720,
        "wires": [
            [
                "b62ae7ee359ad1c8"
            ]
        ]
    },
    {
        "id": "185362389c4ba49c",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "tiempo corriente motor",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 18,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2720,
        "y": 1200,
        "wires": [
            [
                "d6cc6a14211fbb52"
            ]
        ]
    },
    {
        "id": "aa0c6f2f1857c988",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "% tension fase",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 21,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1820,
        "y": 1780,
        "wires": [
            [
                "41dcf4bd9dbee179"
            ]
        ]
    },
    {
        "id": "9f928098844fc95b",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "tiempo tensión fase",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 22,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2710,
        "y": 1260,
        "wires": [
            [
                "f81c5469551cda8f"
            ]
        ]
    },
    {
        "id": "f4b48211bb151221",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "% tension línea",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 25,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1820,
        "y": 1840,
        "wires": [
            [
                "73cfbcfce264d0b2"
            ]
        ]
    },
    {
        "id": "f122345c94f70dd6",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "tiempo tensión línea",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 26,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2720,
        "y": 1320,
        "wires": [
            [
                "6a66df72dcc45e12"
            ]
        ]
    },
    {
        "id": "07425a23aa5a0f54",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "% potencia salida",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 29,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1830,
        "y": 1900,
        "wires": [
            [
                "47fd7e4516cca7ea"
            ]
        ]
    },
    {
        "id": "71f2a010dbe92ca0",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "tiempo potencia salida",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 30,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2720,
        "y": 1380,
        "wires": [
            [
                "450b7d6a02c8f87a"
            ]
        ]
    },
    {
        "id": "32a1993d1a97aa54",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "% presión entrada",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 33,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1830,
        "y": 1960,
        "wires": [
            [
                "80db24a4bf6da7a1"
            ]
        ]
    },
    {
        "id": "7b25eaf1bbcded8c",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "tiempo presión entrada",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 34,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2720,
        "y": 1440,
        "wires": [
            [
                "7ae6c01eed40c021"
            ]
        ]
    },
    {
        "id": "367ccf51e2a0b6a6",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "% presión descarga",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 37,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1840,
        "y": 2020,
        "wires": [
            [
                "dc02777dd42d3b3c"
            ]
        ]
    },
    {
        "id": "16afa1f5f7dc62c6",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "tiempo presión descarga",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 38,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2730,
        "y": 1500,
        "wires": [
            [
                "35804c8cf6abb4b4"
            ]
        ]
    },
    {
        "id": "92681599211b5c1a",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "% temp. entrada",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 41,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1820,
        "y": 2080,
        "wires": [
            [
                "c9ada558c6cd767a"
            ]
        ]
    },
    {
        "id": "f23be6785e9ef561",
        "type": "ui_text_input",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "label": "tiempo temp. entrada",
        "tooltip": "",
        "group": "d4ce0f7379428df9",
        "order": 42,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2720,
        "y": 1560,
        "wires": [
            [
                "0ddb0b7d6b3ad0ea"
            ]
        ]
    },
    {
        "id": "92a3ced62fe1792f",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "msg",
        "func": "msg.payload = \"Smart Datalogger® es una herramienta para identificar cuando existe una perturbación en el CILA2S. Puede seleccionar una o más variables de proceso, el porcentaje instantáneo de variación que modifica temporalmente la data a un muestreo de 1 segundo, guardandola durante el tiempo de monitoreo configurado. Si las variaciones persisten, se usarán tantos periodos de monitoreo como sea necesario\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 1660,
        "wires": [
            [
                "35829a65d3583713"
            ]
        ]
    },
    {
        "id": "35829a65d3583713",
        "type": "ui_toast",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "aceptar",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Smart Datalogger®",
        "name": "",
        "x": 2810,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "4a9f332cf0866f31",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.CurrDrive.enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "0ee3bd6b8995e671",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.CurrMot.enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2070,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "f0241497e5ab15d9",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.phasevoltage.enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "1e62621c23af5836",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.linevoltage.enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "e9e2cd19031e3496",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.outpower.enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "4081874fcc1e456f",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.inpressure.enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "bd2caffeba935272",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.dispressure.enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "575e2c87503e8e40",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.intemp.enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2070,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "a2c7905d2fd47522",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.CurrDrive.percentage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2150,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "b62ae7ee359ad1c8",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.CurrMot.percentage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "41dcf4bd9dbee179",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.phasevoltage.percentage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "73cfbcfce264d0b2",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.linevoltage.percentage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "47fd7e4516cca7ea",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.outpower.percentage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2150,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "80db24a4bf6da7a1",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.inpressure.percentage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "dc02777dd42d3b3c",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.dispressure.percentage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "c9ada558c6cd767a",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.intemp.percentage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "2db8861f9036d4b5",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.CurrDrive.time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3010,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "d6cc6a14211fbb52",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.CurrMot.time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3000,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "f81c5469551cda8f",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.phasevoltage.time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3060,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "6a66df72dcc45e12",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.linevoltage.time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "450b7d6a02c8f87a",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.outpower.time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3000,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "7ae6c01eed40c021",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.inpressure.time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "35804c8cf6abb4b4",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.dispressure.time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "0ddb0b7d6b3ad0ea",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "smartdatalog.intemp.time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3000,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "51e2ba8e9d633518",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 1475,
        "y": 1060,
        "wires": [
            [
                "907554900c736361"
            ]
        ]
    },
    {
        "id": "907554900c736361",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "eventos",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Eventos y Datalog",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1580,
        "y": 1060,
        "wires": [
            [
                "a0c2e815c0d9e4d4"
            ]
        ]
    },
    {
        "id": "2503fbac96a3adb4",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.CurrDrive.enabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1140,
        "wires": [
            [
                "4d34d9c39ea9ded2"
            ]
        ]
    },
    {
        "id": "9880e17fc566d4a0",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.CurrMot.enabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1200,
        "wires": [
            [
                "d38e41d42749671a"
            ]
        ]
    },
    {
        "id": "2dcdcbefc82e8eee",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.phasevoltage.enabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1260,
        "wires": [
            [
                "969d8fb4a4d15631"
            ]
        ]
    },
    {
        "id": "ddcc2b539ae52a88",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.linevoltage.enabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1320,
        "wires": [
            [
                "97c807c1cde7d7ad"
            ]
        ]
    },
    {
        "id": "4f42a07c80b4d5bc",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.outpower.enabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1380,
        "wires": [
            [
                "054ce8d4b4d3feaa"
            ]
        ]
    },
    {
        "id": "78802ee4ab2d7860",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.inpressure.enabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1440,
        "wires": [
            [
                "f721ad059ebe8c87"
            ]
        ]
    },
    {
        "id": "079f9b945da9d33a",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.dispressure.enabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1500,
        "wires": [
            [
                "7e23e60415c042ca"
            ]
        ]
    },
    {
        "id": "4f21f696a5414e2a",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.intemp.enabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1560,
        "wires": [
            [
                "99c66c0d456be274"
            ]
        ]
    },
    {
        "id": "a7d327324e0d9817",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.CurrDrive.percentage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1660,
        "wires": [
            [
                "7f68e60b6bcca236"
            ]
        ]
    },
    {
        "id": "fb821b484a78cf1d",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.CurrMot.percentage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1720,
        "wires": [
            [
                "45ea2f3b7b0db088"
            ]
        ]
    },
    {
        "id": "e886da873e0ee6a0",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.phasevoltage.percentage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1780,
        "wires": [
            [
                "aa0c6f2f1857c988"
            ]
        ]
    },
    {
        "id": "8c1d7db85d4d9264",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.linevoltage.percentage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1840,
        "wires": [
            [
                "f4b48211bb151221"
            ]
        ]
    },
    {
        "id": "49c5e6d960779b36",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.outpower.percentage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1900,
        "wires": [
            [
                "07425a23aa5a0f54"
            ]
        ]
    },
    {
        "id": "5da98c90313abc58",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.inpressure.percentage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 1960,
        "wires": [
            [
                "32a1993d1a97aa54"
            ]
        ]
    },
    {
        "id": "bc3666a5f87878f4",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.dispressure.percentage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 2020,
        "wires": [
            [
                "367ccf51e2a0b6a6"
            ]
        ]
    },
    {
        "id": "70cc72ed49d03464",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.intemp.percentage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 2080,
        "wires": [
            [
                "92681599211b5c1a"
            ]
        ]
    },
    {
        "id": "a0c2e815c0d9e4d4",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "links": [
            "dc748c8ba6c06c76",
            "c45fd7bb53fd598e"
        ],
        "x": 1675,
        "y": 1060,
        "wires": []
    },
    {
        "id": "dc748c8ba6c06c76",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "links": [
            "a0c2e815c0d9e4d4"
        ],
        "x": 1435,
        "y": 1360,
        "wires": [
            [
                "2503fbac96a3adb4",
                "9880e17fc566d4a0",
                "2dcdcbefc82e8eee",
                "ddcc2b539ae52a88",
                "4f42a07c80b4d5bc",
                "78802ee4ab2d7860",
                "079f9b945da9d33a",
                "4f21f696a5414e2a"
            ]
        ]
    },
    {
        "id": "c45fd7bb53fd598e",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "links": [
            "a0c2e815c0d9e4d4"
        ],
        "x": 1435,
        "y": 1880,
        "wires": [
            [
                "a7d327324e0d9817",
                "fb821b484a78cf1d",
                "e886da873e0ee6a0",
                "8c1d7db85d4d9264",
                "49c5e6d960779b36",
                "5da98c90313abc58",
                "bc3666a5f87878f4",
                "70cc72ed49d03464"
            ]
        ]
    },
    {
        "id": "3a5768aeb6cdd348",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.CurrDrive.time",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 1140,
        "wires": [
            [
                "f23a659cd0a28f68"
            ]
        ]
    },
    {
        "id": "2f31be3d5d542ff6",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.CurrMot.time",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 1200,
        "wires": [
            [
                "185362389c4ba49c"
            ]
        ]
    },
    {
        "id": "3c2754ab7c4da092",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.phasevoltage.time",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 1260,
        "wires": [
            [
                "9f928098844fc95b"
            ]
        ]
    },
    {
        "id": "328f2a1a633d116e",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.linevoltage.time",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 1320,
        "wires": [
            [
                "f122345c94f70dd6"
            ]
        ]
    },
    {
        "id": "6a59c2215811b08b",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.outpower.time",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 1380,
        "wires": [
            [
                "71f2a010dbe92ca0"
            ]
        ]
    },
    {
        "id": "74eb7f10c4cccd95",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.inpressure.time",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 1440,
        "wires": [
            [
                "7b25eaf1bbcded8c"
            ]
        ]
    },
    {
        "id": "fb752468a5e98b48",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "smartdatalog.dispressure.time",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 1500,
        "wires": [
            [
                "16afa1f5f7dc62c6"
            ]
        ]
    },
    {
        "id": "b552ad2437f71beb",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smartdatalog.intemp.time",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 1560,
        "wires": [
            [
                "f23be6785e9ef561"
            ]
        ]
    },
    {
        "id": "3120732a7cdecb8c",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "Creación de archivo",
        "func": "var PQA = global.get(\"PQA.Real_Time_Parameters\", 'memoryOnly') || [];\nvar C2S = global.get(\"C2S.Implicit\", 'memoryOnly') || [];\nvar ComStatus = global.get(\"C2S.Comunicacion_Drive\", 'memoryOnly') || false;\nvar DownHoleData = global.get('Process_data.DHS', 'memoryOnly') || [];\n\nvar date = new Date();\n\n// Date\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\n\n//Time\nvar hours = date.getHours();\nvar minutes = date.getMinutes();\nvar seconds = date.getSeconds();\n\nmsg.payload = {\n    'fecha_hora': year + '/' + month + '/' + day + \" \" + hours + ':' + minutes + ':' + seconds,\n    'Frequency': PQA != null && typeof PQA.Frequency != 'undefined' ? parseFloat(PQA.Frequency).toFixed(1) : \"--\",\n    'Phase_1_Voltage': PQA != null && typeof PQA.Phase_1_Voltage != 'undefined' ? parseFloat(PQA.Phase_1_Voltage).toFixed(1) : \"--\",\n    'Phase_2_Voltage': PQA != null && typeof PQA.Phase_2_Voltage != 'undefined' ? parseFloat(PQA.Phase_2_Voltage).toFixed(1) : \"--\",\n    'Phase_3_Voltage': PQA != null && typeof PQA.Phase_3_Voltage != 'undefined' ? parseFloat(PQA.Phase_3_Voltage).toFixed(1) : \"--\",\n    'Average_Phase_Voltage': PQA != null && typeof PQA.Average_Phase_Voltage != 'undefined' ? parseFloat(PQA.Average_Phase_Voltage).toFixed(1) : \"--\",\n    'Line_Voltage_1_2': PQA != null && typeof PQA.Line_Voltage_1_2 != 'undefined' ? parseFloat(PQA.Line_Voltage_1_2).toFixed(1) : \"--\",\n    'Line_Voltage_2_3': PQA != null && typeof PQA.Line_Voltage_2_3 != 'undefined' ? parseFloat(PQA.Line_Voltage_2_3).toFixed(1) : \"--\",\n    'Line_Voltage_3_1': PQA != null && typeof PQA.Line_Voltage_3_1 != 'undefined' ? parseFloat(PQA.Line_Voltage_3_1).toFixed(1) : \"--\",\n    'Average_Line_Voltage': PQA != null && typeof PQA.Average_Line_Voltage != 'undefined' ? parseFloat(PQA.Average_Line_Voltage).toFixed(1) : \"--\",\n    'Total_Phase_A_Current': PQA != null && typeof PQA.Total_Phase_A_Current != 'undefined' ? parseFloat(PQA.Total_Phase_A_Current).toFixed(1) : \"--\",\n    'Total_Phase_B_Current': PQA != null && typeof PQA.Total_Phase_B_Current != 'undefined' ? parseFloat(PQA.Total_Phase_B_Current).toFixed(1) : \"--\",\n    'Total_Phase_C_Current': PQA != null && typeof PQA.Total_Phase_C_Current != 'undefined' ? parseFloat(PQA.Total_Phase_C_Current).toFixed(1) : \"--\",\n    'Neutral_Current': PQA != null && typeof PQA.Neutral_Current != 'undefined' ? parseFloat(PQA.Neutral_Current).toFixed(1) : \"--\",\n    'Phase_A_Power': PQA != null && typeof PQA.Phase_A_Power != 'undefined' ? parseFloat(PQA.Phase_A_Power).toFixed(1) : \"--\",\n    'Phase_B_Power': PQA != null && typeof PQA.Phase_B_Power != 'undefined' ? parseFloat(PQA.Phase_B_Power).toFixed(1) : \"--\",\n    'Phase_C_Power': PQA != null && typeof PQA.Phase_C_Power != 'undefined' ? parseFloat(PQA.Phase_C_Power).toFixed(1) : \"--\",\n    'Total_System_Power': PQA != null && typeof PQA.Total_System_Power != 'undefined' ? parseFloat(PQA.Total_System_Power).toFixed(1) : \"--\",\n    'Phase_A_Reactive_Power': PQA != null && typeof PQA.Phase_A_Reactive_Power != 'undefined' ? parseFloat(PQA.Phase_A_Reactive_Power).toFixed(1) : \"--\",\n    'Phase_B_Reactive_Power': PQA != null && typeof PQA.Phase_B_Reactive_Power != 'undefined' ? parseFloat(PQA.Phase_B_Reactive_Power).toFixed(1) : \"--\",\n    'Phase_C_Reactive_Power': PQA != null && typeof PQA.Phase_C_Reactive_Power != 'undefined' ? parseFloat(PQA.Phase_C_Reactive_Power).toFixed(1) : \"--\",\n    'Phase_A_Apparent_Power': PQA != null && typeof PQA.Phase_A_Apparent_Power != 'undefined' ? parseFloat(PQA.Phase_A_Apparent_Power).toFixed(1) : \"--\",\n    'Phase_B_Apparent_Power': PQA != null && typeof PQA.Phase_B_Apparent_Power != 'undefined' ? parseFloat(PQA.Phase_B_Apparent_Power).toFixed(1) : \"--\",\n    'Phase_C_Apparent_Power': PQA != null && typeof PQA.Phase_C_Apparent_Power != 'undefined' ? parseFloat(PQA.Phase_C_Apparent_Power).toFixed(1) : \"--\",\n    'Output_Frequency': C2S != null && typeof C2S.Output_Frequency != 'undefined' ? parseFloat(C2S.Output_Frequency).toFixed(1) : \"--\",\n    'Output_Current': C2S != null && typeof C2S.Output_Current != 'undefined' ? parseFloat(C2S.Output_Current).toFixed(1) : \"--\",\n    'Output_Voltage': C2S != null && typeof C2S.Output_Voltage != 'undefined' ? parseFloat(C2S.Output_Voltage).toFixed(1) : \"--\",\n    'Output_Power': C2S != null && typeof C2S.Output_Power != 'undefined' ? parseFloat(C2S.Output_Power).toFixed(1) : \"--\",\n    'Power_Factor': C2S != null && typeof C2S.Power_Factor != 'undefined' ? parseFloat(C2S.Power_Factor).toFixed(1) : \"--\",\n    'Bus_DC_Volts': C2S != null && typeof C2S.Bus_DC_Volts != 'undefined' ? parseFloat(C2S.Bus_DC_Volts).toFixed(1) : \"--\",\n    'Drive_Temp_C': C2S != null && typeof C2S.Drive_Temp_C != 'undefined' ? parseFloat(C2S.Drive_Temp_C).toFixed(1) : \"--\",\n    'Elapsed_Run_Time': C2S != null && typeof C2S.Elapsed_Run_Time != 'undefined' ? parseFloat(C2S.Elapsed_Run_Time).toFixed(1) : \"--\",\n    'Last_Fault_Code': C2S != null && typeof C2S.Last_Fault_Code != 'undefined' ? parseFloat(C2S.Last_Fault_Code).toFixed(1) : \"--\",\n    'Presión de entrada': DownHoleData != null && typeof DownHoleData[\"Presión de entrada\"] != 'undefined' ? parseFloat(DownHoleData[\"Presión de entrada\"]).toFixed(0) : \"--\",\n    'Presión de descarga': DownHoleData != null && typeof DownHoleData[\"Presión de descarga\"] != 'undefined' ? parseFloat(DownHoleData[\"Presión de descarga\"]).toFixed(0) : \"--\",\n    'Temperatura de entrada': DownHoleData != null && typeof DownHoleData[\"Temperatura de entrada\"] != 'undefined' ? parseFloat(DownHoleData[\"Temperatura de entrada\"]).toFixed(1) : \"--\",\n    'Temperatura de descarga': DownHoleData != null && typeof DownHoleData[\"Temperatura de descarga\"] != 'undefined' ? parseFloat(DownHoleData[\"Temperatura de descarga\"]).toFixed(1) : \"--\",\n    'Temperatura de motor': DownHoleData != null && typeof DownHoleData[\"Temperatura de motor\"] != 'undefined' ? parseFloat(DownHoleData[\"Temperatura de motor\"]).toFixed(1) : \"--\",\n    'Vibración en X': DownHoleData != null && typeof DownHoleData[\"Vibración X\"] != 'undefined' ? parseFloat(DownHoleData[\"Vibración X\"]).toFixed(2) : \"--\",\n    'Vibración en Z': DownHoleData != null && typeof DownHoleData[\"Vibración Z\"] != 'undefined' ? parseFloat(DownHoleData[\"Vibración Z\"]).toFixed(2) : \"--\",\n    'Corriente de fuga': DownHoleData != null && typeof DownHoleData[\"Corriente de fuga\"] != 'undefined' ? parseFloat(DownHoleData[\"Corriente de fuga\"]).toFixed(1) : \"--\"\n}\n\n// Archivo\nmsg.columns = Object.keys(msg.payload).toString();\nif (ComStatus)\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 1740,
        "wires": [
            [
                "f6ef5c936a2f64f1"
            ]
        ]
    },
    {
        "id": "f6ef5c936a2f64f1",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "+++/SmartDatalogger/***.csv",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "/home/bcpgrp/node_modules",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "***",
                "fromt": "str",
                "to": "smartdatalogfile",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3120,
        "y": 1740,
        "wires": [
            [
                "624db792d9278081"
            ]
        ]
    },
    {
        "id": "624db792d9278081",
        "type": "csv",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3270,
        "y": 1740,
        "wires": [
            [
                "38dfb44b87844fdf"
            ]
        ]
    },
    {
        "id": "38dfb44b87844fdf",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "fecha",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "fecha_hora",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2710,
        "y": 1820,
        "wires": [
            [
                "85de4bfdecc8488f"
            ],
            [
                "5d0bec7de83934b7"
            ]
        ]
    },
    {
        "id": "85de4bfdecc8488f",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "encabezado?",
        "func": "var antfile = flow.get(\"Antsmartdatalogfile\")||\"none\";\nvar file = flow.get(\"smartdatalogfile\") || [];\nif(antfile !=file){\n    flow.set(\"Antsmartdatalogfile\",file);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 1790,
        "wires": [
            [
                "5d0bec7de83934b7"
            ]
        ]
    },
    {
        "id": "5d0bec7de83934b7",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": ".trim();",
        "func": "msg.payload = msg.payload.trim()+\"\\n\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3010,
        "y": 1820,
        "wires": [
            [
                "8957fbfe4d116bbd"
            ]
        ]
    },
    {
        "id": "8957fbfe4d116bbd",
        "type": "file",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 3140,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "f736a5abb72e972f",
        "type": "inject",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2490,
        "y": 1740,
        "wires": [
            [
                "281862cc6ff52331",
                "9de3a38ace1638b8"
            ]
        ]
    },
    {
        "id": "281862cc6ff52331",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "Activación",
        "func": "var PQA = global.get(\"PQA.Real_Time_Parameters\", 'memoryOnly') || [];\nvar C2S = global.get(\"C2S.Implicit\", 'memoryOnly') || [];\nvar ComStatus = global.get(\"C2S.Comunicacion_Drive\", 'memoryOnly') || false;\nvar DownHoleData = global.get('Process_data.DHS', 'memoryOnly') || [];\nvar RelTx = global.get(\"C2S.RelTx\")||1;\nvar activsmartdata = flow.get(\"smartdatalogactive\",\"memoryOnly\")||false;\nvar flag = false; var time=0;\n\nvar Output_Current = C2S != null && typeof C2S.Output_Current != 'undefined' ? C2S.Output_Current : 0;\nvar Motor_Current = Output_Current/RelTx;\nvar Average_Phase_Voltage = PQA != null && typeof PQA.Average_Phase_Voltage != 'undefined' ? PQA.Average_Phase_Voltage : 0;\nvar Average_Line_Voltage = PQA != null && typeof PQA.Average_Line_Voltage != 'undefined' ? PQA.Average_Line_Voltage : 0;\nvar Output_Power = C2S != null && typeof C2S.Output_Power != 'undefined' ? C2S.Output_Power : 0;\nvar Intake_Pressure = DownHoleData != null && typeof DownHoleData[\"Presión de entrada\"] != 'undefined' ? DownHoleData[\"Presión de entrada\"] : 0;\nvar Discharge_Pressure = DownHoleData != null && typeof DownHoleData[\"Presión de descarga\"] != 'undefined' ? DownHoleData[\"Presión de descarga\"] : 0;\nvar Intake_Temp = DownHoleData != null && typeof DownHoleData[\"Temperatura de entrada\"] != 'undefined' ? DownHoleData[\"Temperatura de entrada\"] : 0;\n\nvar LastOutput_Current = context.get(\"LastOutput_Current\", \"memoryOnly\") || Output_Current;\nvar LastMotor_Current = context.get(\"LastMotor_Current\", \"memoryOnly\") || Motor_Current;\nvar LastAverage_Phase_Voltage = context.get(\"LastAverage_Phase_Voltage\", \"memoryOnly\") || Average_Phase_Voltage;\nvar LastAverage_Line_Voltage = context.get(\"LastAverage_Line_Voltage\", \"memoryOnly\") || Average_Line_Voltage;\nvar LastOutput_Power = context.get(\"LastOutput_Power\", \"memoryOnly\") || Output_Power;\nvar LastIntake_Pressure = context.get(\"LastIntake_Pressure\", \"memoryOnly\") || Intake_Pressure;\nvar LastDischarge_Pressure = context.get(\"LastDischarge_Pressure\", \"memoryOnly\") || Discharge_Pressure;\nvar LastIntake_Temp = context.get(\"LastIntake_Temp\", \"memoryOnly\") || Intake_Temp;\n\npercentagecompare(LastOutput_Current, Output_Current, \"CurrDrive\")==true? flag = true : flag = flag;\npercentagecompare(LastMotor_Current, Motor_Current, \"CurrMot\") == true ? flag = true : flag = flag;\npercentagecompare(LastAverage_Phase_Voltage, Average_Phase_Voltage, \"phasevoltage\") == true ? flag = true : flag = flag;\npercentagecompare(LastAverage_Line_Voltage, Average_Line_Voltage, \"linevoltage\") == true ? flag = true : flag = flag;\npercentagecompare(LastOutput_Power, Output_Power, \"outpower\") == true ? flag = true : flag = flag;\npercentagecompare(LastIntake_Pressure, Intake_Pressure, \"inpressure\") == true ? flag = true : flag = flag;\npercentagecompare(LastDischarge_Pressure, Discharge_Pressure, \"dispressure\") == true ? flag = true : flag = flag;\npercentagecompare(LastIntake_Temp, Intake_Temp, \"intemp\") == true ? flag = true : flag = flag;\n\ncontext.set(\"LastOutput_Current\", Output_Current, \"memoryOnly\");\ncontext.set(\"LastMotor_Current\", Motor_Current, \"memoryOnly\");\ncontext.set(\"LastAverage_Phase_Voltage\", Average_Phase_Voltage, \"memoryOnly\");\ncontext.set(\"LastAverage_Line_Voltage\", Average_Line_Voltage, \"memoryOnly\");\ncontext.set(\"LastOutput_Power\", Output_Power, \"memoryOnly\");\ncontext.set(\"LastIntake_Pressure\", Intake_Pressure, \"memoryOnly\");\ncontext.set(\"LastDischarge_Pressure\", Discharge_Pressure, \"memoryOnly\");\ncontext.set(\"LastIntake_Temp\", Intake_Temp, \"memoryOnly\");\n\nif (ComStatus && flag && !activsmartdata){\n    var date = new Date();\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n\n    flow.set(\"smartdatalogfile\", year + '/' + month + '/' + day);\n}\nmsg.payload = [flag,time];\nreturn msg;\n\n\nfunction percentagecompare (valor1,valor2,smartdatalog){\n    var datalogsetting = flow.get(\"smartdatalog.\" + smartdatalog) || null; var localflag = false;\n    if (datalogsetting!=null){\n        if (typeof datalogsetting.enabled != 'undefined' && typeof datalogsetting.percentage != 'undefined'){\n            if (datalogsetting.enabled == true && Math.abs(((valor1 - valor2) / valor1) * 100) >= datalogsetting.percentage) { localflag = true; typeof datalogsetting.time != \"undefined\" ? (datalogsetting.time > time ? time = datalogsetting.time : time = time):time = time; }\n        }\n    }\n    return localflag;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1880,
        "wires": [
            [
                "68f331b06f4142f2",
                "4555b569a677dcaf"
            ]
        ]
    },
    {
        "id": "388a0627e7b6f7c9",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "smartdatalogactive?",
        "property": "#:(memoryOnly)::smartdatalogactive",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2920,
        "y": 1880,
        "wires": [
            [],
            [
                "9efbbc4fce014bcb"
            ]
        ]
    },
    {
        "id": "9efbbc4fce014bcb",
        "type": "function",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "set delay",
        "func": "flow.set(\"smartdatalogactive\", true, \"memoryOnly\");\nmsg.delay = msg.payload[1]*1000*60;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2900,
        "y": 1960,
        "wires": [
            [
                "a411cc3e683eabea"
            ]
        ]
    },
    {
        "id": "68f331b06f4142f2",
        "type": "debug",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2750,
        "y": 1920,
        "wires": []
    },
    {
        "id": "4555b569a677dcaf",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "true?",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2730,
        "y": 1880,
        "wires": [
            [
                "388a0627e7b6f7c9"
            ]
        ]
    },
    {
        "id": "a411cc3e683eabea",
        "type": "delay",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 3040,
        "y": 1960,
        "wires": [
            [
                "f70dbb20e18055b9"
            ]
        ]
    },
    {
        "id": "f70dbb20e18055b9",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::smartdatalogactive",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "9de3a38ace1638b8",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "smartdatalogactive?",
        "property": "#:(memoryOnly)::smartdatalogactive",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2680,
        "y": 1740,
        "wires": [
            [
                "3120732a7cdecb8c"
            ]
        ]
    },
    {
        "id": "c43eb4c44df0964c",
        "type": "ui_button",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "name": "",
        "group": "d4ce0f7379428df9",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Ayuda",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2550,
        "y": 1660,
        "wires": [
            [
                "92a3ced62fe1792f"
            ]
        ]
    },
    {
        "id": "9cc6dcc0a22ca5be",
        "type": "ui_text",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "group": "d4ce0f7379428df9",
        "order": 8,
        "width": "2",
        "height": "1",
        "name": "activar titulo",
        "label": "",
        "format": "Activar",
        "layout": "row-spread",
        "className": "",
        "x": 1990,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e2ae23cedd8d79b2",
        "type": "ui_text",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "group": "d4ce0f7379428df9",
        "order": 9,
        "width": "3",
        "height": "1",
        "name": "% titulo",
        "label": "",
        "format": "% variación",
        "layout": "row-spread",
        "className": "",
        "x": 1940,
        "y": 1620,
        "wires": []
    },
    {
        "id": "dd86e7bfc458132d",
        "type": "ui_text",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "group": "d4ce0f7379428df9",
        "order": 10,
        "width": "3",
        "height": "1",
        "name": "tiempo monitoreo (min)",
        "label": "",
        "format": "Monitoreo (min)",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1100,
        "wires": []
    },
    {
        "id": "65668775670971ab",
        "type": "ui_text",
        "z": "e7088c4e.cc6b4",
        "g": "ef99c8bf39cb12ee",
        "group": "d4ce0f7379428df9",
        "order": 1,
        "width": "10",
        "height": "1",
        "name": "Smart Datalogger titulo",
        "label": "",
        "format": "Smart Datalogger®",
        "layout": "row-left",
        "className": "",
        "x": 1840,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0fd3e2e27d9d0b07",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "SAG y SWELL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿Desea descargar el archivo de eventos eléctricos SAG y SWELL??",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Dispositivo USB encontrado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1700,
        "y": 420,
        "wires": [
            [
                "b2f24c7fe6177738"
            ]
        ]
    },
    {
        "id": "b2f24c7fe6177738",
        "type": "ui_toast",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SI",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Descargar SmartDatalogger",
        "x": 1920,
        "y": 420,
        "wires": [
            [
                "627e721583dda1c1"
            ]
        ]
    },
    {
        "id": "627e721583dda1c1",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SI",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2110,
        "y": 420,
        "wires": [
            [
                "501877860b9d3fc8",
                "ed649516.fdb838"
            ],
            [
                "ed649516.fdb838"
            ]
        ]
    },
    {
        "id": "501877860b9d3fc8",
        "type": "link out",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "links": [
            "2799609cfcd2c122",
            "5c5a57034b3ebcb6",
            "74580d7aefe3b448"
        ],
        "x": 2235,
        "y": 420,
        "wires": []
    },
    {
        "id": "8c3a98707b868c5f",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "Datalogger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿Desea descargar los archivos de Datalogger?",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Dispositivo USB encontrado",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 380,
        "wires": [
            [
                "bc78207d.aabd4"
            ]
        ]
    },
    {
        "id": "864a29df26985766",
        "type": "ui_toast",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SI",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Descargar SmartDatalogger®",
        "x": 2190,
        "y": 340,
        "wires": [
            [
                "0fddcf4a071bf7c0"
            ]
        ]
    },
    {
        "id": "0fddcf4a071bf7c0",
        "type": "switch",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SI",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2390,
        "y": 340,
        "wires": [
            [
                "f3617af339d8b6d7",
                "8c3a98707b868c5f"
            ],
            [
                "8c3a98707b868c5f"
            ]
        ]
    },
    {
        "id": "f3617af339d8b6d7",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "name": "CP Directory",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "+++/SmartDatalogger",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "USB_Drive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 280,
        "wires": [
            [
                "fc4ece5efd45fece"
            ]
        ]
    },
    {
        "id": "fc4ece5efd45fece",
        "type": "exec",
        "z": "e7088c4e.cc6b4",
        "g": "9b538856.60fb38",
        "command": "sudo cp -R /home/bcpgrp/node_modules/SmartDatalogger ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2830,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ee89b458b55779ef",
        "type": "file",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 730,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "4ae0bb1a2ebb141b",
        "type": "csv",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "no,fecha,hora,alarma",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 610,
        "y": 1360,
        "wires": [
            [
                "ee89b458b55779ef"
            ]
        ]
    },
    {
        "id": "f053a3ef63abbf05",
        "type": "change",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PQAEvents.data",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "+++/PQA/PQAevents.csv",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "USB_Drive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1360,
        "wires": [
            [
                "4ae0bb1a2ebb141b"
            ]
        ]
    },
    {
        "id": "74580d7aefe3b448",
        "type": "link in",
        "z": "e7088c4e.cc6b4",
        "g": "a73c3da33ecbc290",
        "name": "",
        "links": [
            "501877860b9d3fc8"
        ],
        "x": 315,
        "y": 1360,
        "wires": [
            [
                "f053a3ef63abbf05"
            ]
        ]
    },
    {
        "id": "9c3a14196b83240f",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "df1d97613cf01d63",
        "name": "",
        "label": "PMP [ft]",
        "tooltip": "",
        "group": "02dda30351a34cce",
        "order": 7,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 440,
        "y": 80,
        "wires": [
            [
                "7e0250bc4c718e16"
            ]
        ]
    },
    {
        "id": "c07b8fbacd53c32d",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "df1d97613cf01d63",
        "name": "",
        "label": "Profundidad de descarga [ft]",
        "tooltip": "",
        "group": "02dda30351a34cce",
        "order": 3,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 500,
        "y": 120,
        "wires": [
            [
                "b4299e0a9fa3bb6f"
            ]
        ]
    },
    {
        "id": "8c563a0cfe8efb1f",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "df1d97613cf01d63",
        "name": "",
        "label": "Profundidad de sensor [ft]",
        "tooltip": "",
        "group": "02dda30351a34cce",
        "order": 1,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "e5c810643b40337b"
            ]
        ]
    },
    {
        "id": "ec35b7307e4c1490",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "df1d97613cf01d63",
        "name": "",
        "label": "Profundidad de Entrada [ft]",
        "tooltip": "",
        "group": "02dda30351a34cce",
        "order": 5,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 500,
        "y": 200,
        "wires": [
            [
                "ff18b4648c621a74"
            ]
        ]
    },
    {
        "id": "7806a2e04be44a09",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "92c275e98763b20b",
        "name": "",
        "label": "API",
        "tooltip": "",
        "group": "97db202e2e66e6c5",
        "order": 1,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 430,
        "y": 300,
        "wires": [
            [
                "db2a2f73872e3f21"
            ]
        ]
    },
    {
        "id": "d5c2fdb13a35e0df",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "92c275e98763b20b",
        "name": "",
        "label": "Temperatura de fondo [ºF]",
        "tooltip": "",
        "group": "97db202e2e66e6c5",
        "order": 3,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "a29fc34c4378e8bb"
            ]
        ]
    },
    {
        "id": "9042c080dc5671d1",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "92c275e98763b20b",
        "name": "",
        "label": "Densidad del agua [ρ]",
        "tooltip": "",
        "group": "97db202e2e66e6c5",
        "order": 5,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 480,
        "y": 380,
        "wires": [
            [
                "34a6674d0381ec15"
            ]
        ]
    },
    {
        "id": "14bcf7fb6dabf77e",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "81040b9d06e8a4cf",
        "name": "",
        "label": "PWF Prueba [psi]",
        "tooltip": "",
        "group": "d51e5858af3d175d",
        "order": 1,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 470,
        "y": 480,
        "wires": [
            [
                "9e055d7583437201"
            ]
        ]
    },
    {
        "id": "b55f7f014ffe2d47",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "81040b9d06e8a4cf",
        "name": "",
        "label": "BSW Prueba [%]",
        "tooltip": "",
        "group": "d51e5858af3d175d",
        "order": 3,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 470,
        "y": 520,
        "wires": [
            [
                "753ff1f519f5a74c"
            ]
        ]
    },
    {
        "id": "fc9581d79bb51d53",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "81040b9d06e8a4cf",
        "name": "",
        "label": "Q Prueba [BPD]",
        "tooltip": "",
        "group": "d51e5858af3d175d",
        "order": 5,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 460,
        "y": 560,
        "wires": [
            [
                "00e206d0e7ead86d"
            ]
        ]
    },
    {
        "id": "ffec73d93b66549c",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "81040b9d06e8a4cf",
        "name": "",
        "label": "Velocidad de prueba [Hz]",
        "tooltip": "",
        "group": "d51e5858af3d175d",
        "order": 7,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 490,
        "y": 600,
        "wires": [
            [
                "12caa31633404674"
            ]
        ]
    },
    {
        "id": "87baf888d3cb86d4",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "1d7f7e08aa6be572",
        "name": "",
        "label": "Presión de yacimiento [psi]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 1,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 500,
        "y": 700,
        "wires": [
            [
                "3dc5b308a908c905"
            ]
        ]
    },
    {
        "id": "17c98ce1d5f32e3c",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "1d7f7e08aa6be572",
        "name": "",
        "label": "PWF Crítica [psi]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 2,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "bd8ba4215a00bc0c"
            ]
        ]
    },
    {
        "id": "abe91eb5b09be054",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "1d7f7e08aa6be572",
        "name": "",
        "label": "Presión de Burbuja [psi]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 3,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 490,
        "y": 780,
        "wires": [
            [
                "874fe8b7b2726764"
            ]
        ]
    },
    {
        "id": "7e0250bc4c718e16",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "df1d97613cf01d63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.ESTADO_MECANICO.PMP",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b4299e0a9fa3bb6f",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "df1d97613cf01d63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.ESTADO_MECANICO.Profundidad_de_descarga",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e5c810643b40337b",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "df1d97613cf01d63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.ESTADO_MECANICO.Profundidad_de_sensor",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ff18b4648c621a74",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "df1d97613cf01d63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.ESTADO_MECANICO.Profundidad_de_entrada",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "db2a2f73872e3f21",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "92c275e98763b20b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PROPIEDADES_DE_FLUIDO.API",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a29fc34c4378e8bb",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "92c275e98763b20b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PROPIEDADES_DE_FLUIDO.Temperatura_de_fondo",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "34a6674d0381ec15",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "92c275e98763b20b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PROPIEDADES_DE_FLUIDO.Densidad_del_agua",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9e055d7583437201",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "81040b9d06e8a4cf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PRUEBA_DE_PRODUCCION.PWF_Prueba",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "753ff1f519f5a74c",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "81040b9d06e8a4cf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PRUEBA_DE_PRODUCCION.BSW_Prueba",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "00e206d0e7ead86d",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "81040b9d06e8a4cf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PRUEBA_DE_PRODUCCION.Q_Prueba",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "12caa31633404674",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "81040b9d06e8a4cf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PRUEBA_DE_PRODUCCION.Velociad_de_prueba",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "3dc5b308a908c905",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "1d7f7e08aa6be572",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_IPR.Presion_de_yacimiento",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "bd8ba4215a00bc0c",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "1d7f7e08aa6be572",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_IPR.PWF_Critica",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "874fe8b7b2726764",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "1d7f7e08aa6be572",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_IPR.Presion_de_burbuja",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "65f9fd69cd644489",
        "type": "link in",
        "z": "7af521b51c8e6a51",
        "g": "e9acf894c223c544",
        "name": "",
        "links": [
            "54fca041998ebf96",
            "ad87cee4.7dbb5"
        ],
        "x": 155,
        "y": 420,
        "wires": [
            [
                "13e56b225a4f7262"
            ]
        ]
    },
    {
        "id": "209a7e73d606bd63",
        "type": "inject",
        "z": "7af521b51c8e6a51",
        "g": "e9acf894c223c544",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 380,
        "wires": [
            [
                "13e56b225a4f7262"
            ]
        ]
    },
    {
        "id": "024222d619f069a9",
        "type": "ui_template",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "group": "89e12b591528cad3",
        "name": "",
        "order": 1,
        "width": "16",
        "height": "10",
        "format": "",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1160,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "e58bbd637487099d",
        "type": "template",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "Bootstrap",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n    \n  </head>\n  <body>\n    <div class=\"disable-select\">\n        <div class=\"container\">\n            <div class=\"row justify-content-center\" style=\"background-color:#fcfcfc;\">\n                <div class=\"co-12\">{{{chart}}}</div>\n            </div>\n        </div>\n    </div>\n  </body>\n  <script src=\"http://localhost:1880/apexcharts/dist/apexcharts.js\"></script>\n  <style>\n    .disable-select {\n        user-select: none; /* supported by Chrome and Opera /\n        -webkit-user-select: none; / Safari /\n       -khtml-user-select: none; / Konqueror HTML /\n       -moz-user-select: none; / Firefox /\n       -ms-user-select: none; / Internet Explorer/Edge */\n    }\n  </style>\n</html>\n<script>\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.ApexCharts = factory());\n}(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    } else if (call !== void 0) {\n      throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n          result;\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  /*\n   ** Generic functions which are not dependent on ApexCharts\n   */\n  var Utils$1 = /*#__PURE__*/function () {\n    function Utils() {\n      _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, [{\n      key: \"shadeRGBColor\",\n      value: function shadeRGBColor(percent, color) {\n        var f = color.split(','),\n            t = percent < 0 ? 0 : 255,\n            p = percent < 0 ? percent * -1 : percent,\n            R = parseInt(f[0].slice(4), 10),\n            G = parseInt(f[1], 10),\n            B = parseInt(f[2], 10);\n        return 'rgb(' + (Math.round((t - R) * p) + R) + ',' + (Math.round((t - G) * p) + G) + ',' + (Math.round((t - B) * p) + B) + ')';\n      }\n    }, {\n      key: \"shadeHexColor\",\n      value: function shadeHexColor(percent, color) {\n        var f = parseInt(color.slice(1), 16),\n            t = percent < 0 ? 0 : 255,\n            p = percent < 0 ? percent * -1 : percent,\n            R = f >> 16,\n            G = f >> 8 & 0x00ff,\n            B = f & 0x0000ff;\n        return '#' + (0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B)).toString(16).slice(1);\n      } // beautiful color shading blending code\n      // http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n\n    }, {\n      key: \"shadeColor\",\n      value: function shadeColor(p, color) {\n        if (Utils.isColorHex(color)) {\n          return this.shadeHexColor(p, color);\n        } else {\n          return this.shadeRGBColor(p, color);\n        }\n      }\n    }], [{\n      key: \"bind\",\n      value: function bind(fn, me) {\n        return function () {\n          return fn.apply(me, arguments);\n        };\n      }\n    }, {\n      key: \"isObject\",\n      value: function isObject(item) {\n        return item && _typeof(item) === 'object' && !Array.isArray(item) && item != null;\n      } // Type checking that works across different window objects\n\n    }, {\n      key: \"is\",\n      value: function is(type, val) {\n        return Object.prototype.toString.call(val) === '[object ' + type + ']';\n      }\n    }, {\n      key: \"listToArray\",\n      value: function listToArray(list) {\n        var i,\n            array = [];\n\n        for (i = 0; i < list.length; i++) {\n          array[i] = list[i];\n        }\n\n        return array;\n      } // to extend defaults with user options\n      // credit: http://stackoverflow.com/questions/27936772/deep-object-merging-in-es6-es7#answer-34749873\n\n    }, {\n      key: \"extend\",\n      value: function extend(target, source) {\n        var _this = this;\n\n        if (typeof Object.assign !== 'function') {\n\n          (function () {\n            Object.assign = function (target) {\n\n              if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n              }\n\n              var output = Object(target);\n\n              for (var index = 1; index < arguments.length; index++) {\n                var _source = arguments[index];\n\n                if (_source !== undefined && _source !== null) {\n                  for (var nextKey in _source) {\n                    if (_source.hasOwnProperty(nextKey)) {\n                      output[nextKey] = _source[nextKey];\n                    }\n                  }\n                }\n              }\n\n              return output;\n            };\n          })();\n        }\n\n        var output = Object.assign({}, target);\n\n        if (this.isObject(target) && this.isObject(source)) {\n          Object.keys(source).forEach(function (key) {\n            if (_this.isObject(source[key])) {\n              if (!(key in target)) {\n                Object.assign(output, _defineProperty({}, key, source[key]));\n              } else {\n                output[key] = _this.extend(target[key], source[key]);\n              }\n            } else {\n              Object.assign(output, _defineProperty({}, key, source[key]));\n            }\n          });\n        }\n\n        return output;\n      }\n    }, {\n      key: \"extendArray\",\n      value: function extendArray(arrToExtend, resultArr) {\n        var extendedArr = [];\n        arrToExtend.map(function (item) {\n          extendedArr.push(Utils.extend(resultArr, item));\n        });\n        arrToExtend = extendedArr;\n        return arrToExtend;\n      } // If month counter exceeds 12, it starts again from 1\n\n    }, {\n      key: \"monthMod\",\n      value: function monthMod(month) {\n        return month % 12;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone(source) {\n        if (Utils.is('Array', source)) {\n          var cloneResult = [];\n\n          for (var i = 0; i < source.length; i++) {\n            cloneResult[i] = this.clone(source[i]);\n          }\n\n          return cloneResult;\n        } else if (Utils.is('Null', source)) {\n          // fixes an issue where null values were converted to {}\n          return null;\n        } else if (Utils.is('Date', source)) {\n          return source;\n        } else if (_typeof(source) === 'object') {\n          var _cloneResult = {};\n\n          for (var prop in source) {\n            if (source.hasOwnProperty(prop)) {\n              _cloneResult[prop] = this.clone(source[prop]);\n            }\n          }\n\n          return _cloneResult;\n        } else {\n          return source;\n        }\n      }\n    }, {\n      key: \"log10\",\n      value: function log10(x) {\n        return Math.log(x) / Math.LN10;\n      }\n    }, {\n      key: \"roundToBase10\",\n      value: function roundToBase10(x) {\n        return Math.pow(10, Math.floor(Math.log10(x)));\n      }\n    }, {\n      key: \"roundToBase\",\n      value: function roundToBase(x, base) {\n        return Math.pow(base, Math.floor(Math.log(x) / Math.log(base)));\n      }\n    }, {\n      key: \"parseNumber\",\n      value: function parseNumber(val) {\n        if (val === null) return val;\n        return parseFloat(val);\n      }\n    }, {\n      key: \"randomId\",\n      value: function randomId() {\n        return (Math.random() + 1).toString(36).substring(4);\n      }\n    }, {\n      key: \"noExponents\",\n      value: function noExponents(val) {\n        var data = String(val).split(/[eE]/);\n        if (data.length === 1) return data[0];\n        var z = '',\n            sign = val < 0 ? '-' : '',\n            str = data[0].replace('.', ''),\n            mag = Number(data[1]) + 1;\n\n        if (mag < 0) {\n          z = sign + '0.';\n\n          while (mag++) {\n            z += '0';\n          }\n\n          return z + str.replace(/^-/, '');\n        }\n\n        mag -= str.length;\n\n        while (mag--) {\n          z += '0';\n        }\n\n        return str + z;\n      }\n    }, {\n      key: \"getDimensions\",\n      value: function getDimensions(el) {\n        var computedStyle = getComputedStyle(el, null);\n        var elementHeight = el.clientHeight;\n        var elementWidth = el.clientWidth;\n        elementHeight -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n        elementWidth -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n        return [elementWidth, elementHeight];\n      }\n    }, {\n      key: \"getBoundingClientRect\",\n      value: function getBoundingClientRect(element) {\n        var rect = element.getBoundingClientRect();\n        return {\n          top: rect.top,\n          right: rect.right,\n          bottom: rect.bottom,\n          left: rect.left,\n          width: element.clientWidth,\n          height: element.clientHeight,\n          x: rect.left,\n          y: rect.top\n        };\n      }\n    }, {\n      key: \"getLargestStringFromArr\",\n      value: function getLargestStringFromArr(arr) {\n        return arr.reduce(function (a, b) {\n          if (Array.isArray(b)) {\n            b = b.reduce(function (aa, bb) {\n              return aa.length > bb.length ? aa : bb;\n            });\n          }\n\n          return a.length > b.length ? a : b;\n        }, 0);\n      } // http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb#answer-12342275\n\n    }, {\n      key: \"hexToRgba\",\n      value: function hexToRgba() {\n        var hex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#999999';\n        var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.6;\n\n        if (hex.substring(0, 1) !== '#') {\n          hex = '#999999';\n        }\n\n        var h = hex.replace('#', '');\n        h = h.match(new RegExp('(.{' + h.length / 3 + '})', 'g'));\n\n        for (var i = 0; i < h.length; i++) {\n          h[i] = parseInt(h[i].length === 1 ? h[i] + h[i] : h[i], 16);\n        }\n\n        if (typeof opacity !== 'undefined') h.push(opacity);\n        return 'rgba(' + h.join(',') + ')';\n      }\n    }, {\n      key: \"getOpacityFromRGBA\",\n      value: function getOpacityFromRGBA(rgba) {\n        return parseFloat(rgba.replace(/^.*,(.+)\\)/, '$1'));\n      }\n    }, {\n      key: \"rgb2hex\",\n      value: function rgb2hex(rgb) {\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n        return rgb && rgb.length === 4 ? '#' + ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\n      }\n    }, {\n      key: \"isColorHex\",\n      value: function isColorHex(color) {\n        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(color);\n      }\n    }, {\n      key: \"getPolygonPos\",\n      value: function getPolygonPos(size, dataPointsLen) {\n        var dotsArray = [];\n        var angle = Math.PI * 2 / dataPointsLen;\n\n        for (var i = 0; i < dataPointsLen; i++) {\n          var curPos = {};\n          curPos.x = size * Math.sin(i * angle);\n          curPos.y = -size * Math.cos(i * angle);\n          dotsArray.push(curPos);\n        }\n\n        return dotsArray;\n      }\n    }, {\n      key: \"polarToCartesian\",\n      value: function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n        var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n        return {\n          x: centerX + radius * Math.cos(angleInRadians),\n          y: centerY + radius * Math.sin(angleInRadians)\n        };\n      }\n    }, {\n      key: \"escapeString\",\n      value: function escapeString(str) {\n        var escapeWith = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n        var newStr = str.toString().slice();\n        newStr = newStr.replace(/[` ~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]/gi, escapeWith);\n        return newStr;\n      }\n    }, {\n      key: \"negToZero\",\n      value: function negToZero(val) {\n        return val < 0 ? 0 : val;\n      }\n    }, {\n      key: \"moveIndexInArray\",\n      value: function moveIndexInArray(arr, old_index, new_index) {\n        if (new_index >= arr.length) {\n          var k = new_index - arr.length + 1;\n\n          while (k--) {\n            arr.push(undefined);\n          }\n        }\n\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n        return arr;\n      }\n    }, {\n      key: \"extractNumber\",\n      value: function extractNumber(s) {\n        return parseFloat(s.replace(/[^\\d.]*/g, ''));\n      }\n    }, {\n      key: \"findAncestor\",\n      value: function findAncestor(el, cls) {\n        while ((el = el.parentElement) && !el.classList.contains(cls)) {\n        }\n\n        return el;\n      }\n    }, {\n      key: \"setELstyles\",\n      value: function setELstyles(el, styles) {\n        for (var key in styles) {\n          if (styles.hasOwnProperty(key)) {\n            el.style.key = styles[key];\n          }\n        }\n      }\n    }, {\n      key: \"isNumber\",\n      value: function isNumber(value) {\n        return !isNaN(value) && parseFloat(Number(value)) === value && !isNaN(parseInt(value, 10));\n      }\n    }, {\n      key: \"isFloat\",\n      value: function isFloat(n) {\n        return Number(n) === n && n % 1 !== 0;\n      }\n    }, {\n      key: \"isSafari\",\n      value: function isSafari() {\n        return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n      }\n    }, {\n      key: \"isFirefox\",\n      value: function isFirefox() {\n        return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n      }\n    }, {\n      key: \"isIE11\",\n      value: function isIE11() {\n        if (window.navigator.userAgent.indexOf('MSIE') !== -1 || window.navigator.appVersion.indexOf('Trident/') > -1) {\n          return true;\n        }\n      }\n    }, {\n      key: \"isIE\",\n      value: function isIE() {\n        var ua = window.navigator.userAgent;\n        var msie = ua.indexOf('MSIE ');\n\n        if (msie > 0) {\n          // IE 10 or older => return version number\n          return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n        }\n\n        var trident = ua.indexOf('Trident/');\n\n        if (trident > 0) {\n          // IE 11 => return version number\n          var rv = ua.indexOf('rv:');\n          return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n        }\n\n        var edge = ua.indexOf('Edge/');\n\n        if (edge > 0) {\n          // Edge (IE 12+) => return version number\n          return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n        } // other browser\n\n\n        return false;\n      }\n    }]);\n\n    return Utils;\n  }();\n\n  /**\n   * ApexCharts Animation Class.\n   *\n   * @module Animations\n   **/\n\n  var Animations = /*#__PURE__*/function () {\n    function Animations(ctx) {\n      _classCallCheck(this, Animations);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.setEasingFunctions();\n    }\n\n    _createClass(Animations, [{\n      key: \"setEasingFunctions\",\n      value: function setEasingFunctions() {\n        var easing;\n        if (this.w.globals.easing) return;\n        var userDefinedEasing = this.w.config.chart.animations.easing;\n\n        switch (userDefinedEasing) {\n          case 'linear':\n            {\n              easing = '-';\n              break;\n            }\n\n          case 'easein':\n            {\n              easing = '<';\n              break;\n            }\n\n          case 'easeout':\n            {\n              easing = '>';\n              break;\n            }\n\n          case 'easeinout':\n            {\n              easing = '<>';\n              break;\n            }\n\n          case 'swing':\n            {\n              easing = function easing(pos) {\n                var s = 1.70158;\n                var ret = (pos -= 1) * pos * ((s + 1) * pos + s) + 1;\n                return ret;\n              };\n\n              break;\n            }\n\n          case 'bounce':\n            {\n              easing = function easing(pos) {\n                var ret = '';\n\n                if (pos < 1 / 2.75) {\n                  ret = 7.5625 * pos * pos;\n                } else if (pos < 2 / 2.75) {\n                  ret = 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;\n                } else if (pos < 2.5 / 2.75) {\n                  ret = 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;\n                } else {\n                  ret = 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;\n                }\n\n                return ret;\n              };\n\n              break;\n            }\n\n          case 'elastic':\n            {\n              easing = function easing(pos) {\n                if (pos === !!pos) return pos;\n                return Math.pow(2, -10 * pos) * Math.sin((pos - 0.075) * (2 * Math.PI) / 0.3) + 1;\n              };\n\n              break;\n            }\n\n          default:\n            {\n              easing = '<>';\n            }\n        }\n\n        this.w.globals.easing = easing;\n      }\n    }, {\n      key: \"animateLine\",\n      value: function animateLine(el, from, to, speed) {\n        el.attr(from).animate(speed).attr(to);\n      }\n      /*\n       ** Animate radius of a circle element\n       */\n\n    }, {\n      key: \"animateMarker\",\n      value: function animateMarker(el, from, to, speed, easing, cb) {\n        if (!from) from = 0;\n        el.attr({\n          r: from,\n          width: from,\n          height: from\n        }).animate(speed, easing).attr({\n          r: to,\n          width: to.width,\n          height: to.height\n        }).afterAll(function () {\n          cb();\n        });\n      }\n      /*\n       ** Animate radius and position of a circle element\n       */\n\n    }, {\n      key: \"animateCircle\",\n      value: function animateCircle(el, from, to, speed, easing) {\n        el.attr({\n          r: from.r,\n          cx: from.cx,\n          cy: from.cy\n        }).animate(speed, easing).attr({\n          r: to.r,\n          cx: to.cx,\n          cy: to.cy\n        });\n      }\n      /*\n       ** Animate rect properties\n       */\n\n    }, {\n      key: \"animateRect\",\n      value: function animateRect(el, from, to, speed, fn) {\n        el.attr(from).animate(speed).attr(to).afterAll(function () {\n          return fn();\n        });\n      }\n    }, {\n      key: \"animatePathsGradually\",\n      value: function animatePathsGradually(params) {\n        var el = params.el,\n            realIndex = params.realIndex,\n            j = params.j,\n            fill = params.fill,\n            pathFrom = params.pathFrom,\n            pathTo = params.pathTo,\n            speed = params.speed,\n            delay = params.delay;\n        var me = this;\n        var w = this.w;\n        var delayFactor = 0;\n\n        if (w.config.chart.animations.animateGradually.enabled) {\n          delayFactor = w.config.chart.animations.animateGradually.delay;\n        }\n\n        if (w.config.chart.animations.dynamicAnimation.enabled && w.globals.dataChanged && w.config.chart.type !== 'bar') {\n          // disabled due to this bug - https://github.com/apexcharts/vue-apexcharts/issues/75\n          delayFactor = 0;\n        }\n\n        me.morphSVG(el, realIndex, j, w.config.chart.type === 'line' && !w.globals.comboCharts ? 'stroke' : fill, pathFrom, pathTo, speed, delay * delayFactor);\n      }\n    }, {\n      key: \"showDelayedElements\",\n      value: function showDelayedElements() {\n        this.w.globals.delayedElements.forEach(function (d) {\n          var ele = d.el;\n          ele.classList.remove('apexcharts-element-hidden');\n        });\n      }\n    }, {\n      key: \"animationCompleted\",\n      value: function animationCompleted(el) {\n        var w = this.w;\n        if (w.globals.animationEnded) return;\n        w.globals.animationEnded = true;\n        this.showDelayedElements();\n\n        if (typeof w.config.chart.events.animationEnd === 'function') {\n          w.config.chart.events.animationEnd(this.ctx, {\n            el: el,\n            w: w\n          });\n        }\n      } // SVG.js animation for morphing one path to another\n\n    }, {\n      key: \"morphSVG\",\n      value: function morphSVG(el, realIndex, j, fill, pathFrom, pathTo, speed, delay) {\n        var _this = this;\n\n        var w = this.w;\n\n        if (!pathFrom) {\n          pathFrom = el.attr('pathFrom');\n        }\n\n        if (!pathTo) {\n          pathTo = el.attr('pathTo');\n        }\n\n        var disableAnimationForCorrupPath = function disableAnimationForCorrupPath(path) {\n          if (w.config.chart.type === 'radar') {\n            // radar chart drops the path to bottom and hence a corrup path looks ugly\n            // therefore, disable animation for such a case\n            speed = 1;\n          }\n\n          return \"M 0 \".concat(w.globals.gridHeight);\n        };\n\n        if (!pathFrom || pathFrom.indexOf('undefined') > -1 || pathFrom.indexOf('NaN') > -1) {\n          pathFrom = disableAnimationForCorrupPath();\n        }\n\n        if (!pathTo || pathTo.indexOf('undefined') > -1 || pathTo.indexOf('NaN') > -1) {\n          pathTo = disableAnimationForCorrupPath();\n        }\n\n        if (!w.globals.shouldAnimate) {\n          speed = 1;\n        }\n\n        el.plot(pathFrom).animate(1, w.globals.easing, delay).plot(pathFrom).animate(speed, w.globals.easing, delay).plot(pathTo).afterAll(function () {\n          // a flag to indicate that the original mount function can return true now as animation finished here\n          if (Utils$1.isNumber(j)) {\n            if (j === w.globals.series[w.globals.maxValsInArrayIndex].length - 2 && w.globals.shouldAnimate) {\n              _this.animationCompleted(el);\n            }\n          } else if (fill !== 'none' && w.globals.shouldAnimate) {\n            if (!w.globals.comboCharts && realIndex === w.globals.series.length - 1 || w.globals.comboCharts) {\n              _this.animationCompleted(el);\n            }\n          }\n\n          _this.showDelayedElements();\n        });\n      }\n    }]);\n\n    return Animations;\n  }();\n\n  /**\n   * ApexCharts Filters Class for setting hover/active states on the paths.\n   *\n   * @module Formatters\n   **/\n\n  var Filters = /*#__PURE__*/function () {\n    function Filters(ctx) {\n      _classCallCheck(this, Filters);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    } // create a re-usable filter which can be appended other filter effects and applied to multiple elements\n\n\n    _createClass(Filters, [{\n      key: \"getDefaultFilter\",\n      value: function getDefaultFilter(el, i) {\n        var w = this.w;\n        el.unfilter(true);\n        var filter = new window.SVG.Filter();\n        filter.size('120%', '180%', '-5%', '-40%');\n\n        if (w.config.states.normal.filter !== 'none') {\n          this.applyFilter(el, i, w.config.states.normal.filter.type, w.config.states.normal.filter.value);\n        } else {\n          if (w.config.chart.dropShadow.enabled) {\n            this.dropShadow(el, w.config.chart.dropShadow, i);\n          }\n        }\n      }\n    }, {\n      key: \"addNormalFilter\",\n      value: function addNormalFilter(el, i) {\n        var w = this.w; // revert shadow if it was there\n        // but, ignore marker as marker don't have dropshadow yet\n\n        if (w.config.chart.dropShadow.enabled && !el.node.classList.contains('apexcharts-marker')) {\n          this.dropShadow(el, w.config.chart.dropShadow, i);\n        }\n      } // appends dropShadow to the filter object which can be chained with other filter effects\n\n    }, {\n      key: \"addLightenFilter\",\n      value: function addLightenFilter(el, i, attrs) {\n        var _this = this;\n\n        var w = this.w;\n        var intensity = attrs.intensity;\n        el.unfilter(true);\n        var filter = new window.SVG.Filter();\n        el.filter(function (add) {\n          var shadowAttr = w.config.chart.dropShadow;\n\n          if (shadowAttr.enabled) {\n            filter = _this.addShadow(add, i, shadowAttr);\n          } else {\n            filter = add;\n          }\n\n          filter.componentTransfer({\n            rgb: {\n              type: 'linear',\n              slope: 1.5,\n              intercept: intensity\n            }\n          });\n        });\n        el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse');\n\n        this._scaleFilterSize(el.filterer.node);\n      } // appends dropShadow to the filter object which can be chained with other filter effects\n\n    }, {\n      key: \"addDarkenFilter\",\n      value: function addDarkenFilter(el, i, attrs) {\n        var _this2 = this;\n\n        var w = this.w;\n        var intensity = attrs.intensity;\n        el.unfilter(true);\n        var filter = new window.SVG.Filter();\n        el.filter(function (add) {\n          var shadowAttr = w.config.chart.dropShadow;\n\n          if (shadowAttr.enabled) {\n            filter = _this2.addShadow(add, i, shadowAttr);\n          } else {\n            filter = add;\n          }\n\n          filter.componentTransfer({\n            rgb: {\n              type: 'linear',\n              slope: intensity\n            }\n          });\n        });\n        el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse');\n\n        this._scaleFilterSize(el.filterer.node);\n      }\n    }, {\n      key: \"applyFilter\",\n      value: function applyFilter(el, i, filter) {\n        var intensity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n\n        switch (filter) {\n          case 'none':\n            {\n              this.addNormalFilter(el, i);\n              break;\n            }\n\n          case 'lighten':\n            {\n              this.addLightenFilter(el, i, {\n                intensity: intensity\n              });\n              break;\n            }\n\n          case 'darken':\n            {\n              this.addDarkenFilter(el, i, {\n                intensity: intensity\n              });\n              break;\n            }\n        }\n      } // appends dropShadow to the filter object which can be chained with other filter effects\n\n    }, {\n      key: \"addShadow\",\n      value: function addShadow(add, i, attrs) {\n        var blur = attrs.blur,\n            top = attrs.top,\n            left = attrs.left,\n            color = attrs.color,\n            opacity = attrs.opacity;\n        var shadowBlur = add.flood(Array.isArray(color) ? color[i] : color, opacity).composite(add.sourceAlpha, 'in').offset(left, top).gaussianBlur(blur).merge(add.source);\n        return add.blend(add.source, shadowBlur);\n      } // directly adds dropShadow to the element and returns the same element.\n      // the only way it is different from the addShadow() function is that addShadow is chainable to other filters, while this function discards all filters and add dropShadow\n\n    }, {\n      key: \"dropShadow\",\n      value: function dropShadow(el, attrs) {\n        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var top = attrs.top,\n            left = attrs.left,\n            blur = attrs.blur,\n            color = attrs.color,\n            opacity = attrs.opacity,\n            noUserSpaceOnUse = attrs.noUserSpaceOnUse;\n        var w = this.w;\n        el.unfilter(true);\n\n        if (Utils$1.isIE() && w.config.chart.type === 'radialBar') {\n          // in radialbar charts, dropshadow is clipping actual drawing in IE\n          return el;\n        }\n\n        color = Array.isArray(color) ? color[i] : color;\n        el.filter(function (add) {\n          var shadowBlur = null;\n\n          if (Utils$1.isSafari() || Utils$1.isFirefox() || Utils$1.isIE()) {\n            // safari/firefox/IE have some alternative way to use this filter\n            shadowBlur = add.flood(color, opacity).composite(add.sourceAlpha, 'in').offset(left, top).gaussianBlur(blur);\n          } else {\n            shadowBlur = add.flood(color, opacity).composite(add.sourceAlpha, 'in').offset(left, top).gaussianBlur(blur).merge(add.source);\n          }\n\n          add.blend(add.source, shadowBlur);\n        });\n\n        if (!noUserSpaceOnUse) {\n          el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse');\n        }\n\n        this._scaleFilterSize(el.filterer.node);\n\n        return el;\n      }\n    }, {\n      key: \"setSelectionFilter\",\n      value: function setSelectionFilter(el, realIndex, dataPointIndex) {\n        var w = this.w;\n\n        if (typeof w.globals.selectedDataPoints[realIndex] !== 'undefined') {\n          if (w.globals.selectedDataPoints[realIndex].indexOf(dataPointIndex) > -1) {\n            el.node.setAttribute('selected', true);\n            var activeFilter = w.config.states.active.filter;\n\n            if (activeFilter !== 'none') {\n              this.applyFilter(el, realIndex, activeFilter.type, activeFilter.value);\n            }\n          }\n        }\n      }\n    }, {\n      key: \"_scaleFilterSize\",\n      value: function _scaleFilterSize(el) {\n        var setAttributes = function setAttributes(attrs) {\n          for (var key in attrs) {\n            if (attrs.hasOwnProperty(key)) {\n              el.setAttribute(key, attrs[key]);\n            }\n          }\n        };\n\n        setAttributes({\n          width: '200%',\n          height: '200%',\n          x: '-50%',\n          y: '-50%'\n        });\n      }\n    }]);\n\n    return Filters;\n  }();\n\n  /**\n   * ApexCharts Graphics Class for all drawing operations.\n   *\n   * @module Graphics\n   **/\n\n  var Graphics = /*#__PURE__*/function () {\n    function Graphics(ctx) {\n      _classCallCheck(this, Graphics);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Graphics, [{\n      key: \"drawLine\",\n      value: function drawLine(x1, y1, x2, y2) {\n        var lineColor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '#a8a8a8';\n        var dashArray = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n        var strokeWidth = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n        var strokeLineCap = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'butt';\n        var w = this.w;\n        var line = w.globals.dom.Paper.line().attr({\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          stroke: lineColor,\n          'stroke-dasharray': dashArray,\n          'stroke-width': strokeWidth,\n          'stroke-linecap': strokeLineCap\n        });\n        return line;\n      }\n    }, {\n      key: \"drawRect\",\n      value: function drawRect() {\n        var x1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var y1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var x2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var y2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        var radius = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n        var color = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '#fefefe';\n        var opacity = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 1;\n        var strokeWidth = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n        var strokeColor = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n        var strokeDashArray = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 0;\n        var w = this.w;\n        var rect = w.globals.dom.Paper.rect();\n        rect.attr({\n          x: x1,\n          y: y1,\n          width: x2 > 0 ? x2 : 0,\n          height: y2 > 0 ? y2 : 0,\n          rx: radius,\n          ry: radius,\n          opacity: opacity,\n          'stroke-width': strokeWidth !== null ? strokeWidth : 0,\n          stroke: strokeColor !== null ? strokeColor : 'none',\n          'stroke-dasharray': strokeDashArray\n        }); // fix apexcharts.js#1410\n\n        rect.node.setAttribute('fill', color);\n        return rect;\n      }\n    }, {\n      key: \"drawPolygon\",\n      value: function drawPolygon(polygonString) {\n        var stroke = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#e1e1e1';\n        var strokeWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var fill = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'none';\n        var w = this.w;\n        var polygon = w.globals.dom.Paper.polygon(polygonString).attr({\n          fill: fill,\n          stroke: stroke,\n          'stroke-width': strokeWidth\n        });\n        return polygon;\n      }\n    }, {\n      key: \"drawCircle\",\n      value: function drawCircle(radius) {\n        var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var w = this.w;\n        if (radius < 0) radius = 0;\n        var c = w.globals.dom.Paper.circle(radius * 2);\n\n        if (attrs !== null) {\n          c.attr(attrs);\n        }\n\n        return c;\n      }\n    }, {\n      key: \"drawPath\",\n      value: function drawPath(_ref) {\n        var _ref$d = _ref.d,\n            d = _ref$d === void 0 ? '' : _ref$d,\n            _ref$stroke = _ref.stroke,\n            stroke = _ref$stroke === void 0 ? '#a8a8a8' : _ref$stroke,\n            _ref$strokeWidth = _ref.strokeWidth,\n            strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n            fill = _ref.fill,\n            _ref$fillOpacity = _ref.fillOpacity,\n            fillOpacity = _ref$fillOpacity === void 0 ? 1 : _ref$fillOpacity,\n            _ref$strokeOpacity = _ref.strokeOpacity,\n            strokeOpacity = _ref$strokeOpacity === void 0 ? 1 : _ref$strokeOpacity,\n            classes = _ref.classes,\n            _ref$strokeLinecap = _ref.strokeLinecap,\n            strokeLinecap = _ref$strokeLinecap === void 0 ? null : _ref$strokeLinecap,\n            _ref$strokeDashArray = _ref.strokeDashArray,\n            strokeDashArray = _ref$strokeDashArray === void 0 ? 0 : _ref$strokeDashArray;\n        var w = this.w;\n\n        if (strokeLinecap === null) {\n          strokeLinecap = w.config.stroke.lineCap;\n        }\n\n        if (d.indexOf('undefined') > -1 || d.indexOf('NaN') > -1) {\n          d = \"M 0 \".concat(w.globals.gridHeight);\n        }\n\n        var p = w.globals.dom.Paper.path(d).attr({\n          fill: fill,\n          'fill-opacity': fillOpacity,\n          stroke: stroke,\n          'stroke-opacity': strokeOpacity,\n          'stroke-linecap': strokeLinecap,\n          'stroke-width': strokeWidth,\n          'stroke-dasharray': strokeDashArray,\n          class: classes\n        });\n        return p;\n      }\n    }, {\n      key: \"group\",\n      value: function group() {\n        var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var w = this.w;\n        var g = w.globals.dom.Paper.group();\n\n        if (attrs !== null) {\n          g.attr(attrs);\n        }\n\n        return g;\n      }\n    }, {\n      key: \"move\",\n      value: function move(x, y) {\n        var move = ['M', x, y].join(' ');\n        return move;\n      }\n    }, {\n      key: \"line\",\n      value: function line(x, y) {\n        var hORv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var line = null;\n\n        if (hORv === null) {\n          line = ['L', x, y].join(' ');\n        } else if (hORv === 'H') {\n          line = ['H', x].join(' ');\n        } else if (hORv === 'V') {\n          line = ['V', y].join(' ');\n        }\n\n        return line;\n      }\n    }, {\n      key: \"curve\",\n      value: function curve(x1, y1, x2, y2, x, y) {\n        var curve = ['C', x1, y1, x2, y2, x, y].join(' ');\n        return curve;\n      }\n    }, {\n      key: \"quadraticCurve\",\n      value: function quadraticCurve(x1, y1, x, y) {\n        var curve = ['Q', x1, y1, x, y].join(' ');\n        return curve;\n      }\n    }, {\n      key: \"arc\",\n      value: function arc(rx, ry, axisRotation, largeArcFlag, sweepFlag, x, y) {\n        var relative = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n        var coord = 'A';\n        if (relative) coord = 'a';\n        var arc = [coord, rx, ry, axisRotation, largeArcFlag, sweepFlag, x, y].join(' ');\n        return arc;\n      }\n      /**\n       * @memberof Graphics\n       * @param {object}\n       *  i = series's index\n       *  realIndex = realIndex is series's actual index when it was drawn time. After several redraws, the iterating \"i\" may change in loops, but realIndex doesn't\n       *  pathFrom = existing pathFrom to animateTo\n       *  pathTo = new Path to which d attr will be animated from pathFrom to pathTo\n       *  stroke = line Color\n       *  strokeWidth = width of path Line\n       *  fill = it can be gradient, single color, pattern or image\n       *  animationDelay = how much to delay when starting animation (in milliseconds)\n       *  dataChangeSpeed = for dynamic animations, when data changes\n       *  className = class attribute to add\n       * @return {object} svg.js path object\n       **/\n\n    }, {\n      key: \"renderPaths\",\n      value: function renderPaths(_ref2) {\n        var j = _ref2.j,\n            realIndex = _ref2.realIndex,\n            pathFrom = _ref2.pathFrom,\n            pathTo = _ref2.pathTo,\n            stroke = _ref2.stroke,\n            strokeWidth = _ref2.strokeWidth,\n            strokeLinecap = _ref2.strokeLinecap,\n            fill = _ref2.fill,\n            animationDelay = _ref2.animationDelay,\n            initialSpeed = _ref2.initialSpeed,\n            dataChangeSpeed = _ref2.dataChangeSpeed,\n            className = _ref2.className,\n            _ref2$shouldClipToGri = _ref2.shouldClipToGrid,\n            shouldClipToGrid = _ref2$shouldClipToGri === void 0 ? true : _ref2$shouldClipToGri,\n            _ref2$bindEventsOnPat = _ref2.bindEventsOnPaths,\n            bindEventsOnPaths = _ref2$bindEventsOnPat === void 0 ? true : _ref2$bindEventsOnPat,\n            _ref2$drawShadow = _ref2.drawShadow,\n            drawShadow = _ref2$drawShadow === void 0 ? true : _ref2$drawShadow;\n        var w = this.w;\n        var filters = new Filters(this.ctx);\n        var anim = new Animations(this.ctx);\n        var initialAnim = this.w.config.chart.animations.enabled;\n        var dynamicAnim = initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n        var d;\n        var shouldAnimate = !!(initialAnim && !w.globals.resized || dynamicAnim && w.globals.dataChanged && w.globals.shouldAnimate);\n\n        if (shouldAnimate) {\n          d = pathFrom;\n        } else {\n          d = pathTo;\n          w.globals.animationEnded = true;\n        }\n\n        var strokeDashArrayOpt = w.config.stroke.dashArray;\n        var strokeDashArray = 0;\n\n        if (Array.isArray(strokeDashArrayOpt)) {\n          strokeDashArray = strokeDashArrayOpt[realIndex];\n        } else {\n          strokeDashArray = w.config.stroke.dashArray;\n        }\n\n        var el = this.drawPath({\n          d: d,\n          stroke: stroke,\n          strokeWidth: strokeWidth,\n          fill: fill,\n          fillOpacity: 1,\n          classes: className,\n          strokeLinecap: strokeLinecap,\n          strokeDashArray: strokeDashArray\n        });\n        el.attr('index', realIndex);\n\n        if (shouldClipToGrid) {\n          el.attr({\n            'clip-path': \"url(#gridRectMask\".concat(w.globals.cuid, \")\")\n          });\n        } // const defaultFilter = el.filterer\n\n\n        if (w.config.states.normal.filter.type !== 'none') {\n          filters.getDefaultFilter(el, realIndex);\n        } else {\n          if (w.config.chart.dropShadow.enabled && drawShadow) {\n            if (!w.config.chart.dropShadow.enabledOnSeries || w.config.chart.dropShadow.enabledOnSeries && w.config.chart.dropShadow.enabledOnSeries.indexOf(realIndex) !== -1) {\n              var shadow = w.config.chart.dropShadow;\n              filters.dropShadow(el, shadow, realIndex);\n            }\n          }\n        }\n\n        if (bindEventsOnPaths) {\n          el.node.addEventListener('mouseenter', this.pathMouseEnter.bind(this, el));\n          el.node.addEventListener('mouseleave', this.pathMouseLeave.bind(this, el));\n          el.node.addEventListener('mousedown', this.pathMouseDown.bind(this, el));\n        }\n\n        el.attr({\n          pathTo: pathTo,\n          pathFrom: pathFrom\n        });\n        var defaultAnimateOpts = {\n          el: el,\n          j: j,\n          realIndex: realIndex,\n          pathFrom: pathFrom,\n          pathTo: pathTo,\n          fill: fill,\n          strokeWidth: strokeWidth,\n          delay: animationDelay\n        };\n\n        if (initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n          anim.animatePathsGradually(_objectSpread2(_objectSpread2({}, defaultAnimateOpts), {}, {\n            speed: initialSpeed\n          }));\n        } else {\n          if (w.globals.resized || !w.globals.dataChanged) {\n            anim.showDelayedElements();\n          }\n        }\n\n        if (w.globals.dataChanged && dynamicAnim && shouldAnimate) {\n          anim.animatePathsGradually(_objectSpread2(_objectSpread2({}, defaultAnimateOpts), {}, {\n            speed: dataChangeSpeed\n          }));\n        }\n\n        return el;\n      }\n    }, {\n      key: \"drawPattern\",\n      value: function drawPattern(style, width, height) {\n        var stroke = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '#a8a8a8';\n        var strokeWidth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n        var w = this.w;\n        var p = w.globals.dom.Paper.pattern(width, height, function (add) {\n          if (style === 'horizontalLines') {\n            add.line(0, 0, height, 0).stroke({\n              color: stroke,\n              width: strokeWidth + 1\n            });\n          } else if (style === 'verticalLines') {\n            add.line(0, 0, 0, width).stroke({\n              color: stroke,\n              width: strokeWidth + 1\n            });\n          } else if (style === 'slantedLines') {\n            add.line(0, 0, width, height).stroke({\n              color: stroke,\n              width: strokeWidth\n            });\n          } else if (style === 'squares') {\n            add.rect(width, height).fill('none').stroke({\n              color: stroke,\n              width: strokeWidth\n            });\n          } else if (style === 'circles') {\n            add.circle(width).fill('none').stroke({\n              color: stroke,\n              width: strokeWidth\n            });\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"drawGradient\",\n      value: function drawGradient(style, gfrom, gto, opacityFrom, opacityTo) {\n        var size = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var stops = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n        var colorStops = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n        var i = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;\n        var w = this.w;\n        var g;\n\n        if (gfrom.length < 9 && gfrom.indexOf('#') === 0) {\n          // if the hex contains alpha and is of 9 digit, skip the opacity\n          gfrom = Utils$1.hexToRgba(gfrom, opacityFrom);\n        }\n\n        if (gto.length < 9 && gto.indexOf('#') === 0) {\n          gto = Utils$1.hexToRgba(gto, opacityTo);\n        }\n\n        var stop1 = 0;\n        var stop2 = 1;\n        var stop3 = 1;\n        var stop4 = null;\n\n        if (stops !== null) {\n          stop1 = typeof stops[0] !== 'undefined' ? stops[0] / 100 : 0;\n          stop2 = typeof stops[1] !== 'undefined' ? stops[1] / 100 : 1;\n          stop3 = typeof stops[2] !== 'undefined' ? stops[2] / 100 : 1;\n          stop4 = typeof stops[3] !== 'undefined' ? stops[3] / 100 : null;\n        }\n\n        var radial = !!(w.config.chart.type === 'donut' || w.config.chart.type === 'pie' || w.config.chart.type === 'polarArea' || w.config.chart.type === 'bubble');\n\n        if (colorStops === null || colorStops.length === 0) {\n          g = w.globals.dom.Paper.gradient(radial ? 'radial' : 'linear', function (stop) {\n            stop.at(stop1, gfrom, opacityFrom);\n            stop.at(stop2, gto, opacityTo);\n            stop.at(stop3, gto, opacityTo);\n\n            if (stop4 !== null) {\n              stop.at(stop4, gfrom, opacityFrom);\n            }\n          });\n        } else {\n          g = w.globals.dom.Paper.gradient(radial ? 'radial' : 'linear', function (stop) {\n            var gradientStops = Array.isArray(colorStops[i]) ? colorStops[i] : colorStops;\n            gradientStops.forEach(function (s) {\n              stop.at(s.offset / 100, s.color, s.opacity);\n            });\n          });\n        }\n\n        if (!radial) {\n          if (style === 'vertical') {\n            g.from(0, 0).to(0, 1);\n          } else if (style === 'diagonal') {\n            g.from(0, 0).to(1, 1);\n          } else if (style === 'horizontal') {\n            g.from(0, 1).to(1, 1);\n          } else if (style === 'diagonal2') {\n            g.from(1, 0).to(0, 1);\n          }\n        } else {\n          var offx = w.globals.gridWidth / 2;\n          var offy = w.globals.gridHeight / 2;\n\n          if (w.config.chart.type !== 'bubble') {\n            g.attr({\n              gradientUnits: 'userSpaceOnUse',\n              cx: offx,\n              cy: offy,\n              r: size\n            });\n          } else {\n            g.attr({\n              cx: 0.5,\n              cy: 0.5,\n              r: 0.8,\n              fx: 0.2,\n              fy: 0.2\n            });\n          }\n        }\n\n        return g;\n      }\n    }, {\n      key: \"drawText\",\n      value: function drawText(_ref3) {\n        var x = _ref3.x,\n            y = _ref3.y,\n            text = _ref3.text,\n            textAnchor = _ref3.textAnchor,\n            fontSize = _ref3.fontSize,\n            fontFamily = _ref3.fontFamily,\n            fontWeight = _ref3.fontWeight,\n            foreColor = _ref3.foreColor,\n            opacity = _ref3.opacity,\n            _ref3$cssClass = _ref3.cssClass,\n            cssClass = _ref3$cssClass === void 0 ? '' : _ref3$cssClass,\n            _ref3$isPlainText = _ref3.isPlainText,\n            isPlainText = _ref3$isPlainText === void 0 ? true : _ref3$isPlainText;\n        var w = this.w;\n        if (typeof text === 'undefined') text = '';\n\n        if (!textAnchor) {\n          textAnchor = 'start';\n        }\n\n        if (!foreColor || !foreColor.length) {\n          foreColor = w.config.chart.foreColor;\n        }\n\n        fontFamily = fontFamily || w.config.chart.fontFamily;\n        fontWeight = fontWeight || 'regular';\n        var elText;\n\n        if (Array.isArray(text)) {\n          elText = w.globals.dom.Paper.text(function (add) {\n            for (var i = 0; i < text.length; i++) {\n              i === 0 ? add.tspan(text[i]) : add.tspan(text[i]).newLine();\n            }\n          });\n        } else {\n          elText = isPlainText ? w.globals.dom.Paper.plain(text) : w.globals.dom.Paper.text(function (add) {\n            return add.tspan(text);\n          });\n        }\n\n        elText.attr({\n          x: x,\n          y: y,\n          'text-anchor': textAnchor,\n          'dominant-baseline': 'auto',\n          'font-size': fontSize,\n          'font-family': fontFamily,\n          'font-weight': fontWeight,\n          fill: foreColor,\n          class: 'apexcharts-text ' + cssClass\n        });\n        elText.node.style.fontFamily = fontFamily;\n        elText.node.style.opacity = opacity;\n        return elText;\n      }\n    }, {\n      key: \"drawMarker\",\n      value: function drawMarker(x, y, opts) {\n        x = x || 0;\n        var size = opts.pSize || 0;\n        var elPoint = null;\n\n        if (opts.shape === 'square' || opts.shape === 'rect') {\n          var radius = opts.pRadius === undefined ? size / 2 : opts.pRadius;\n\n          if (y === null || !size) {\n            size = 0;\n            radius = 0;\n          }\n\n          var nSize = size * 1.2 + radius;\n          var p = this.drawRect(nSize, nSize, nSize, nSize, radius);\n          p.attr({\n            x: x - nSize / 2,\n            y: y - nSize / 2,\n            cx: x,\n            cy: y,\n            class: opts.class ? opts.class : '',\n            fill: opts.pointFillColor,\n            'fill-opacity': opts.pointFillOpacity ? opts.pointFillOpacity : 1,\n            stroke: opts.pointStrokeColor,\n            'stroke-width': opts.pointStrokeWidth ? opts.pointStrokeWidth : 0,\n            'stroke-opacity': opts.pointStrokeOpacity ? opts.pointStrokeOpacity : 1\n          });\n          elPoint = p;\n        } else if (opts.shape === 'circle' || !opts.shape) {\n          if (!Utils$1.isNumber(y)) {\n            size = 0;\n            y = 0;\n          } // let nSize = size - opts.pRadius / 2 < 0 ? 0 : size - opts.pRadius / 2\n\n\n          elPoint = this.drawCircle(size, {\n            cx: x,\n            cy: y,\n            class: opts.class ? opts.class : '',\n            stroke: opts.pointStrokeColor,\n            fill: opts.pointFillColor,\n            'fill-opacity': opts.pointFillOpacity ? opts.pointFillOpacity : 1,\n            'stroke-width': opts.pointStrokeWidth ? opts.pointStrokeWidth : 0,\n            'stroke-opacity': opts.pointStrokeOpacity ? opts.pointStrokeOpacity : 1\n          });\n        }\n\n        return elPoint;\n      }\n    }, {\n      key: \"pathMouseEnter\",\n      value: function pathMouseEnter(path, e) {\n        var w = this.w;\n        var filters = new Filters(this.ctx);\n        var i = parseInt(path.node.getAttribute('index'), 10);\n        var j = parseInt(path.node.getAttribute('j'), 10);\n\n        if (typeof w.config.chart.events.dataPointMouseEnter === 'function') {\n          w.config.chart.events.dataPointMouseEnter(e, this.ctx, {\n            seriesIndex: i,\n            dataPointIndex: j,\n            w: w\n          });\n        }\n\n        this.ctx.events.fireEvent('dataPointMouseEnter', [e, this.ctx, {\n          seriesIndex: i,\n          dataPointIndex: j,\n          w: w\n        }]);\n\n        if (w.config.states.active.filter.type !== 'none') {\n          if (path.node.getAttribute('selected') === 'true') {\n            return;\n          }\n        }\n\n        if (w.config.states.hover.filter.type !== 'none') {\n          if (!w.globals.isTouchDevice) {\n            var hoverFilter = w.config.states.hover.filter;\n            filters.applyFilter(path, i, hoverFilter.type, hoverFilter.value);\n          }\n        }\n      }\n    }, {\n      key: \"pathMouseLeave\",\n      value: function pathMouseLeave(path, e) {\n        var w = this.w;\n        var filters = new Filters(this.ctx);\n        var i = parseInt(path.node.getAttribute('index'), 10);\n        var j = parseInt(path.node.getAttribute('j'), 10);\n\n        if (typeof w.config.chart.events.dataPointMouseLeave === 'function') {\n          w.config.chart.events.dataPointMouseLeave(e, this.ctx, {\n            seriesIndex: i,\n            dataPointIndex: j,\n            w: w\n          });\n        }\n\n        this.ctx.events.fireEvent('dataPointMouseLeave', [e, this.ctx, {\n          seriesIndex: i,\n          dataPointIndex: j,\n          w: w\n        }]);\n\n        if (w.config.states.active.filter.type !== 'none') {\n          if (path.node.getAttribute('selected') === 'true') {\n            return;\n          }\n        }\n\n        if (w.config.states.hover.filter.type !== 'none') {\n          filters.getDefaultFilter(path, i);\n        }\n      }\n    }, {\n      key: \"pathMouseDown\",\n      value: function pathMouseDown(path, e) {\n        var w = this.w;\n        var filters = new Filters(this.ctx);\n        var i = parseInt(path.node.getAttribute('index'), 10);\n        var j = parseInt(path.node.getAttribute('j'), 10);\n        var selected = 'false';\n\n        if (path.node.getAttribute('selected') === 'true') {\n          path.node.setAttribute('selected', 'false');\n\n          if (w.globals.selectedDataPoints[i].indexOf(j) > -1) {\n            var index = w.globals.selectedDataPoints[i].indexOf(j);\n            w.globals.selectedDataPoints[i].splice(index, 1);\n          }\n        } else {\n          if (!w.config.states.active.allowMultipleDataPointsSelection && w.globals.selectedDataPoints.length > 0) {\n            w.globals.selectedDataPoints = [];\n            var elPaths = w.globals.dom.Paper.select('.apexcharts-series path').members;\n            var elCircles = w.globals.dom.Paper.select('.apexcharts-series circle, .apexcharts-series rect').members;\n\n            var deSelect = function deSelect(els) {\n              Array.prototype.forEach.call(els, function (el) {\n                el.node.setAttribute('selected', 'false');\n                filters.getDefaultFilter(el, i);\n              });\n            };\n\n            deSelect(elPaths);\n            deSelect(elCircles);\n          }\n\n          path.node.setAttribute('selected', 'true');\n          selected = 'true';\n\n          if (typeof w.globals.selectedDataPoints[i] === 'undefined') {\n            w.globals.selectedDataPoints[i] = [];\n          }\n\n          w.globals.selectedDataPoints[i].push(j);\n        }\n\n        if (selected === 'true') {\n          var activeFilter = w.config.states.active.filter;\n\n          if (activeFilter !== 'none') {\n            filters.applyFilter(path, i, activeFilter.type, activeFilter.value);\n          }\n        } else {\n          if (w.config.states.active.filter.type !== 'none') {\n            filters.getDefaultFilter(path, i);\n          }\n        }\n\n        if (typeof w.config.chart.events.dataPointSelection === 'function') {\n          w.config.chart.events.dataPointSelection(e, this.ctx, {\n            selectedDataPoints: w.globals.selectedDataPoints,\n            seriesIndex: i,\n            dataPointIndex: j,\n            w: w\n          });\n        }\n\n        if (e) {\n          this.ctx.events.fireEvent('dataPointSelection', [e, this.ctx, {\n            selectedDataPoints: w.globals.selectedDataPoints,\n            seriesIndex: i,\n            dataPointIndex: j,\n            w: w\n          }]);\n        }\n      }\n    }, {\n      key: \"rotateAroundCenter\",\n      value: function rotateAroundCenter(el) {\n        var coord = {};\n\n        if (el && typeof el.getBBox === 'function') {\n          coord = el.getBBox();\n        }\n\n        var x = coord.x + coord.width / 2;\n        var y = coord.y + coord.height / 2;\n        return {\n          x: x,\n          y: y\n        };\n      }\n    }, {\n      key: \"getTextRects\",\n      value: function getTextRects(text, fontSize, fontFamily, transform) {\n        var useBBox = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n        var w = this.w;\n        var virtualText = this.drawText({\n          x: -200,\n          y: -200,\n          text: text,\n          textAnchor: 'start',\n          fontSize: fontSize,\n          fontFamily: fontFamily,\n          foreColor: '#fff',\n          opacity: 0\n        });\n\n        if (transform) {\n          virtualText.attr('transform', transform);\n        }\n\n        w.globals.dom.Paper.add(virtualText);\n        var rect = virtualText.bbox();\n\n        if (!useBBox) {\n          rect = virtualText.node.getBoundingClientRect();\n        }\n\n        virtualText.remove();\n        return {\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      /**\n       * append ... to long text\n       * http://stackoverflow.com/questions/9241315/trimming-text-to-a-given-pixel-width-in-svg\n       * @memberof Graphics\n       **/\n\n    }, {\n      key: \"placeTextWithEllipsis\",\n      value: function placeTextWithEllipsis(textObj, textString, width) {\n        if (typeof textObj.getComputedTextLength !== 'function') return;\n        textObj.textContent = textString;\n\n        if (textString.length > 0) {\n          // ellipsis is needed\n          if (textObj.getComputedTextLength() >= width / 1.1) {\n            for (var x = textString.length - 3; x > 0; x -= 3) {\n              if (textObj.getSubStringLength(0, x) <= width / 1.1) {\n                textObj.textContent = textString.substring(0, x) + '...';\n                return;\n              }\n            }\n\n            textObj.textContent = '.'; // can't place at all\n          }\n        }\n      }\n    }], [{\n      key: \"setAttrs\",\n      value: function setAttrs(el, attrs) {\n        for (var key in attrs) {\n          if (attrs.hasOwnProperty(key)) {\n            el.setAttribute(key, attrs[key]);\n          }\n        }\n      }\n    }]);\n\n    return Graphics;\n  }();\n\n  var Helpers$4 = /*#__PURE__*/function () {\n    function Helpers(annoCtx) {\n      _classCallCheck(this, Helpers);\n\n      this.w = annoCtx.w;\n      this.annoCtx = annoCtx;\n    }\n\n    _createClass(Helpers, [{\n      key: \"setOrientations\",\n      value: function setOrientations(anno) {\n        var annoIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var w = this.w;\n\n        if (anno.label.orientation === 'vertical') {\n          var i = annoIndex !== null ? annoIndex : 0;\n          var xAnno = w.globals.dom.baseEl.querySelector(\".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='\".concat(i, \"']\"));\n\n          if (xAnno !== null) {\n            var xAnnoCoord = xAnno.getBoundingClientRect();\n            xAnno.setAttribute('x', parseFloat(xAnno.getAttribute('x')) - xAnnoCoord.height + 4);\n\n            if (anno.label.position === 'top') {\n              xAnno.setAttribute('y', parseFloat(xAnno.getAttribute('y')) + xAnnoCoord.width);\n            } else {\n              xAnno.setAttribute('y', parseFloat(xAnno.getAttribute('y')) - xAnnoCoord.width);\n            }\n\n            var annoRotatingCenter = this.annoCtx.graphics.rotateAroundCenter(xAnno);\n            var x = annoRotatingCenter.x;\n            var y = annoRotatingCenter.y;\n            xAnno.setAttribute('transform', \"rotate(-90 \".concat(x, \" \").concat(y, \")\"));\n          }\n        }\n      }\n    }, {\n      key: \"addBackgroundToAnno\",\n      value: function addBackgroundToAnno(annoEl, anno) {\n        var w = this.w;\n        if (!annoEl || typeof anno.label.text === 'undefined' || typeof anno.label.text !== 'undefined' && !String(anno.label.text).trim()) return null;\n        var elGridRect = w.globals.dom.baseEl.querySelector('.apexcharts-grid').getBoundingClientRect();\n        var coords = annoEl.getBoundingClientRect();\n        var pleft = anno.label.style.padding.left;\n        var pright = anno.label.style.padding.right;\n        var ptop = anno.label.style.padding.top;\n        var pbottom = anno.label.style.padding.bottom;\n\n        if (anno.label.orientation === 'vertical') {\n          ptop = anno.label.style.padding.left;\n          pbottom = anno.label.style.padding.right;\n          pleft = anno.label.style.padding.top;\n          pright = anno.label.style.padding.bottom;\n        }\n\n        var x1 = coords.left - elGridRect.left - pleft;\n        var y1 = coords.top - elGridRect.top - ptop;\n        var elRect = this.annoCtx.graphics.drawRect(x1 - w.globals.barPadForNumericAxis, y1, coords.width + pleft + pright, coords.height + ptop + pbottom, anno.label.borderRadius, anno.label.style.background, 1, anno.label.borderWidth, anno.label.borderColor, 0);\n\n        if (anno.id) {\n          elRect.node.classList.add(Utils$1.escapeString(anno.id));\n        }\n\n        return elRect;\n      }\n    }, {\n      key: \"annotationsBackground\",\n      value: function annotationsBackground() {\n        var _this = this;\n\n        var w = this.w;\n\n        var add = function add(anno, i, type) {\n          var annoLabel = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-annotations .apexcharts-\").concat(type, \"-annotation-label[rel='\").concat(i, \"']\"));\n\n          if (annoLabel) {\n            var parent = annoLabel.parentNode;\n\n            var elRect = _this.addBackgroundToAnno(annoLabel, anno);\n\n            if (elRect) {\n              parent.insertBefore(elRect.node, annoLabel);\n\n              if (anno.label.mouseEnter) {\n                elRect.node.addEventListener('mouseenter', anno.label.mouseEnter.bind(_this, anno));\n              }\n\n              if (anno.label.mouseLeave) {\n                elRect.node.addEventListener('mouseleave', anno.label.mouseLeave.bind(_this, anno));\n              }\n            }\n          }\n        };\n\n        w.config.annotations.xaxis.map(function (anno, i) {\n          add(anno, i, 'xaxis');\n        });\n        w.config.annotations.yaxis.map(function (anno, i) {\n          add(anno, i, 'yaxis');\n        });\n        w.config.annotations.points.map(function (anno, i) {\n          add(anno, i, 'point');\n        });\n      }\n    }, {\n      key: \"getStringX\",\n      value: function getStringX(x) {\n        var w = this.w;\n        var rX = x;\n\n        if (w.config.xaxis.convertedCatToNumeric && w.globals.categoryLabels.length) {\n          x = w.globals.categoryLabels.indexOf(x) + 1;\n        }\n\n        var catIndex = w.globals.labels.indexOf(x);\n        var xLabel = w.globals.dom.baseEl.querySelector('.apexcharts-xaxis-texts-g text:nth-child(' + (catIndex + 1) + ')');\n\n        if (xLabel) {\n          rX = parseFloat(xLabel.getAttribute('x'));\n        }\n\n        return rX;\n      }\n    }]);\n\n    return Helpers;\n  }();\n\n  var XAnnotations = /*#__PURE__*/function () {\n    function XAnnotations(annoCtx) {\n      _classCallCheck(this, XAnnotations);\n\n      this.w = annoCtx.w;\n      this.annoCtx = annoCtx;\n      this.invertAxis = this.annoCtx.invertAxis;\n    }\n\n    _createClass(XAnnotations, [{\n      key: \"addXaxisAnnotation\",\n      value: function addXaxisAnnotation(anno, parent, index) {\n        var w = this.w;\n        var min = this.invertAxis ? w.globals.minY : w.globals.minX;\n        var max = this.invertAxis ? w.globals.maxY : w.globals.maxX;\n        var range = this.invertAxis ? w.globals.yRange[0] : w.globals.xRange;\n        var x1 = (anno.x - min) / (range / w.globals.gridWidth);\n\n        if (this.annoCtx.inversedReversedAxis) {\n          x1 = (max - anno.x) / (range / w.globals.gridWidth);\n        }\n\n        var text = anno.label.text;\n\n        if ((w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) && !this.invertAxis && !w.globals.dataFormatXNumeric) {\n          x1 = this.annoCtx.helpers.getStringX(anno.x);\n        }\n\n        var strokeDashArray = anno.strokeDashArray;\n        if (!Utils$1.isNumber(x1)) return;\n\n        if (anno.x2 === null || typeof anno.x2 === 'undefined') {\n          var line = this.annoCtx.graphics.drawLine(x1 + anno.offsetX, // x1\n          0 + anno.offsetY, // y1\n          x1 + anno.offsetX, // x2\n          w.globals.gridHeight + anno.offsetY, // y2\n          anno.borderColor, // lineColor\n          strokeDashArray, //dashArray\n          anno.borderWidth);\n          parent.appendChild(line.node);\n\n          if (anno.id) {\n            line.node.classList.add(anno.id);\n          }\n        } else {\n          var x2 = (anno.x2 - min) / (range / w.globals.gridWidth);\n\n          if (this.annoCtx.inversedReversedAxis) {\n            x2 = (max - anno.x2) / (range / w.globals.gridWidth);\n          }\n\n          if ((w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) && !this.invertAxis && !w.globals.dataFormatXNumeric) {\n            x2 = this.annoCtx.helpers.getStringX(anno.x2);\n          }\n\n          if (x2 < x1) {\n            var temp = x1;\n            x1 = x2;\n            x2 = temp;\n          }\n\n          var rect = this.annoCtx.graphics.drawRect(x1 + anno.offsetX, // x1\n          0 + anno.offsetY, // y1\n          x2 - x1, // x2\n          w.globals.gridHeight + anno.offsetY, // y2\n          0, // radius\n          anno.fillColor, // color\n          anno.opacity, // opacity,\n          1, // strokeWidth\n          anno.borderColor, // strokeColor\n          strokeDashArray // stokeDashArray\n          );\n          rect.node.classList.add('apexcharts-annotation-rect');\n          rect.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n          parent.appendChild(rect.node);\n\n          if (anno.id) {\n            rect.node.classList.add(anno.id);\n          }\n        }\n\n        var textY = anno.label.position === 'top' ? 4 : w.globals.gridHeight;\n        var textRects = this.annoCtx.graphics.getTextRects(text, parseFloat(anno.label.style.fontSize));\n        var elText = this.annoCtx.graphics.drawText({\n          x: x1 + anno.label.offsetX,\n          y: textY + anno.label.offsetY - (anno.label.orientation === 'vertical' ? anno.label.position === 'top' ? textRects.width / 2 - 12 : -textRects.width / 2 : 0),\n          text: text,\n          textAnchor: anno.label.textAnchor,\n          fontSize: anno.label.style.fontSize,\n          fontFamily: anno.label.style.fontFamily,\n          fontWeight: anno.label.style.fontWeight,\n          foreColor: anno.label.style.color,\n          cssClass: \"apexcharts-xaxis-annotation-label \".concat(anno.label.style.cssClass, \" \").concat(anno.id ? anno.id : '')\n        });\n        elText.attr({\n          rel: index\n        });\n        parent.appendChild(elText.node); // after placing the annotations on svg, set any vertically placed annotations\n\n        this.annoCtx.helpers.setOrientations(anno, index);\n      }\n    }, {\n      key: \"drawXAxisAnnotations\",\n      value: function drawXAxisAnnotations() {\n        var _this = this;\n\n        var w = this.w;\n        var elg = this.annoCtx.graphics.group({\n          class: 'apexcharts-xaxis-annotations'\n        });\n        w.config.annotations.xaxis.map(function (anno, index) {\n          _this.addXaxisAnnotation(anno, elg.node, index);\n        });\n        return elg;\n      }\n    }]);\n\n    return XAnnotations;\n  }();\n\n  /*\n   ** Util functions which are dependent on ApexCharts instance\n   */\n  var CoreUtils = /*#__PURE__*/function () {\n    function CoreUtils(ctx) {\n      _classCallCheck(this, CoreUtils);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(CoreUtils, [{\n      key: \"getStackedSeriesTotals\",\n      value:\n      /**\n       * @memberof CoreUtils\n       * returns the sum of all individual values in a multiple stacked series\n       * Eg. w.globals.series = [[32,33,43,12], [2,3,5,1]]\n       *  @return [34,36,48,13]\n       **/\n      function getStackedSeriesTotals() {\n        var w = this.w;\n        var total = [];\n        if (w.globals.series.length === 0) return total;\n\n        for (var i = 0; i < w.globals.series[w.globals.maxValsInArrayIndex].length; i++) {\n          var t = 0;\n\n          for (var j = 0; j < w.globals.series.length; j++) {\n            if (typeof w.globals.series[j][i] !== 'undefined') {\n              t += w.globals.series[j][i];\n            }\n          }\n\n          total.push(t);\n        }\n\n        w.globals.stackedSeriesTotals = total;\n        return total;\n      } // get total of the all values inside all series\n\n    }, {\n      key: \"getSeriesTotalByIndex\",\n      value: function getSeriesTotalByIndex() {\n        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n        if (index === null) {\n          // non-plot chart types - pie / donut / circle\n          return this.w.config.series.reduce(function (acc, cur) {\n            return acc + cur;\n          }, 0);\n        } else {\n          // axis charts - supporting multiple series\n          return this.w.globals.series[index].reduce(function (acc, cur) {\n            return acc + cur;\n          }, 0);\n        }\n      }\n    }, {\n      key: \"isSeriesNull\",\n      value: function isSeriesNull() {\n        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var r = [];\n\n        if (index === null) {\n          // non-plot chart types - pie / donut / circle\n          r = this.w.config.series.filter(function (d) {\n            return d !== null;\n          });\n        } else {\n          // axis charts - supporting multiple series\n          r = this.w.config.series[index].data.filter(function (d) {\n            return d !== null;\n          });\n        }\n\n        return r.length === 0;\n      }\n    }, {\n      key: \"seriesHaveSameValues\",\n      value: function seriesHaveSameValues(index) {\n        return this.w.globals.series[index].every(function (val, i, arr) {\n          return val === arr[0];\n        });\n      }\n    }, {\n      key: \"getCategoryLabels\",\n      value: function getCategoryLabels(labels) {\n        var w = this.w;\n        var catLabels = labels.slice();\n\n        if (w.config.xaxis.convertedCatToNumeric) {\n          catLabels = labels.map(function (i, li) {\n            return w.config.xaxis.labels.formatter(i - w.globals.minX + 1);\n          });\n        }\n\n        return catLabels;\n      } // maxValsInArrayIndex is the index of series[] which has the largest number of items\n\n    }, {\n      key: \"getLargestSeries\",\n      value: function getLargestSeries() {\n        var w = this.w;\n        w.globals.maxValsInArrayIndex = w.globals.series.map(function (a) {\n          return a.length;\n        }).indexOf(Math.max.apply(Math, w.globals.series.map(function (a) {\n          return a.length;\n        })));\n      }\n    }, {\n      key: \"getLargestMarkerSize\",\n      value: function getLargestMarkerSize() {\n        var w = this.w;\n        var size = 0;\n        w.globals.markers.size.forEach(function (m) {\n          size = Math.max(size, m);\n        });\n        w.globals.markers.largestSize = size;\n        return size;\n      }\n      /**\n       * @memberof Core\n       * returns the sum of all values in a series\n       * Eg. w.globals.series = [[32,33,43,12], [2,3,5,1]]\n       *  @return [120, 11]\n       **/\n\n    }, {\n      key: \"getSeriesTotals\",\n      value: function getSeriesTotals() {\n        var w = this.w;\n        w.globals.seriesTotals = w.globals.series.map(function (ser, index) {\n          var total = 0;\n\n          if (Array.isArray(ser)) {\n            for (var j = 0; j < ser.length; j++) {\n              total += ser[j];\n            }\n          } else {\n            // for pie/donuts/gauges\n            total += ser;\n          }\n\n          return total;\n        });\n      }\n    }, {\n      key: \"getSeriesTotalsXRange\",\n      value: function getSeriesTotalsXRange(minX, maxX) {\n        var w = this.w;\n        var seriesTotalsXRange = w.globals.series.map(function (ser, index) {\n          var total = 0;\n\n          for (var j = 0; j < ser.length; j++) {\n            if (w.globals.seriesX[index][j] > minX && w.globals.seriesX[index][j] < maxX) {\n              total += ser[j];\n            }\n          }\n\n          return total;\n        });\n        return seriesTotalsXRange;\n      }\n      /**\n       * @memberof CoreUtils\n       * returns the percentage value of all individual values which can be used in a 100% stacked series\n       * Eg. w.globals.series = [[32, 33, 43, 12], [2, 3, 5, 1]]\n       *  @return [[94.11, 91.66, 89.58, 92.30], [5.88, 8.33, 10.41, 7.7]]\n       **/\n\n    }, {\n      key: \"getPercentSeries\",\n      value: function getPercentSeries() {\n        var w = this.w;\n        w.globals.seriesPercent = w.globals.series.map(function (ser, index) {\n          var seriesPercent = [];\n\n          if (Array.isArray(ser)) {\n            for (var j = 0; j < ser.length; j++) {\n              var total = w.globals.stackedSeriesTotals[j];\n              var percent = 0;\n\n              if (total) {\n                percent = 100 * ser[j] / total;\n              }\n\n              seriesPercent.push(percent);\n            }\n          } else {\n            var _total = w.globals.seriesTotals.reduce(function (acc, val) {\n              return acc + val;\n            }, 0);\n\n            var _percent = 100 * ser / _total;\n\n            seriesPercent.push(_percent);\n          }\n\n          return seriesPercent;\n        });\n      }\n    }, {\n      key: \"getCalculatedRatios\",\n      value: function getCalculatedRatios() {\n        var gl = this.w.globals;\n        var yRatio = [];\n        var invertedYRatio = 0;\n        var xRatio = 0;\n        var initialXRatio = 0;\n        var invertedXRatio = 0;\n        var zRatio = 0;\n        var baseLineY = [];\n        var baseLineInvertedY = 0.1;\n        var baseLineX = 0;\n        gl.yRange = [];\n\n        if (gl.isMultipleYAxis) {\n          for (var i = 0; i < gl.minYArr.length; i++) {\n            gl.yRange.push(Math.abs(gl.minYArr[i] - gl.maxYArr[i]));\n            baseLineY.push(0);\n          }\n        } else {\n          gl.yRange.push(Math.abs(gl.minY - gl.maxY));\n        }\n\n        gl.xRange = Math.abs(gl.maxX - gl.minX);\n        gl.zRange = Math.abs(gl.maxZ - gl.minZ); // multiple y axis\n\n        for (var _i = 0; _i < gl.yRange.length; _i++) {\n          yRatio.push(gl.yRange[_i] / gl.gridHeight);\n        }\n\n        xRatio = gl.xRange / gl.gridWidth;\n        initialXRatio = Math.abs(gl.initialMaxX - gl.initialMinX) / gl.gridWidth;\n        invertedYRatio = gl.yRange / gl.gridWidth;\n        invertedXRatio = gl.xRange / gl.gridHeight;\n        zRatio = gl.zRange / gl.gridHeight * 16;\n\n        if (!zRatio) {\n          zRatio = 1;\n        }\n\n        if (gl.minY !== Number.MIN_VALUE && Math.abs(gl.minY) !== 0) {\n          // Negative numbers present in series\n          gl.hasNegs = true;\n        }\n\n        if (gl.isMultipleYAxis) {\n          baseLineY = []; // baseline variables is the 0 of the yaxis which will be needed when there are negatives\n\n          for (var _i2 = 0; _i2 < yRatio.length; _i2++) {\n            baseLineY.push(-gl.minYArr[_i2] / yRatio[_i2]);\n          }\n        } else {\n          baseLineY.push(-gl.minY / yRatio[0]);\n\n          if (gl.minY !== Number.MIN_VALUE && Math.abs(gl.minY) !== 0) {\n            baseLineInvertedY = -gl.minY / invertedYRatio; // this is for bar chart\n\n            baseLineX = gl.minX / xRatio;\n          }\n        }\n\n        return {\n          yRatio: yRatio,\n          invertedYRatio: invertedYRatio,\n          zRatio: zRatio,\n          xRatio: xRatio,\n          initialXRatio: initialXRatio,\n          invertedXRatio: invertedXRatio,\n          baseLineInvertedY: baseLineInvertedY,\n          baseLineY: baseLineY,\n          baseLineX: baseLineX\n        };\n      }\n    }, {\n      key: \"getLogSeries\",\n      value: function getLogSeries(series) {\n        var _this = this;\n\n        var w = this.w;\n        w.globals.seriesLog = series.map(function (s, i) {\n          if (w.config.yaxis[i] && w.config.yaxis[i].logarithmic) {\n            return s.map(function (d) {\n              if (d === null) return null;\n              return _this.getLogVal(d, i);\n            });\n          } else {\n            return s;\n          }\n        });\n        return w.globals.invalidLogScale ? series : w.globals.seriesLog;\n      }\n    }, {\n      key: \"getLogVal\",\n      value: function getLogVal(d, yIndex) {\n        var w = this.w;\n        return (Math.log(d) - Math.log(w.globals.minYArr[yIndex])) / (Math.log(w.globals.maxYArr[yIndex]) - Math.log(w.globals.minYArr[yIndex]));\n      }\n    }, {\n      key: \"getLogYRatios\",\n      value: function getLogYRatios(yRatio) {\n        var _this2 = this;\n\n        var w = this.w;\n        var gl = this.w.globals;\n        gl.yLogRatio = yRatio.slice();\n        gl.logYRange = gl.yRange.map(function (yRange, i) {\n          if (w.config.yaxis[i] && _this2.w.config.yaxis[i].logarithmic) {\n            var maxY = -Number.MAX_VALUE;\n            var minY = Number.MIN_VALUE;\n            var range = 1;\n            gl.seriesLog.forEach(function (s, si) {\n              s.forEach(function (v) {\n                if (w.config.yaxis[si] && w.config.yaxis[si].logarithmic) {\n                  maxY = Math.max(v, maxY);\n                  minY = Math.min(v, minY);\n                }\n              });\n            });\n            range = Math.pow(gl.yRange[i], Math.abs(minY - maxY) / gl.yRange[i]);\n            gl.yLogRatio[i] = range / gl.gridHeight;\n            return range;\n          }\n        });\n        return gl.invalidLogScale ? yRatio.slice() : gl.yLogRatio;\n      } // Some config objects can be array - and we need to extend them correctly\n\n    }], [{\n      key: \"checkComboSeries\",\n      value: function checkComboSeries(series) {\n        var comboCharts = false;\n        var comboBarCount = 0;\n        var comboCount = 0; // if user specified a type in series too, turn on comboCharts flag\n\n        if (series.length && typeof series[0].type !== 'undefined') {\n          series.forEach(function (s) {\n            if (s.type === 'bar' || s.type === 'column' || s.type === 'candlestick' || s.type === 'boxPlot') {\n              comboBarCount++;\n            }\n\n            if (typeof s.type !== 'undefined') {\n              comboCount++;\n            }\n          });\n        }\n\n        if (comboCount > 0) {\n          comboCharts = true;\n        }\n\n        return {\n          comboBarCount: comboBarCount,\n          comboCharts: comboCharts\n        };\n      }\n    }, {\n      key: \"extendArrayProps\",\n      value: function extendArrayProps(configInstance, options, w) {\n        if (options.yaxis) {\n          options = configInstance.extendYAxis(options, w);\n        }\n\n        if (options.annotations) {\n          if (options.annotations.yaxis) {\n            options = configInstance.extendYAxisAnnotations(options);\n          }\n\n          if (options.annotations.xaxis) {\n            options = configInstance.extendXAxisAnnotations(options);\n          }\n\n          if (options.annotations.points) {\n            options = configInstance.extendPointAnnotations(options);\n          }\n        }\n\n        return options;\n      }\n    }]);\n\n    return CoreUtils;\n  }();\n\n  var YAnnotations = /*#__PURE__*/function () {\n    function YAnnotations(annoCtx) {\n      _classCallCheck(this, YAnnotations);\n\n      this.w = annoCtx.w;\n      this.annoCtx = annoCtx;\n    }\n\n    _createClass(YAnnotations, [{\n      key: \"addYaxisAnnotation\",\n      value: function addYaxisAnnotation(anno, parent, index) {\n        var w = this.w;\n        var strokeDashArray = anno.strokeDashArray;\n\n        var y1 = this._getY1Y2('y1', anno);\n\n        var y2;\n        var text = anno.label.text;\n\n        if (anno.y2 === null || typeof anno.y2 === 'undefined') {\n          var line = this.annoCtx.graphics.drawLine(0 + anno.offsetX, // x1\n          y1 + anno.offsetY, // y1\n          this._getYAxisAnnotationWidth(anno), // x2\n          y1 + anno.offsetY, // y2\n          anno.borderColor, // lineColor\n          strokeDashArray, // dashArray\n          anno.borderWidth);\n          parent.appendChild(line.node);\n\n          if (anno.id) {\n            line.node.classList.add(anno.id);\n          }\n        } else {\n          y2 = this._getY1Y2('y2', anno);\n\n          if (y2 > y1) {\n            var temp = y1;\n            y1 = y2;\n            y2 = temp;\n          }\n\n          var rect = this.annoCtx.graphics.drawRect(0 + anno.offsetX, // x1\n          y2 + anno.offsetY, // y1\n          this._getYAxisAnnotationWidth(anno), // x2\n          y1 - y2, // y2\n          0, // radius\n          anno.fillColor, // color\n          anno.opacity, // opacity,\n          1, // strokeWidth\n          anno.borderColor, // strokeColor\n          strokeDashArray // stokeDashArray\n          );\n          rect.node.classList.add('apexcharts-annotation-rect');\n          rect.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n          parent.appendChild(rect.node);\n\n          if (anno.id) {\n            rect.node.classList.add(anno.id);\n          }\n        }\n\n        var textX = anno.label.position === 'right' ? w.globals.gridWidth : 0;\n        var elText = this.annoCtx.graphics.drawText({\n          x: textX + anno.label.offsetX,\n          y: (y2 != null ? y2 : y1) + anno.label.offsetY - 3,\n          text: text,\n          textAnchor: anno.label.textAnchor,\n          fontSize: anno.label.style.fontSize,\n          fontFamily: anno.label.style.fontFamily,\n          fontWeight: anno.label.style.fontWeight,\n          foreColor: anno.label.style.color,\n          cssClass: \"apexcharts-yaxis-annotation-label \".concat(anno.label.style.cssClass, \" \").concat(anno.id ? anno.id : '')\n        });\n        elText.attr({\n          rel: index\n        });\n        parent.appendChild(elText.node);\n      }\n    }, {\n      key: \"_getY1Y2\",\n      value: function _getY1Y2(type, anno) {\n        var y = type === 'y1' ? anno.y : anno.y2;\n        var yP;\n        var w = this.w;\n\n        if (this.annoCtx.invertAxis) {\n          var catIndex = w.globals.labels.indexOf(y);\n\n          if (w.config.xaxis.convertedCatToNumeric) {\n            catIndex = w.globals.categoryLabels.indexOf(y);\n          }\n\n          var xLabel = w.globals.dom.baseEl.querySelector('.apexcharts-yaxis-texts-g text:nth-child(' + (catIndex + 1) + ')');\n\n          if (xLabel) {\n            yP = parseFloat(xLabel.getAttribute('y'));\n          }\n        } else {\n          var yPos;\n\n          if (w.config.yaxis[anno.yAxisIndex].logarithmic) {\n            var coreUtils = new CoreUtils(this.annoCtx.ctx);\n            y = coreUtils.getLogVal(y, anno.yAxisIndex);\n            yPos = y / w.globals.yLogRatio[anno.yAxisIndex];\n          } else {\n            yPos = (y - w.globals.minYArr[anno.yAxisIndex]) / (w.globals.yRange[anno.yAxisIndex] / w.globals.gridHeight);\n          }\n\n          yP = w.globals.gridHeight - yPos;\n\n          if (w.config.yaxis[anno.yAxisIndex] && w.config.yaxis[anno.yAxisIndex].reversed) {\n            yP = yPos;\n          }\n        }\n\n        return yP;\n      }\n    }, {\n      key: \"_getYAxisAnnotationWidth\",\n      value: function _getYAxisAnnotationWidth(anno) {\n        // issue apexcharts.js#2009\n        var w = this.w;\n        var width = w.globals.gridWidth;\n\n        if (anno.width.indexOf('%') > -1) {\n          width = w.globals.gridWidth * parseInt(anno.width, 10) / 100;\n        } else {\n          width = parseInt(anno.width, 10);\n        }\n\n        return width + anno.offsetX;\n      }\n    }, {\n      key: \"drawYAxisAnnotations\",\n      value: function drawYAxisAnnotations() {\n        var _this = this;\n\n        var w = this.w;\n        var elg = this.annoCtx.graphics.group({\n          class: 'apexcharts-yaxis-annotations'\n        });\n        w.config.annotations.yaxis.map(function (anno, index) {\n          _this.addYaxisAnnotation(anno, elg.node, index);\n        });\n        return elg;\n      }\n    }]);\n\n    return YAnnotations;\n  }();\n\n  var PointAnnotations = /*#__PURE__*/function () {\n    function PointAnnotations(annoCtx) {\n      _classCallCheck(this, PointAnnotations);\n\n      this.w = annoCtx.w;\n      this.annoCtx = annoCtx;\n    }\n\n    _createClass(PointAnnotations, [{\n      key: \"addPointAnnotation\",\n      value: function addPointAnnotation(anno, parent, index) {\n        var w = this.w;\n        var x = 0;\n        var y = 0;\n        var pointY = 0;\n\n        if (this.annoCtx.invertAxis) {\n          console.warn('Point annotation is not supported in horizontal bar charts.');\n        }\n\n        var annoY = parseFloat(anno.y);\n\n        if (typeof anno.x === 'string' || w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) {\n          var catIndex = w.globals.labels.indexOf(anno.x);\n\n          if (w.config.xaxis.convertedCatToNumeric) {\n            catIndex = w.globals.categoryLabels.indexOf(anno.x);\n          }\n\n          x = this.annoCtx.helpers.getStringX(anno.x);\n\n          if (anno.y === null) {\n            annoY = w.globals.series[anno.seriesIndex][catIndex];\n          }\n        } else {\n          x = (anno.x - w.globals.minX) / (w.globals.xRange / w.globals.gridWidth);\n        } // count series assign to the same axis\n\n\n        var duplicateSeriesName = [];\n        var countDuplicateSeriesName = 0;\n\n        for (var i = 0; i <= anno.seriesIndex; i++) {\n          var serieName = w.config.yaxis[i].seriesName;\n          if (serieName) for (var j = i + 1; j <= anno.seriesIndex; j++) {\n            if (w.config.yaxis[j].seriesName === serieName && duplicateSeriesName.indexOf(serieName) === -1) {\n              countDuplicateSeriesName++;\n              duplicateSeriesName.push(serieName);\n            }\n          }\n        }\n\n        var yPos;\n\n        if (w.config.yaxis[anno.yAxisIndex].logarithmic) {\n          var coreUtils = new CoreUtils(this.annoCtx.ctx);\n          annoY = coreUtils.getLogVal(annoY, anno.yAxisIndex);\n          yPos = annoY / w.globals.yLogRatio[anno.yAxisIndex];\n        } else {\n          // calculate the right position in array for this yAxisIndex\n          var actualSerieIndex = anno.yAxisIndex + countDuplicateSeriesName;\n          yPos = (annoY - w.globals.minYArr[actualSerieIndex]) / (w.globals.yRange[actualSerieIndex] / w.globals.gridHeight);\n        }\n\n        y = w.globals.gridHeight - yPos - parseFloat(anno.label.style.fontSize) - anno.marker.size;\n        pointY = w.globals.gridHeight - yPos;\n\n        if (w.config.yaxis[anno.yAxisIndex] && w.config.yaxis[anno.yAxisIndex].reversed) {\n          y = yPos + parseFloat(anno.label.style.fontSize) + anno.marker.size;\n          pointY = yPos;\n        }\n\n        if (!Utils$1.isNumber(x)) return;\n        var optsPoints = {\n          pSize: anno.marker.size,\n          pointStrokeWidth: anno.marker.strokeWidth,\n          pointFillColor: anno.marker.fillColor,\n          pointStrokeColor: anno.marker.strokeColor,\n          shape: anno.marker.shape,\n          pRadius: anno.marker.radius,\n          class: \"apexcharts-point-annotation-marker \".concat(anno.marker.cssClass, \" \").concat(anno.id ? anno.id : '')\n        };\n        var point = this.annoCtx.graphics.drawMarker(x + anno.marker.offsetX, pointY + anno.marker.offsetY, optsPoints);\n        parent.appendChild(point.node);\n        var text = anno.label.text ? anno.label.text : '';\n        var elText = this.annoCtx.graphics.drawText({\n          x: x + anno.label.offsetX,\n          y: y + anno.label.offsetY,\n          text: text,\n          textAnchor: anno.label.textAnchor,\n          fontSize: anno.label.style.fontSize,\n          fontFamily: anno.label.style.fontFamily,\n          fontWeight: anno.label.style.fontWeight,\n          foreColor: anno.label.style.color,\n          cssClass: \"apexcharts-point-annotation-label \".concat(anno.label.style.cssClass, \" \").concat(anno.id ? anno.id : '')\n        });\n        elText.attr({\n          rel: index\n        });\n        parent.appendChild(elText.node); // TODO: deprecate this as we will use custom\n\n        if (anno.customSVG.SVG) {\n          var g = this.annoCtx.graphics.group({\n            class: 'apexcharts-point-annotations-custom-svg ' + anno.customSVG.cssClass\n          });\n          g.attr({\n            transform: \"translate(\".concat(x + anno.customSVG.offsetX, \", \").concat(y + anno.customSVG.offsetY, \")\")\n          });\n          g.node.innerHTML = anno.customSVG.SVG;\n          parent.appendChild(g.node);\n        }\n\n        if (anno.image.path) {\n          var imgWidth = anno.image.width ? anno.image.width : 20;\n          var imgHeight = anno.image.height ? anno.image.height : 20;\n          point = this.annoCtx.addImage({\n            x: x + anno.image.offsetX - imgWidth / 2,\n            y: y + anno.image.offsetY - imgHeight / 2,\n            width: imgWidth,\n            height: imgHeight,\n            path: anno.image.path,\n            appendTo: '.apexcharts-point-annotations'\n          });\n        }\n\n        if (anno.mouseEnter) {\n          point.node.addEventListener('mouseenter', anno.mouseEnter.bind(this, anno));\n        }\n\n        if (anno.mouseLeave) {\n          point.node.addEventListener('mouseleave', anno.mouseLeave.bind(this, anno));\n        }\n      }\n    }, {\n      key: \"drawPointAnnotations\",\n      value: function drawPointAnnotations() {\n        var _this = this;\n\n        var w = this.w;\n        var elg = this.annoCtx.graphics.group({\n          class: 'apexcharts-point-annotations'\n        });\n        w.config.annotations.points.map(function (anno, index) {\n          _this.addPointAnnotation(anno, elg.node, index);\n        });\n        return elg;\n      }\n    }]);\n\n    return PointAnnotations;\n  }();\n\n  const name = \"en\";\n  const options = {\n  \tmonths: [\n  \t\t\"January\",\n  \t\t\"February\",\n  \t\t\"March\",\n  \t\t\"April\",\n  \t\t\"May\",\n  \t\t\"June\",\n  \t\t\"July\",\n  \t\t\"August\",\n  \t\t\"September\",\n  \t\t\"October\",\n  \t\t\"November\",\n  \t\t\"December\"\n  \t],\n  \tshortMonths: [\n  \t\t\"Jan\",\n  \t\t\"Feb\",\n  \t\t\"Mar\",\n  \t\t\"Apr\",\n  \t\t\"May\",\n  \t\t\"Jun\",\n  \t\t\"Jul\",\n  \t\t\"Aug\",\n  \t\t\"Sep\",\n  \t\t\"Oct\",\n  \t\t\"Nov\",\n  \t\t\"Dec\"\n  \t],\n  \tdays: [\n  \t\t\"Sunday\",\n  \t\t\"Monday\",\n  \t\t\"Tuesday\",\n  \t\t\"Wednesday\",\n  \t\t\"Thursday\",\n  \t\t\"Friday\",\n  \t\t\"Saturday\"\n  \t],\n  \tshortDays: [\n  \t\t\"Sun\",\n  \t\t\"Mon\",\n  \t\t\"Tue\",\n  \t\t\"Wed\",\n  \t\t\"Thu\",\n  \t\t\"Fri\",\n  \t\t\"Sat\"\n  \t],\n  \ttoolbar: {\n  \t\texportToSVG: \"Download SVG\",\n  \t\texportToPNG: \"Download PNG\",\n  \t\texportToCSV: \"Download CSV\",\n  \t\tmenu: \"Menu\",\n  \t\tselection: \"Selection\",\n  \t\tselectionZoom: \"Selection Zoom\",\n  \t\tzoomIn: \"Zoom In\",\n  \t\tzoomOut: \"Zoom Out\",\n  \t\tpan: \"Panning\",\n  \t\treset: \"Reset Zoom\"\n  \t}\n  };\n  var en = {\n  \tname: name,\n  \toptions: options\n  };\n\n  var Options = /*#__PURE__*/function () {\n    function Options() {\n      _classCallCheck(this, Options);\n\n      this.yAxis = {\n        show: true,\n        showAlways: false,\n        showForNullSeries: true,\n        seriesName: undefined,\n        opposite: false,\n        reversed: false,\n        logarithmic: false,\n        logBase: 10,\n        tickAmount: undefined,\n        forceNiceScale: false,\n        max: undefined,\n        min: undefined,\n        floating: false,\n        decimalsInFloat: undefined,\n        labels: {\n          show: true,\n          minWidth: 0,\n          maxWidth: 160,\n          offsetX: 0,\n          offsetY: 0,\n          align: undefined,\n          rotate: 0,\n          padding: 20,\n          style: {\n            colors: [],\n            fontSize: '11px',\n            fontWeight: 400,\n            fontFamily: undefined,\n            cssClass: ''\n          },\n          formatter: undefined\n        },\n        axisBorder: {\n          show: false,\n          color: '#e0e0e0',\n          width: 1,\n          offsetX: 0,\n          offsetY: 0\n        },\n        axisTicks: {\n          show: false,\n          color: '#e0e0e0',\n          width: 6,\n          offsetX: 0,\n          offsetY: 0\n        },\n        title: {\n          text: undefined,\n          rotate: -90,\n          offsetY: 0,\n          offsetX: 0,\n          style: {\n            color: undefined,\n            fontSize: '11px',\n            fontWeight: 900,\n            fontFamily: undefined,\n            cssClass: ''\n          }\n        },\n        tooltip: {\n          enabled: false,\n          offsetX: 0\n        },\n        crosshairs: {\n          show: true,\n          position: 'front',\n          stroke: {\n            color: '#b6b6b6',\n            width: 1,\n            dashArray: 0\n          }\n        }\n      };\n      this.pointAnnotation = {\n        id: undefined,\n        x: 0,\n        y: null,\n        yAxisIndex: 0,\n        seriesIndex: 0,\n        mouseEnter: undefined,\n        mouseLeave: undefined,\n        marker: {\n          size: 4,\n          fillColor: '#fff',\n          strokeWidth: 2,\n          strokeColor: '#333',\n          shape: 'circle',\n          offsetX: 0,\n          offsetY: 0,\n          radius: 2,\n          cssClass: ''\n        },\n        label: {\n          borderColor: '#c2c2c2',\n          borderWidth: 1,\n          borderRadius: 2,\n          text: undefined,\n          textAnchor: 'middle',\n          offsetX: 0,\n          offsetY: 0,\n          mouseEnter: undefined,\n          mouseLeave: undefined,\n          style: {\n            background: '#fff',\n            color: undefined,\n            fontSize: '11px',\n            fontFamily: undefined,\n            fontWeight: 400,\n            cssClass: '',\n            padding: {\n              left: 5,\n              right: 5,\n              top: 2,\n              bottom: 2\n            }\n          }\n        },\n        customSVG: {\n          // this will be deprecated in the next major version as it is going to be replaced with a better alternative below\n          SVG: undefined,\n          cssClass: undefined,\n          offsetX: 0,\n          offsetY: 0\n        },\n        image: {\n          path: undefined,\n          width: 20,\n          height: 20,\n          offsetX: 0,\n          offsetY: 0\n        }\n      };\n      this.yAxisAnnotation = {\n        id: undefined,\n        y: 0,\n        y2: null,\n        strokeDashArray: 1,\n        fillColor: '#c2c2c2',\n        borderColor: '#c2c2c2',\n        borderWidth: 1,\n        opacity: 0.3,\n        offsetX: 0,\n        offsetY: 0,\n        width: '100%',\n        yAxisIndex: 0,\n        label: {\n          borderColor: '#c2c2c2',\n          borderWidth: 1,\n          borderRadius: 2,\n          text: undefined,\n          textAnchor: 'end',\n          position: 'right',\n          offsetX: 0,\n          offsetY: -3,\n          mouseEnter: undefined,\n          mouseLeave: undefined,\n          style: {\n            background: '#fff',\n            color: undefined,\n            fontSize: '11px',\n            fontFamily: undefined,\n            fontWeight: 400,\n            cssClass: '',\n            padding: {\n              left: 5,\n              right: 5,\n              top: 2,\n              bottom: 2\n            }\n          }\n        }\n      };\n      this.xAxisAnnotation = {\n        id: undefined,\n        x: 0,\n        x2: null,\n        strokeDashArray: 1,\n        fillColor: '#c2c2c2',\n        borderColor: '#c2c2c2',\n        borderWidth: 1,\n        opacity: 0.3,\n        offsetX: 0,\n        offsetY: 0,\n        label: {\n          borderColor: '#c2c2c2',\n          borderWidth: 1,\n          borderRadius: 2,\n          text: undefined,\n          textAnchor: 'middle',\n          orientation: 'vertical',\n          position: 'top',\n          offsetX: 0,\n          offsetY: 0,\n          mouseEnter: undefined,\n          mouseLeave: undefined,\n          style: {\n            background: '#fff',\n            color: undefined,\n            fontSize: '11px',\n            fontFamily: undefined,\n            fontWeight: 400,\n            cssClass: '',\n            padding: {\n              left: 5,\n              right: 5,\n              top: 2,\n              bottom: 2\n            }\n          }\n        }\n      };\n      this.text = {\n        x: 0,\n        y: 0,\n        text: '',\n        textAnchor: 'start',\n        foreColor: undefined,\n        fontSize: '13px',\n        fontFamily: undefined,\n        fontWeight: 400,\n        appendTo: '.apexcharts-annotations',\n        backgroundColor: 'transparent',\n        borderColor: '#c2c2c2',\n        borderRadius: 0,\n        borderWidth: 0,\n        paddingLeft: 4,\n        paddingRight: 4,\n        paddingTop: 2,\n        paddingBottom: 2\n      };\n    }\n\n    _createClass(Options, [{\n      key: \"init\",\n      value: function init() {\n        return {\n          annotations: {\n            position: 'front',\n            yaxis: [this.yAxisAnnotation],\n            xaxis: [this.xAxisAnnotation],\n            points: [this.pointAnnotation],\n            texts: [],\n            images: [],\n            shapes: []\n          },\n          chart: {\n            animations: {\n              enabled: true,\n              easing: 'easeinout',\n              // linear, easeout, easein, easeinout, swing, bounce, elastic\n              speed: 800,\n              animateGradually: {\n                delay: 150,\n                enabled: true\n              },\n              dynamicAnimation: {\n                enabled: true,\n                speed: 350\n              }\n            },\n            background: 'transparent',\n            locales: [en],\n            defaultLocale: 'en',\n            dropShadow: {\n              enabled: false,\n              enabledOnSeries: undefined,\n              top: 2,\n              left: 2,\n              blur: 4,\n              color: '#000',\n              opacity: 0.35\n            },\n            events: {\n              animationEnd: undefined,\n              beforeMount: undefined,\n              mounted: undefined,\n              updated: undefined,\n              click: undefined,\n              mouseMove: undefined,\n              mouseLeave: undefined,\n              legendClick: undefined,\n              markerClick: undefined,\n              selection: undefined,\n              dataPointSelection: undefined,\n              dataPointMouseEnter: undefined,\n              dataPointMouseLeave: undefined,\n              beforeZoom: undefined,\n              beforeResetZoom: undefined,\n              zoomed: undefined,\n              scrolled: undefined,\n              brushScrolled: undefined\n            },\n            foreColor: '#373d3f',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            height: 'auto',\n            parentHeightOffset: 15,\n            redrawOnParentResize: true,\n            redrawOnWindowResize: true,\n            id: undefined,\n            group: undefined,\n            offsetX: 0,\n            offsetY: 0,\n            selection: {\n              enabled: false,\n              type: 'x',\n              // selectedPoints: undefined, // default datapoints that should be selected automatically\n              fill: {\n                color: '#24292e',\n                opacity: 0.1\n              },\n              stroke: {\n                width: 1,\n                color: '#24292e',\n                opacity: 0.4,\n                dashArray: 3\n              },\n              xaxis: {\n                min: undefined,\n                max: undefined\n              },\n              yaxis: {\n                min: undefined,\n                max: undefined\n              }\n            },\n            sparkline: {\n              enabled: false\n            },\n            brush: {\n              enabled: false,\n              autoScaleYaxis: true,\n              target: undefined\n            },\n            stacked: false,\n            stackType: 'normal',\n            toolbar: {\n              show: true,\n              offsetX: 0,\n              offsetY: 0,\n              tools: {\n                download: true,\n                selection: true,\n                zoom: true,\n                zoomin: true,\n                zoomout: true,\n                pan: true,\n                reset: true,\n                customIcons: []\n              },\n              export: {\n                csv: {\n                  filename: undefined,\n                  columnDelimiter: ',',\n                  headerCategory: 'category',\n                  headerValue: 'value',\n                  dateFormatter: function dateFormatter(timestamp) {\n                    return new Date(timestamp).toDateString();\n                  }\n                },\n                png: {\n                  filename: undefined\n                },\n                svg: {\n                  filename: undefined\n                }\n              },\n              autoSelected: 'zoom' // accepts -> zoom, pan, selection\n\n            },\n            type: 'line',\n            width: '100%',\n            zoom: {\n              enabled: true,\n              type: 'x',\n              autoScaleYaxis: false,\n              zoomedArea: {\n                fill: {\n                  color: '#90CAF9',\n                  opacity: 0.4\n                },\n                stroke: {\n                  color: '#0D47A1',\n                  opacity: 0.4,\n                  width: 1\n                }\n              }\n            }\n          },\n          plotOptions: {\n            area: {\n              fillTo: 'origin'\n            },\n            bar: {\n              horizontal: false,\n              columnWidth: '70%',\n              // should be in percent 0 - 100\n              barHeight: '70%',\n              // should be in percent 0 - 100\n              distributed: false,\n              borderRadius: 0,\n              rangeBarOverlap: true,\n              rangeBarGroupRows: false,\n              colors: {\n                ranges: [],\n                backgroundBarColors: [],\n                backgroundBarOpacity: 1,\n                backgroundBarRadius: 0\n              },\n              dataLabels: {\n                position: 'top',\n                // top, center, bottom\n                maxItems: 100,\n                hideOverflowingLabels: true,\n                orientation: 'horizontal' // TODO: provide stackedLabels for stacked charts which gives additions of values\n\n              }\n            },\n            bubble: {\n              minBubbleRadius: undefined,\n              maxBubbleRadius: undefined\n            },\n            candlestick: {\n              colors: {\n                upward: '#00B746',\n                downward: '#EF403C'\n              },\n              wick: {\n                useFillColor: true\n              }\n            },\n            boxPlot: {\n              colors: {\n                upper: '#00E396',\n                lower: '#008FFB'\n              }\n            },\n            heatmap: {\n              radius: 2,\n              enableShades: true,\n              shadeIntensity: 0.5,\n              reverseNegativeShade: false,\n              distributed: false,\n              useFillColorAsStroke: false,\n              colorScale: {\n                inverse: false,\n                ranges: [],\n                min: undefined,\n                max: undefined\n              }\n            },\n            treemap: {\n              enableShades: true,\n              shadeIntensity: 0.5,\n              distributed: false,\n              reverseNegativeShade: false,\n              useFillColorAsStroke: false,\n              colorScale: {\n                inverse: false,\n                ranges: [],\n                min: undefined,\n                max: undefined\n              }\n            },\n            radialBar: {\n              inverseOrder: false,\n              startAngle: 0,\n              endAngle: 360,\n              offsetX: 0,\n              offsetY: 0,\n              hollow: {\n                margin: 5,\n                size: '50%',\n                background: 'transparent',\n                image: undefined,\n                imageWidth: 150,\n                imageHeight: 150,\n                imageOffsetX: 0,\n                imageOffsetY: 0,\n                imageClipped: true,\n                position: 'front',\n                dropShadow: {\n                  enabled: false,\n                  top: 0,\n                  left: 0,\n                  blur: 3,\n                  color: '#000',\n                  opacity: 0.5\n                }\n              },\n              track: {\n                show: true,\n                startAngle: undefined,\n                endAngle: undefined,\n                background: '#f2f2f2',\n                strokeWidth: '97%',\n                opacity: 1,\n                margin: 5,\n                // margin is in pixels\n                dropShadow: {\n                  enabled: false,\n                  top: 0,\n                  left: 0,\n                  blur: 3,\n                  color: '#000',\n                  opacity: 0.5\n                }\n              },\n              dataLabels: {\n                show: true,\n                name: {\n                  show: true,\n                  fontSize: '16px',\n                  fontFamily: undefined,\n                  fontWeight: 600,\n                  color: undefined,\n                  offsetY: 0,\n                  formatter: function formatter(val) {\n                    return val;\n                  }\n                },\n                value: {\n                  show: true,\n                  fontSize: '14px',\n                  fontFamily: undefined,\n                  fontWeight: 400,\n                  color: undefined,\n                  offsetY: 16,\n                  formatter: function formatter(val) {\n                    return val + '%';\n                  }\n                },\n                total: {\n                  show: false,\n                  label: 'Total',\n                  fontSize: '16px',\n                  fontWeight: 600,\n                  fontFamily: undefined,\n                  color: undefined,\n                  formatter: function formatter(w) {\n                    return w.globals.seriesTotals.reduce(function (a, b) {\n                      return a + b;\n                    }, 0) / w.globals.series.length + '%';\n                  }\n                }\n              }\n            },\n            pie: {\n              customScale: 1,\n              offsetX: 0,\n              offsetY: 0,\n              startAngle: 0,\n              endAngle: 360,\n              expandOnClick: true,\n              dataLabels: {\n                // These are the percentage values which are displayed on slice\n                offset: 0,\n                // offset by which labels will move outside\n                minAngleToShowLabel: 10\n              },\n              donut: {\n                size: '65%',\n                background: 'transparent',\n                labels: {\n                  // These are the inner labels appearing inside donut\n                  show: false,\n                  name: {\n                    show: true,\n                    fontSize: '16px',\n                    fontFamily: undefined,\n                    fontWeight: 600,\n                    color: undefined,\n                    offsetY: -10,\n                    formatter: function formatter(val) {\n                      return val;\n                    }\n                  },\n                  value: {\n                    show: true,\n                    fontSize: '20px',\n                    fontFamily: undefined,\n                    fontWeight: 400,\n                    color: undefined,\n                    offsetY: 10,\n                    formatter: function formatter(val) {\n                      return val;\n                    }\n                  },\n                  total: {\n                    show: false,\n                    showAlways: false,\n                    label: 'Total',\n                    fontSize: '16px',\n                    fontWeight: 400,\n                    fontFamily: undefined,\n                    color: undefined,\n                    formatter: function formatter(w) {\n                      return w.globals.seriesTotals.reduce(function (a, b) {\n                        return a + b;\n                      }, 0);\n                    }\n                  }\n                }\n              }\n            },\n            polarArea: {\n              rings: {\n                strokeWidth: 1,\n                strokeColor: '#e8e8e8'\n              },\n              spokes: {\n                strokeWidth: 1,\n                connectorColors: '#e8e8e8'\n              }\n            },\n            radar: {\n              size: undefined,\n              offsetX: 0,\n              offsetY: 0,\n              polygons: {\n                // strokeColor: '#e8e8e8', // should be deprecated in the minor version i.e 3.2\n                strokeWidth: 1,\n                strokeColors: '#e8e8e8',\n                connectorColors: '#e8e8e8',\n                fill: {\n                  colors: undefined\n                }\n              }\n            }\n          },\n          colors: undefined,\n          dataLabels: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            formatter: function formatter(val) {\n              return val !== null ? val : '';\n            },\n            textAnchor: 'middle',\n            distributed: false,\n            offsetX: 0,\n            offsetY: 0,\n            style: {\n              fontSize: '12px',\n              fontFamily: undefined,\n              fontWeight: 600,\n              colors: undefined\n            },\n            background: {\n              enabled: true,\n              foreColor: '#fff',\n              borderRadius: 2,\n              padding: 4,\n              opacity: 0.9,\n              borderWidth: 1,\n              borderColor: '#fff',\n              dropShadow: {\n                enabled: false,\n                top: 1,\n                left: 1,\n                blur: 1,\n                color: '#000',\n                opacity: 0.45\n              }\n            },\n            dropShadow: {\n              enabled: false,\n              top: 1,\n              left: 1,\n              blur: 1,\n              color: '#000',\n              opacity: 0.45\n            }\n          },\n          fill: {\n            type: 'solid',\n            colors: undefined,\n            // array of colors\n            opacity: 0.85,\n            gradient: {\n              shade: 'dark',\n              type: 'horizontal',\n              shadeIntensity: 0.5,\n              gradientToColors: undefined,\n              inverseColors: true,\n              opacityFrom: 1,\n              opacityTo: 1,\n              stops: [0, 50, 100],\n              colorStops: []\n            },\n            image: {\n              src: [],\n              width: undefined,\n              // optional\n              height: undefined // optional\n\n            },\n            pattern: {\n              style: 'squares',\n              // String | Array of Strings\n              width: 6,\n              height: 6,\n              strokeWidth: 2\n            }\n          },\n          forecastDataPoints: {\n            count: 0,\n            fillOpacity: 0.5,\n            strokeWidth: undefined,\n            dashArray: 4\n          },\n          grid: {\n            show: true,\n            borderColor: '#e0e0e0',\n            strokeDashArray: 0,\n            position: 'back',\n            xaxis: {\n              lines: {\n                show: false\n              }\n            },\n            yaxis: {\n              lines: {\n                show: true\n              }\n            },\n            row: {\n              colors: undefined,\n              // takes as array which will be repeated on rows\n              opacity: 0.5\n            },\n            column: {\n              colors: undefined,\n              // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n            padding: {\n              top: 0,\n              right: 10,\n              bottom: 0,\n              left: 12\n            }\n          },\n          labels: [],\n          legend: {\n            show: true,\n            showForSingleSeries: false,\n            showForNullSeries: true,\n            showForZeroSeries: true,\n            floating: false,\n            position: 'bottom',\n            // whether to position legends in 1 of 4\n            // direction - top, bottom, left, right\n            horizontalAlign: 'center',\n            // when position top/bottom, you can specify whether to align legends left, right or center\n            inverseOrder: false,\n            fontSize: '12px',\n            fontFamily: undefined,\n            fontWeight: 400,\n            width: undefined,\n            height: undefined,\n            formatter: undefined,\n            tooltipHoverFormatter: undefined,\n            offsetX: -20,\n            offsetY: 4,\n            customLegendItems: [],\n            labels: {\n              colors: undefined,\n              useSeriesColors: false\n            },\n            markers: {\n              width: 12,\n              height: 12,\n              strokeWidth: 0,\n              fillColors: undefined,\n              strokeColor: '#fff',\n              radius: 12,\n              customHTML: undefined,\n              offsetX: 0,\n              offsetY: 0,\n              onClick: undefined\n            },\n            itemMargin: {\n              horizontal: 5,\n              vertical: 2\n            },\n            onItemClick: {\n              toggleDataSeries: true\n            },\n            onItemHover: {\n              highlightDataSeries: true\n            }\n          },\n          markers: {\n            discrete: [],\n            size: 0,\n            colors: undefined,\n            //strokeColor: '#fff', // TODO: deprecate in major version 4.0\n            strokeColors: '#fff',\n            strokeWidth: 2,\n            strokeOpacity: 0.9,\n            strokeDashArray: 0,\n            fillOpacity: 1,\n            shape: 'circle',\n            width: 8,\n            // only applicable when shape is rect/square\n            height: 8,\n            // only applicable when shape is rect/square\n            radius: 2,\n            offsetX: 0,\n            offsetY: 0,\n            onClick: undefined,\n            onDblClick: undefined,\n            showNullDataPoints: true,\n            hover: {\n              size: undefined,\n              sizeOffset: 3\n            }\n          },\n          noData: {\n            text: undefined,\n            align: 'center',\n            verticalAlign: 'middle',\n            offsetX: 0,\n            offsetY: 0,\n            style: {\n              color: undefined,\n              fontSize: '14px',\n              fontFamily: undefined\n            }\n          },\n          responsive: [],\n          // breakpoints should follow ascending order 400, then 700, then 1000\n          series: undefined,\n          states: {\n            normal: {\n              filter: {\n                type: 'none',\n                value: 0\n              }\n            },\n            hover: {\n              filter: {\n                type: 'lighten',\n                value: 0.1\n              }\n            },\n            active: {\n              allowMultipleDataPointsSelection: false,\n              filter: {\n                type: 'darken',\n                value: 0.5\n              }\n            }\n          },\n          title: {\n            text: undefined,\n            align: 'left',\n            margin: 5,\n            offsetX: 0,\n            offsetY: 0,\n            floating: false,\n            style: {\n              fontSize: '14px',\n              fontWeight: 900,\n              fontFamily: undefined,\n              color: undefined\n            }\n          },\n          subtitle: {\n            text: undefined,\n            align: 'left',\n            margin: 5,\n            offsetX: 0,\n            offsetY: 30,\n            floating: false,\n            style: {\n              fontSize: '12px',\n              fontWeight: 400,\n              fontFamily: undefined,\n              color: undefined\n            }\n          },\n          stroke: {\n            show: true,\n            curve: 'smooth',\n            // \"smooth\" / \"straight\" / \"stepline\"\n            lineCap: 'butt',\n            // round, butt , square\n            width: 2,\n            colors: undefined,\n            // array of colors\n            dashArray: 0 // single value or array of values\n\n          },\n          tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            // when disabled, the tooltip will show on top of the series instead of mouse position\n            intersect: false,\n            // when enabled, tooltip will only show when user directly hovers over point\n            inverseOrder: false,\n            custom: undefined,\n            fillSeriesColor: false,\n            theme: 'light',\n            style: {\n              fontSize: '12px',\n              fontFamily: undefined\n            },\n            onDatasetHover: {\n              highlightDataSeries: false\n            },\n            x: {\n              // x value\n              show: true,\n              format: 'dd MMM',\n              // dd/MM, dd MMM yy, dd MMM yyyy\n              formatter: undefined // a custom user supplied formatter function\n\n            },\n            y: {\n              formatter: undefined,\n              title: {\n                formatter: function formatter(seriesName) {\n                  return seriesName ? seriesName + ': ' : '';\n                }\n              }\n            },\n            z: {\n              formatter: undefined,\n              title: 'Size: '\n            },\n            marker: {\n              show: true,\n              fillColors: undefined\n            },\n            items: {\n              display: 'flex'\n            },\n            fixed: {\n              enabled: false,\n              position: 'topRight',\n              // topRight, topLeft, bottomRight, bottomLeft\n              offsetX: 0,\n              offsetY: 0\n            }\n          },\n          xaxis: {\n            type: 'category',\n            categories: [],\n            convertedCatToNumeric: false,\n            // internal property which should not be altered outside\n            offsetX: 0,\n            offsetY: 0,\n            overwriteCategories: undefined,\n            labels: {\n              show: true,\n              rotate: -45,\n              rotateAlways: false,\n              hideOverlappingLabels: true,\n              trim: false,\n              minHeight: undefined,\n              maxHeight: 120,\n              showDuplicates: true,\n              style: {\n                colors: [],\n                fontSize: '12px',\n                fontWeight: 400,\n                fontFamily: undefined,\n                cssClass: ''\n              },\n              offsetX: 0,\n              offsetY: 0,\n              format: undefined,\n              formatter: undefined,\n              // custom formatter function which will override format\n              datetimeUTC: true,\n              datetimeFormatter: {\n                year: 'yyyy',\n                month: \"MMM 'yy\",\n                day: 'dd MMM',\n                hour: 'HH:mm',\n                minute: 'HH:mm:ss',\n                second: 'HH:mm:ss'\n              }\n            },\n            axisBorder: {\n              show: true,\n              color: '#e0e0e0',\n              width: '100%',\n              height: 1,\n              offsetX: 0,\n              offsetY: 0\n            },\n            axisTicks: {\n              show: true,\n              color: '#e0e0e0',\n              height: 6,\n              offsetX: 0,\n              offsetY: 0\n            },\n            tickAmount: undefined,\n            tickPlacement: 'on',\n            min: undefined,\n            max: undefined,\n            range: undefined,\n            floating: false,\n            decimalsInFloat: undefined,\n            position: 'bottom',\n            title: {\n              text: undefined,\n              offsetX: 0,\n              offsetY: 0,\n              style: {\n                color: undefined,\n                fontSize: '12px',\n                fontWeight: 900,\n                fontFamily: undefined,\n                cssClass: ''\n              }\n            },\n            crosshairs: {\n              show: true,\n              width: 1,\n              // tickWidth/barWidth or an integer\n              position: 'back',\n              opacity: 0.9,\n              stroke: {\n                color: '#b6b6b6',\n                width: 1,\n                dashArray: 3\n              },\n              fill: {\n                type: 'solid',\n                // solid, gradient\n                color: '#B1B9C4',\n                gradient: {\n                  colorFrom: '#D8E3F0',\n                  colorTo: '#BED1E6',\n                  stops: [0, 100],\n                  opacityFrom: 0.4,\n                  opacityTo: 0.5\n                }\n              },\n              dropShadow: {\n                enabled: false,\n                left: 0,\n                top: 0,\n                blur: 1,\n                opacity: 0.4\n              }\n            },\n            tooltip: {\n              enabled: true,\n              offsetY: 0,\n              formatter: undefined,\n              style: {\n                fontSize: '12px',\n                fontFamily: undefined\n              }\n            }\n          },\n          yaxis: this.yAxis,\n          theme: {\n            mode: 'light',\n            palette: 'palette1',\n            // If defined, it will overwrite globals.colors variable\n            monochrome: {\n              // monochrome allows you to select just 1 color and fill out the rest with light/dark shade (intensity can be selected)\n              enabled: false,\n              color: '#008FFB',\n              shadeTo: 'light',\n              shadeIntensity: 0.65\n            }\n          }\n        };\n      }\n    }]);\n\n    return Options;\n  }();\n\n  /**\n   * ApexCharts Annotations Class for drawing lines/rects on both xaxis and yaxis.\n   *\n   * @module Annotations\n   **/\n\n  var Annotations = /*#__PURE__*/function () {\n    function Annotations(ctx) {\n      _classCallCheck(this, Annotations);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.graphics = new Graphics(this.ctx);\n\n      if (this.w.globals.isBarHorizontal) {\n        this.invertAxis = true;\n      }\n\n      this.helpers = new Helpers$4(this);\n      this.xAxisAnnotations = new XAnnotations(this);\n      this.yAxisAnnotations = new YAnnotations(this);\n      this.pointsAnnotations = new PointAnnotations(this);\n\n      if (this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed) {\n        this.inversedReversedAxis = true;\n      }\n\n      this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints;\n    }\n\n    _createClass(Annotations, [{\n      key: \"drawAxesAnnotations\",\n      value: function drawAxesAnnotations() {\n        var w = this.w;\n\n        if (w.globals.axisCharts) {\n          var yAnnotations = this.yAxisAnnotations.drawYAxisAnnotations();\n          var xAnnotations = this.xAxisAnnotations.drawXAxisAnnotations();\n          var pointAnnotations = this.pointsAnnotations.drawPointAnnotations();\n          var initialAnim = w.config.chart.animations.enabled;\n          var annoArray = [yAnnotations, xAnnotations, pointAnnotations];\n          var annoElArray = [xAnnotations.node, yAnnotations.node, pointAnnotations.node];\n\n          for (var i = 0; i < 3; i++) {\n            w.globals.dom.elGraphical.add(annoArray[i]);\n\n            if (initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n              // fixes apexcharts/apexcharts.js#685\n              if (w.config.chart.type !== 'scatter' && w.config.chart.type !== 'bubble' && w.globals.dataPoints > 1) {\n                annoElArray[i].classList.add('apexcharts-element-hidden');\n              }\n            }\n\n            w.globals.delayedElements.push({\n              el: annoElArray[i],\n              index: 0\n            });\n          } // background sizes needs to be calculated after text is drawn, so calling them last\n\n\n          this.helpers.annotationsBackground();\n        }\n      }\n    }, {\n      key: \"drawImageAnnos\",\n      value: function drawImageAnnos() {\n        var _this = this;\n\n        var w = this.w;\n        w.config.annotations.images.map(function (s, index) {\n          _this.addImage(s, index);\n        });\n      }\n    }, {\n      key: \"drawTextAnnos\",\n      value: function drawTextAnnos() {\n        var _this2 = this;\n\n        var w = this.w;\n        w.config.annotations.texts.map(function (t, index) {\n          _this2.addText(t, index);\n        });\n      }\n    }, {\n      key: \"addXaxisAnnotation\",\n      value: function addXaxisAnnotation(anno, parent, index) {\n        this.xAxisAnnotations.addXaxisAnnotation(anno, parent, index);\n      }\n    }, {\n      key: \"addYaxisAnnotation\",\n      value: function addYaxisAnnotation(anno, parent, index) {\n        this.yAxisAnnotations.addYaxisAnnotation(anno, parent, index);\n      }\n    }, {\n      key: \"addPointAnnotation\",\n      value: function addPointAnnotation(anno, parent, index) {\n        this.pointsAnnotations.addPointAnnotation(anno, parent, index);\n      }\n    }, {\n      key: \"addText\",\n      value: function addText(params, index) {\n        var x = params.x,\n            y = params.y,\n            text = params.text,\n            textAnchor = params.textAnchor,\n            foreColor = params.foreColor,\n            fontSize = params.fontSize,\n            fontFamily = params.fontFamily,\n            fontWeight = params.fontWeight,\n            cssClass = params.cssClass,\n            backgroundColor = params.backgroundColor,\n            borderWidth = params.borderWidth,\n            strokeDashArray = params.strokeDashArray,\n            borderRadius = params.borderRadius,\n            borderColor = params.borderColor,\n            _params$appendTo = params.appendTo,\n            appendTo = _params$appendTo === void 0 ? '.apexcharts-annotations' : _params$appendTo,\n            _params$paddingLeft = params.paddingLeft,\n            paddingLeft = _params$paddingLeft === void 0 ? 4 : _params$paddingLeft,\n            _params$paddingRight = params.paddingRight,\n            paddingRight = _params$paddingRight === void 0 ? 4 : _params$paddingRight,\n            _params$paddingBottom = params.paddingBottom,\n            paddingBottom = _params$paddingBottom === void 0 ? 2 : _params$paddingBottom,\n            _params$paddingTop = params.paddingTop,\n            paddingTop = _params$paddingTop === void 0 ? 2 : _params$paddingTop;\n        var w = this.w;\n        var elText = this.graphics.drawText({\n          x: x,\n          y: y,\n          text: text,\n          textAnchor: textAnchor || 'start',\n          fontSize: fontSize || '12px',\n          fontWeight: fontWeight || 'regular',\n          fontFamily: fontFamily || w.config.chart.fontFamily,\n          foreColor: foreColor || w.config.chart.foreColor,\n          cssClass: 'apexcharts-text ' + cssClass ? cssClass : ''\n        });\n        var parent = w.globals.dom.baseEl.querySelector(appendTo);\n\n        if (parent) {\n          parent.appendChild(elText.node);\n        }\n\n        var textRect = elText.bbox();\n\n        if (text) {\n          var elRect = this.graphics.drawRect(textRect.x - paddingLeft, textRect.y - paddingTop, textRect.width + paddingLeft + paddingRight, textRect.height + paddingBottom + paddingTop, borderRadius, backgroundColor ? backgroundColor : 'transparent', 1, borderWidth, borderColor, strokeDashArray);\n          parent.insertBefore(elRect.node, elText.node);\n        }\n      }\n    }, {\n      key: \"addImage\",\n      value: function addImage(params, index) {\n        var w = this.w;\n        var path = params.path,\n            _params$x = params.x,\n            x = _params$x === void 0 ? 0 : _params$x,\n            _params$y = params.y,\n            y = _params$y === void 0 ? 0 : _params$y,\n            _params$width = params.width,\n            width = _params$width === void 0 ? 20 : _params$width,\n            _params$height = params.height,\n            height = _params$height === void 0 ? 20 : _params$height,\n            _params$appendTo2 = params.appendTo,\n            appendTo = _params$appendTo2 === void 0 ? '.apexcharts-annotations' : _params$appendTo2;\n        var img = w.globals.dom.Paper.image(path);\n        img.size(width, height).move(x, y);\n        var parent = w.globals.dom.baseEl.querySelector(appendTo);\n\n        if (parent) {\n          parent.appendChild(img.node);\n        }\n\n        return img;\n      } // The addXaxisAnnotation method requires a parent class, and user calling this method externally on the chart instance may not specify parent, hence a different method\n\n    }, {\n      key: \"addXaxisAnnotationExternal\",\n      value: function addXaxisAnnotationExternal(params, pushToMemory, context) {\n        this.addAnnotationExternal({\n          params: params,\n          pushToMemory: pushToMemory,\n          context: context,\n          type: 'xaxis',\n          contextMethod: context.addXaxisAnnotation\n        });\n        return context;\n      }\n    }, {\n      key: \"addYaxisAnnotationExternal\",\n      value: function addYaxisAnnotationExternal(params, pushToMemory, context) {\n        this.addAnnotationExternal({\n          params: params,\n          pushToMemory: pushToMemory,\n          context: context,\n          type: 'yaxis',\n          contextMethod: context.addYaxisAnnotation\n        });\n        return context;\n      }\n    }, {\n      key: \"addPointAnnotationExternal\",\n      value: function addPointAnnotationExternal(params, pushToMemory, context) {\n        if (typeof this.invertAxis === 'undefined') {\n          this.invertAxis = context.w.globals.isBarHorizontal;\n        }\n\n        this.addAnnotationExternal({\n          params: params,\n          pushToMemory: pushToMemory,\n          context: context,\n          type: 'point',\n          contextMethod: context.addPointAnnotation\n        });\n        return context;\n      }\n    }, {\n      key: \"addAnnotationExternal\",\n      value: function addAnnotationExternal(_ref) {\n        var params = _ref.params,\n            pushToMemory = _ref.pushToMemory,\n            context = _ref.context,\n            type = _ref.type,\n            contextMethod = _ref.contextMethod;\n        var me = context;\n        var w = me.w;\n        var parent = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-annotations\"));\n        var index = parent.childNodes.length + 1;\n        var options = new Options();\n        var axesAnno = Object.assign({}, type === 'xaxis' ? options.xAxisAnnotation : type === 'yaxis' ? options.yAxisAnnotation : options.pointAnnotation);\n        var anno = Utils$1.extend(axesAnno, params);\n\n        switch (type) {\n          case 'xaxis':\n            this.addXaxisAnnotation(anno, parent, index);\n            break;\n\n          case 'yaxis':\n            this.addYaxisAnnotation(anno, parent, index);\n            break;\n\n          case 'point':\n            this.addPointAnnotation(anno, parent, index);\n            break;\n        } // add background\n\n\n        var axesAnnoLabel = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-annotations .apexcharts-\").concat(type, \"-annotation-label[rel='\").concat(index, \"']\"));\n        var elRect = this.helpers.addBackgroundToAnno(axesAnnoLabel, anno);\n\n        if (elRect) {\n          parent.insertBefore(elRect.node, axesAnnoLabel);\n        }\n\n        if (pushToMemory) {\n          w.globals.memory.methodsToExec.push({\n            context: me,\n            id: anno.id ? anno.id : Utils$1.randomId(),\n            method: contextMethod,\n            label: 'addAnnotation',\n            params: params\n          });\n        }\n\n        return context;\n      }\n    }, {\n      key: \"clearAnnotations\",\n      value: function clearAnnotations(ctx) {\n        var w = ctx.w;\n        var annos = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations'); // annotations added externally should be cleared out too\n\n        w.globals.memory.methodsToExec.map(function (m, i) {\n          if (m.label === 'addText' || m.label === 'addAnnotation') {\n            w.globals.memory.methodsToExec.splice(i, 1);\n          }\n        });\n        annos = Utils$1.listToArray(annos); // delete the DOM elements\n\n        Array.prototype.forEach.call(annos, function (a) {\n          while (a.firstChild) {\n            a.removeChild(a.firstChild);\n          }\n        });\n      }\n    }, {\n      key: \"removeAnnotation\",\n      value: function removeAnnotation(ctx, id) {\n        var w = ctx.w;\n        var annos = w.globals.dom.baseEl.querySelectorAll(\".\".concat(id));\n\n        if (annos) {\n          w.globals.memory.methodsToExec.map(function (m, i) {\n            if (m.id === id) {\n              w.globals.memory.methodsToExec.splice(i, 1);\n            }\n          });\n          Array.prototype.forEach.call(annos, function (a) {\n            a.parentElement.removeChild(a);\n          });\n        }\n      }\n    }]);\n\n    return Annotations;\n  }();\n\n  /**\n   * ApexCharts Fill Class for setting fill options of the paths.\n   *\n   * @module Fill\n   **/\n\n  var Fill = /*#__PURE__*/function () {\n    function Fill(ctx) {\n      _classCallCheck(this, Fill);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.opts = null;\n      this.seriesIndex = 0;\n    }\n\n    _createClass(Fill, [{\n      key: \"clippedImgArea\",\n      value: function clippedImgArea(params) {\n        var w = this.w;\n        var cnf = w.config;\n        var svgW = parseInt(w.globals.gridWidth, 10);\n        var svgH = parseInt(w.globals.gridHeight, 10);\n        var size = svgW > svgH ? svgW : svgH;\n        var fillImg = params.image;\n        var imgWidth = 0;\n        var imgHeight = 0;\n\n        if (typeof params.width === 'undefined' && typeof params.height === 'undefined') {\n          if (cnf.fill.image.width !== undefined && cnf.fill.image.height !== undefined) {\n            imgWidth = cnf.fill.image.width + 1;\n            imgHeight = cnf.fill.image.height;\n          } else {\n            imgWidth = size + 1;\n            imgHeight = size;\n          }\n        } else {\n          imgWidth = params.width;\n          imgHeight = params.height;\n        }\n\n        var elPattern = document.createElementNS(w.globals.SVGNS, 'pattern');\n        Graphics.setAttrs(elPattern, {\n          id: params.patternID,\n          patternUnits: params.patternUnits ? params.patternUnits : 'userSpaceOnUse',\n          width: imgWidth + 'px',\n          height: imgHeight + 'px'\n        });\n        var elImage = document.createElementNS(w.globals.SVGNS, 'image');\n        elPattern.appendChild(elImage);\n        elImage.setAttributeNS(window.SVG.xlink, 'href', fillImg);\n        Graphics.setAttrs(elImage, {\n          x: 0,\n          y: 0,\n          preserveAspectRatio: 'none',\n          width: imgWidth + 'px',\n          height: imgHeight + 'px'\n        });\n        elImage.style.opacity = params.opacity;\n        w.globals.dom.elDefs.node.appendChild(elPattern);\n      }\n    }, {\n      key: \"getSeriesIndex\",\n      value: function getSeriesIndex(opts) {\n        var w = this.w;\n\n        if ((w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar') && w.config.plotOptions.bar.distributed || w.config.chart.type === 'heatmap' || w.config.chart.type === 'treemap') {\n          this.seriesIndex = opts.seriesNumber;\n        } else {\n          this.seriesIndex = opts.seriesNumber % w.globals.series.length;\n        }\n\n        return this.seriesIndex;\n      }\n    }, {\n      key: \"fillPath\",\n      value: function fillPath(opts) {\n        var w = this.w;\n        this.opts = opts;\n        var cnf = this.w.config;\n        var pathFill;\n        var patternFill, gradientFill;\n        this.seriesIndex = this.getSeriesIndex(opts);\n        var fillColors = this.getFillColors();\n        var fillColor = fillColors[this.seriesIndex]; //override fillcolor if user inputted color with data\n\n        if (w.globals.seriesColors[this.seriesIndex] !== undefined) {\n          fillColor = w.globals.seriesColors[this.seriesIndex];\n        }\n\n        if (typeof fillColor === 'function') {\n          fillColor = fillColor({\n            seriesIndex: this.seriesIndex,\n            dataPointIndex: opts.dataPointIndex,\n            value: opts.value,\n            w: w\n          });\n        }\n\n        var fillType = this.getFillType(this.seriesIndex);\n        var fillOpacity = Array.isArray(cnf.fill.opacity) ? cnf.fill.opacity[this.seriesIndex] : cnf.fill.opacity;\n\n        if (opts.color) {\n          fillColor = opts.color;\n        }\n\n        var defaultColor = fillColor;\n\n        if (fillColor.indexOf('rgb') === -1) {\n          if (fillColor.length < 9) {\n            // if the hex contains alpha and is of 9 digit, skip the opacity\n            defaultColor = Utils$1.hexToRgba(fillColor, fillOpacity);\n          }\n        } else {\n          if (fillColor.indexOf('rgba') > -1) {\n            fillOpacity = Utils$1.getOpacityFromRGBA(fillColor);\n          }\n        }\n\n        if (opts.opacity) fillOpacity = opts.opacity;\n\n        if (fillType === 'pattern') {\n          patternFill = this.handlePatternFill(patternFill, fillColor, fillOpacity, defaultColor);\n        }\n\n        if (fillType === 'gradient') {\n          gradientFill = this.handleGradientFill(fillColor, fillOpacity, this.seriesIndex);\n        }\n\n        if (fillType === 'image') {\n          var imgSrc = cnf.fill.image.src;\n          var patternID = opts.patternID ? opts.patternID : '';\n          this.clippedImgArea({\n            opacity: fillOpacity,\n            image: Array.isArray(imgSrc) ? opts.seriesNumber < imgSrc.length ? imgSrc[opts.seriesNumber] : imgSrc[0] : imgSrc,\n            width: opts.width ? opts.width : undefined,\n            height: opts.height ? opts.height : undefined,\n            patternUnits: opts.patternUnits,\n            patternID: \"pattern\".concat(w.globals.cuid).concat(opts.seriesNumber + 1).concat(patternID)\n          });\n          pathFill = \"url(#pattern\".concat(w.globals.cuid).concat(opts.seriesNumber + 1).concat(patternID, \")\");\n        } else if (fillType === 'gradient') {\n          pathFill = gradientFill;\n        } else if (fillType === 'pattern') {\n          pathFill = patternFill;\n        } else {\n          pathFill = defaultColor;\n        } // override pattern/gradient if opts.solid is true\n\n\n        if (opts.solid) {\n          pathFill = defaultColor;\n        }\n\n        return pathFill;\n      }\n    }, {\n      key: \"getFillType\",\n      value: function getFillType(seriesIndex) {\n        var w = this.w;\n\n        if (Array.isArray(w.config.fill.type)) {\n          return w.config.fill.type[seriesIndex];\n        } else {\n          return w.config.fill.type;\n        }\n      }\n    }, {\n      key: \"getFillColors\",\n      value: function getFillColors() {\n        var w = this.w;\n        var cnf = w.config;\n        var opts = this.opts;\n        var fillColors = [];\n\n        if (w.globals.comboCharts) {\n          if (w.config.series[this.seriesIndex].type === 'line') {\n            if (Array.isArray(w.globals.stroke.colors)) {\n              fillColors = w.globals.stroke.colors;\n            } else {\n              fillColors.push(w.globals.stroke.colors);\n            }\n          } else {\n            if (Array.isArray(w.globals.fill.colors)) {\n              fillColors = w.globals.fill.colors;\n            } else {\n              fillColors.push(w.globals.fill.colors);\n            }\n          }\n        } else {\n          if (cnf.chart.type === 'line') {\n            if (Array.isArray(w.globals.stroke.colors)) {\n              fillColors = w.globals.stroke.colors;\n            } else {\n              fillColors.push(w.globals.stroke.colors);\n            }\n          } else {\n            if (Array.isArray(w.globals.fill.colors)) {\n              fillColors = w.globals.fill.colors;\n            } else {\n              fillColors.push(w.globals.fill.colors);\n            }\n          }\n        } // colors passed in arguments\n\n\n        if (typeof opts.fillColors !== 'undefined') {\n          fillColors = [];\n\n          if (Array.isArray(opts.fillColors)) {\n            fillColors = opts.fillColors.slice();\n          } else {\n            fillColors.push(opts.fillColors);\n          }\n        }\n\n        return fillColors;\n      }\n    }, {\n      key: \"handlePatternFill\",\n      value: function handlePatternFill(patternFill, fillColor, fillOpacity, defaultColor) {\n        var cnf = this.w.config;\n        var opts = this.opts;\n        var graphics = new Graphics(this.ctx);\n        var patternStrokeWidth = cnf.fill.pattern.strokeWidth === undefined ? Array.isArray(cnf.stroke.width) ? cnf.stroke.width[this.seriesIndex] : cnf.stroke.width : Array.isArray(cnf.fill.pattern.strokeWidth) ? cnf.fill.pattern.strokeWidth[this.seriesIndex] : cnf.fill.pattern.strokeWidth;\n        var patternLineColor = fillColor;\n\n        if (Array.isArray(cnf.fill.pattern.style)) {\n          if (typeof cnf.fill.pattern.style[opts.seriesNumber] !== 'undefined') {\n            var pf = graphics.drawPattern(cnf.fill.pattern.style[opts.seriesNumber], cnf.fill.pattern.width, cnf.fill.pattern.height, patternLineColor, patternStrokeWidth, fillOpacity);\n            patternFill = pf;\n          } else {\n            patternFill = defaultColor;\n          }\n        } else {\n          patternFill = graphics.drawPattern(cnf.fill.pattern.style, cnf.fill.pattern.width, cnf.fill.pattern.height, patternLineColor, patternStrokeWidth, fillOpacity);\n        }\n\n        return patternFill;\n      }\n    }, {\n      key: \"handleGradientFill\",\n      value: function handleGradientFill(fillColor, fillOpacity, i) {\n        var cnf = this.w.config;\n        var opts = this.opts;\n        var graphics = new Graphics(this.ctx);\n        var utils = new Utils$1();\n        var type = cnf.fill.gradient.type;\n        var gradientFrom = fillColor;\n        var gradientTo;\n        var opacityFrom = cnf.fill.gradient.opacityFrom === undefined ? fillOpacity : Array.isArray(cnf.fill.gradient.opacityFrom) ? cnf.fill.gradient.opacityFrom[i] : cnf.fill.gradient.opacityFrom;\n\n        if (gradientFrom.indexOf('rgba') > -1) {\n          opacityFrom = Utils$1.getOpacityFromRGBA(gradientFrom);\n        }\n\n        var opacityTo = cnf.fill.gradient.opacityTo === undefined ? fillOpacity : Array.isArray(cnf.fill.gradient.opacityTo) ? cnf.fill.gradient.opacityTo[i] : cnf.fill.gradient.opacityTo;\n\n        if (cnf.fill.gradient.gradientToColors === undefined || cnf.fill.gradient.gradientToColors.length === 0) {\n          if (cnf.fill.gradient.shade === 'dark') {\n            gradientTo = utils.shadeColor(parseFloat(cnf.fill.gradient.shadeIntensity) * -1, fillColor.indexOf('rgb') > -1 ? Utils$1.rgb2hex(fillColor) : fillColor);\n          } else {\n            gradientTo = utils.shadeColor(parseFloat(cnf.fill.gradient.shadeIntensity), fillColor.indexOf('rgb') > -1 ? Utils$1.rgb2hex(fillColor) : fillColor);\n          }\n        } else {\n          if (cnf.fill.gradient.gradientToColors[opts.seriesNumber]) {\n            var gToColor = cnf.fill.gradient.gradientToColors[opts.seriesNumber];\n            gradientTo = gToColor;\n\n            if (gToColor.indexOf('rgba') > -1) {\n              opacityTo = Utils$1.getOpacityFromRGBA(gToColor);\n            }\n          } else {\n            gradientTo = fillColor;\n          }\n        }\n\n        if (cnf.fill.gradient.inverseColors) {\n          var t = gradientFrom;\n          gradientFrom = gradientTo;\n          gradientTo = t;\n        }\n\n        if (gradientFrom.indexOf('rgb') > -1) {\n          gradientFrom = Utils$1.rgb2hex(gradientFrom);\n        }\n\n        if (gradientTo.indexOf('rgb') > -1) {\n          gradientTo = Utils$1.rgb2hex(gradientTo);\n        }\n\n        return graphics.drawGradient(type, gradientFrom, gradientTo, opacityFrom, opacityTo, opts.size, cnf.fill.gradient.stops, cnf.fill.gradient.colorStops, i);\n      }\n    }]);\n\n    return Fill;\n  }();\n\n  /**\n   * ApexCharts Markers Class for drawing points on y values in axes charts.\n   *\n   * @module Markers\n   **/\n\n  var Markers = /*#__PURE__*/function () {\n    function Markers(ctx, opts) {\n      _classCallCheck(this, Markers);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Markers, [{\n      key: \"setGlobalMarkerSize\",\n      value: function setGlobalMarkerSize() {\n        var w = this.w;\n        w.globals.markers.size = Array.isArray(w.config.markers.size) ? w.config.markers.size : [w.config.markers.size];\n\n        if (w.globals.markers.size.length > 0) {\n          if (w.globals.markers.size.length < w.globals.series.length + 1) {\n            for (var i = 0; i <= w.globals.series.length; i++) {\n              if (typeof w.globals.markers.size[i] === 'undefined') {\n                w.globals.markers.size.push(w.globals.markers.size[0]);\n              }\n            }\n          }\n        } else {\n          w.globals.markers.size = w.config.series.map(function (s) {\n            return w.config.markers.size;\n          });\n        }\n      }\n    }, {\n      key: \"plotChartMarkers\",\n      value: function plotChartMarkers(pointsPos, seriesIndex, j, pSize) {\n        var alwaysDrawMarker = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var w = this.w;\n        var i = seriesIndex;\n        var p = pointsPos;\n        var elPointsWrap = null;\n        var graphics = new Graphics(this.ctx);\n        var point;\n\n        if (w.globals.markers.size[seriesIndex] > 0 || alwaysDrawMarker) {\n          elPointsWrap = graphics.group({\n            class: alwaysDrawMarker ? '' : 'apexcharts-series-markers'\n          });\n          elPointsWrap.attr('clip-path', \"url(#gridRectMarkerMask\".concat(w.globals.cuid, \")\"));\n        }\n\n        if (Array.isArray(p.x)) {\n          for (var q = 0; q < p.x.length; q++) {\n            var dataPointIndex = j; // a small hack as we have 2 points for the first val to connect it\n\n            if (j === 1 && q === 0) dataPointIndex = 0;\n            if (j === 1 && q === 1) dataPointIndex = 1;\n            var PointClasses = 'apexcharts-marker';\n\n            if ((w.config.chart.type === 'line' || w.config.chart.type === 'area') && !w.globals.comboCharts && !w.config.tooltip.intersect) {\n              PointClasses += ' no-pointer-events';\n            }\n\n            var shouldMarkerDraw = Array.isArray(w.config.markers.size) ? w.globals.markers.size[seriesIndex] > 0 : w.config.markers.size > 0;\n\n            if (shouldMarkerDraw || alwaysDrawMarker) {\n              if (Utils$1.isNumber(p.y[q])) {\n                PointClasses += \" w\".concat(Utils$1.randomId());\n              } else {\n                PointClasses = 'apexcharts-nullpoint';\n              }\n\n              var opts = this.getMarkerConfig({\n                cssClass: PointClasses,\n                seriesIndex: seriesIndex,\n                dataPointIndex: dataPointIndex\n              });\n\n              if (w.config.series[i].data[dataPointIndex]) {\n                if (w.config.series[i].data[dataPointIndex].fillColor) {\n                  opts.pointFillColor = w.config.series[i].data[dataPointIndex].fillColor;\n                }\n\n                if (w.config.series[i].data[dataPointIndex].strokeColor) {\n                  opts.pointStrokeColor = w.config.series[i].data[dataPointIndex].strokeColor;\n                }\n              }\n\n              if (pSize) {\n                opts.pSize = pSize;\n              }\n\n              point = graphics.drawMarker(p.x[q], p.y[q], opts);\n              point.attr('rel', dataPointIndex);\n              point.attr('j', dataPointIndex);\n              point.attr('index', seriesIndex);\n              point.node.setAttribute('default-marker-size', opts.pSize);\n              var filters = new Filters(this.ctx);\n              filters.setSelectionFilter(point, seriesIndex, dataPointIndex);\n              this.addEvents(point);\n\n              if (elPointsWrap) {\n                elPointsWrap.add(point);\n              }\n            } else {\n              // dynamic array creation - multidimensional\n              if (typeof w.globals.pointsArray[seriesIndex] === 'undefined') w.globals.pointsArray[seriesIndex] = [];\n              w.globals.pointsArray[seriesIndex].push([p.x[q], p.y[q]]);\n            }\n          }\n        }\n\n        return elPointsWrap;\n      }\n    }, {\n      key: \"getMarkerConfig\",\n      value: function getMarkerConfig(_ref) {\n        var cssClass = _ref.cssClass,\n            seriesIndex = _ref.seriesIndex,\n            _ref$dataPointIndex = _ref.dataPointIndex,\n            dataPointIndex = _ref$dataPointIndex === void 0 ? null : _ref$dataPointIndex,\n            _ref$finishRadius = _ref.finishRadius,\n            finishRadius = _ref$finishRadius === void 0 ? null : _ref$finishRadius;\n        var w = this.w;\n        var pStyle = this.getMarkerStyle(seriesIndex);\n        var pSize = w.globals.markers.size[seriesIndex];\n        var m = w.config.markers; // discrete markers is an option where user can specify a particular marker with different shape, size and color\n\n        if (dataPointIndex !== null && m.discrete.length) {\n          m.discrete.map(function (marker) {\n            if (marker.seriesIndex === seriesIndex && marker.dataPointIndex === dataPointIndex) {\n              pStyle.pointStrokeColor = marker.strokeColor;\n              pStyle.pointFillColor = marker.fillColor;\n              pSize = marker.size;\n              pStyle.pointShape = marker.shape;\n            }\n          });\n        }\n\n        return {\n          pSize: finishRadius === null ? pSize : finishRadius,\n          pRadius: m.radius,\n          width: Array.isArray(m.width) ? m.width[seriesIndex] : m.width,\n          height: Array.isArray(m.height) ? m.height[seriesIndex] : m.height,\n          pointStrokeWidth: Array.isArray(m.strokeWidth) ? m.strokeWidth[seriesIndex] : m.strokeWidth,\n          pointStrokeColor: pStyle.pointStrokeColor,\n          pointFillColor: pStyle.pointFillColor,\n          shape: pStyle.pointShape || (Array.isArray(m.shape) ? m.shape[seriesIndex] : m.shape),\n          class: cssClass,\n          pointStrokeOpacity: Array.isArray(m.strokeOpacity) ? m.strokeOpacity[seriesIndex] : m.strokeOpacity,\n          pointStrokeDashArray: Array.isArray(m.strokeDashArray) ? m.strokeDashArray[seriesIndex] : m.strokeDashArray,\n          pointFillOpacity: Array.isArray(m.fillOpacity) ? m.fillOpacity[seriesIndex] : m.fillOpacity,\n          seriesIndex: seriesIndex\n        };\n      }\n    }, {\n      key: \"addEvents\",\n      value: function addEvents(circle) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        circle.node.addEventListener('mouseenter', graphics.pathMouseEnter.bind(this.ctx, circle));\n        circle.node.addEventListener('mouseleave', graphics.pathMouseLeave.bind(this.ctx, circle));\n        circle.node.addEventListener('mousedown', graphics.pathMouseDown.bind(this.ctx, circle));\n        circle.node.addEventListener('click', w.config.markers.onClick);\n        circle.node.addEventListener('dblclick', w.config.markers.onDblClick);\n        circle.node.addEventListener('touchstart', graphics.pathMouseDown.bind(this.ctx, circle), {\n          passive: true\n        });\n      }\n    }, {\n      key: \"getMarkerStyle\",\n      value: function getMarkerStyle(seriesIndex) {\n        var w = this.w;\n        var colors = w.globals.markers.colors;\n        var strokeColors = w.config.markers.strokeColor || w.config.markers.strokeColors;\n        var pointStrokeColor = Array.isArray(strokeColors) ? strokeColors[seriesIndex] : strokeColors;\n        var pointFillColor = Array.isArray(colors) ? colors[seriesIndex] : colors;\n        return {\n          pointStrokeColor: pointStrokeColor,\n          pointFillColor: pointFillColor\n        };\n      }\n    }]);\n\n    return Markers;\n  }();\n\n  /**\n   * ApexCharts Scatter Class.\n   * This Class also handles bubbles chart as currently there is no major difference in drawing them,\n   * @module Scatter\n   **/\n\n  var Scatter = /*#__PURE__*/function () {\n    function Scatter(ctx) {\n      _classCallCheck(this, Scatter);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.initialAnim = this.w.config.chart.animations.enabled;\n      this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n    }\n\n    _createClass(Scatter, [{\n      key: \"draw\",\n      value: function draw(elSeries, j, opts) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var realIndex = opts.realIndex;\n        var pointsPos = opts.pointsPos;\n        var zRatio = opts.zRatio;\n        var elPointsMain = opts.elParent;\n        var elPointsWrap = graphics.group({\n          class: \"apexcharts-series-markers apexcharts-series-\".concat(w.config.chart.type)\n        });\n        elPointsWrap.attr('clip-path', \"url(#gridRectMarkerMask\".concat(w.globals.cuid, \")\"));\n\n        if (Array.isArray(pointsPos.x)) {\n          for (var q = 0; q < pointsPos.x.length; q++) {\n            var dataPointIndex = j + 1;\n            var shouldDraw = true; // a small hack as we have 2 points for the first val to connect it\n\n            if (j === 0 && q === 0) dataPointIndex = 0;\n            if (j === 0 && q === 1) dataPointIndex = 1;\n            var radius = 0;\n            var finishRadius = w.globals.markers.size[realIndex];\n\n            if (zRatio !== Infinity) {\n              // means we have a bubble\n              finishRadius = w.globals.seriesZ[realIndex][dataPointIndex] / zRatio;\n              var bubble = w.config.plotOptions.bubble;\n\n              if (bubble.minBubbleRadius && finishRadius < bubble.minBubbleRadius) {\n                finishRadius = bubble.minBubbleRadius;\n              }\n\n              if (bubble.maxBubbleRadius && finishRadius > bubble.maxBubbleRadius) {\n                finishRadius = bubble.maxBubbleRadius;\n              }\n            }\n\n            if (!w.config.chart.animations.enabled) {\n              radius = finishRadius;\n            }\n\n            var x = pointsPos.x[q];\n            var y = pointsPos.y[q];\n            radius = radius || 0;\n\n            if (y === null || typeof w.globals.series[realIndex][dataPointIndex] === 'undefined') {\n              shouldDraw = false;\n            }\n\n            if (shouldDraw) {\n              var point = this.drawPoint(x, y, radius, finishRadius, realIndex, dataPointIndex, j);\n              elPointsWrap.add(point);\n            }\n\n            elPointsMain.add(elPointsWrap);\n          }\n        }\n      }\n    }, {\n      key: \"drawPoint\",\n      value: function drawPoint(x, y, radius, finishRadius, realIndex, dataPointIndex, j) {\n        var w = this.w;\n        var i = realIndex;\n        var anim = new Animations(this.ctx);\n        var filters = new Filters(this.ctx);\n        var fill = new Fill(this.ctx);\n        var markers = new Markers(this.ctx);\n        var graphics = new Graphics(this.ctx);\n        var markerConfig = markers.getMarkerConfig({\n          cssClass: 'apexcharts-marker',\n          seriesIndex: i,\n          dataPointIndex: dataPointIndex,\n          finishRadius: w.config.chart.type === 'bubble' || w.globals.comboCharts && w.config.series[realIndex] && w.config.series[realIndex].type === 'bubble' ? finishRadius : null\n        });\n        finishRadius = markerConfig.pSize;\n        var pathFillCircle = fill.fillPath({\n          seriesNumber: realIndex,\n          dataPointIndex: dataPointIndex,\n          color: markerConfig.pointFillColor,\n          patternUnits: 'objectBoundingBox',\n          value: w.globals.series[realIndex][j]\n        });\n        var el;\n\n        if (markerConfig.shape === 'circle') {\n          el = graphics.drawCircle(radius);\n        } else if (markerConfig.shape === 'square' || markerConfig.shape === 'rect') {\n          el = graphics.drawRect(0, 0, markerConfig.width - markerConfig.pointStrokeWidth / 2, markerConfig.height - markerConfig.pointStrokeWidth / 2, markerConfig.pRadius);\n        }\n\n        if (w.config.series[i].data[dataPointIndex]) {\n          if (w.config.series[i].data[dataPointIndex].fillColor) {\n            pathFillCircle = w.config.series[i].data[dataPointIndex].fillColor;\n          }\n        }\n\n        el.attr({\n          x: x - markerConfig.width / 2 - markerConfig.pointStrokeWidth / 2,\n          y: y - markerConfig.height / 2 - markerConfig.pointStrokeWidth / 2,\n          cx: x,\n          cy: y,\n          fill: pathFillCircle,\n          'fill-opacity': markerConfig.pointFillOpacity,\n          stroke: markerConfig.pointStrokeColor,\n          r: finishRadius,\n          'stroke-width': markerConfig.pointStrokeWidth,\n          'stroke-dasharray': markerConfig.pointStrokeDashArray,\n          'stroke-opacity': markerConfig.pointStrokeOpacity\n        });\n\n        if (w.config.chart.dropShadow.enabled) {\n          var dropShadow = w.config.chart.dropShadow;\n          filters.dropShadow(el, dropShadow, realIndex);\n        }\n\n        if (this.initialAnim && !w.globals.dataChanged && !w.globals.resized) {\n          var speed = w.config.chart.animations.speed;\n          anim.animateMarker(el, 0, markerConfig.shape === 'circle' ? finishRadius : {\n            width: markerConfig.width,\n            height: markerConfig.height\n          }, speed, w.globals.easing, function () {\n            window.setTimeout(function () {\n              anim.animationCompleted(el);\n            }, 100);\n          });\n        } else {\n          w.globals.animationEnded = true;\n        }\n\n        if (w.globals.dataChanged && markerConfig.shape === 'circle') {\n          if (this.dynamicAnim) {\n            var _speed = w.config.chart.animations.dynamicAnimation.speed;\n            var prevX, prevY, prevR;\n            var prevPathJ = null;\n            prevPathJ = w.globals.previousPaths[realIndex] && w.globals.previousPaths[realIndex][j];\n\n            if (typeof prevPathJ !== 'undefined' && prevPathJ !== null) {\n              // series containing less elements will ignore these values and revert to 0\n              prevX = prevPathJ.x;\n              prevY = prevPathJ.y;\n              prevR = typeof prevPathJ.r !== 'undefined' ? prevPathJ.r : finishRadius;\n            }\n\n            for (var cs = 0; cs < w.globals.collapsedSeries.length; cs++) {\n              if (w.globals.collapsedSeries[cs].index === realIndex) {\n                _speed = 1;\n                finishRadius = 0;\n              }\n            }\n\n            if (x === 0 && y === 0) finishRadius = 0;\n            anim.animateCircle(el, {\n              cx: prevX,\n              cy: prevY,\n              r: prevR\n            }, {\n              cx: x,\n              cy: y,\n              r: finishRadius\n            }, _speed, w.globals.easing);\n          } else {\n            el.attr({\n              r: finishRadius\n            });\n          }\n        }\n\n        el.attr({\n          rel: dataPointIndex,\n          j: dataPointIndex,\n          index: realIndex,\n          'default-marker-size': finishRadius\n        });\n        filters.setSelectionFilter(el, realIndex, dataPointIndex);\n        markers.addEvents(el);\n        el.node.classList.add('apexcharts-marker');\n        return el;\n      }\n    }, {\n      key: \"centerTextInBubble\",\n      value: function centerTextInBubble(y) {\n        var w = this.w;\n        y = y + parseInt(w.config.dataLabels.style.fontSize, 10) / 4;\n        return {\n          y: y\n        };\n      }\n    }]);\n\n    return Scatter;\n  }();\n\n  /**\n   * ApexCharts DataLabels Class for drawing dataLabels on Axes based Charts.\n   *\n   * @module DataLabels\n   **/\n\n  var DataLabels = /*#__PURE__*/function () {\n    function DataLabels(ctx) {\n      _classCallCheck(this, DataLabels);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    } // When there are many datalabels to be printed, and some of them overlaps each other in the same series, this method will take care of that\n    // Also, when datalabels exceeds the drawable area and get clipped off, we need to adjust and move some pixels to make them visible again\n\n\n    _createClass(DataLabels, [{\n      key: \"dataLabelsCorrection\",\n      value: function dataLabelsCorrection(x, y, val, i, dataPointIndex, alwaysDrawDataLabel, fontSize) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var drawnextLabel = false; //\n\n        var textRects = graphics.getTextRects(val, fontSize);\n        var width = textRects.width;\n        var height = textRects.height;\n        if (y < 0) y = 0;\n        if (y > w.globals.gridHeight + height) y = w.globals.gridHeight + height / 2; // first value in series, so push an empty array\n\n        if (typeof w.globals.dataLabelsRects[i] === 'undefined') w.globals.dataLabelsRects[i] = []; // then start pushing actual rects in that sub-array\n\n        w.globals.dataLabelsRects[i].push({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n        var len = w.globals.dataLabelsRects[i].length - 2;\n        var lastDrawnIndex = typeof w.globals.lastDrawnDataLabelsIndexes[i] !== 'undefined' ? w.globals.lastDrawnDataLabelsIndexes[i][w.globals.lastDrawnDataLabelsIndexes[i].length - 1] : 0;\n\n        if (typeof w.globals.dataLabelsRects[i][len] !== 'undefined') {\n          var lastDataLabelRect = w.globals.dataLabelsRects[i][lastDrawnIndex];\n\n          if ( // next label forward and x not intersecting\n          x > lastDataLabelRect.x + lastDataLabelRect.width + 2 || y > lastDataLabelRect.y + lastDataLabelRect.height + 2 || x + width < lastDataLabelRect.x // next label is going to be drawn backwards\n          ) {\n            // the 2 indexes don't override, so OK to draw next label\n            drawnextLabel = true;\n          }\n        }\n\n        if (dataPointIndex === 0 || alwaysDrawDataLabel) {\n          drawnextLabel = true;\n        }\n\n        return {\n          x: x,\n          y: y,\n          textRects: textRects,\n          drawnextLabel: drawnextLabel\n        };\n      }\n    }, {\n      key: \"drawDataLabel\",\n      value: function drawDataLabel(pos, i, j) {\n        var _this = this;\n        var strokeWidth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 2;\n        // this method handles line, area, bubble, scatter charts as those charts contains markers/points which have pre-defined x/y positions\n        // all other charts like radar / bars / heatmaps will define their own drawDataLabel routine\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var dataLabelsConfig = w.config.dataLabels;\n        var x = 0;\n        var y = 0;\n        var dataPointIndex = j;\n        var elDataLabelsWrap = null;\n\n        if (!dataLabelsConfig.enabled || !Array.isArray(pos.x)) {\n          return elDataLabelsWrap;\n        }\n\n        elDataLabelsWrap = graphics.group({\n          class: 'apexcharts-data-labels'\n        });\n\n        for (var q = 0; q < pos.x.length; q++) {\n          x = pos.x[q] + dataLabelsConfig.offsetX;\n          y = pos.y[q] + dataLabelsConfig.offsetY + strokeWidth;\n\n          if (!isNaN(x)) {\n            // a small hack as we have 2 points for the first val to connect it\n            if (j === 1 && q === 0) dataPointIndex = 0;\n            if (j === 1 && q === 1) dataPointIndex = 1;\n            var val = w.globals.series[i][dataPointIndex];\n            var text = '';\n\n            var getText = function getText(v) {\n              return w.config.dataLabels.formatter(v, {\n                ctx: _this.ctx,\n                seriesIndex: i,\n                dataPointIndex: dataPointIndex,\n                w: w\n              });\n            };\n\n            if (w.config.chart.type === 'bubble') {\n              val = w.globals.seriesZ[i][dataPointIndex];\n              text = getText(val);\n              y = pos.y[q];\n              var scatter = new Scatter(this.ctx);\n              var centerTextInBubbleCoords = scatter.centerTextInBubble(y, i, dataPointIndex);\n              y = centerTextInBubbleCoords.y;\n            } else {\n              if (typeof val !== 'undefined') {\n                text = getText(val);\n              }\n            }\n\n            this.plotDataLabelsText({\n              x: x,\n              y: y,\n              text: text,\n              i: i,\n              j: dataPointIndex,\n              parent: elDataLabelsWrap,\n              offsetCorrection: true,\n              dataLabelsConfig: w.config.dataLabels\n            });\n          }\n        }\n\n        return elDataLabelsWrap;\n      }\n    }, {\n      key: \"plotDataLabelsText\",\n      value: function plotDataLabelsText(opts) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var x = opts.x,\n            y = opts.y,\n            i = opts.i,\n            j = opts.j,\n            text = opts.text,\n            textAnchor = opts.textAnchor,\n            fontSize = opts.fontSize,\n            parent = opts.parent,\n            dataLabelsConfig = opts.dataLabelsConfig,\n            color = opts.color,\n            alwaysDrawDataLabel = opts.alwaysDrawDataLabel,\n            offsetCorrection = opts.offsetCorrection;\n\n        if (Array.isArray(w.config.dataLabels.enabledOnSeries)) {\n          if (w.config.dataLabels.enabledOnSeries.indexOf(i) < 0) {\n            return;\n          }\n        }\n\n        var correctedLabels = {\n          x: x,\n          y: y,\n          drawnextLabel: true,\n          textRects: null\n        };\n\n        if (offsetCorrection) {\n          correctedLabels = this.dataLabelsCorrection(x, y, text, i, j, alwaysDrawDataLabel, parseInt(dataLabelsConfig.style.fontSize, 10));\n        } // when zoomed, we don't need to correct labels offsets,\n        // but if normally, labels get cropped, correct them\n\n\n        if (!w.globals.zoomed) {\n          x = correctedLabels.x;\n          y = correctedLabels.y;\n        }\n\n        if (correctedLabels.textRects) {\n          // fixes #2264\n          if (x < -10 - correctedLabels.textRects.width || x > w.globals.gridWidth + correctedLabels.textRects.width + 10) {\n            // datalabels fall outside drawing area, so draw a blank label\n            text = '';\n          }\n        }\n\n        var dataLabelColor = w.globals.dataLabels.style.colors[i];\n\n        if ((w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar') && w.config.plotOptions.bar.distributed || w.config.dataLabels.distributed) {\n          dataLabelColor = w.globals.dataLabels.style.colors[j];\n        }\n\n        if (typeof dataLabelColor === 'function') {\n          dataLabelColor = dataLabelColor({\n            series: w.globals.series,\n            seriesIndex: i,\n            dataPointIndex: j,\n            w: w\n          });\n        }\n\n        if (color) {\n          dataLabelColor = color;\n        }\n\n        var offX = dataLabelsConfig.offsetX;\n        var offY = dataLabelsConfig.offsetY;\n\n        if (w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar') {\n          // for certain chart types, we handle offsets while calculating datalabels pos\n          // why? because bars/column may have negative values and based on that\n          // offsets becomes reversed\n          offX = 0;\n          offY = 0;\n        }\n\n        if (correctedLabels.drawnextLabel) {\n          if (typeof text !== 'undefined' && String(text).trim().length) {\n            var dataLabelText = graphics.drawText({\n              width: 100,\n              height: parseInt(dataLabelsConfig.style.fontSize, 10),\n              x: x + offX,\n              y: y + offY,\n              foreColor: dataLabelColor,\n              textAnchor: textAnchor || dataLabelsConfig.textAnchor,\n              text: text,\n              fontSize: fontSize || dataLabelsConfig.style.fontSize,\n              fontFamily: dataLabelsConfig.style.fontFamily,\n              fontWeight: dataLabelsConfig.style.fontWeight || 'normal'\n            });\n            dataLabelText.attr({\n              class: 'apexcharts-datalabel',\n              cx: x,\n              cy: y\n            });\n\n            if (dataLabelsConfig.dropShadow.enabled) {\n              var textShadow = dataLabelsConfig.dropShadow;\n              var filters = new Filters(this.ctx);\n              filters.dropShadow(dataLabelText, textShadow);\n            }\n\n            parent.add(dataLabelText);\n\n            if (typeof w.globals.lastDrawnDataLabelsIndexes[i] === 'undefined') {\n              w.globals.lastDrawnDataLabelsIndexes[i] = [];\n            }\n\n            w.globals.lastDrawnDataLabelsIndexes[i].push(j);\n          }\n        }\n      }\n    }, {\n      key: \"addBackgroundToDataLabel\",\n      value: function addBackgroundToDataLabel(el, coords) {\n        var w = this.w;\n        var bCnf = w.config.dataLabels.background;\n        var paddingH = bCnf.padding;\n        var paddingV = bCnf.padding / 2;\n        var width = coords.width;\n        var height = coords.height;\n        var graphics = new Graphics(this.ctx);\n        var elRect = graphics.drawRect(coords.x - paddingH, coords.y - paddingV / 2, width + paddingH * 2, height + paddingV, bCnf.borderRadius, w.config.chart.background === 'transparent' ? '#fff' : w.config.chart.background, bCnf.opacity, bCnf.borderWidth, bCnf.borderColor);\n\n        if (bCnf.dropShadow.enabled) {\n          var filters = new Filters(this.ctx);\n          filters.dropShadow(elRect, bCnf.dropShadow);\n        }\n\n        return elRect;\n      }\n    }, {\n      key: \"dataLabelsBackground\",\n      value: function dataLabelsBackground() {\n        var w = this.w;\n        if (w.config.chart.type === 'bubble') return;\n        var elDataLabels = w.globals.dom.baseEl.querySelectorAll('.apexcharts-datalabels text');\n\n        for (var i = 0; i < elDataLabels.length; i++) {\n          var el = elDataLabels[i];\n          var coords = el.getBBox();\n          var elRect = null;\n\n          if (coords.width && coords.height) {\n            elRect = this.addBackgroundToDataLabel(el, coords);\n          }\n\n          if (elRect) {\n            el.parentNode.insertBefore(elRect.node, el);\n            var background = el.getAttribute('fill');\n            var shouldAnim = w.config.chart.animations.enabled && !w.globals.resized && !w.globals.dataChanged;\n\n            if (shouldAnim) {\n              elRect.animate().attr({\n                fill: background\n              });\n            } else {\n              elRect.attr({\n                fill: background\n              });\n            }\n\n            el.setAttribute('fill', w.config.dataLabels.background.foreColor);\n          }\n        }\n      }\n    }, {\n      key: \"bringForward\",\n      value: function bringForward() {\n        var w = this.w;\n        var elDataLabelsNodes = w.globals.dom.baseEl.querySelectorAll('.apexcharts-datalabels');\n        var elSeries = w.globals.dom.baseEl.querySelector('.apexcharts-plot-series:last-child');\n\n        for (var i = 0; i < elDataLabelsNodes.length; i++) {\n          if (elSeries) {\n            elSeries.insertBefore(elDataLabelsNodes[i], elSeries.nextSibling);\n          }\n        }\n      }\n    }]);\n\n    return DataLabels;\n  }();\n\n  var BarDataLabels = /*#__PURE__*/function () {\n    function BarDataLabels(barCtx) {\n      _classCallCheck(this, BarDataLabels);\n\n      this.w = barCtx.w;\n      this.barCtx = barCtx;\n    }\n    /** handleBarDataLabels is used to calculate the positions for the data-labels\n     * It also sets the element's data attr for bars and calls drawCalculatedBarDataLabels()\n     * After calculating, it also calls the function to draw data labels\n     * @memberof Bar\n     * @param {object} {barProps} most of the bar properties used throughout the bar\n     * drawing function\n     * @return {object} dataLabels node-element which you can append later\n     **/\n\n\n    _createClass(BarDataLabels, [{\n      key: \"handleBarDataLabels\",\n      value: function handleBarDataLabels(opts) {\n        var x = opts.x,\n            y = opts.y,\n            y1 = opts.y1,\n            y2 = opts.y2,\n            i = opts.i,\n            j = opts.j,\n            realIndex = opts.realIndex,\n            series = opts.series,\n            barHeight = opts.barHeight,\n            barWidth = opts.barWidth,\n            barYPosition = opts.barYPosition,\n            visibleSeries = opts.visibleSeries,\n            renderedPath = opts.renderedPath;\n        var w = this.w;\n        var graphics = new Graphics(this.barCtx.ctx);\n        var strokeWidth = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[realIndex] : this.barCtx.strokeWidth;\n        var bcx = x + parseFloat(barWidth * visibleSeries);\n        var bcy = y + parseFloat(barHeight * visibleSeries);\n\n        if (w.globals.isXNumeric && !w.globals.isBarHorizontal) {\n          bcx = x + parseFloat(barWidth * (visibleSeries + 1));\n          bcy = y + parseFloat(barHeight * (visibleSeries + 1)) - strokeWidth;\n        }\n\n        var dataLabels = null;\n        var dataLabelsX = x;\n        var dataLabelsY = y;\n        var dataLabelsPos = {};\n        var dataLabelsConfig = w.config.dataLabels;\n        var barDataLabelsConfig = this.barCtx.barOptions.dataLabels;\n\n        if (typeof barYPosition !== 'undefined' && this.barCtx.isRangeBar) {\n          bcy = barYPosition;\n          dataLabelsY = barYPosition;\n        }\n\n        var offX = dataLabelsConfig.offsetX;\n        var offY = dataLabelsConfig.offsetY;\n        var textRects = {\n          width: 0,\n          height: 0\n        };\n\n        if (w.config.dataLabels.enabled) {\n          var yLabel = this.barCtx.series[i][j];\n          textRects = graphics.getTextRects(w.globals.yLabelFormatters[0](yLabel), parseFloat(dataLabelsConfig.style.fontSize));\n        }\n\n        var params = {\n          x: x,\n          y: y,\n          i: i,\n          j: j,\n          renderedPath: renderedPath,\n          bcx: bcx,\n          bcy: bcy,\n          barHeight: barHeight,\n          barWidth: barWidth,\n          textRects: textRects,\n          strokeWidth: strokeWidth,\n          dataLabelsX: dataLabelsX,\n          dataLabelsY: dataLabelsY,\n          barDataLabelsConfig: barDataLabelsConfig,\n          offX: offX,\n          offY: offY\n        };\n\n        if (this.barCtx.isHorizontal) {\n          dataLabelsPos = this.calculateBarsDataLabelsPosition(params);\n        } else {\n          dataLabelsPos = this.calculateColumnsDataLabelsPosition(params);\n        }\n\n        renderedPath.attr({\n          cy: dataLabelsPos.bcy,\n          cx: dataLabelsPos.bcx,\n          j: j,\n          val: series[i][j],\n          barHeight: barHeight,\n          barWidth: barWidth\n        });\n        dataLabels = this.drawCalculatedDataLabels({\n          x: dataLabelsPos.dataLabelsX,\n          y: dataLabelsPos.dataLabelsY,\n          val: this.barCtx.isRangeBar ? [y1, y2] : series[i][j],\n          i: realIndex,\n          j: j,\n          barWidth: barWidth,\n          barHeight: barHeight,\n          textRects: textRects,\n          dataLabelsConfig: dataLabelsConfig\n        });\n        return dataLabels;\n      }\n    }, {\n      key: \"calculateColumnsDataLabelsPosition\",\n      value: function calculateColumnsDataLabelsPosition(opts) {\n        var w = this.w;\n        var i = opts.i,\n            j = opts.j,\n            y = opts.y,\n            bcx = opts.bcx,\n            barWidth = opts.barWidth,\n            barHeight = opts.barHeight,\n            textRects = opts.textRects,\n            dataLabelsY = opts.dataLabelsY,\n            barDataLabelsConfig = opts.barDataLabelsConfig,\n            strokeWidth = opts.strokeWidth,\n            offX = opts.offX,\n            offY = opts.offY;\n        var dataLabelsX;\n        barHeight = Math.abs(barHeight);\n        var vertical = w.config.plotOptions.bar.dataLabels.orientation === 'vertical';\n        bcx = bcx - strokeWidth / 2;\n        var dataPointsDividedWidth = w.globals.gridWidth / w.globals.dataPoints;\n\n        if (w.globals.isXNumeric) {\n          dataLabelsX = bcx - barWidth / 2 + offX;\n        } else {\n          dataLabelsX = bcx - dataPointsDividedWidth + barWidth / 2 + offX;\n        }\n\n        if (vertical) {\n          var offsetDLX = 2;\n          dataLabelsX = dataLabelsX + textRects.height / 2 - strokeWidth / 2 - offsetDLX;\n        }\n\n        var valIsNegative = this.barCtx.series[i][j] < 0;\n        var newY = y;\n\n        if (this.barCtx.isReversed) {\n          newY = y - barHeight + (valIsNegative ? barHeight * 2 : 0);\n          y = y - barHeight;\n        }\n\n        switch (barDataLabelsConfig.position) {\n          case 'center':\n            if (vertical) {\n              if (valIsNegative) {\n                dataLabelsY = newY + barHeight / 2 + offY;\n              } else {\n                dataLabelsY = newY + barHeight / 2 - offY;\n              }\n            } else {\n              if (valIsNegative) {\n                dataLabelsY = newY - barHeight / 2 + textRects.height / 2 + offY;\n              } else {\n                dataLabelsY = newY + barHeight / 2 + textRects.height / 2 - offY;\n              }\n            }\n\n            break;\n\n          case 'bottom':\n            if (vertical) {\n              if (valIsNegative) {\n                dataLabelsY = newY + barHeight + offY;\n              } else {\n                dataLabelsY = newY + barHeight - offY;\n              }\n            } else {\n              if (valIsNegative) {\n                dataLabelsY = newY - barHeight + textRects.height + strokeWidth + offY;\n              } else {\n                dataLabelsY = newY + barHeight - textRects.height / 2 + strokeWidth - offY;\n              }\n            }\n\n            break;\n\n          case 'top':\n            if (vertical) {\n              if (valIsNegative) {\n                dataLabelsY = newY + offY;\n              } else {\n                dataLabelsY = newY - offY;\n              }\n            } else {\n              if (valIsNegative) {\n                dataLabelsY = newY - textRects.height / 2 - offY;\n              } else {\n                dataLabelsY = newY + textRects.height + offY;\n              }\n            }\n\n            break;\n        }\n\n        if (!w.config.chart.stacked) {\n          if (dataLabelsY < 0) {\n            dataLabelsY = 0 + strokeWidth;\n          } else if (dataLabelsY + textRects.height / 3 > w.globals.gridHeight) {\n            dataLabelsY = w.globals.gridHeight - strokeWidth;\n          }\n        }\n\n        return {\n          bcx: bcx,\n          bcy: y,\n          dataLabelsX: dataLabelsX,\n          dataLabelsY: dataLabelsY\n        };\n      }\n    }, {\n      key: \"calculateBarsDataLabelsPosition\",\n      value: function calculateBarsDataLabelsPosition(opts) {\n        var w = this.w;\n        var x = opts.x,\n            i = opts.i,\n            j = opts.j,\n            bcy = opts.bcy,\n            barHeight = opts.barHeight,\n            barWidth = opts.barWidth,\n            textRects = opts.textRects,\n            dataLabelsX = opts.dataLabelsX,\n            strokeWidth = opts.strokeWidth,\n            barDataLabelsConfig = opts.barDataLabelsConfig,\n            offX = opts.offX,\n            offY = opts.offY;\n        var dataPointsDividedHeight = w.globals.gridHeight / w.globals.dataPoints;\n        barWidth = Math.abs(barWidth);\n        var dataLabelsY = bcy - (this.barCtx.isRangeBar ? 0 : dataPointsDividedHeight) + barHeight / 2 + textRects.height / 2 + offY - 3;\n        var valIsNegative = this.barCtx.series[i][j] < 0;\n        var newX = x;\n\n        if (this.barCtx.isReversed) {\n          newX = x + barWidth - (valIsNegative ? barWidth * 2 : 0);\n          x = w.globals.gridWidth - barWidth;\n        }\n\n        switch (barDataLabelsConfig.position) {\n          case 'center':\n            if (valIsNegative) {\n              dataLabelsX = newX + barWidth / 2 - offX;\n            } else {\n              dataLabelsX = Math.max(textRects.width / 2, newX - barWidth / 2) + offX;\n            }\n\n            break;\n\n          case 'bottom':\n            if (valIsNegative) {\n              dataLabelsX = newX + barWidth - strokeWidth - Math.round(textRects.width / 2) - offX;\n            } else {\n              dataLabelsX = newX - barWidth + strokeWidth + Math.round(textRects.width / 2) + offX;\n            }\n\n            break;\n\n          case 'top':\n            if (valIsNegative) {\n              dataLabelsX = newX - strokeWidth + Math.round(textRects.width / 2) - offX;\n            } else {\n              dataLabelsX = newX - strokeWidth - Math.round(textRects.width / 2) + offX;\n            }\n\n            break;\n        }\n\n        if (!w.config.chart.stacked) {\n          if (dataLabelsX < 0) {\n            dataLabelsX = dataLabelsX + textRects.width + strokeWidth;\n          } else if (dataLabelsX + textRects.width / 2 > w.globals.gridWidth) {\n            dataLabelsX = w.globals.gridWidth - textRects.width - strokeWidth;\n          }\n        }\n\n        return {\n          bcx: x,\n          bcy: bcy,\n          dataLabelsX: dataLabelsX,\n          dataLabelsY: dataLabelsY\n        };\n      }\n    }, {\n      key: \"drawCalculatedDataLabels\",\n      value: function drawCalculatedDataLabels(_ref) {\n        var x = _ref.x,\n            y = _ref.y,\n            val = _ref.val,\n            i = _ref.i,\n            j = _ref.j,\n            textRects = _ref.textRects,\n            barHeight = _ref.barHeight,\n            barWidth = _ref.barWidth,\n            dataLabelsConfig = _ref.dataLabelsConfig;\n        var w = this.w;\n        var rotate = 'rotate(0)';\n        if (w.config.plotOptions.bar.dataLabels.orientation === 'vertical') rotate = \"rotate(-90, \".concat(x, \", \").concat(y, \")\");\n        var dataLabels = new DataLabels(this.barCtx.ctx);\n        var graphics = new Graphics(this.barCtx.ctx);\n        var formatter = dataLabelsConfig.formatter;\n        var elDataLabelsWrap = null;\n        var isSeriesNotCollapsed = w.globals.collapsedSeriesIndices.indexOf(i) > -1;\n\n        if (dataLabelsConfig.enabled && !isSeriesNotCollapsed) {\n          elDataLabelsWrap = graphics.group({\n            class: 'apexcharts-data-labels',\n            transform: rotate\n          });\n          var text = '';\n\n          if (typeof val !== 'undefined') {\n            text = formatter(val, {\n              seriesIndex: i,\n              dataPointIndex: j,\n              w: w\n            });\n          }\n\n          var valIsNegative = w.globals.series[i][j] < 0;\n          var position = w.config.plotOptions.bar.dataLabels.position;\n\n          if (w.config.plotOptions.bar.dataLabels.orientation === 'vertical') {\n            if (position === 'top') {\n              if (valIsNegative) dataLabelsConfig.textAnchor = 'end';else dataLabelsConfig.textAnchor = 'start';\n            }\n\n            if (position === 'center') {\n              dataLabelsConfig.textAnchor = 'middle';\n            }\n\n            if (position === 'bottom') {\n              if (valIsNegative) dataLabelsConfig.textAnchor = 'end';else dataLabelsConfig.textAnchor = 'start';\n            }\n          }\n\n          if (this.barCtx.isRangeBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels) {\n            // hide the datalabel if it cannot fit into the rect\n            var txRect = graphics.getTextRects(text, parseFloat(dataLabelsConfig.style.fontSize));\n\n            if (barWidth < txRect.width) {\n              text = '';\n            }\n          }\n\n          if (w.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels) {\n            // if there is not enough space to draw the label in the bar/column rect, check hideOverflowingLabels property to prevent overflowing on wrong rect\n            // Note: This issue is only seen in stacked charts\n            if (this.barCtx.isHorizontal) {\n              if (textRects.width / 1.6 > Math.abs(barWidth)) {\n                text = '';\n              }\n            } else {\n              if (textRects.height / 1.6 > Math.abs(barHeight)) {\n                text = '';\n              }\n            }\n          }\n\n          var modifiedDataLabelsConfig = _objectSpread2({}, dataLabelsConfig);\n\n          if (this.barCtx.isHorizontal) {\n            if (val < 0) {\n              if (dataLabelsConfig.textAnchor === 'start') {\n                modifiedDataLabelsConfig.textAnchor = 'end';\n              } else if (dataLabelsConfig.textAnchor === 'end') {\n                modifiedDataLabelsConfig.textAnchor = 'start';\n              }\n            }\n          }\n\n          dataLabels.plotDataLabelsText({\n            x: x,\n            y: y,\n            text: text,\n            i: i,\n            j: j,\n            parent: elDataLabelsWrap,\n            dataLabelsConfig: modifiedDataLabelsConfig,\n            alwaysDrawDataLabel: true,\n            offsetCorrection: true\n          });\n        }\n\n        return elDataLabelsWrap;\n      }\n    }]);\n\n    return BarDataLabels;\n  }();\n\n  /**\n   * ApexCharts Series Class for interaction with the Series of the chart.\n   *\n   * @module Series\n   **/\n\n  var Series = /*#__PURE__*/function () {\n    function Series(ctx) {\n      _classCallCheck(this, Series);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.legendInactiveClass = 'legend-mouseover-inactive';\n    }\n\n    _createClass(Series, [{\n      key: \"getAllSeriesEls\",\n      value: function getAllSeriesEls() {\n        return this.w.globals.dom.baseEl.getElementsByClassName(\"apexcharts-series\");\n      }\n    }, {\n      key: \"getSeriesByName\",\n      value: function getSeriesByName(seriesName) {\n        return this.w.globals.dom.baseEl.querySelector(\".apexcharts-inner .apexcharts-series[seriesName='\".concat(Utils$1.escapeString(seriesName), \"']\"));\n      }\n    }, {\n      key: \"isSeriesHidden\",\n      value: function isSeriesHidden(seriesName) {\n        var targetElement = this.getSeriesByName(seriesName);\n        var realIndex = parseInt(targetElement.getAttribute('data:realIndex'), 10);\n        var isHidden = targetElement.classList.contains('apexcharts-series-collapsed');\n        return {\n          isHidden: isHidden,\n          realIndex: realIndex\n        };\n      }\n    }, {\n      key: \"addCollapsedClassToSeries\",\n      value: function addCollapsedClassToSeries(elSeries, index) {\n        var w = this.w;\n\n        function iterateOnAllCollapsedSeries(series) {\n          for (var cs = 0; cs < series.length; cs++) {\n            if (series[cs].index === index) {\n              elSeries.node.classList.add('apexcharts-series-collapsed');\n            }\n          }\n        }\n\n        iterateOnAllCollapsedSeries(w.globals.collapsedSeries);\n        iterateOnAllCollapsedSeries(w.globals.ancillaryCollapsedSeries);\n      }\n    }, {\n      key: \"toggleSeries\",\n      value: function toggleSeries(seriesName) {\n        var isSeriesHidden = this.isSeriesHidden(seriesName);\n        this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex, isSeriesHidden.isHidden);\n        return isSeriesHidden.isHidden;\n      }\n    }, {\n      key: \"showSeries\",\n      value: function showSeries(seriesName) {\n        var isSeriesHidden = this.isSeriesHidden(seriesName);\n\n        if (isSeriesHidden.isHidden) {\n          this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex, true);\n        }\n      }\n    }, {\n      key: \"hideSeries\",\n      value: function hideSeries(seriesName) {\n        var isSeriesHidden = this.isSeriesHidden(seriesName);\n\n        if (!isSeriesHidden.isHidden) {\n          this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex, false);\n        }\n      }\n    }, {\n      key: \"resetSeries\",\n      value: function resetSeries() {\n        var shouldUpdateChart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var shouldResetZoom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var shouldResetCollapsed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var w = this.w;\n        var series = Utils$1.clone(w.globals.initialSeries);\n        w.globals.previousPaths = [];\n\n        if (shouldResetCollapsed) {\n          w.globals.collapsedSeries = [];\n          w.globals.ancillaryCollapsedSeries = [];\n          w.globals.collapsedSeriesIndices = [];\n          w.globals.ancillaryCollapsedSeriesIndices = [];\n        } else {\n          series = this.emptyCollapsedSeries(series);\n        }\n\n        w.config.series = series;\n\n        if (shouldUpdateChart) {\n          if (shouldResetZoom) {\n            w.globals.zoomed = false;\n            this.ctx.updateHelpers.revertDefaultAxisMinMax();\n          }\n\n          this.ctx.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n        }\n      }\n    }, {\n      key: \"emptyCollapsedSeries\",\n      value: function emptyCollapsedSeries(series) {\n        var w = this.w;\n\n        for (var i = 0; i < series.length; i++) {\n          if (w.globals.collapsedSeriesIndices.indexOf(i) > -1) {\n            series[i].data = [];\n          }\n        }\n\n        return series;\n      }\n    }, {\n      key: \"toggleSeriesOnHover\",\n      value: function toggleSeriesOnHover(e, targetElement) {\n        var w = this.w;\n        if (!targetElement) targetElement = e.target;\n        var allSeriesEls = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-series, .apexcharts-datalabels\");\n\n        if (e.type === 'mousemove') {\n          var seriesCnt = parseInt(targetElement.getAttribute('rel'), 10) - 1;\n          var seriesEl = null;\n          var dataLabelEl = null;\n\n          if (w.globals.axisCharts || w.config.chart.type === 'radialBar') {\n            if (w.globals.axisCharts) {\n              seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[data\\\\:realIndex='\".concat(seriesCnt, \"']\"));\n              dataLabelEl = w.globals.dom.baseEl.querySelector(\".apexcharts-datalabels[data\\\\:realIndex='\".concat(seriesCnt, \"']\"));\n            } else {\n              seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[rel='\".concat(seriesCnt + 1, \"']\"));\n            }\n          } else {\n            seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[rel='\".concat(seriesCnt + 1, \"'] path\"));\n          }\n\n          for (var se = 0; se < allSeriesEls.length; se++) {\n            allSeriesEls[se].classList.add(this.legendInactiveClass);\n          }\n\n          if (seriesEl !== null) {\n            if (!w.globals.axisCharts) {\n              seriesEl.parentNode.classList.remove(this.legendInactiveClass);\n            }\n\n            seriesEl.classList.remove(this.legendInactiveClass);\n\n            if (dataLabelEl !== null) {\n              dataLabelEl.classList.remove(this.legendInactiveClass);\n            }\n          }\n        } else if (e.type === 'mouseout') {\n          for (var _se = 0; _se < allSeriesEls.length; _se++) {\n            allSeriesEls[_se].classList.remove(this.legendInactiveClass);\n          }\n        }\n      }\n    }, {\n      key: \"highlightRangeInSeries\",\n      value: function highlightRangeInSeries(e, targetElement) {\n        var _this = this;\n\n        var w = this.w;\n        var allHeatMapElements = w.globals.dom.baseEl.getElementsByClassName('apexcharts-heatmap-rect');\n\n        var activeInactive = function activeInactive(action) {\n          for (var i = 0; i < allHeatMapElements.length; i++) {\n            allHeatMapElements[i].classList[action](_this.legendInactiveClass);\n          }\n        };\n\n        var removeInactiveClassFromHoveredRange = function removeInactiveClassFromHoveredRange(range) {\n          for (var i = 0; i < allHeatMapElements.length; i++) {\n            var val = parseInt(allHeatMapElements[i].getAttribute('val'), 10);\n\n            if (val >= range.from && val <= range.to) {\n              allHeatMapElements[i].classList.remove(_this.legendInactiveClass);\n            }\n          }\n        };\n\n        if (e.type === 'mousemove') {\n          var seriesCnt = parseInt(targetElement.getAttribute('rel'), 10) - 1;\n          activeInactive('add');\n          var range = w.config.plotOptions.heatmap.colorScale.ranges[seriesCnt];\n          removeInactiveClassFromHoveredRange(range);\n        } else if (e.type === 'mouseout') {\n          activeInactive('remove');\n        }\n      }\n    }, {\n      key: \"getActiveConfigSeriesIndex\",\n      value: function getActiveConfigSeriesIndex() {\n        var ignoreBars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n        var w = this.w;\n        var activeIndex = 0;\n\n        if (w.config.series.length > 1) {\n          // active series flag is required to know if user has not deactivated via legend click\n          var activeSeriesIndex = w.config.series.map(function (s, index) {\n            var hasBars = false;\n\n            if (ignoreBars) {\n              hasBars = w.config.series[index].type === 'bar' || w.config.series[index].type === 'column';\n            }\n\n            return s.data && s.data.length > 0 && !hasBars ? index : -1;\n          });\n\n          for (var a = order === 'asc' ? 0 : activeSeriesIndex.length - 1; order === 'asc' ? a < activeSeriesIndex.length : a >= 0; order === 'asc' ? a++ : a--) {\n            if (activeSeriesIndex[a] !== -1) {\n              activeIndex = activeSeriesIndex[a];\n              break;\n            }\n          }\n        }\n\n        return activeIndex;\n      }\n    }, {\n      key: \"getPreviousPaths\",\n      value: function getPreviousPaths() {\n        var w = this.w;\n        w.globals.previousPaths = [];\n\n        function pushPaths(seriesEls, i, type) {\n          var paths = seriesEls[i].childNodes;\n          var dArr = {\n            type: type,\n            paths: [],\n            realIndex: seriesEls[i].getAttribute('data:realIndex')\n          };\n\n          for (var j = 0; j < paths.length; j++) {\n            if (paths[j].hasAttribute('pathTo')) {\n              var d = paths[j].getAttribute('pathTo');\n              dArr.paths.push({\n                d: d\n              });\n            }\n          }\n\n          w.globals.previousPaths.push(dArr);\n        }\n\n        var getPaths = function getPaths(chartType) {\n          return w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(chartType, \"-series .apexcharts-series\"));\n        };\n\n        var chartTypes = ['line', 'area', 'bar', 'rangebar', 'candlestick', 'radar'];\n        chartTypes.forEach(function (type) {\n          var paths = getPaths(type);\n\n          for (var p = 0; p < paths.length; p++) {\n            pushPaths(paths, p, type);\n          }\n        });\n        this.handlePrevBubbleScatterPaths('bubble');\n        this.handlePrevBubbleScatterPaths('scatter');\n        var heatTreeSeries = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(w.config.chart.type, \" .apexcharts-series\"));\n\n        if (heatTreeSeries.length > 0) {\n          var _loop = function _loop(h) {\n            var seriesEls = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(w.config.chart.type, \" .apexcharts-series[data\\\\:realIndex='\").concat(h, \"'] rect\"));\n            var dArr = [];\n\n            var _loop2 = function _loop2(i) {\n              var getAttr = function getAttr(x) {\n                return seriesEls[i].getAttribute(x);\n              };\n\n              var rect = {\n                x: parseFloat(getAttr('x')),\n                y: parseFloat(getAttr('y')),\n                width: parseFloat(getAttr('width')),\n                height: parseFloat(getAttr('height'))\n              };\n              dArr.push({\n                rect: rect,\n                color: seriesEls[i].getAttribute('color')\n              });\n            };\n\n            for (var i = 0; i < seriesEls.length; i++) {\n              _loop2(i);\n            }\n\n            w.globals.previousPaths.push(dArr);\n          };\n\n          for (var h = 0; h < heatTreeSeries.length; h++) {\n            _loop(h);\n          }\n        }\n\n        if (!w.globals.axisCharts) {\n          // for non-axis charts (i.e., circular charts, pathFrom is not usable. We need whole series)\n          w.globals.previousPaths = w.globals.series;\n        }\n      }\n    }, {\n      key: \"handlePrevBubbleScatterPaths\",\n      value: function handlePrevBubbleScatterPaths(type) {\n        var w = this.w;\n        var paths = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(type, \"-series .apexcharts-series\"));\n\n        if (paths.length > 0) {\n          for (var s = 0; s < paths.length; s++) {\n            var seriesEls = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(type, \"-series .apexcharts-series[data\\\\:realIndex='\").concat(s, \"'] circle\"));\n            var dArr = [];\n\n            for (var i = 0; i < seriesEls.length; i++) {\n              dArr.push({\n                x: seriesEls[i].getAttribute('cx'),\n                y: seriesEls[i].getAttribute('cy'),\n                r: seriesEls[i].getAttribute('r')\n              });\n            }\n\n            w.globals.previousPaths.push(dArr);\n          }\n        }\n      }\n    }, {\n      key: \"clearPreviousPaths\",\n      value: function clearPreviousPaths() {\n        var w = this.w;\n        w.globals.previousPaths = [];\n        w.globals.allSeriesCollapsed = false;\n      }\n    }, {\n      key: \"handleNoData\",\n      value: function handleNoData() {\n        var w = this.w;\n        var me = this;\n        var noDataOpts = w.config.noData;\n        var graphics = new Graphics(me.ctx);\n        var x = w.globals.svgWidth / 2;\n        var y = w.globals.svgHeight / 2;\n        var textAnchor = 'middle';\n        w.globals.noData = true;\n        w.globals.animationEnded = true;\n\n        if (noDataOpts.align === 'left') {\n          x = 10;\n          textAnchor = 'start';\n        } else if (noDataOpts.align === 'right') {\n          x = w.globals.svgWidth - 10;\n          textAnchor = 'end';\n        }\n\n        if (noDataOpts.verticalAlign === 'top') {\n          y = 50;\n        } else if (noDataOpts.verticalAlign === 'bottom') {\n          y = w.globals.svgHeight - 50;\n        }\n\n        x = x + noDataOpts.offsetX;\n        y = y + parseInt(noDataOpts.style.fontSize, 10) + 2 + noDataOpts.offsetY;\n\n        if (noDataOpts.text !== undefined && noDataOpts.text !== '') {\n          var titleText = graphics.drawText({\n            x: x,\n            y: y,\n            text: noDataOpts.text,\n            textAnchor: textAnchor,\n            fontSize: noDataOpts.style.fontSize,\n            fontFamily: noDataOpts.style.fontFamily,\n            foreColor: noDataOpts.style.color,\n            opacity: 1,\n            class: 'apexcharts-text-nodata'\n          });\n          w.globals.dom.Paper.add(titleText);\n        }\n      } // When user clicks on legends, the collapsed series is filled with [0,0,0,...,0]\n      // This is because we don't want to alter the series' length as it is used at many places\n\n    }, {\n      key: \"setNullSeriesToZeroValues\",\n      value: function setNullSeriesToZeroValues(series) {\n        var w = this.w;\n\n        for (var sl = 0; sl < series.length; sl++) {\n          if (series[sl].length === 0) {\n            for (var j = 0; j < series[w.globals.maxValsInArrayIndex].length; j++) {\n              series[sl].push(0);\n            }\n          }\n        }\n\n        return series;\n      }\n    }, {\n      key: \"hasAllSeriesEqualX\",\n      value: function hasAllSeriesEqualX() {\n        var equalLen = true;\n        var w = this.w;\n        var filteredSerX = this.filteredSeriesX();\n\n        for (var i = 0; i < filteredSerX.length - 1; i++) {\n          if (filteredSerX[i][0] !== filteredSerX[i + 1][0]) {\n            equalLen = false;\n            break;\n          }\n        }\n\n        w.globals.allSeriesHasEqualX = equalLen;\n        return equalLen;\n      }\n    }, {\n      key: \"filteredSeriesX\",\n      value: function filteredSeriesX() {\n        var w = this.w;\n        var filteredSeriesX = w.globals.seriesX.map(function (ser) {\n          return ser.length > 0 ? ser : [];\n        });\n        return filteredSeriesX;\n      }\n    }]);\n\n    return Series;\n  }();\n\n  var Helpers$3 = /*#__PURE__*/function () {\n    function Helpers(barCtx) {\n      _classCallCheck(this, Helpers);\n\n      this.w = barCtx.w;\n      this.barCtx = barCtx;\n    }\n\n    _createClass(Helpers, [{\n      key: \"initVariables\",\n      value: function initVariables(series) {\n        var w = this.w;\n        this.barCtx.series = series;\n        this.barCtx.totalItems = 0;\n        this.barCtx.seriesLen = 0;\n        this.barCtx.visibleI = -1; // visible Series\n\n        this.barCtx.visibleItems = 1; // number of visible bars after user zoomed in/out\n\n        for (var sl = 0; sl < series.length; sl++) {\n          if (series[sl].length > 0) {\n            this.barCtx.seriesLen = this.barCtx.seriesLen + 1;\n            this.barCtx.totalItems += series[sl].length;\n          }\n\n          if (w.globals.isXNumeric) {\n            // get max visible items\n            for (var j = 0; j < series[sl].length; j++) {\n              if (w.globals.seriesX[sl][j] > w.globals.minX && w.globals.seriesX[sl][j] < w.globals.maxX) {\n                this.barCtx.visibleItems++;\n              }\n            }\n          } else {\n            this.barCtx.visibleItems = w.globals.dataPoints;\n          }\n        }\n\n        if (this.barCtx.seriesLen === 0) {\n          // A small adjustment when combo charts are used\n          this.barCtx.seriesLen = 1;\n        }\n\n        this.barCtx.zeroSerieses = [];\n        this.barCtx.radiusOnSeriesNumber = series.length - 1; // which series to draw ending shape on\n\n        if (!w.globals.comboCharts) {\n          this.checkZeroSeries({\n            series: series\n          });\n        }\n      }\n    }, {\n      key: \"initialPositions\",\n      value: function initialPositions() {\n        var w = this.w;\n        var x, y, yDivision, xDivision, barHeight, barWidth, zeroH, zeroW;\n        var dataPoints = w.globals.dataPoints;\n\n        if (this.barCtx.isRangeBar) {\n          // timeline rangebar chart\n          dataPoints = w.globals.labels.length;\n        }\n\n        var seriesLen = this.barCtx.seriesLen;\n\n        if (w.config.plotOptions.bar.rangeBarGroupRows) {\n          seriesLen = 1;\n        }\n\n        if (this.barCtx.isHorizontal) {\n          // height divided into equal parts\n          yDivision = w.globals.gridHeight / dataPoints;\n          barHeight = yDivision / seriesLen;\n\n          if (w.globals.isXNumeric) {\n            yDivision = w.globals.gridHeight / this.barCtx.totalItems;\n            barHeight = yDivision / this.barCtx.seriesLen;\n          }\n\n          barHeight = barHeight * parseInt(this.barCtx.barOptions.barHeight, 10) / 100;\n          zeroW = this.barCtx.baseLineInvertedY + w.globals.padHorizontal + (this.barCtx.isReversed ? w.globals.gridWidth : 0) - (this.barCtx.isReversed ? this.barCtx.baseLineInvertedY * 2 : 0);\n          y = (yDivision - barHeight * this.barCtx.seriesLen) / 2;\n        } else {\n          // width divided into equal parts\n          xDivision = w.globals.gridWidth / this.barCtx.visibleItems;\n\n          if (w.config.xaxis.convertedCatToNumeric) {\n            xDivision = w.globals.gridWidth / w.globals.dataPoints;\n          }\n\n          barWidth = xDivision / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100;\n\n          if (w.globals.isXNumeric) {\n            // max barwidth should be equal to minXDiff to avoid overlap\n            var xRatio = this.barCtx.xRatio;\n\n            if (w.config.xaxis.convertedCatToNumeric) {\n              xRatio = this.barCtx.initialXRatio;\n            }\n\n            if (w.globals.minXDiff && w.globals.minXDiff !== 0.5 && w.globals.minXDiff / xRatio > 0) {\n              xDivision = w.globals.minXDiff / xRatio;\n            }\n\n            barWidth = xDivision / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100;\n\n            if (barWidth < 1) {\n              barWidth = 1;\n            }\n          }\n\n          zeroH = w.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? w.globals.gridHeight : 0) + (this.barCtx.isReversed ? this.barCtx.baseLineY[this.barCtx.yaxisIndex] * 2 : 0);\n          x = w.globals.padHorizontal + (xDivision - barWidth * this.barCtx.seriesLen) / 2;\n        }\n\n        return {\n          x: x,\n          y: y,\n          yDivision: yDivision,\n          xDivision: xDivision,\n          barHeight: barHeight,\n          barWidth: barWidth,\n          zeroH: zeroH,\n          zeroW: zeroW\n        };\n      }\n    }, {\n      key: \"getPathFillColor\",\n      value: function getPathFillColor(series, i, j, realIndex) {\n        var w = this.w;\n        var fill = new Fill(this.barCtx.ctx);\n        var fillColor = null;\n        var seriesNumber = this.barCtx.barOptions.distributed ? j : i;\n\n        if (this.barCtx.barOptions.colors.ranges.length > 0) {\n          var colorRange = this.barCtx.barOptions.colors.ranges;\n          colorRange.map(function (range) {\n            if (series[i][j] >= range.from && series[i][j] <= range.to) {\n              fillColor = range.color;\n            }\n          });\n        }\n\n        if (w.config.series[i].data[j] && w.config.series[i].data[j].fillColor) {\n          fillColor = w.config.series[i].data[j].fillColor;\n        }\n\n        var pathFill = fill.fillPath({\n          seriesNumber: this.barCtx.barOptions.distributed ? seriesNumber : realIndex,\n          dataPointIndex: j,\n          color: fillColor,\n          value: series[i][j]\n        });\n        return pathFill;\n      }\n    }, {\n      key: \"getStrokeWidth\",\n      value: function getStrokeWidth(i, j, realIndex) {\n        var strokeWidth = 0;\n        var w = this.w;\n\n        if (typeof this.barCtx.series[i][j] === 'undefined' || this.barCtx.series[i][j] === null) {\n          this.barCtx.isNullValue = true;\n        } else {\n          this.barCtx.isNullValue = false;\n        }\n\n        if (w.config.stroke.show) {\n          if (!this.barCtx.isNullValue) {\n            strokeWidth = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[realIndex] : this.barCtx.strokeWidth;\n          }\n        }\n\n        return strokeWidth;\n      }\n    }, {\n      key: \"barBackground\",\n      value: function barBackground(_ref) {\n        var j = _ref.j,\n            i = _ref.i,\n            x1 = _ref.x1,\n            x2 = _ref.x2,\n            y1 = _ref.y1,\n            y2 = _ref.y2,\n            elSeries = _ref.elSeries;\n        var w = this.w;\n        var graphics = new Graphics(this.barCtx.ctx);\n        var sr = new Series(this.barCtx.ctx);\n        var activeSeriesIndex = sr.getActiveConfigSeriesIndex();\n\n        if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && activeSeriesIndex === i) {\n          if (j >= this.barCtx.barOptions.colors.backgroundBarColors.length) {\n            j -= this.barCtx.barOptions.colors.backgroundBarColors.length;\n          }\n\n          var bcolor = this.barCtx.barOptions.colors.backgroundBarColors[j];\n          var rect = graphics.drawRect(typeof x1 !== 'undefined' ? x1 : 0, typeof y1 !== 'undefined' ? y1 : 0, typeof x2 !== 'undefined' ? x2 : w.globals.gridWidth, typeof y2 !== 'undefined' ? y2 : w.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, bcolor, this.barCtx.barOptions.colors.backgroundBarOpacity);\n          elSeries.add(rect);\n          rect.node.classList.add('apexcharts-backgroundBar');\n        }\n      }\n    }, {\n      key: \"getColumnPaths\",\n      value: function getColumnPaths(_ref2) {\n        var barWidth = _ref2.barWidth,\n            barXPosition = _ref2.barXPosition,\n            yRatio = _ref2.yRatio,\n            y1 = _ref2.y1,\n            y2 = _ref2.y2,\n            strokeWidth = _ref2.strokeWidth,\n            series = _ref2.series,\n            realIndex = _ref2.realIndex,\n            i = _ref2.i,\n            j = _ref2.j,\n            w = _ref2.w;\n        var graphics = new Graphics(this.barCtx.ctx);\n        strokeWidth = Array.isArray(strokeWidth) ? strokeWidth[realIndex] : strokeWidth;\n        if (!strokeWidth) strokeWidth = 0;\n        var shapeOpts = {\n          barWidth: barWidth,\n          strokeWidth: strokeWidth,\n          yRatio: yRatio,\n          barXPosition: barXPosition,\n          y1: y1,\n          y2: y2\n        };\n        var newPath = this.getRoundedBars(w, shapeOpts, series, i, j);\n        var x1 = barXPosition;\n        var x2 = barXPosition + barWidth;\n        var pathTo = graphics.move(x1, y1);\n        var pathFrom = graphics.move(x1, y1);\n        var sl = graphics.line(x2 - strokeWidth, y1);\n\n        if (w.globals.previousPaths.length > 0) {\n          pathFrom = this.barCtx.getPreviousPath(realIndex, j, false);\n        }\n\n        pathTo = pathTo + graphics.line(x1, newPath.y2) + newPath.pathWithRadius + graphics.line(x2 - strokeWidth, newPath.y2) + sl + sl + 'z'; // the lines in pathFrom are repeated to equal it to the points of pathTo\n        // this is to avoid weird animation (bug in svg.js)\n\n        pathFrom = pathFrom + graphics.line(x1, y1) + sl + sl + sl + sl + sl + graphics.line(x1, y1);\n\n        if (w.config.chart.stacked) {\n          this.barCtx.yArrj.push(newPath.y2);\n          this.barCtx.yArrjF.push(Math.abs(y1 - newPath.y2));\n          this.barCtx.yArrjVal.push(this.barCtx.series[i][j]);\n        }\n\n        return {\n          pathTo: pathTo,\n          pathFrom: pathFrom\n        };\n      }\n    }, {\n      key: \"getBarpaths\",\n      value: function getBarpaths(_ref3) {\n        var barYPosition = _ref3.barYPosition,\n            barHeight = _ref3.barHeight,\n            x1 = _ref3.x1,\n            x2 = _ref3.x2,\n            strokeWidth = _ref3.strokeWidth,\n            series = _ref3.series,\n            realIndex = _ref3.realIndex,\n            i = _ref3.i,\n            j = _ref3.j,\n            w = _ref3.w;\n        var graphics = new Graphics(this.barCtx.ctx);\n        strokeWidth = Array.isArray(strokeWidth) ? strokeWidth[realIndex] : strokeWidth;\n        if (!strokeWidth) strokeWidth = 0;\n        var shapeOpts = {\n          barHeight: barHeight,\n          strokeWidth: strokeWidth,\n          barYPosition: barYPosition,\n          x2: x2,\n          x1: x1\n        };\n        var newPath = this.getRoundedBars(w, shapeOpts, series, i, j);\n        var pathTo = graphics.move(x1, barYPosition);\n        var pathFrom = graphics.move(x1, barYPosition);\n\n        if (w.globals.previousPaths.length > 0) {\n          pathFrom = this.barCtx.getPreviousPath(realIndex, j, false);\n        }\n\n        var y1 = barYPosition;\n        var y2 = barYPosition + barHeight;\n        var sl = graphics.line(x1, y2 - strokeWidth);\n        pathTo = pathTo + graphics.line(newPath.x2, y1) + newPath.pathWithRadius + graphics.line(newPath.x2, y2 - strokeWidth) + sl + sl + 'z';\n        pathFrom = pathFrom + graphics.line(x1, y1) + sl + sl + sl + sl + sl + graphics.line(x1, y1);\n\n        if (w.config.chart.stacked) {\n          this.barCtx.xArrj.push(newPath.x2);\n          this.barCtx.xArrjF.push(Math.abs(x1 - newPath.x2));\n          this.barCtx.xArrjVal.push(this.barCtx.series[i][j]);\n        }\n\n        return {\n          pathTo: pathTo,\n          pathFrom: pathFrom\n        };\n      }\n      /** getRoundedBars draws border radius for bars/columns\n       * @memberof Bar\n       * @param {object} w - chart context\n       * @param {object} opts - consists several properties like barHeight/barWidth\n       * @param {array} series - global primary series\n       * @param {int} i - current iterating series's index\n       * @param {int} j - series's j of i\n       * @return {object} pathWithRadius - ending shape path string\n       *         newY/newX - which is calculated from existing x/y based on rounded border\n       **/\n\n    }, {\n      key: \"getRoundedBars\",\n      value: function getRoundedBars(w, opts, series, i, j) {\n        var graphics = new Graphics(this.barCtx.ctx);\n        var radius = 0;\n        var borderRadius = w.config.plotOptions.bar.borderRadius;\n        var borderRadiusIsArray = Array.isArray(borderRadius);\n\n        if (borderRadiusIsArray) {\n          var radiusIndex = i > borderRadius.length - 1 ? borderRadius.length - 1 : i;\n          radius = borderRadius[radiusIndex];\n        } else {\n          radius = borderRadius;\n        }\n\n        if (w.config.chart.stacked && series.length > 1 && i !== this.barCtx.radiusOnSeriesNumber && !borderRadiusIsArray) {\n          radius = 0;\n        }\n\n        if (this.barCtx.isHorizontal) {\n          var pathWithRadius = '';\n          var x2 = opts.x2;\n\n          if (Math.abs(opts.x1 - opts.x2) < radius) {\n            radius = Math.abs(opts.x1 - opts.x2);\n          }\n\n          if (typeof series[i][j] !== 'undefined' || series[i][j] !== null) {\n            var inverse = this.barCtx.isReversed ? series[i][j] > 0 : series[i][j] < 0;\n            if (inverse) radius = radius * -1;\n            x2 = x2 - radius;\n            pathWithRadius = graphics.quadraticCurve(x2 + radius, opts.barYPosition, x2 + radius, opts.barYPosition + (!inverse ? radius : radius * -1)) + graphics.line(x2 + radius, opts.barYPosition + opts.barHeight - opts.strokeWidth - (!inverse ? radius : radius * -1)) + graphics.quadraticCurve(x2 + radius, opts.barYPosition + opts.barHeight - opts.strokeWidth, x2, opts.barYPosition + opts.barHeight - opts.strokeWidth);\n          }\n\n          return {\n            pathWithRadius: pathWithRadius,\n            x2: x2\n          };\n        } else {\n          var _pathWithRadius = '';\n          var y2 = opts.y2;\n\n          if (Math.abs(opts.y1 - opts.y2) < radius) {\n            radius = Math.abs(opts.y1 - opts.y2);\n          }\n\n          if (typeof series[i][j] !== 'undefined' || series[i][j] !== null) {\n            var _inverse = series[i][j] < 0;\n\n            if (_inverse) radius = radius * -1;\n            y2 = y2 + radius;\n            _pathWithRadius = graphics.quadraticCurve(opts.barXPosition, y2 - radius, opts.barXPosition + (!_inverse ? radius : radius * -1), y2 - radius) + graphics.line(opts.barXPosition + opts.barWidth - opts.strokeWidth - (!_inverse ? radius : radius * -1), y2 - radius) + graphics.quadraticCurve(opts.barXPosition + opts.barWidth - opts.strokeWidth, y2 - radius, opts.barXPosition + opts.barWidth - opts.strokeWidth, y2);\n          }\n\n          return {\n            pathWithRadius: _pathWithRadius,\n            y2: y2\n          };\n        }\n      }\n    }, {\n      key: \"checkZeroSeries\",\n      value: function checkZeroSeries(_ref4) {\n        var series = _ref4.series;\n        var w = this.w;\n\n        for (var zs = 0; zs < series.length; zs++) {\n          var total = 0;\n\n          for (var zsj = 0; zsj < series[w.globals.maxValsInArrayIndex].length; zsj++) {\n            total += series[zs][zsj];\n          }\n\n          if (total === 0) {\n            this.barCtx.zeroSerieses.push(zs);\n          }\n        } // After getting all zeroserieses, we need to ensure whether radiusOnSeriesNumber is not in that zeroseries array\n\n\n        for (var s = series.length - 1; s >= 0; s--) {\n          if (this.barCtx.zeroSerieses.indexOf(s) > -1 && s === this.radiusOnSeriesNumber) {\n            this.barCtx.radiusOnSeriesNumber -= 1;\n          }\n        }\n\n        for (var _s = series.length - 1; _s >= 0; _s--) {\n          if (w.globals.collapsedSeriesIndices.indexOf(this.barCtx.radiusOnSeriesNumber) > -1) {\n            this.barCtx.radiusOnSeriesNumber -= 1;\n          }\n        }\n      }\n    }, {\n      key: \"getXForValue\",\n      value: function getXForValue(value, zeroW) {\n        var zeroPositionForNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var xForVal = zeroPositionForNull ? zeroW : null;\n\n        if (typeof value !== 'undefined' && value !== null) {\n          xForVal = zeroW + value / this.barCtx.invertedYRatio - (this.barCtx.isReversed ? value / this.barCtx.invertedYRatio : 0) * 2;\n        }\n\n        return xForVal;\n      }\n    }, {\n      key: \"getYForValue\",\n      value: function getYForValue(value, zeroH) {\n        var zeroPositionForNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var yForVal = zeroPositionForNull ? zeroH : null;\n\n        if (typeof value !== 'undefined' && value !== null) {\n          yForVal = zeroH - value / this.barCtx.yRatio[this.barCtx.yaxisIndex] + (this.barCtx.isReversed ? value / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0) * 2;\n        }\n\n        return yForVal;\n      }\n    }, {\n      key: \"getGoalValues\",\n      value: function getGoalValues(type, zeroW, zeroH, i, j) {\n        var _this = this;\n\n        var w = this.w;\n        var goals = [];\n\n        if (w.globals.seriesGoals[i] && w.globals.seriesGoals[i][j] && Array.isArray(w.globals.seriesGoals[i][j])) {\n          w.globals.seriesGoals[i][j].forEach(function (goal) {\n            var _goals$push;\n\n            goals.push((_goals$push = {}, _defineProperty(_goals$push, type, type === 'x' ? _this.getXForValue(goal.value, zeroW, false) : _this.getYForValue(goal.value, zeroH, false)), _defineProperty(_goals$push, \"attrs\", goal), _goals$push));\n          });\n        }\n\n        return goals;\n      }\n    }, {\n      key: \"drawGoalLine\",\n      value: function drawGoalLine(_ref5) {\n        var barXPosition = _ref5.barXPosition,\n            barYPosition = _ref5.barYPosition,\n            goalX = _ref5.goalX,\n            goalY = _ref5.goalY,\n            barWidth = _ref5.barWidth,\n            barHeight = _ref5.barHeight;\n        var graphics = new Graphics(this.barCtx.ctx);\n        var lineGroup = graphics.group({\n          className: 'apexcharts-bar-goals-groups'\n        });\n        var line = null;\n\n        if (this.barCtx.isHorizontal) {\n          if (Array.isArray(goalX)) {\n            goalX.forEach(function (goal) {\n              var sHeight = typeof goal.attrs.strokeHeight !== 'undefined' ? goal.attrs.strokeHeight : barHeight / 2;\n              var y = barYPosition + sHeight + barHeight / 2;\n              line = graphics.drawLine(goal.x, y - sHeight * 2, goal.x, y, goal.attrs.strokeColor ? goal.attrs.strokeColor : undefined, goal.attrs.strokeDashArray, goal.attrs.strokeWidth ? goal.attrs.strokeWidth : 2, goal.attrs.strokeLineCap);\n              lineGroup.add(line);\n            });\n          }\n        } else {\n          if (Array.isArray(goalY)) {\n            goalY.forEach(function (goal) {\n              var sWidth = typeof goal.attrs.strokeWidth !== 'undefined' ? goal.attrs.strokeWidth : barWidth / 2;\n              var x = barXPosition + sWidth + barWidth / 2;\n              line = graphics.drawLine(x - sWidth * 2, goal.y, x, goal.y, goal.attrs.strokeColor ? goal.attrs.strokeColor : undefined, goal.attrs.strokeDashArray, goal.attrs.strokeHeight ? goal.attrs.strokeHeight : 2, goal.attrs.strokeLineCap);\n              lineGroup.add(line);\n            });\n          }\n        }\n\n        return lineGroup;\n      }\n    }]);\n\n    return Helpers;\n  }();\n\n  /**\n   * ApexCharts Bar Class responsible for drawing both Columns and Bars.\n   *\n   * @module Bar\n   **/\n\n  var Bar = /*#__PURE__*/function () {\n    function Bar(ctx, xyRatios) {\n      _classCallCheck(this, Bar);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.barOptions = w.config.plotOptions.bar;\n      this.isHorizontal = this.barOptions.horizontal;\n      this.strokeWidth = w.config.stroke.width;\n      this.isNullValue = false;\n      this.isRangeBar = w.globals.seriesRangeBar.length && this.isHorizontal;\n      this.xyRatios = xyRatios;\n\n      if (this.xyRatios !== null) {\n        this.xRatio = xyRatios.xRatio;\n        this.initialXRatio = xyRatios.initialXRatio;\n        this.yRatio = xyRatios.yRatio;\n        this.invertedXRatio = xyRatios.invertedXRatio;\n        this.invertedYRatio = xyRatios.invertedYRatio;\n        this.baseLineY = xyRatios.baseLineY;\n        this.baseLineInvertedY = xyRatios.baseLineInvertedY;\n      }\n\n      this.yaxisIndex = 0;\n      this.seriesLen = 0;\n      this.barHelpers = new Helpers$3(this);\n    }\n    /** primary draw method which is called on bar object\n     * @memberof Bar\n     * @param {array} series - user supplied series values\n     * @param {int} seriesIndex - the index by which series will be drawn on the svg\n     * @return {node} element which is supplied to parent chart draw method for appending\n     **/\n\n\n    _createClass(Bar, [{\n      key: \"draw\",\n      value: function draw(series, seriesIndex) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var coreUtils = new CoreUtils(this.ctx, w);\n        series = coreUtils.getLogSeries(series);\n        this.series = series;\n        this.yRatio = coreUtils.getLogYRatios(this.yRatio);\n        this.barHelpers.initVariables(series);\n        var ret = graphics.group({\n          class: 'apexcharts-bar-series apexcharts-plot-series'\n        });\n\n        if (w.config.dataLabels.enabled) {\n          if (this.totalItems > this.barOptions.dataLabels.maxItems) {\n            console.warn('WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.');\n          }\n        }\n\n        for (var i = 0, bc = 0; i < series.length; i++, bc++) {\n          var x = void 0,\n              y = void 0,\n              xDivision = void 0,\n              // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n          yDivision = void 0,\n              // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n          zeroH = void 0,\n              // zeroH is the baseline where 0 meets y axis\n          zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n          var yArrj = []; // hold y values of current iterating series\n\n          var xArrj = []; // hold x values of current iterating series\n\n          var realIndex = w.globals.comboCharts ? seriesIndex[i] : i; // el to which series will be drawn\n\n          var elSeries = graphics.group({\n            class: \"apexcharts-series\",\n            rel: i + 1,\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[realIndex]),\n            'data:realIndex': realIndex\n          });\n          this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex);\n\n          if (series[i].length > 0) {\n            this.visibleI = this.visibleI + 1;\n          }\n\n          var barHeight = 0;\n          var barWidth = 0;\n\n          if (this.yRatio.length > 1) {\n            this.yaxisIndex = realIndex;\n          }\n\n          this.isReversed = w.config.yaxis[this.yaxisIndex] && w.config.yaxis[this.yaxisIndex].reversed;\n          var initPositions = this.barHelpers.initialPositions();\n          y = initPositions.y;\n          barHeight = initPositions.barHeight;\n          yDivision = initPositions.yDivision;\n          zeroW = initPositions.zeroW;\n          x = initPositions.x;\n          barWidth = initPositions.barWidth;\n          xDivision = initPositions.xDivision;\n          zeroH = initPositions.zeroH;\n\n          if (!this.horizontal) {\n            xArrj.push(x + barWidth / 2);\n          } // eldatalabels\n\n\n          var elDataLabelsWrap = graphics.group({\n            class: 'apexcharts-datalabels',\n            'data:realIndex': realIndex\n          });\n          var elGoalsMarkers = graphics.group({\n            class: 'apexcharts-bar-goals-markers',\n            style: \"pointer-events: none\"\n          });\n\n          for (var j = 0; j < w.globals.dataPoints; j++) {\n            var strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex);\n            var paths = null;\n            var pathsParams = {\n              indexes: {\n                i: i,\n                j: j,\n                realIndex: realIndex,\n                bc: bc\n              },\n              x: x,\n              y: y,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries\n            };\n\n            if (this.isHorizontal) {\n              paths = this.drawBarPaths(_objectSpread2(_objectSpread2({}, pathsParams), {}, {\n                barHeight: barHeight,\n                zeroW: zeroW,\n                yDivision: yDivision\n              }));\n              barWidth = this.series[i][j] / this.invertedYRatio;\n            } else {\n              paths = this.drawColumnPaths(_objectSpread2(_objectSpread2({}, pathsParams), {}, {\n                xDivision: xDivision,\n                barWidth: barWidth,\n                zeroH: zeroH\n              }));\n              barHeight = this.series[i][j] / this.yRatio[this.yaxisIndex];\n            }\n\n            var barGoalLine = this.barHelpers.drawGoalLine({\n              barXPosition: paths.barXPosition,\n              barYPosition: paths.barYPosition,\n              goalX: paths.goalX,\n              goalY: paths.goalY,\n              barHeight: barHeight,\n              barWidth: barWidth\n            });\n\n            if (barGoalLine) {\n              elGoalsMarkers.add(barGoalLine);\n            }\n\n            y = paths.y;\n            x = paths.x; // push current X\n\n            if (j > 0) {\n              xArrj.push(x + barWidth / 2);\n            }\n\n            yArrj.push(y);\n            var pathFill = this.barHelpers.getPathFillColor(series, i, j, realIndex);\n            this.renderSeries({\n              realIndex: realIndex,\n              pathFill: pathFill,\n              j: j,\n              i: i,\n              pathFrom: paths.pathFrom,\n              pathTo: paths.pathTo,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries,\n              x: x,\n              y: y,\n              series: series,\n              barHeight: barHeight,\n              barWidth: barWidth,\n              elDataLabelsWrap: elDataLabelsWrap,\n              elGoalsMarkers: elGoalsMarkers,\n              visibleSeries: this.visibleI,\n              type: 'bar'\n            });\n          } // push all x val arrays into main xArr\n\n\n          w.globals.seriesXvalues[realIndex] = xArrj;\n          w.globals.seriesYvalues[realIndex] = yArrj;\n          ret.add(elSeries);\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"renderSeries\",\n      value: function renderSeries(_ref) {\n        var realIndex = _ref.realIndex,\n            pathFill = _ref.pathFill,\n            lineFill = _ref.lineFill,\n            j = _ref.j,\n            i = _ref.i,\n            pathFrom = _ref.pathFrom,\n            pathTo = _ref.pathTo,\n            strokeWidth = _ref.strokeWidth,\n            elSeries = _ref.elSeries,\n            x = _ref.x,\n            y = _ref.y,\n            y1 = _ref.y1,\n            y2 = _ref.y2,\n            series = _ref.series,\n            barHeight = _ref.barHeight,\n            barWidth = _ref.barWidth,\n            barYPosition = _ref.barYPosition,\n            elDataLabelsWrap = _ref.elDataLabelsWrap,\n            elGoalsMarkers = _ref.elGoalsMarkers,\n            visibleSeries = _ref.visibleSeries,\n            type = _ref.type;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n\n        if (!lineFill) {\n          /* fix apexcharts#341 */\n          lineFill = this.barOptions.distributed ? w.globals.stroke.colors[j] : w.globals.stroke.colors[realIndex];\n        }\n\n        if (w.config.series[i].data[j] && w.config.series[i].data[j].strokeColor) {\n          lineFill = w.config.series[i].data[j].strokeColor;\n        }\n\n        if (this.isNullValue) {\n          pathFill = 'none';\n        }\n\n        var delay = j / w.config.chart.animations.animateGradually.delay * (w.config.chart.animations.speed / w.globals.dataPoints) / 2.4;\n        var renderedPath = graphics.renderPaths({\n          i: i,\n          j: j,\n          realIndex: realIndex,\n          pathFrom: pathFrom,\n          pathTo: pathTo,\n          stroke: lineFill,\n          strokeWidth: strokeWidth,\n          strokeLineCap: w.config.stroke.lineCap,\n          fill: pathFill,\n          animationDelay: delay,\n          initialSpeed: w.config.chart.animations.speed,\n          dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n          className: \"apexcharts-\".concat(type, \"-area\")\n        });\n        renderedPath.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n        var forecast = w.config.forecastDataPoints;\n\n        if (forecast.count > 0) {\n          if (j >= w.globals.dataPoints - forecast.count) {\n            renderedPath.node.setAttribute('stroke-dasharray', forecast.dashArray);\n            renderedPath.node.setAttribute('stroke-width', forecast.strokeWidth);\n            renderedPath.node.setAttribute('fill-opacity', forecast.fillOpacity);\n          }\n        }\n\n        if (typeof y1 !== 'undefined' && typeof y2 !== 'undefined') {\n          renderedPath.attr('data-range-y1', y1);\n          renderedPath.attr('data-range-y2', y2);\n        }\n\n        var filters = new Filters(this.ctx);\n        filters.setSelectionFilter(renderedPath, realIndex, j);\n        elSeries.add(renderedPath);\n        var barDataLabels = new BarDataLabels(this);\n        var dataLabels = barDataLabels.handleBarDataLabels({\n          x: x,\n          y: y,\n          y1: y1,\n          y2: y2,\n          i: i,\n          j: j,\n          series: series,\n          realIndex: realIndex,\n          barHeight: barHeight,\n          barWidth: barWidth,\n          barYPosition: barYPosition,\n          renderedPath: renderedPath,\n          visibleSeries: visibleSeries\n        });\n\n        if (dataLabels !== null) {\n          elDataLabelsWrap.add(dataLabels);\n        }\n\n        elSeries.add(elDataLabelsWrap);\n\n        if (elGoalsMarkers) {\n          elSeries.add(elGoalsMarkers);\n        }\n\n        return elSeries;\n      }\n    }, {\n      key: \"drawBarPaths\",\n      value: function drawBarPaths(_ref2) {\n        var indexes = _ref2.indexes,\n            barHeight = _ref2.barHeight,\n            strokeWidth = _ref2.strokeWidth,\n            zeroW = _ref2.zeroW,\n            x = _ref2.x,\n            y = _ref2.y,\n            yDivision = _ref2.yDivision,\n            elSeries = _ref2.elSeries;\n        var w = this.w;\n        var i = indexes.i;\n        var j = indexes.j;\n\n        if (w.globals.isXNumeric) {\n          y = (w.globals.seriesX[i][j] - w.globals.minX) / this.invertedXRatio - barHeight;\n        }\n\n        var barYPosition = y + barHeight * this.visibleI;\n        x = this.barHelpers.getXForValue(this.series[i][j], zeroW);\n        var paths = this.barHelpers.getBarpaths({\n          barYPosition: barYPosition,\n          barHeight: barHeight,\n          x1: zeroW,\n          x2: x,\n          strokeWidth: strokeWidth,\n          series: this.series,\n          realIndex: indexes.realIndex,\n          i: i,\n          j: j,\n          w: w\n        });\n\n        if (!w.globals.isXNumeric) {\n          y = y + yDivision;\n        }\n\n        this.barHelpers.barBackground({\n          j: j,\n          i: i,\n          y1: barYPosition - barHeight * this.visibleI,\n          y2: barHeight * this.seriesLen,\n          elSeries: elSeries\n        });\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          x: x,\n          y: y,\n          goalX: this.barHelpers.getGoalValues('x', zeroW, null, i, j),\n          barYPosition: barYPosition\n        };\n      }\n    }, {\n      key: \"drawColumnPaths\",\n      value: function drawColumnPaths(_ref3) {\n        var indexes = _ref3.indexes,\n            x = _ref3.x,\n            y = _ref3.y,\n            xDivision = _ref3.xDivision,\n            barWidth = _ref3.barWidth,\n            zeroH = _ref3.zeroH,\n            strokeWidth = _ref3.strokeWidth,\n            elSeries = _ref3.elSeries;\n        var w = this.w;\n        var realIndex = indexes.realIndex;\n        var i = indexes.i;\n        var j = indexes.j;\n        var bc = indexes.bc;\n\n        if (w.globals.isXNumeric) {\n          var sxI = realIndex;\n\n          if (!w.globals.seriesX[realIndex].length) {\n            sxI = w.globals.maxValsInArrayIndex;\n          }\n\n          x = (w.globals.seriesX[sxI][j] - w.globals.minX) / this.xRatio - barWidth * this.seriesLen / 2;\n        }\n\n        var barXPosition = x + barWidth * this.visibleI;\n        y = this.barHelpers.getYForValue(this.series[i][j], zeroH);\n        var paths = this.barHelpers.getColumnPaths({\n          barXPosition: barXPosition,\n          barWidth: barWidth,\n          y1: zeroH,\n          y2: y,\n          strokeWidth: strokeWidth,\n          series: this.series,\n          realIndex: indexes.realIndex,\n          i: i,\n          j: j,\n          w: w\n        });\n\n        if (!w.globals.isXNumeric) {\n          x = x + xDivision;\n        }\n\n        this.barHelpers.barBackground({\n          bc: bc,\n          j: j,\n          i: i,\n          x1: barXPosition - strokeWidth / 2 - barWidth * this.visibleI,\n          x2: barWidth * this.seriesLen + strokeWidth / 2,\n          elSeries: elSeries\n        });\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          x: x,\n          y: y,\n          goalY: this.barHelpers.getGoalValues('y', null, zeroH, i, j),\n          barXPosition: barXPosition\n        };\n      }\n      /** getPreviousPath is a common function for bars/columns which is used to get previous paths when data changes.\n       * @memberof Bar\n       * @param {int} realIndex - current iterating i\n       * @param {int} j - current iterating series's j index\n       * @return {string} pathFrom is the string which will be appended in animations\n       **/\n\n    }, {\n      key: \"getPreviousPath\",\n      value: function getPreviousPath(realIndex, j) {\n        var w = this.w;\n        var pathFrom;\n\n        for (var pp = 0; pp < w.globals.previousPaths.length; pp++) {\n          var gpp = w.globals.previousPaths[pp];\n\n          if (gpp.paths && gpp.paths.length > 0 && parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)) {\n            if (typeof w.globals.previousPaths[pp].paths[j] !== 'undefined') {\n              pathFrom = w.globals.previousPaths[pp].paths[j].d;\n            }\n          }\n        }\n\n        return pathFrom;\n      }\n    }]);\n\n    return Bar;\n  }();\n\n  /**\n   * DateTime Class to manipulate datetime values.\n   *\n   * @module DateTime\n   **/\n\n  var DateTime = /*#__PURE__*/function () {\n    function DateTime(ctx) {\n      _classCallCheck(this, DateTime);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.months31 = [1, 3, 5, 7, 8, 10, 12];\n      this.months30 = [2, 4, 6, 9, 11];\n      this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n    }\n\n    _createClass(DateTime, [{\n      key: \"isValidDate\",\n      value: function isValidDate(date) {\n        return !isNaN(this.parseDate(date));\n      }\n    }, {\n      key: \"getTimeStamp\",\n      value: function getTimeStamp(dateStr) {\n        if (!Date.parse(dateStr)) {\n          return dateStr;\n        }\n\n        var utc = this.w.config.xaxis.labels.datetimeUTC;\n        return !utc ? new Date(dateStr).getTime() : new Date(new Date(dateStr).toISOString().substr(0, 25)).getTime();\n      }\n    }, {\n      key: \"getDate\",\n      value: function getDate(timestamp) {\n        var utc = this.w.config.xaxis.labels.datetimeUTC;\n        return utc ? new Date(new Date(timestamp).toUTCString()) : new Date(timestamp);\n      }\n    }, {\n      key: \"parseDate\",\n      value: function parseDate(dateStr) {\n        var parsed = Date.parse(dateStr);\n\n        if (!isNaN(parsed)) {\n          return this.getTimeStamp(dateStr);\n        }\n\n        var output = Date.parse(dateStr.replace(/-/g, '/').replace(/[a-z]+/gi, ' '));\n        output = this.getTimeStamp(output);\n        return output;\n      } // This fixes the difference of x-axis labels between chrome/safari\n      // Fixes #1726, #1544, #1485, #1255\n\n    }, {\n      key: \"parseDateWithTimezone\",\n      value: function parseDateWithTimezone(dateStr) {\n        return Date.parse(dateStr.replace(/-/g, '/').replace(/[a-z]+/gi, ' '));\n      } // http://stackoverflow.com/questions/14638018/current-time-formatting-with-javascript#answer-14638191\n\n    }, {\n      key: \"formatDate\",\n      value: function formatDate(date, format) {\n        var locale = this.w.globals.locale;\n        var utc = this.w.config.xaxis.labels.datetimeUTC;\n        var MMMM = ['\\x00'].concat(_toConsumableArray(locale.months));\n        var MMM = ['\\x01'].concat(_toConsumableArray(locale.shortMonths));\n        var dddd = ['\\x02'].concat(_toConsumableArray(locale.days));\n        var ddd = ['\\x03'].concat(_toConsumableArray(locale.shortDays));\n\n        function ii(i, len) {\n          var s = i + '';\n          len = len || 2;\n\n          while (s.length < len) {\n            s = '0' + s;\n          }\n\n          return s;\n        }\n\n        var y = utc ? date.getUTCFullYear() : date.getFullYear();\n        format = format.replace(/(^|[^\\\\])yyyy+/g, '$1' + y);\n        format = format.replace(/(^|[^\\\\])yy/g, '$1' + y.toString().substr(2, 2));\n        format = format.replace(/(^|[^\\\\])y/g, '$1' + y);\n        var M = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n        format = format.replace(/(^|[^\\\\])MMMM+/g, '$1' + MMMM[0]);\n        format = format.replace(/(^|[^\\\\])MMM/g, '$1' + MMM[0]);\n        format = format.replace(/(^|[^\\\\])MM/g, '$1' + ii(M));\n        format = format.replace(/(^|[^\\\\])M/g, '$1' + M);\n        var d = utc ? date.getUTCDate() : date.getDate();\n        format = format.replace(/(^|[^\\\\])dddd+/g, '$1' + dddd[0]);\n        format = format.replace(/(^|[^\\\\])ddd/g, '$1' + ddd[0]);\n        format = format.replace(/(^|[^\\\\])dd/g, '$1' + ii(d));\n        format = format.replace(/(^|[^\\\\])d/g, '$1' + d);\n        var H = utc ? date.getUTCHours() : date.getHours();\n        format = format.replace(/(^|[^\\\\])HH+/g, '$1' + ii(H));\n        format = format.replace(/(^|[^\\\\])H/g, '$1' + H);\n        var h = H > 12 ? H - 12 : H === 0 ? 12 : H;\n        format = format.replace(/(^|[^\\\\])hh+/g, '$1' + ii(h));\n        format = format.replace(/(^|[^\\\\])h/g, '$1' + h);\n        var m = utc ? date.getUTCMinutes() : date.getMinutes();\n        format = format.replace(/(^|[^\\\\])mm+/g, '$1' + ii(m));\n        format = format.replace(/(^|[^\\\\])m/g, '$1' + m);\n        var s = utc ? date.getUTCSeconds() : date.getSeconds();\n        format = format.replace(/(^|[^\\\\])ss+/g, '$1' + ii(s));\n        format = format.replace(/(^|[^\\\\])s/g, '$1' + s);\n        var f = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n        format = format.replace(/(^|[^\\\\])fff+/g, '$1' + ii(f, 3));\n        f = Math.round(f / 10);\n        format = format.replace(/(^|[^\\\\])ff/g, '$1' + ii(f));\n        f = Math.round(f / 10);\n        format = format.replace(/(^|[^\\\\])f/g, '$1' + f);\n        var T = H < 12 ? 'AM' : 'PM';\n        format = format.replace(/(^|[^\\\\])TT+/g, '$1' + T);\n        format = format.replace(/(^|[^\\\\])T/g, '$1' + T.charAt(0));\n        var t = T.toLowerCase();\n        format = format.replace(/(^|[^\\\\])tt+/g, '$1' + t);\n        format = format.replace(/(^|[^\\\\])t/g, '$1' + t.charAt(0));\n        var tz = -date.getTimezoneOffset();\n        var K = utc || !tz ? 'Z' : tz > 0 ? '+' : '-';\n\n        if (!utc) {\n          tz = Math.abs(tz);\n          var tzHrs = Math.floor(tz / 60);\n          var tzMin = tz % 60;\n          K += ii(tzHrs) + ':' + ii(tzMin);\n        }\n\n        format = format.replace(/(^|[^\\\\])K/g, '$1' + K);\n        var day = (utc ? date.getUTCDay() : date.getDay()) + 1;\n        format = format.replace(new RegExp(dddd[0], 'g'), dddd[day]);\n        format = format.replace(new RegExp(ddd[0], 'g'), ddd[day]);\n        format = format.replace(new RegExp(MMMM[0], 'g'), MMMM[M]);\n        format = format.replace(new RegExp(MMM[0], 'g'), MMM[M]);\n        format = format.replace(/\\\\(.)/g, '$1');\n        return format;\n      }\n    }, {\n      key: \"getTimeUnitsfromTimestamp\",\n      value: function getTimeUnitsfromTimestamp(minX, maxX, utc) {\n        var w = this.w;\n\n        if (w.config.xaxis.min !== undefined) {\n          minX = w.config.xaxis.min;\n        }\n\n        if (w.config.xaxis.max !== undefined) {\n          maxX = w.config.xaxis.max;\n        }\n\n        var tsMin = this.getDate(minX);\n        var tsMax = this.getDate(maxX);\n        var minD = this.formatDate(tsMin, 'yyyy MM dd HH mm ss fff').split(' ');\n        var maxD = this.formatDate(tsMax, 'yyyy MM dd HH mm ss fff').split(' ');\n        return {\n          minMillisecond: parseInt(minD[6], 10),\n          maxMillisecond: parseInt(maxD[6], 10),\n          minSecond: parseInt(minD[5], 10),\n          maxSecond: parseInt(maxD[5], 10),\n          minMinute: parseInt(minD[4], 10),\n          maxMinute: parseInt(maxD[4], 10),\n          minHour: parseInt(minD[3], 10),\n          maxHour: parseInt(maxD[3], 10),\n          minDate: parseInt(minD[2], 10),\n          maxDate: parseInt(maxD[2], 10),\n          minMonth: parseInt(minD[1], 10) - 1,\n          maxMonth: parseInt(maxD[1], 10) - 1,\n          minYear: parseInt(minD[0], 10),\n          maxYear: parseInt(maxD[0], 10)\n        };\n      }\n    }, {\n      key: \"isLeapYear\",\n      value: function isLeapYear(year) {\n        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n      }\n    }, {\n      key: \"calculcateLastDaysOfMonth\",\n      value: function calculcateLastDaysOfMonth(month, year, subtract) {\n        var days = this.determineDaysOfMonths(month, year); // whatever days we get, subtract the number of days asked\n\n        return days - subtract;\n      }\n    }, {\n      key: \"determineDaysOfYear\",\n      value: function determineDaysOfYear(year) {\n        var days = 365;\n\n        if (this.isLeapYear(year)) {\n          days = 366;\n        }\n\n        return days;\n      }\n    }, {\n      key: \"determineRemainingDaysOfYear\",\n      value: function determineRemainingDaysOfYear(year, month, date) {\n        var dayOfYear = this.daysCntOfYear[month] + date;\n        if (month > 1 && this.isLeapYear()) dayOfYear++;\n        return dayOfYear;\n      }\n    }, {\n      key: \"determineDaysOfMonths\",\n      value: function determineDaysOfMonths(month, year) {\n        var days = 30;\n        month = Utils$1.monthMod(month);\n\n        switch (true) {\n          case this.months30.indexOf(month) > -1:\n            if (month === 2) {\n              if (this.isLeapYear(year)) {\n                days = 29;\n              } else {\n                days = 28;\n              }\n            }\n\n            break;\n\n          case this.months31.indexOf(month) > -1:\n            days = 31;\n            break;\n\n          default:\n            days = 31;\n            break;\n        }\n\n        return days;\n      }\n    }]);\n\n    return DateTime;\n  }();\n\n  /**\n   * ApexCharts RangeBar Class responsible for drawing Range/Timeline Bars.\n   *\n   * @module RangeBar\n   **/\n\n  var RangeBar = /*#__PURE__*/function (_Bar) {\n    _inherits(RangeBar, _Bar);\n\n    var _super = _createSuper(RangeBar);\n\n    function RangeBar() {\n      _classCallCheck(this, RangeBar);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(RangeBar, [{\n      key: \"draw\",\n      value: function draw(series, seriesIndex) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        this.rangeBarOptions = this.w.config.plotOptions.rangeBar;\n        this.series = series;\n        this.seriesRangeStart = w.globals.seriesRangeStart;\n        this.seriesRangeEnd = w.globals.seriesRangeEnd;\n        this.barHelpers.initVariables(series);\n        var ret = graphics.group({\n          class: 'apexcharts-rangebar-series apexcharts-plot-series'\n        });\n\n        for (var i = 0; i < series.length; i++) {\n          var x = void 0,\n              y = void 0,\n              xDivision = void 0,\n              // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n          yDivision = void 0,\n              // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n          zeroH = void 0,\n              // zeroH is the baseline where 0 meets y axis\n          zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n          var realIndex = w.globals.comboCharts ? seriesIndex[i] : i; // el to which series will be drawn\n\n          var elSeries = graphics.group({\n            class: \"apexcharts-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[realIndex]),\n            rel: i + 1,\n            'data:realIndex': realIndex\n          });\n          this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex);\n\n          if (series[i].length > 0) {\n            this.visibleI = this.visibleI + 1;\n          }\n\n          var barHeight = 0;\n          var barWidth = 0;\n\n          if (this.yRatio.length > 1) {\n            this.yaxisIndex = realIndex;\n          }\n\n          var initPositions = this.barHelpers.initialPositions();\n          y = initPositions.y;\n          zeroW = initPositions.zeroW;\n          x = initPositions.x;\n          barWidth = initPositions.barWidth;\n          xDivision = initPositions.xDivision;\n          zeroH = initPositions.zeroH; // eldatalabels\n\n          var elDataLabelsWrap = graphics.group({\n            class: 'apexcharts-datalabels',\n            'data:realIndex': realIndex\n          });\n          var elGoalsMarkers = graphics.group({\n            class: 'apexcharts-rangebar-goals-markers',\n            style: \"pointer-events: none\"\n          });\n\n          for (var j = 0; j < w.globals.dataPoints; j++) {\n            var strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex);\n            var y1 = this.seriesRangeStart[i][j];\n            var y2 = this.seriesRangeEnd[i][j];\n            var paths = null;\n            var barYPosition = null;\n            var params = {\n              x: x,\n              y: y,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries\n            };\n            yDivision = initPositions.yDivision;\n            barHeight = initPositions.barHeight;\n\n            if (this.isHorizontal) {\n              barYPosition = y + barHeight * this.visibleI;\n              var seriesLen = this.seriesLen;\n\n              if (w.config.plotOptions.bar.rangeBarGroupRows) {\n                seriesLen = 1;\n              }\n\n              var srty = (yDivision - barHeight * seriesLen) / 2;\n\n              if (typeof w.config.series[i].data[j] === 'undefined') {\n                // no data exists for further indexes, hence we need to get out the innr loop.\n                // As we are iterating over total datapoints, there is a possiblity the series might not have data for j index\n                break;\n              }\n\n              if (w.config.series[i].data[j].x) {\n                var positions = this.detectOverlappingBars({\n                  i: i,\n                  j: j,\n                  barYPosition: barYPosition,\n                  srty: srty,\n                  barHeight: barHeight,\n                  yDivision: yDivision,\n                  initPositions: initPositions\n                });\n                barHeight = positions.barHeight;\n                barYPosition = positions.barYPosition;\n              }\n\n              paths = this.drawRangeBarPaths(_objectSpread2({\n                indexes: {\n                  i: i,\n                  j: j,\n                  realIndex: realIndex\n                },\n                barHeight: barHeight,\n                barYPosition: barYPosition,\n                zeroW: zeroW,\n                yDivision: yDivision,\n                y1: y1,\n                y2: y2\n              }, params));\n              barWidth = paths.barWidth;\n            } else {\n              paths = this.drawRangeColumnPaths(_objectSpread2({\n                indexes: {\n                  i: i,\n                  j: j,\n                  realIndex: realIndex\n                },\n                zeroH: zeroH,\n                barWidth: barWidth,\n                xDivision: xDivision\n              }, params));\n              barHeight = paths.barHeight;\n            }\n\n            var barGoalLine = this.barHelpers.drawGoalLine({\n              barXPosition: paths.barXPosition,\n              barYPosition: barYPosition,\n              goalX: paths.goalX,\n              goalY: paths.goalY,\n              barHeight: barHeight,\n              barWidth: barWidth\n            });\n\n            if (barGoalLine) {\n              elGoalsMarkers.add(barGoalLine);\n            }\n\n            y = paths.y;\n            x = paths.x;\n            var pathFill = this.barHelpers.getPathFillColor(series, i, j, realIndex);\n            var lineFill = w.globals.stroke.colors[realIndex];\n            this.renderSeries({\n              realIndex: realIndex,\n              pathFill: pathFill,\n              lineFill: lineFill,\n              j: j,\n              i: i,\n              x: x,\n              y: y,\n              y1: y1,\n              y2: y2,\n              pathFrom: paths.pathFrom,\n              pathTo: paths.pathTo,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries,\n              series: series,\n              barHeight: barHeight,\n              barYPosition: barYPosition,\n              barWidth: barWidth,\n              elDataLabelsWrap: elDataLabelsWrap,\n              elGoalsMarkers: elGoalsMarkers,\n              visibleSeries: this.visibleI,\n              type: 'rangebar'\n            });\n          }\n\n          ret.add(elSeries);\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"detectOverlappingBars\",\n      value: function detectOverlappingBars(_ref) {\n        var i = _ref.i,\n            j = _ref.j,\n            barYPosition = _ref.barYPosition,\n            srty = _ref.srty,\n            barHeight = _ref.barHeight,\n            yDivision = _ref.yDivision,\n            initPositions = _ref.initPositions;\n        var w = this.w;\n        var overlaps = [];\n        var rangeName = w.config.series[i].data[j].rangeName;\n        var labelX = w.config.series[i].data[j].x;\n        var rowIndex = w.globals.labels.indexOf(labelX);\n        var overlappedIndex = w.globals.seriesRangeBar[i].findIndex(function (tx) {\n          return tx.x === labelX && tx.overlaps.length > 0;\n        });\n\n        if (w.config.plotOptions.bar.rangeBarGroupRows) {\n          barYPosition = srty + yDivision * rowIndex;\n        } else {\n          barYPosition = srty + barHeight * this.visibleI + yDivision * rowIndex;\n        }\n\n        if (overlappedIndex > -1 && !w.config.plotOptions.bar.rangeBarOverlap) {\n          overlaps = w.globals.seriesRangeBar[i][overlappedIndex].overlaps;\n\n          if (overlaps.indexOf(rangeName) > -1) {\n            barHeight = initPositions.barHeight / overlaps.length;\n            barYPosition = barHeight * this.visibleI + yDivision * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + barHeight * (this.visibleI + overlaps.indexOf(rangeName)) + yDivision * rowIndex;\n          }\n        }\n\n        return {\n          barYPosition: barYPosition,\n          barHeight: barHeight\n        };\n      }\n    }, {\n      key: \"drawRangeColumnPaths\",\n      value: function drawRangeColumnPaths(_ref2) {\n        var indexes = _ref2.indexes,\n            x = _ref2.x;\n            _ref2.strokeWidth;\n            var xDivision = _ref2.xDivision,\n            barWidth = _ref2.barWidth,\n            zeroH = _ref2.zeroH;\n        var w = this.w;\n        var i = indexes.i;\n        var j = indexes.j;\n        var yRatio = this.yRatio[this.yaxisIndex];\n        var realIndex = indexes.realIndex;\n        var range = this.getRangeValue(realIndex, j);\n        var y1 = Math.min(range.start, range.end);\n        var y2 = Math.max(range.start, range.end);\n\n        if (w.globals.isXNumeric) {\n          x = (w.globals.seriesX[i][j] - w.globals.minX) / this.xRatio - barWidth / 2;\n        }\n\n        var barXPosition = x + barWidth * this.visibleI;\n\n        if (typeof this.series[i][j] === 'undefined' || this.series[i][j] === null) {\n          y1 = zeroH;\n        } else {\n          y1 = zeroH - y1 / yRatio;\n          y2 = zeroH - y2 / yRatio;\n        }\n\n        var barHeight = Math.abs(y2 - y1);\n        var paths = this.barHelpers.getColumnPaths({\n          barXPosition: barXPosition,\n          barWidth: barWidth,\n          y1: y1,\n          y2: y2,\n          strokeWidth: this.strokeWidth,\n          series: this.seriesRangeEnd,\n          realIndex: indexes.realIndex,\n          i: realIndex,\n          j: j,\n          w: w\n        });\n\n        if (!w.globals.isXNumeric) {\n          x = x + xDivision;\n        }\n\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          barHeight: barHeight,\n          x: x,\n          y: y2,\n          goalY: this.barHelpers.getGoalValues('y', null, zeroH, i, j),\n          barXPosition: barXPosition\n        };\n      }\n    }, {\n      key: \"drawRangeBarPaths\",\n      value: function drawRangeBarPaths(_ref3) {\n        var indexes = _ref3.indexes,\n            y = _ref3.y,\n            y1 = _ref3.y1,\n            y2 = _ref3.y2,\n            yDivision = _ref3.yDivision,\n            barHeight = _ref3.barHeight,\n            barYPosition = _ref3.barYPosition,\n            zeroW = _ref3.zeroW;\n        var w = this.w;\n        var x1 = zeroW + y1 / this.invertedYRatio;\n        var x2 = zeroW + y2 / this.invertedYRatio;\n        var barWidth = Math.abs(x2 - x1);\n        var paths = this.barHelpers.getBarpaths({\n          barYPosition: barYPosition,\n          barHeight: barHeight,\n          x1: x1,\n          x2: x2,\n          strokeWidth: this.strokeWidth,\n          series: this.seriesRangeEnd,\n          i: indexes.realIndex,\n          realIndex: indexes.realIndex,\n          j: indexes.j,\n          w: w\n        });\n\n        if (!w.globals.isXNumeric) {\n          y = y + yDivision;\n        }\n\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          barWidth: barWidth,\n          x: x2,\n          goalX: this.barHelpers.getGoalValues('x', zeroW, null, indexes.realIndex, indexes.j),\n          y: y\n        };\n      }\n    }, {\n      key: \"getRangeValue\",\n      value: function getRangeValue(i, j) {\n        var w = this.w;\n        return {\n          start: w.globals.seriesRangeStart[i][j],\n          end: w.globals.seriesRangeEnd[i][j]\n        };\n      }\n    }, {\n      key: \"getTooltipValues\",\n      value: function getTooltipValues(_ref4) {\n        var ctx = _ref4.ctx,\n            seriesIndex = _ref4.seriesIndex,\n            dataPointIndex = _ref4.dataPointIndex,\n            y1 = _ref4.y1,\n            y2 = _ref4.y2,\n            w = _ref4.w;\n        var start = w.globals.seriesRangeStart[seriesIndex][dataPointIndex];\n        var end = w.globals.seriesRangeEnd[seriesIndex][dataPointIndex];\n        var ylabel = w.globals.labels[dataPointIndex];\n        var seriesName = w.config.series[seriesIndex].name ? w.config.series[seriesIndex].name : '';\n        var yLbFormatter = w.config.tooltip.y.formatter;\n        var yLbTitleFormatter = w.config.tooltip.y.title.formatter;\n        var opts = {\n          w: w,\n          seriesIndex: seriesIndex,\n          dataPointIndex: dataPointIndex,\n          start: start,\n          end: end\n        };\n\n        if (typeof yLbTitleFormatter === 'function') {\n          seriesName = yLbTitleFormatter(seriesName, opts);\n        }\n\n        if (Number.isFinite(y1) && Number.isFinite(y2)) {\n          start = y1;\n          end = y2;\n\n          if (w.config.series[seriesIndex].data[dataPointIndex].x) {\n            ylabel = w.config.series[seriesIndex].data[dataPointIndex].x + ':';\n          }\n\n          if (typeof yLbFormatter === 'function') {\n            ylabel = yLbFormatter(ylabel, opts);\n          }\n        }\n\n        var startVal = '';\n        var endVal = '';\n        var color = w.globals.colors[seriesIndex];\n\n        if (w.config.tooltip.x.formatter === undefined) {\n          if (w.config.xaxis.type === 'datetime') {\n            var datetimeObj = new DateTime(ctx);\n            startVal = datetimeObj.formatDate(datetimeObj.getDate(start), w.config.tooltip.x.format);\n            endVal = datetimeObj.formatDate(datetimeObj.getDate(end), w.config.tooltip.x.format);\n          } else {\n            startVal = start;\n            endVal = end;\n          }\n        } else {\n          startVal = w.config.tooltip.x.formatter(start);\n          endVal = w.config.tooltip.x.formatter(end);\n        }\n\n        return {\n          start: start,\n          end: end,\n          startVal: startVal,\n          endVal: endVal,\n          ylabel: ylabel,\n          color: color,\n          seriesName: seriesName\n        };\n      }\n    }, {\n      key: \"buildCustomTooltipHTML\",\n      value: function buildCustomTooltipHTML(_ref5) {\n        var color = _ref5.color,\n            seriesName = _ref5.seriesName,\n            ylabel = _ref5.ylabel,\n            start = _ref5.start,\n            end = _ref5.end;\n        return '<div class=\"apexcharts-tooltip-rangebar\">' + '<div> <span class=\"series-name\" style=\"color: ' + color + '\">' + (seriesName ? seriesName : '') + '</span></div>' + '<div> <span class=\"category\">' + ylabel + ' </span> <span class=\"value start-value\">' + start + '</span> <span class=\"separator\">-</span> <span class=\"value end-value\">' + end + '</span></div>' + '</div>';\n      }\n    }]);\n\n    return RangeBar;\n  }(Bar);\n\n  /**\n   * ApexCharts Default Class for setting default options for all chart types.\n   *\n   * @module Defaults\n   **/\n\n  var Defaults = /*#__PURE__*/function () {\n    function Defaults(opts) {\n      _classCallCheck(this, Defaults);\n\n      this.opts = opts;\n    }\n\n    _createClass(Defaults, [{\n      key: \"line\",\n      value: function line() {\n        return {\n          chart: {\n            animations: {\n              easing: 'swing'\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          stroke: {\n            width: 5,\n            curve: 'straight'\n          },\n          markers: {\n            size: 0,\n            hover: {\n              sizeOffset: 6\n            }\n          },\n          xaxis: {\n            crosshairs: {\n              width: 1\n            }\n          }\n        };\n      }\n    }, {\n      key: \"sparkline\",\n      value: function sparkline(defaults) {\n        this.opts.yaxis[0].show = false;\n        this.opts.yaxis[0].title.text = '';\n        this.opts.yaxis[0].axisBorder.show = false;\n        this.opts.yaxis[0].axisTicks.show = false;\n        this.opts.yaxis[0].floating = true;\n        var ret = {\n          grid: {\n            show: false,\n            padding: {\n              left: 0,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          },\n          legend: {\n            show: false\n          },\n          xaxis: {\n            labels: {\n              show: false\n            },\n            tooltip: {\n              enabled: false\n            },\n            axisBorder: {\n              show: false\n            },\n            axisTicks: {\n              show: false\n            }\n          },\n          chart: {\n            toolbar: {\n              show: false\n            },\n            zoom: {\n              enabled: false\n            }\n          },\n          dataLabels: {\n            enabled: false\n          }\n        };\n        return Utils$1.extend(defaults, ret);\n      }\n    }, {\n      key: \"bar\",\n      value: function bar() {\n        return {\n          chart: {\n            stacked: false,\n            animations: {\n              easing: 'swing'\n            }\n          },\n          plotOptions: {\n            bar: {\n              dataLabels: {\n                position: 'center'\n              }\n            }\n          },\n          dataLabels: {\n            style: {\n              colors: ['#fff']\n            },\n            background: {\n              enabled: false\n            }\n          },\n          stroke: {\n            width: 0,\n            lineCap: 'round'\n          },\n          fill: {\n            opacity: 0.85\n          },\n          legend: {\n            markers: {\n              shape: 'square',\n              radius: 2,\n              size: 8\n            }\n          },\n          tooltip: {\n            shared: false,\n            intersect: true\n          },\n          xaxis: {\n            tooltip: {\n              enabled: false\n            },\n            tickPlacement: 'between',\n            crosshairs: {\n              width: 'barWidth',\n              position: 'back',\n              fill: {\n                type: 'gradient'\n              },\n              dropShadow: {\n                enabled: false\n              },\n              stroke: {\n                width: 0\n              }\n            }\n          }\n        };\n      }\n    }, {\n      key: \"candlestick\",\n      value: function candlestick() {\n        var _this = this;\n\n        return {\n          stroke: {\n            width: 1,\n            colors: ['#333']\n          },\n          fill: {\n            opacity: 1\n          },\n          dataLabels: {\n            enabled: false\n          },\n          tooltip: {\n            shared: true,\n            custom: function custom(_ref) {\n              var seriesIndex = _ref.seriesIndex,\n                  dataPointIndex = _ref.dataPointIndex,\n                  w = _ref.w;\n              return _this._getBoxTooltip(w, seriesIndex, dataPointIndex, ['Open', 'High', '', 'Low', 'Close'], 'candlestick');\n            }\n          },\n          states: {\n            active: {\n              filter: {\n                type: 'none'\n              }\n            }\n          },\n          xaxis: {\n            crosshairs: {\n              width: 1\n            }\n          }\n        };\n      }\n    }, {\n      key: \"boxPlot\",\n      value: function boxPlot() {\n        var _this2 = this;\n\n        return {\n          chart: {\n            animations: {\n              dynamicAnimation: {\n                enabled: false\n              }\n            }\n          },\n          stroke: {\n            width: 1,\n            colors: ['#24292e']\n          },\n          dataLabels: {\n            enabled: false\n          },\n          tooltip: {\n            shared: true,\n            custom: function custom(_ref2) {\n              var seriesIndex = _ref2.seriesIndex,\n                  dataPointIndex = _ref2.dataPointIndex,\n                  w = _ref2.w;\n              return _this2._getBoxTooltip(w, seriesIndex, dataPointIndex, ['Minimum', 'Q1', 'Median', 'Q3', 'Maximum'], 'boxPlot');\n            }\n          },\n          markers: {\n            size: 5,\n            strokeWidth: 1,\n            strokeColors: '#111'\n          },\n          xaxis: {\n            crosshairs: {\n              width: 1\n            }\n          }\n        };\n      }\n    }, {\n      key: \"rangeBar\",\n      value: function rangeBar() {\n        var handleTimelineTooltip = function handleTimelineTooltip(opts) {\n          var rangeCtx = new RangeBar(opts.ctx, null);\n\n          var _rangeCtx$getTooltipV = rangeCtx.getTooltipValues(opts),\n              color = _rangeCtx$getTooltipV.color,\n              seriesName = _rangeCtx$getTooltipV.seriesName,\n              ylabel = _rangeCtx$getTooltipV.ylabel,\n              startVal = _rangeCtx$getTooltipV.startVal,\n              endVal = _rangeCtx$getTooltipV.endVal;\n\n          return rangeCtx.buildCustomTooltipHTML({\n            color: color,\n            seriesName: seriesName,\n            ylabel: ylabel,\n            start: startVal,\n            end: endVal\n          });\n        };\n\n        var handleRangeColumnTooltip = function handleRangeColumnTooltip(opts) {\n          var rangeCtx = new RangeBar(opts.ctx, null);\n\n          var _rangeCtx$getTooltipV2 = rangeCtx.getTooltipValues(opts),\n              color = _rangeCtx$getTooltipV2.color,\n              seriesName = _rangeCtx$getTooltipV2.seriesName,\n              ylabel = _rangeCtx$getTooltipV2.ylabel,\n              start = _rangeCtx$getTooltipV2.start,\n              end = _rangeCtx$getTooltipV2.end;\n\n          return rangeCtx.buildCustomTooltipHTML({\n            color: color,\n            seriesName: seriesName,\n            ylabel: ylabel,\n            start: start,\n            end: end\n          });\n        };\n\n        return {\n          stroke: {\n            width: 0,\n            lineCap: 'square'\n          },\n          plotOptions: {\n            bar: {\n              borderRadius: 0,\n              dataLabels: {\n                position: 'center'\n              }\n            }\n          },\n          dataLabels: {\n            enabled: false,\n            formatter: function formatter(val, _ref3) {\n              _ref3.ctx;\n                  var seriesIndex = _ref3.seriesIndex,\n                  dataPointIndex = _ref3.dataPointIndex,\n                  w = _ref3.w;\n              var start = w.globals.seriesRangeStart[seriesIndex][dataPointIndex];\n              var end = w.globals.seriesRangeEnd[seriesIndex][dataPointIndex];\n              return end - start;\n            },\n            background: {\n              enabled: false\n            },\n            style: {\n              colors: ['#fff']\n            }\n          },\n          tooltip: {\n            shared: false,\n            followCursor: true,\n            custom: function custom(opts) {\n              if (opts.w.config.plotOptions && opts.w.config.plotOptions.bar && opts.w.config.plotOptions.bar.horizontal) {\n                return handleTimelineTooltip(opts);\n              } else {\n                return handleRangeColumnTooltip(opts);\n              }\n            }\n          },\n          xaxis: {\n            tickPlacement: 'between',\n            tooltip: {\n              enabled: false\n            },\n            crosshairs: {\n              stroke: {\n                width: 0\n              }\n            }\n          }\n        };\n      }\n    }, {\n      key: \"area\",\n      value: function area() {\n        return {\n          stroke: {\n            width: 4\n          },\n          fill: {\n            type: 'gradient',\n            gradient: {\n              inverseColors: false,\n              shade: 'light',\n              type: 'vertical',\n              opacityFrom: 0.65,\n              opacityTo: 0.5,\n              stops: [0, 100, 100]\n            }\n          },\n          markers: {\n            size: 0,\n            hover: {\n              sizeOffset: 6\n            }\n          },\n          tooltip: {\n            followCursor: false\n          }\n        };\n      }\n    }, {\n      key: \"brush\",\n      value: function brush(defaults) {\n        var ret = {\n          chart: {\n            toolbar: {\n              autoSelected: 'selection',\n              show: false\n            },\n            zoom: {\n              enabled: false\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          stroke: {\n            width: 1\n          },\n          tooltip: {\n            enabled: false\n          },\n          xaxis: {\n            tooltip: {\n              enabled: false\n            }\n          }\n        };\n        return Utils$1.extend(defaults, ret);\n      }\n    }, {\n      key: \"stacked100\",\n      value: function stacked100(opts) {\n        opts.dataLabels = opts.dataLabels || {};\n        opts.dataLabels.formatter = opts.dataLabels.formatter || undefined;\n        var existingDataLabelFormatter = opts.dataLabels.formatter;\n        opts.yaxis.forEach(function (yaxe, index) {\n          opts.yaxis[index].min = 0;\n          opts.yaxis[index].max = 100;\n        });\n        var isBar = opts.chart.type === 'bar';\n\n        if (isBar) {\n          opts.dataLabels.formatter = existingDataLabelFormatter || function (val) {\n            if (typeof val === 'number') {\n              return val ? val.toFixed(0) + '%' : val;\n            }\n\n            return val;\n          };\n        }\n\n        return opts;\n      } // This function removes the left and right spacing in chart for line/area/scatter if xaxis type = category for those charts by converting xaxis = numeric. Numeric/Datetime xaxis prevents the unnecessary spacing in the left/right of the chart area\n\n    }, {\n      key: \"convertCatToNumeric\",\n      value: function convertCatToNumeric(opts) {\n        opts.xaxis.convertedCatToNumeric = true;\n        return opts;\n      }\n    }, {\n      key: \"convertCatToNumericXaxis\",\n      value: function convertCatToNumericXaxis(opts, ctx, cats) {\n        opts.xaxis.type = 'numeric';\n        opts.xaxis.labels = opts.xaxis.labels || {};\n\n        opts.xaxis.labels.formatter = opts.xaxis.labels.formatter || function (val) {\n          return Utils$1.isNumber(val) ? Math.floor(val) : val;\n        };\n\n        var defaultFormatter = opts.xaxis.labels.formatter;\n        var labels = opts.xaxis.categories && opts.xaxis.categories.length ? opts.xaxis.categories : opts.labels;\n\n        if (cats && cats.length) {\n          labels = cats.map(function (c) {\n            return Array.isArray(c) ? c : String(c);\n          });\n        }\n\n        if (labels && labels.length) {\n          opts.xaxis.labels.formatter = function (val) {\n            return Utils$1.isNumber(val) ? defaultFormatter(labels[Math.floor(val) - 1]) : defaultFormatter(val);\n          };\n        }\n\n        opts.xaxis.categories = [];\n        opts.labels = [];\n        opts.xaxis.tickAmount = opts.xaxis.tickAmount || 'dataPoints';\n        return opts;\n      }\n    }, {\n      key: \"bubble\",\n      value: function bubble() {\n        return {\n          dataLabels: {\n            style: {\n              colors: ['#fff']\n            }\n          },\n          tooltip: {\n            shared: false,\n            intersect: true\n          },\n          xaxis: {\n            crosshairs: {\n              width: 0\n            }\n          },\n          fill: {\n            type: 'solid',\n            gradient: {\n              shade: 'light',\n              inverse: true,\n              shadeIntensity: 0.55,\n              opacityFrom: 0.4,\n              opacityTo: 0.8\n            }\n          }\n        };\n      }\n    }, {\n      key: \"scatter\",\n      value: function scatter() {\n        return {\n          dataLabels: {\n            enabled: false\n          },\n          tooltip: {\n            shared: false,\n            intersect: true\n          },\n          markers: {\n            size: 6,\n            strokeWidth: 1,\n            hover: {\n              sizeOffset: 2\n            }\n          }\n        };\n      }\n    }, {\n      key: \"heatmap\",\n      value: function heatmap() {\n        return {\n          chart: {\n            stacked: false\n          },\n          fill: {\n            opacity: 1\n          },\n          dataLabels: {\n            style: {\n              colors: ['#fff']\n            }\n          },\n          stroke: {\n            colors: ['#fff']\n          },\n          tooltip: {\n            followCursor: true,\n            marker: {\n              show: false\n            },\n            x: {\n              show: false\n            }\n          },\n          legend: {\n            position: 'top',\n            markers: {\n              shape: 'square',\n              size: 10,\n              offsetY: 2\n            }\n          },\n          grid: {\n            padding: {\n              right: 20\n            }\n          }\n        };\n      }\n    }, {\n      key: \"treemap\",\n      value: function treemap() {\n        return {\n          chart: {\n            zoom: {\n              enabled: false\n            }\n          },\n          dataLabels: {\n            style: {\n              fontSize: 14,\n              fontWeight: 600,\n              colors: ['#fff']\n            }\n          },\n          stroke: {\n            show: true,\n            width: 2,\n            colors: ['#fff']\n          },\n          legend: {\n            show: false\n          },\n          fill: {\n            gradient: {\n              stops: [0, 100]\n            }\n          },\n          tooltip: {\n            followCursor: true,\n            x: {\n              show: false\n            }\n          },\n          grid: {\n            padding: {\n              left: 0,\n              right: 0\n            }\n          },\n          xaxis: {\n            crosshairs: {\n              show: false\n            },\n            tooltip: {\n              enabled: false\n            }\n          }\n        };\n      }\n    }, {\n      key: \"pie\",\n      value: function pie() {\n        return {\n          chart: {\n            toolbar: {\n              show: false\n            }\n          },\n          plotOptions: {\n            pie: {\n              donut: {\n                labels: {\n                  show: false\n                }\n              }\n            }\n          },\n          dataLabels: {\n            formatter: function formatter(val) {\n              return val.toFixed(1) + '%';\n            },\n            style: {\n              colors: ['#fff']\n            },\n            background: {\n              enabled: false\n            },\n            dropShadow: {\n              enabled: true\n            }\n          },\n          stroke: {\n            colors: ['#fff']\n          },\n          fill: {\n            opacity: 1,\n            gradient: {\n              shade: 'light',\n              stops: [0, 100]\n            }\n          },\n          tooltip: {\n            theme: 'dark',\n            fillSeriesColor: true\n          },\n          legend: {\n            position: 'right'\n          }\n        };\n      }\n    }, {\n      key: \"donut\",\n      value: function donut() {\n        return {\n          chart: {\n            toolbar: {\n              show: false\n            }\n          },\n          dataLabels: {\n            formatter: function formatter(val) {\n              return val.toFixed(1) + '%';\n            },\n            style: {\n              colors: ['#fff']\n            },\n            background: {\n              enabled: false\n            },\n            dropShadow: {\n              enabled: true\n            }\n          },\n          stroke: {\n            colors: ['#fff']\n          },\n          fill: {\n            opacity: 1,\n            gradient: {\n              shade: 'light',\n              shadeIntensity: 0.35,\n              stops: [80, 100],\n              opacityFrom: 1,\n              opacityTo: 1\n            }\n          },\n          tooltip: {\n            theme: 'dark',\n            fillSeriesColor: true\n          },\n          legend: {\n            position: 'right'\n          }\n        };\n      }\n    }, {\n      key: \"polarArea\",\n      value: function polarArea() {\n        this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6;\n        return {\n          chart: {\n            toolbar: {\n              show: false\n            }\n          },\n          dataLabels: {\n            formatter: function formatter(val) {\n              return val.toFixed(1) + '%';\n            },\n            enabled: false\n          },\n          stroke: {\n            show: true,\n            width: 2\n          },\n          fill: {\n            opacity: 0.7\n          },\n          tooltip: {\n            theme: 'dark',\n            fillSeriesColor: true\n          },\n          legend: {\n            position: 'right'\n          }\n        };\n      }\n    }, {\n      key: \"radar\",\n      value: function radar() {\n        this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6;\n        return {\n          dataLabels: {\n            enabled: false,\n            style: {\n              fontSize: '11px'\n            }\n          },\n          stroke: {\n            width: 2\n          },\n          markers: {\n            size: 3,\n            strokeWidth: 1,\n            strokeOpacity: 1\n          },\n          fill: {\n            opacity: 0.2\n          },\n          tooltip: {\n            shared: false,\n            intersect: true,\n            followCursor: true\n          },\n          grid: {\n            show: false\n          },\n          xaxis: {\n            labels: {\n              formatter: function formatter(val) {\n                return val;\n              },\n              style: {\n                colors: ['#a8a8a8'],\n                fontSize: '11px'\n              }\n            },\n            tooltip: {\n              enabled: false\n            },\n            crosshairs: {\n              show: false\n            }\n          }\n        };\n      }\n    }, {\n      key: \"radialBar\",\n      value: function radialBar() {\n        return {\n          chart: {\n            animations: {\n              dynamicAnimation: {\n                enabled: true,\n                speed: 800\n              }\n            },\n            toolbar: {\n              show: false\n            }\n          },\n          fill: {\n            gradient: {\n              shade: 'dark',\n              shadeIntensity: 0.4,\n              inverseColors: false,\n              type: 'diagonal2',\n              opacityFrom: 1,\n              opacityTo: 1,\n              stops: [70, 98, 100]\n            }\n          },\n          legend: {\n            show: false,\n            position: 'right'\n          },\n          tooltip: {\n            enabled: false,\n            fillSeriesColor: true\n          }\n        };\n      }\n    }, {\n      key: \"_getBoxTooltip\",\n      value: function _getBoxTooltip(w, seriesIndex, dataPointIndex, labels, chartType) {\n        var o = w.globals.seriesCandleO[seriesIndex][dataPointIndex];\n        var h = w.globals.seriesCandleH[seriesIndex][dataPointIndex];\n        var m = w.globals.seriesCandleM[seriesIndex][dataPointIndex];\n        var l = w.globals.seriesCandleL[seriesIndex][dataPointIndex];\n        var c = w.globals.seriesCandleC[seriesIndex][dataPointIndex];\n\n        if (w.config.series[seriesIndex].type && w.config.series[seriesIndex].type !== chartType) {\n          return \"<div class=\\\"apexcharts-custom-tooltip\\\">\\n          \".concat(w.config.series[seriesIndex].name ? w.config.series[seriesIndex].name : 'series-' + (seriesIndex + 1), \": <strong>\").concat(w.globals.series[seriesIndex][dataPointIndex], \"</strong>\\n        </div>\");\n        } else {\n          return \"<div class=\\\"apexcharts-tooltip-box apexcharts-tooltip-\".concat(w.config.chart.type, \"\\\">\") + \"<div>\".concat(labels[0], \": <span class=\\\"value\\\">\") + o + '</span></div>' + \"<div>\".concat(labels[1], \": <span class=\\\"value\\\">\") + h + '</span></div>' + (m ? \"<div>\".concat(labels[2], \": <span class=\\\"value\\\">\") + m + '</span></div>' : '') + \"<div>\".concat(labels[3], \": <span class=\\\"value\\\">\") + l + '</span></div>' + \"<div>\".concat(labels[4], \": <span class=\\\"value\\\">\") + c + '</span></div>' + '</div>';\n        }\n      }\n    }]);\n\n    return Defaults;\n  }();\n\n  /**\n   * ApexCharts Config Class for extending user options with pre-defined ApexCharts config.\n   *\n   * @module Config\n   **/\n\n  var Config = /*#__PURE__*/function () {\n    function Config(opts) {\n      _classCallCheck(this, Config);\n\n      this.opts = opts;\n    }\n\n    _createClass(Config, [{\n      key: \"init\",\n      value: function init(_ref) {\n        var responsiveOverride = _ref.responsiveOverride;\n        var opts = this.opts;\n        var options = new Options();\n        var defaults = new Defaults(opts);\n        this.chartType = opts.chart.type;\n\n        if (this.chartType === 'histogram') {\n          // technically, a histogram can be drawn by a column chart with no spaces in between\n          opts.chart.type = 'bar';\n          opts = Utils$1.extend({\n            plotOptions: {\n              bar: {\n                columnWidth: '99.99%'\n              }\n            }\n          }, opts);\n        }\n\n        opts = this.extendYAxis(opts);\n        opts = this.extendAnnotations(opts);\n        var config = options.init();\n        var newDefaults = {};\n\n        if (opts && _typeof(opts) === 'object') {\n          var chartDefaults = {};\n          var chartTypes = ['line', 'area', 'bar', 'candlestick', 'boxPlot', 'rangeBar', 'histogram', 'bubble', 'scatter', 'heatmap', 'treemap', 'pie', 'polarArea', 'donut', 'radar', 'radialBar'];\n\n          if (chartTypes.indexOf(opts.chart.type) !== -1) {\n            chartDefaults = defaults[opts.chart.type]();\n          } else {\n            chartDefaults = defaults.line();\n          }\n\n          if (opts.chart.brush && opts.chart.brush.enabled) {\n            chartDefaults = defaults.brush(chartDefaults);\n          }\n\n          if (opts.chart.stacked && opts.chart.stackType === '100%') {\n            opts = defaults.stacked100(opts);\n          } // If user has specified a dark theme, make the tooltip dark too\n\n\n          this.checkForDarkTheme(window.Apex); // check global window Apex options\n\n          this.checkForDarkTheme(opts); // check locally passed options\n\n          opts.xaxis = opts.xaxis || window.Apex.xaxis || {}; // an important boolean needs to be set here\n          // otherwise all the charts will have this flag set to true window.Apex.xaxis is set globally\n\n          if (!responsiveOverride) {\n            opts.xaxis.convertedCatToNumeric = false;\n          }\n\n          opts = this.checkForCatToNumericXAxis(this.chartType, chartDefaults, opts);\n\n          if (opts.chart.sparkline && opts.chart.sparkline.enabled || window.Apex.chart && window.Apex.chart.sparkline && window.Apex.chart.sparkline.enabled) {\n            chartDefaults = defaults.sparkline(chartDefaults);\n          }\n\n          newDefaults = Utils$1.extend(config, chartDefaults);\n        } // config should cascade in this fashion\n        // default-config < global-apex-variable-config < user-defined-config\n        // get GLOBALLY defined options and merge with the default config\n\n\n        var mergedWithDefaultConfig = Utils$1.extend(newDefaults, window.Apex); // get the merged config and extend with user defined config\n\n        config = Utils$1.extend(mergedWithDefaultConfig, opts); // some features are not supported. those mismatches should be handled\n\n        config = this.handleUserInputErrors(config);\n        return config;\n      }\n    }, {\n      key: \"checkForCatToNumericXAxis\",\n      value: function checkForCatToNumericXAxis(chartType, chartDefaults, opts) {\n        var defaults = new Defaults(opts);\n        var isBarHorizontal = (chartType === 'bar' || chartType === 'boxPlot') && opts.plotOptions && opts.plotOptions.bar && opts.plotOptions.bar.horizontal;\n        var unsupportedZoom = chartType === 'pie' || chartType === 'polarArea' || chartType === 'donut' || chartType === 'radar' || chartType === 'radialBar' || chartType === 'heatmap';\n        var notNumericXAxis = opts.xaxis.type !== 'datetime' && opts.xaxis.type !== 'numeric';\n        var tickPlacement = opts.xaxis.tickPlacement ? opts.xaxis.tickPlacement : chartDefaults.xaxis && chartDefaults.xaxis.tickPlacement;\n\n        if (!isBarHorizontal && !unsupportedZoom && notNumericXAxis && tickPlacement !== 'between') {\n          opts = defaults.convertCatToNumeric(opts);\n        }\n\n        return opts;\n      }\n    }, {\n      key: \"extendYAxis\",\n      value: function extendYAxis(opts, w) {\n        var options = new Options();\n\n        if (typeof opts.yaxis === 'undefined' || !opts.yaxis || Array.isArray(opts.yaxis) && opts.yaxis.length === 0) {\n          opts.yaxis = {};\n        } // extend global yaxis config (only if object is provided / not an array)\n\n\n        if (opts.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array) {\n          opts.yaxis = Utils$1.extend(opts.yaxis, window.Apex.yaxis);\n        } // as we can't extend nested object's array with extend, we need to do it first\n        // user can provide either an array or object in yaxis config\n\n\n        if (opts.yaxis.constructor !== Array) {\n          // convert the yaxis to array if user supplied object\n          opts.yaxis = [Utils$1.extend(options.yAxis, opts.yaxis)];\n        } else {\n          opts.yaxis = Utils$1.extendArray(opts.yaxis, options.yAxis);\n        }\n\n        var isLogY = false;\n        opts.yaxis.forEach(function (y) {\n          if (y.logarithmic) {\n            isLogY = true;\n          }\n        });\n        var series = opts.series;\n\n        if (w && !series) {\n          series = w.config.series;\n        } // A logarithmic chart works correctly when each series has a corresponding y-axis\n        // If this is not the case, we manually create yaxis for multi-series log chart\n\n\n        if (isLogY && series.length !== opts.yaxis.length && series.length) {\n          opts.yaxis = series.map(function (s, i) {\n            if (!s.name) {\n              series[i].name = \"series-\".concat(i + 1);\n            }\n\n            if (opts.yaxis[i]) {\n              opts.yaxis[i].seriesName = series[i].name;\n              return opts.yaxis[i];\n            } else {\n              var newYaxis = Utils$1.extend(options.yAxis, opts.yaxis[0]);\n              newYaxis.show = false;\n              return newYaxis;\n            }\n          });\n        }\n\n        if (isLogY && series.length > 1 && series.length !== opts.yaxis.length) {\n          console.warn('A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both.');\n        }\n\n        return opts;\n      } // annotations also accepts array, so we need to extend them manually\n\n    }, {\n      key: \"extendAnnotations\",\n      value: function extendAnnotations(opts) {\n        if (typeof opts.annotations === 'undefined') {\n          opts.annotations = {};\n          opts.annotations.yaxis = [];\n          opts.annotations.xaxis = [];\n          opts.annotations.points = [];\n        }\n\n        opts = this.extendYAxisAnnotations(opts);\n        opts = this.extendXAxisAnnotations(opts);\n        opts = this.extendPointAnnotations(opts);\n        return opts;\n      }\n    }, {\n      key: \"extendYAxisAnnotations\",\n      value: function extendYAxisAnnotations(opts) {\n        var options = new Options();\n        opts.annotations.yaxis = Utils$1.extendArray(typeof opts.annotations.yaxis !== 'undefined' ? opts.annotations.yaxis : [], options.yAxisAnnotation);\n        return opts;\n      }\n    }, {\n      key: \"extendXAxisAnnotations\",\n      value: function extendXAxisAnnotations(opts) {\n        var options = new Options();\n        opts.annotations.xaxis = Utils$1.extendArray(typeof opts.annotations.xaxis !== 'undefined' ? opts.annotations.xaxis : [], options.xAxisAnnotation);\n        return opts;\n      }\n    }, {\n      key: \"extendPointAnnotations\",\n      value: function extendPointAnnotations(opts) {\n        var options = new Options();\n        opts.annotations.points = Utils$1.extendArray(typeof opts.annotations.points !== 'undefined' ? opts.annotations.points : [], options.pointAnnotation);\n        return opts;\n      }\n    }, {\n      key: \"checkForDarkTheme\",\n      value: function checkForDarkTheme(opts) {\n        if (opts.theme && opts.theme.mode === 'dark') {\n          if (!opts.tooltip) {\n            opts.tooltip = {};\n          }\n\n          if (opts.tooltip.theme !== 'light') {\n            opts.tooltip.theme = 'dark';\n          }\n\n          if (!opts.chart.foreColor) {\n            opts.chart.foreColor = '#f6f7f8';\n          }\n\n          if (!opts.chart.background) {\n            opts.chart.background = '#424242';\n          }\n\n          if (!opts.theme.palette) {\n            opts.theme.palette = 'palette4';\n          }\n        }\n      }\n    }, {\n      key: \"handleUserInputErrors\",\n      value: function handleUserInputErrors(opts) {\n        var config = opts; // conflicting tooltip option. intersect makes sure to focus on 1 point at a time. Shared cannot be used along with it\n\n        if (config.tooltip.shared && config.tooltip.intersect) {\n          throw new Error('tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.');\n        }\n\n        if (config.chart.type === 'bar' && config.plotOptions.bar.horizontal) {\n          // No multiple yaxis for bars\n          if (config.yaxis.length > 1) {\n            throw new Error('Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false');\n          } // if yaxis is reversed in horizontal bar chart, you should draw the y-axis on right side\n\n\n          if (config.yaxis[0].reversed) {\n            config.yaxis[0].opposite = true;\n          }\n\n          config.xaxis.tooltip.enabled = false; // no xaxis tooltip for horizontal bar\n\n          config.yaxis[0].tooltip.enabled = false; // no xaxis tooltip for horizontal bar\n\n          config.chart.zoom.enabled = false; // no zooming for horz bars\n        }\n\n        if (config.chart.type === 'bar' || config.chart.type === 'rangeBar') {\n          if (config.tooltip.shared) {\n            if (config.xaxis.crosshairs.width === 'barWidth' && config.series.length > 1) {\n              config.xaxis.crosshairs.width = 'tickWidth';\n            }\n          }\n        }\n\n        if (config.chart.type === 'candlestick' || config.chart.type === 'boxPlot') {\n          if (config.yaxis[0].reversed) {\n            console.warn(\"Reversed y-axis in \".concat(config.chart.type, \" chart is not supported.\"));\n            config.yaxis[0].reversed = false;\n          }\n        } // if user supplied array for stroke width, it will only be applicable to line/area charts, for any other charts, revert back to Number\n\n\n        if (Array.isArray(config.stroke.width)) {\n          if (config.chart.type !== 'line' && config.chart.type !== 'area') {\n            console.warn('stroke.width option accepts array only for line and area charts. Reverted back to Number');\n            config.stroke.width = config.stroke.width[0];\n          }\n        }\n\n        return config;\n      }\n    }]);\n\n    return Config;\n  }();\n\n  var Globals = /*#__PURE__*/function () {\n    function Globals() {\n      _classCallCheck(this, Globals);\n    }\n\n    _createClass(Globals, [{\n      key: \"initGlobalVars\",\n      value: function initGlobalVars(gl) {\n        gl.series = []; // the MAIN series array (y values)\n\n        gl.seriesCandleO = [];\n        gl.seriesCandleH = [];\n        gl.seriesCandleM = [];\n        gl.seriesCandleL = [];\n        gl.seriesCandleC = [];\n        gl.seriesRangeStart = [];\n        gl.seriesRangeEnd = [];\n        gl.seriesRangeBar = [];\n        gl.seriesPercent = [];\n        gl.seriesGoals = [];\n        gl.seriesX = [];\n        gl.seriesZ = [];\n        gl.seriesNames = [];\n        gl.seriesTotals = [];\n        gl.seriesLog = [];\n        gl.seriesColors = [];\n        gl.stackedSeriesTotals = [];\n        gl.seriesXvalues = []; // we will need this in tooltip (it's x position)\n        // when we will have unequal x values, we will need\n        // some way to get x value depending on mouse pointer\n\n        gl.seriesYvalues = []; // we will need this when deciding which series\n        // user hovered on\n\n        gl.labels = [];\n        gl.categoryLabels = [];\n        gl.timescaleLabels = [];\n        gl.noLabelsProvided = false;\n        gl.resizeTimer = null;\n        gl.selectionResizeTimer = null;\n        gl.delayedElements = [];\n        gl.pointsArray = [];\n        gl.dataLabelsRects = [];\n        gl.isXNumeric = false;\n        gl.xaxisLabelsCount = 0;\n        gl.skipLastTimelinelabel = false;\n        gl.skipFirstTimelinelabel = false;\n        gl.isDataXYZ = false;\n        gl.isMultiLineX = false;\n        gl.isMultipleYAxis = false;\n        gl.maxY = -Number.MAX_VALUE;\n        gl.minY = Number.MIN_VALUE;\n        gl.minYArr = [];\n        gl.maxYArr = [];\n        gl.maxX = -Number.MAX_VALUE;\n        gl.minX = Number.MAX_VALUE;\n        gl.initialMaxX = -Number.MAX_VALUE;\n        gl.initialMinX = Number.MAX_VALUE;\n        gl.maxDate = 0;\n        gl.minDate = Number.MAX_VALUE;\n        gl.minZ = Number.MAX_VALUE;\n        gl.maxZ = -Number.MAX_VALUE;\n        gl.minXDiff = Number.MAX_VALUE;\n        gl.yAxisScale = [];\n        gl.xAxisScale = null;\n        gl.xAxisTicksPositions = [];\n        gl.yLabelsCoords = [];\n        gl.yTitleCoords = [];\n        gl.barPadForNumericAxis = 0;\n        gl.padHorizontal = 0;\n        gl.xRange = 0;\n        gl.yRange = [];\n        gl.zRange = 0;\n        gl.dataPoints = 0;\n        gl.xTickAmount = 0;\n      }\n    }, {\n      key: \"globalVars\",\n      value: function globalVars(config) {\n        return {\n          chartID: null,\n          // chart ID - apexcharts-cuid\n          cuid: null,\n          // chart ID - random numbers excluding \"apexcharts\" part\n          events: {\n            beforeMount: [],\n            mounted: [],\n            updated: [],\n            clicked: [],\n            selection: [],\n            dataPointSelection: [],\n            zoomed: [],\n            scrolled: []\n          },\n          colors: [],\n          clientX: null,\n          clientY: null,\n          fill: {\n            colors: []\n          },\n          stroke: {\n            colors: []\n          },\n          dataLabels: {\n            style: {\n              colors: []\n            }\n          },\n          radarPolygons: {\n            fill: {\n              colors: []\n            }\n          },\n          markers: {\n            colors: [],\n            size: config.markers.size,\n            largestSize: 0\n          },\n          animationEnded: false,\n          isTouchDevice: 'ontouchstart' in window || navigator.msMaxTouchPoints,\n          isDirty: false,\n          // chart has been updated after the initial render. This is different than dataChanged property. isDirty means user manually called some method to update\n          isExecCalled: false,\n          // whether user updated the chart through the exec method\n          initialConfig: null,\n          // we will store the first config user has set to go back when user finishes interactions like zooming and come out of it\n          initialSeries: [],\n          lastXAxis: [],\n          lastYAxis: [],\n          columnSeries: null,\n          labels: [],\n          // store the text to draw on x axis\n          // Don't mutate the labels, many things including tooltips depends on it!\n          timescaleLabels: [],\n          // store the timescaleLabels Labels in another variable\n          noLabelsProvided: false,\n          // if user didn't provide any categories/labels or x values, fallback to 1,2,3,4...\n          allSeriesCollapsed: false,\n          collapsedSeries: [],\n          // when user collapses a series, it goes into this array\n          collapsedSeriesIndices: [],\n          // this stores the index of the collapsedSeries instead of whole object for quick access\n          ancillaryCollapsedSeries: [],\n          // when user collapses an \"alwaysVisible\" series, it goes into this array\n          ancillaryCollapsedSeriesIndices: [],\n          // this stores the index of the ancillaryCollapsedSeries whose y-axis is always visible\n          risingSeries: [],\n          // when user re-opens a collapsed series, it goes here\n          dataFormatXNumeric: false,\n          // boolean value to indicate user has passed numeric x values\n          capturedSeriesIndex: -1,\n          capturedDataPointIndex: -1,\n          selectedDataPoints: [],\n          goldenPadding: 35,\n          // this value is used at a lot of places for spacing purpose\n          invalidLogScale: false,\n          // if a user enabled log scale but the data provided is not valid to generate a log scale, turn on this flag\n          ignoreYAxisIndexes: [],\n          // when series are being collapsed in multiple y axes, ignore certain index\n          yAxisSameScaleIndices: [],\n          maxValsInArrayIndex: 0,\n          radialSize: 0,\n          selection: undefined,\n          zoomEnabled: config.chart.toolbar.autoSelected === 'zoom' && config.chart.toolbar.tools.zoom && config.chart.zoom.enabled,\n          panEnabled: config.chart.toolbar.autoSelected === 'pan' && config.chart.toolbar.tools.pan,\n          selectionEnabled: config.chart.toolbar.autoSelected === 'selection' && config.chart.toolbar.tools.selection,\n          yaxis: null,\n          mousedown: false,\n          lastClientPosition: {},\n          // don't reset this variable this the chart is destroyed. It is used to detect right or left mousemove in panning\n          visibleXRange: undefined,\n          yValueDecimal: 0,\n          // are there floating numbers in the series. If yes, this represent the len of the decimals\n          total: 0,\n          SVGNS: 'http://www.w3.org/2000/svg',\n          // svg namespace\n          svgWidth: 0,\n          // the whole svg width\n          svgHeight: 0,\n          // the whole svg height\n          noData: false,\n          // whether there is any data to display or not\n          locale: {},\n          // the current locale values will be preserved here for global access\n          dom: {},\n          // for storing all dom nodes in this particular property\n          memory: {\n            methodsToExec: []\n          },\n          shouldAnimate: true,\n          skipLastTimelinelabel: false,\n          // when last label is cropped, skip drawing it\n          skipFirstTimelinelabel: false,\n          // when first label is cropped, skip drawing it\n          delayedElements: [],\n          // element which appear after animation has finished\n          axisCharts: true,\n          // chart type = line or area or bar\n          // (refer them also as plot charts in the code)\n          isDataXYZ: false,\n          // bool: data was provided in a {[x,y,z]} pattern\n          resized: false,\n          // bool: user has resized\n          resizeTimer: null,\n          // timeout function to make a small delay before\n          // drawing when user resized\n          comboCharts: false,\n          // bool: whether it's a combination of line/column\n          dataChanged: false,\n          // bool: has data changed dynamically\n          previousPaths: [],\n          // array: when data is changed, it will animate from\n          // previous paths\n          allSeriesHasEqualX: true,\n          pointsArray: [],\n          // store the points positions here to draw later on hover\n          // format is - [[x,y],[x,y]... [x,y]]\n          dataLabelsRects: [],\n          // store the positions of datalabels to prevent collision\n          lastDrawnDataLabelsIndexes: [],\n          hasNullValues: false,\n          // bool: whether series contains null values\n          easing: null,\n          // function: animation effect to apply\n          zoomed: false,\n          // whether user has zoomed or not\n          gridWidth: 0,\n          // drawable width of actual graphs (series paths)\n          gridHeight: 0,\n          // drawable height of actual graphs (series paths)\n          rotateXLabels: false,\n          defaultLabels: false,\n          xLabelFormatter: undefined,\n          // formatter for x axis labels\n          yLabelFormatters: [],\n          xaxisTooltipFormatter: undefined,\n          // formatter for x axis tooltip\n          ttKeyFormatter: undefined,\n          ttVal: undefined,\n          ttZFormatter: undefined,\n          LINE_HEIGHT_RATIO: 1.618,\n          xAxisLabelsHeight: 0,\n          xAxisLabelsWidth: 0,\n          yAxisLabelsWidth: 0,\n          scaleX: 1,\n          scaleY: 1,\n          translateX: 0,\n          translateY: 0,\n          translateYAxisX: [],\n          yAxisWidths: [],\n          translateXAxisY: 0,\n          translateXAxisX: 0,\n          tooltip: null\n        };\n      }\n    }, {\n      key: \"init\",\n      value: function init(config) {\n        var globals = this.globalVars(config);\n        this.initGlobalVars(globals);\n        globals.initialConfig = Utils$1.extend({}, config);\n        globals.initialSeries = Utils$1.clone(config.series);\n        globals.lastXAxis = Utils$1.clone(globals.initialConfig.xaxis);\n        globals.lastYAxis = Utils$1.clone(globals.initialConfig.yaxis);\n        return globals;\n      }\n    }]);\n\n    return Globals;\n  }();\n\n  /**\n   * ApexCharts Base Class for extending user options with pre-defined ApexCharts config.\n   *\n   * @module Base\n   **/\n\n  var Base = /*#__PURE__*/function () {\n    function Base(opts) {\n      _classCallCheck(this, Base);\n\n      this.opts = opts;\n    }\n\n    _createClass(Base, [{\n      key: \"init\",\n      value: function init() {\n        var config = new Config(this.opts).init({\n          responsiveOverride: false\n        });\n        var globals = new Globals().init(config);\n        var w = {\n          config: config,\n          globals: globals\n        };\n        return w;\n      }\n    }]);\n\n    return Base;\n  }();\n\n  var Data = /*#__PURE__*/function () {\n    function Data(ctx) {\n      _classCallCheck(this, Data);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.twoDSeries = [];\n      this.threeDSeries = [];\n      this.twoDSeriesX = [];\n      this.seriesGoals = [];\n      this.coreUtils = new CoreUtils(this.ctx);\n    }\n\n    _createClass(Data, [{\n      key: \"isMultiFormat\",\n      value: function isMultiFormat() {\n        return this.isFormatXY() || this.isFormat2DArray();\n      } // given format is [{x, y}, {x, y}]\n\n    }, {\n      key: \"isFormatXY\",\n      value: function isFormatXY() {\n        var series = this.w.config.series.slice();\n        var sr = new Series(this.ctx);\n        this.activeSeriesIndex = sr.getActiveConfigSeriesIndex();\n\n        if (typeof series[this.activeSeriesIndex].data !== 'undefined' && series[this.activeSeriesIndex].data.length > 0 && series[this.activeSeriesIndex].data[0] !== null && typeof series[this.activeSeriesIndex].data[0].x !== 'undefined' && series[this.activeSeriesIndex].data[0] !== null) {\n          return true;\n        }\n      } // given format is [[x, y], [x, y]]\n\n    }, {\n      key: \"isFormat2DArray\",\n      value: function isFormat2DArray() {\n        var series = this.w.config.series.slice();\n        var sr = new Series(this.ctx);\n        this.activeSeriesIndex = sr.getActiveConfigSeriesIndex();\n\n        if (typeof series[this.activeSeriesIndex].data !== 'undefined' && series[this.activeSeriesIndex].data.length > 0 && typeof series[this.activeSeriesIndex].data[0] !== 'undefined' && series[this.activeSeriesIndex].data[0] !== null && series[this.activeSeriesIndex].data[0].constructor === Array) {\n          return true;\n        }\n      }\n    }, {\n      key: \"handleFormat2DArray\",\n      value: function handleFormat2DArray(ser, i) {\n        var cnf = this.w.config;\n        var gl = this.w.globals;\n        var isBoxPlot = cnf.chart.type === 'boxPlot' || cnf.series[i].type === 'boxPlot';\n\n        for (var j = 0; j < ser[i].data.length; j++) {\n          if (typeof ser[i].data[j][1] !== 'undefined') {\n            if (Array.isArray(ser[i].data[j][1]) && ser[i].data[j][1].length === 4 && !isBoxPlot) {\n              // candlestick nested ohlc format\n              this.twoDSeries.push(Utils$1.parseNumber(ser[i].data[j][1][3]));\n            } else if (ser[i].data[j].length >= 5) {\n              // candlestick non-nested ohlc format\n              this.twoDSeries.push(Utils$1.parseNumber(ser[i].data[j][4]));\n            } else {\n              this.twoDSeries.push(Utils$1.parseNumber(ser[i].data[j][1]));\n            }\n\n            gl.dataFormatXNumeric = true;\n          }\n\n          if (cnf.xaxis.type === 'datetime') {\n            // if timestamps are provided and xaxis type is datetime,\n            var ts = new Date(ser[i].data[j][0]);\n            ts = new Date(ts).getTime();\n            this.twoDSeriesX.push(ts);\n          } else {\n            this.twoDSeriesX.push(ser[i].data[j][0]);\n          }\n        }\n\n        for (var _j = 0; _j < ser[i].data.length; _j++) {\n          if (typeof ser[i].data[_j][2] !== 'undefined') {\n            this.threeDSeries.push(ser[i].data[_j][2]);\n            gl.isDataXYZ = true;\n          }\n        }\n      }\n    }, {\n      key: \"handleFormatXY\",\n      value: function handleFormatXY(ser, i) {\n        var cnf = this.w.config;\n        var gl = this.w.globals;\n        var dt = new DateTime(this.ctx);\n        var activeI = i;\n\n        if (gl.collapsedSeriesIndices.indexOf(i) > -1) {\n          // fix #368\n          activeI = this.activeSeriesIndex;\n        } // get series\n\n\n        for (var j = 0; j < ser[i].data.length; j++) {\n          if (typeof ser[i].data[j].y !== 'undefined') {\n            if (Array.isArray(ser[i].data[j].y)) {\n              this.twoDSeries.push(Utils$1.parseNumber(ser[i].data[j].y[ser[i].data[j].y.length - 1]));\n            } else {\n              this.twoDSeries.push(Utils$1.parseNumber(ser[i].data[j].y));\n            }\n          }\n\n          if (typeof ser[i].data[j].goals !== 'undefined' && Array.isArray(ser[i].data[j].goals)) {\n            if (typeof this.seriesGoals[i] === 'undefined') {\n              this.seriesGoals[i] = [];\n            }\n\n            this.seriesGoals[i].push(ser[i].data[j].goals);\n          } else {\n            if (typeof this.seriesGoals[i] === 'undefined') {\n              this.seriesGoals[i] = [];\n            }\n\n            this.seriesGoals[i].push(null);\n          }\n        } // get seriesX\n\n\n        for (var _j2 = 0; _j2 < ser[activeI].data.length; _j2++) {\n          var isXString = typeof ser[activeI].data[_j2].x === 'string';\n          var isXArr = Array.isArray(ser[activeI].data[_j2].x);\n          var isXDate = !isXArr && !!dt.isValidDate(ser[activeI].data[_j2].x.toString());\n\n          if (isXString || isXDate) {\n            // user supplied '01/01/2017' or a date string (a JS date object is not supported)\n            if (isXString || cnf.xaxis.convertedCatToNumeric) {\n              var isRangeColumn = gl.isBarHorizontal && gl.isRangeData;\n\n              if (cnf.xaxis.type === 'datetime' && !isRangeColumn) {\n                this.twoDSeriesX.push(dt.parseDate(ser[activeI].data[_j2].x));\n              } else {\n                // a category and not a numeric x value\n                this.fallbackToCategory = true;\n                this.twoDSeriesX.push(ser[activeI].data[_j2].x);\n              }\n            } else {\n              if (cnf.xaxis.type === 'datetime') {\n                this.twoDSeriesX.push(dt.parseDate(ser[activeI].data[_j2].x.toString()));\n              } else {\n                gl.dataFormatXNumeric = true;\n                gl.isXNumeric = true;\n                this.twoDSeriesX.push(parseFloat(ser[activeI].data[_j2].x));\n              }\n            }\n          } else if (isXArr) {\n            // a multiline label described in array format\n            this.fallbackToCategory = true;\n            this.twoDSeriesX.push(ser[activeI].data[_j2].x);\n          } else {\n            // a numeric value in x property\n            gl.isXNumeric = true;\n            gl.dataFormatXNumeric = true;\n            this.twoDSeriesX.push(ser[activeI].data[_j2].x);\n          }\n        }\n\n        if (ser[i].data[0] && typeof ser[i].data[0].z !== 'undefined') {\n          for (var t = 0; t < ser[i].data.length; t++) {\n            this.threeDSeries.push(ser[i].data[t].z);\n          }\n\n          gl.isDataXYZ = true;\n        }\n      }\n    }, {\n      key: \"handleRangeData\",\n      value: function handleRangeData(ser, i) {\n        var gl = this.w.globals;\n        var range = {};\n\n        if (this.isFormat2DArray()) {\n          range = this.handleRangeDataFormat('array', ser, i);\n        } else if (this.isFormatXY()) {\n          range = this.handleRangeDataFormat('xy', ser, i);\n        }\n\n        gl.seriesRangeStart.push(range.start);\n        gl.seriesRangeEnd.push(range.end);\n        gl.seriesRangeBar.push(range.rangeUniques); // check for overlaps to avoid clashes in a timeline chart\n\n        gl.seriesRangeBar.forEach(function (sr, si) {\n          if (sr) {\n            sr.forEach(function (sarr, sarri) {\n              sarr.y.forEach(function (arr, arri) {\n                for (var sri = 0; sri < sarr.y.length; sri++) {\n                  if (arri !== sri) {\n                    var range1y1 = arr.y1;\n                    var range1y2 = arr.y2;\n                    var range2y1 = sarr.y[sri].y1;\n                    var range2y2 = sarr.y[sri].y2;\n\n                    if (range1y1 <= range2y2 && range2y1 <= range1y2) {\n                      if (sarr.overlaps.indexOf(arr.rangeName) < 0) {\n                        sarr.overlaps.push(arr.rangeName);\n                      }\n\n                      if (sarr.overlaps.indexOf(sarr.y[sri].rangeName) < 0) {\n                        sarr.overlaps.push(sarr.y[sri].rangeName);\n                      }\n                    }\n                  }\n                }\n              });\n            });\n          }\n        });\n        return range;\n      }\n    }, {\n      key: \"handleCandleStickBoxData\",\n      value: function handleCandleStickBoxData(ser, i) {\n        var gl = this.w.globals;\n        var ohlc = {};\n\n        if (this.isFormat2DArray()) {\n          ohlc = this.handleCandleStickBoxDataFormat('array', ser, i);\n        } else if (this.isFormatXY()) {\n          ohlc = this.handleCandleStickBoxDataFormat('xy', ser, i);\n        }\n\n        gl.seriesCandleO[i] = ohlc.o;\n        gl.seriesCandleH[i] = ohlc.h;\n        gl.seriesCandleM[i] = ohlc.m;\n        gl.seriesCandleL[i] = ohlc.l;\n        gl.seriesCandleC[i] = ohlc.c;\n        return ohlc;\n      }\n    }, {\n      key: \"handleRangeDataFormat\",\n      value: function handleRangeDataFormat(format, ser, i) {\n        var rangeStart = [];\n        var rangeEnd = [];\n        var uniqueKeys = ser[i].data.filter(function (thing, index, self) {\n          return index === self.findIndex(function (t) {\n            return t.x === thing.x;\n          });\n        }).map(function (r, index) {\n          return {\n            x: r.x,\n            overlaps: [],\n            y: []\n          };\n        });\n        var err = 'Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts';\n        var serObj = new Series(this.ctx);\n        var activeIndex = serObj.getActiveConfigSeriesIndex();\n\n        if (format === 'array') {\n          if (ser[activeIndex].data[0][1].length !== 2) {\n            throw new Error(err);\n          }\n\n          for (var j = 0; j < ser[i].data.length; j++) {\n            rangeStart.push(ser[i].data[j][1][0]);\n            rangeEnd.push(ser[i].data[j][1][1]);\n          }\n        } else if (format === 'xy') {\n          if (ser[activeIndex].data[0].y.length !== 2) {\n            throw new Error(err);\n          }\n\n          var _loop = function _loop(_j3) {\n            var id = Utils$1.randomId();\n            var x = ser[i].data[_j3].x;\n            var y = {\n              y1: ser[i].data[_j3].y[0],\n              y2: ser[i].data[_j3].y[1],\n              rangeName: id\n            }; // mutating config object by adding a new property\n            // TODO: As this is specifically for timeline rangebar charts, update the docs mentioning the series only supports xy format\n\n            ser[i].data[_j3].rangeName = id;\n            var uI = uniqueKeys.findIndex(function (t) {\n              return t.x === x;\n            });\n            uniqueKeys[uI].y.push(y);\n            rangeStart.push(y.y1);\n            rangeEnd.push(y.y2);\n          };\n\n          for (var _j3 = 0; _j3 < ser[i].data.length; _j3++) {\n            _loop(_j3);\n          }\n        }\n\n        return {\n          start: rangeStart,\n          end: rangeEnd,\n          rangeUniques: uniqueKeys\n        };\n      }\n    }, {\n      key: \"handleCandleStickBoxDataFormat\",\n      value: function handleCandleStickBoxDataFormat(format, ser, i) {\n        var w = this.w;\n        var isBoxPlot = w.config.chart.type === 'boxPlot' || w.config.series[i].type === 'boxPlot';\n        var serO = [];\n        var serH = [];\n        var serM = [];\n        var serL = [];\n        var serC = [];\n\n        if (format === 'array') {\n          if (isBoxPlot && ser[i].data[0].length === 6 || !isBoxPlot && ser[i].data[0].length === 5) {\n            for (var j = 0; j < ser[i].data.length; j++) {\n              serO.push(ser[i].data[j][1]);\n              serH.push(ser[i].data[j][2]);\n\n              if (isBoxPlot) {\n                serM.push(ser[i].data[j][3]);\n                serL.push(ser[i].data[j][4]);\n                serC.push(ser[i].data[j][5]);\n              } else {\n                serL.push(ser[i].data[j][3]);\n                serC.push(ser[i].data[j][4]);\n              }\n            }\n          } else {\n            for (var _j4 = 0; _j4 < ser[i].data.length; _j4++) {\n              if (Array.isArray(ser[i].data[_j4][1])) {\n                serO.push(ser[i].data[_j4][1][0]);\n                serH.push(ser[i].data[_j4][1][1]);\n\n                if (isBoxPlot) {\n                  serM.push(ser[i].data[_j4][1][2]);\n                  serL.push(ser[i].data[_j4][1][3]);\n                  serC.push(ser[i].data[_j4][1][4]);\n                } else {\n                  serL.push(ser[i].data[_j4][1][2]);\n                  serC.push(ser[i].data[_j4][1][3]);\n                }\n              }\n            }\n          }\n        } else if (format === 'xy') {\n          for (var _j5 = 0; _j5 < ser[i].data.length; _j5++) {\n            if (Array.isArray(ser[i].data[_j5].y)) {\n              serO.push(ser[i].data[_j5].y[0]);\n              serH.push(ser[i].data[_j5].y[1]);\n\n              if (isBoxPlot) {\n                serM.push(ser[i].data[_j5].y[2]);\n                serL.push(ser[i].data[_j5].y[3]);\n                serC.push(ser[i].data[_j5].y[4]);\n              } else {\n                serL.push(ser[i].data[_j5].y[2]);\n                serC.push(ser[i].data[_j5].y[3]);\n              }\n            }\n          }\n        }\n\n        return {\n          o: serO,\n          h: serH,\n          m: serM,\n          l: serL,\n          c: serC\n        };\n      }\n    }, {\n      key: \"parseDataAxisCharts\",\n      value: function parseDataAxisCharts(ser) {\n        var _this = this;\n\n        var ctx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.ctx;\n        var cnf = this.w.config;\n        var gl = this.w.globals;\n        var dt = new DateTime(ctx);\n        var xlabels = cnf.labels.length > 0 ? cnf.labels.slice() : cnf.xaxis.categories.slice();\n        gl.isRangeBar = cnf.chart.type === 'rangeBar' && gl.isBarHorizontal;\n\n        var handleDates = function handleDates() {\n          for (var j = 0; j < xlabels.length; j++) {\n            if (typeof xlabels[j] === 'string') {\n              // user provided date strings\n              var isDate = dt.isValidDate(xlabels[j]);\n\n              if (isDate) {\n                _this.twoDSeriesX.push(dt.parseDate(xlabels[j]));\n              } else {\n                throw new Error('You have provided invalid Date format. Please provide a valid JavaScript Date');\n              }\n            } else {\n              // user provided timestamps\n              _this.twoDSeriesX.push(xlabels[j]);\n            }\n          }\n        };\n\n        for (var i = 0; i < ser.length; i++) {\n          this.twoDSeries = [];\n          this.twoDSeriesX = [];\n          this.threeDSeries = [];\n\n          if (typeof ser[i].data === 'undefined') {\n            console.error(\"It is a possibility that you may have not included 'data' property in series.\");\n            return;\n          }\n\n          if (cnf.chart.type === 'rangeBar' || cnf.chart.type === 'rangeArea' || ser[i].type === 'rangeBar' || ser[i].type === 'rangeArea') {\n            gl.isRangeData = true;\n            this.handleRangeData(ser, i);\n          }\n\n          if (this.isMultiFormat()) {\n            if (this.isFormat2DArray()) {\n              this.handleFormat2DArray(ser, i);\n            } else if (this.isFormatXY()) {\n              this.handleFormatXY(ser, i);\n            }\n\n            if (cnf.chart.type === 'candlestick' || ser[i].type === 'candlestick' || cnf.chart.type === 'boxPlot' || ser[i].type === 'boxPlot') {\n              this.handleCandleStickBoxData(ser, i);\n            }\n\n            gl.series.push(this.twoDSeries);\n            gl.labels.push(this.twoDSeriesX);\n            gl.seriesX.push(this.twoDSeriesX);\n            gl.seriesGoals = this.seriesGoals;\n\n            if (i === this.activeSeriesIndex && !this.fallbackToCategory) {\n              gl.isXNumeric = true;\n            }\n          } else {\n            if (cnf.xaxis.type === 'datetime') {\n              // user didn't supplied [{x,y}] or [[x,y]], but single array in data.\n              // Also labels/categories were supplied differently\n              gl.isXNumeric = true;\n              handleDates();\n              gl.seriesX.push(this.twoDSeriesX);\n            } else if (cnf.xaxis.type === 'numeric') {\n              gl.isXNumeric = true;\n\n              if (xlabels.length > 0) {\n                this.twoDSeriesX = xlabels;\n                gl.seriesX.push(this.twoDSeriesX);\n              }\n            }\n\n            gl.labels.push(this.twoDSeriesX);\n            var singleArray = ser[i].data.map(function (d) {\n              return Utils$1.parseNumber(d);\n            });\n            gl.series.push(singleArray);\n          }\n\n          gl.seriesZ.push(this.threeDSeries);\n\n          if (ser[i].name !== undefined) {\n            gl.seriesNames.push(ser[i].name);\n          } else {\n            gl.seriesNames.push('series-' + parseInt(i + 1, 10));\n          } // overrided default color if user inputs color with series data\n\n\n          if (ser[i].color !== undefined) {\n            gl.seriesColors.push(ser[i].color);\n          } else {\n            gl.seriesColors.push(undefined);\n          }\n        }\n\n        return this.w;\n      }\n    }, {\n      key: \"parseDataNonAxisCharts\",\n      value: function parseDataNonAxisCharts(ser) {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        gl.series = ser.slice();\n        gl.seriesNames = cnf.labels.slice();\n\n        for (var i = 0; i < gl.series.length; i++) {\n          if (gl.seriesNames[i] === undefined) {\n            gl.seriesNames.push('series-' + (i + 1));\n          }\n        }\n\n        return this.w;\n      }\n      /** User possibly set string categories in xaxis.categories or labels prop\n       * Or didn't set xaxis labels at all - in which case we manually do it.\n       * If user passed series data as [[3, 2], [4, 5]] or [{ x: 3, y: 55 }],\n       * this shouldn't be called\n       * @param {array} ser - the series which user passed to the config\n       */\n\n    }, {\n      key: \"handleExternalLabelsData\",\n      value: function handleExternalLabelsData(ser) {\n        var cnf = this.w.config;\n        var gl = this.w.globals;\n\n        if (cnf.xaxis.categories.length > 0) {\n          // user provided labels in xaxis.category prop\n          gl.labels = cnf.xaxis.categories;\n        } else if (cnf.labels.length > 0) {\n          // user provided labels in labels props\n          gl.labels = cnf.labels.slice();\n        } else if (this.fallbackToCategory) {\n          // user provided labels in x prop in [{ x: 3, y: 55 }] data, and those labels are already stored in gl.labels[0], so just re-arrange the gl.labels array\n          gl.labels = gl.labels[0];\n\n          if (gl.seriesRangeBar.length) {\n            gl.seriesRangeBar.map(function (srt) {\n              srt.forEach(function (sr) {\n                if (gl.labels.indexOf(sr.x) < 0 && sr.x) {\n                  gl.labels.push(sr.x);\n                }\n              });\n            });\n            gl.labels = gl.labels.filter(function (elem, pos, arr) {\n              return arr.indexOf(elem) === pos;\n            });\n          }\n\n          if (cnf.xaxis.convertedCatToNumeric) {\n            var defaults = new Defaults(cnf);\n            defaults.convertCatToNumericXaxis(cnf, this.ctx, gl.seriesX[0]);\n\n            this._generateExternalLabels(ser);\n          }\n        } else {\n          this._generateExternalLabels(ser);\n        }\n      }\n    }, {\n      key: \"_generateExternalLabels\",\n      value: function _generateExternalLabels(ser) {\n        var gl = this.w.globals;\n        var cnf = this.w.config; // user didn't provided any labels, fallback to 1-2-3-4-5\n\n        var labelArr = [];\n\n        if (gl.axisCharts) {\n          if (gl.series.length > 0) {\n            for (var i = 0; i < gl.series[gl.maxValsInArrayIndex].length; i++) {\n              labelArr.push(i + 1);\n            }\n          }\n\n          gl.seriesX = []; // create gl.seriesX as it will be used in calculations of x positions\n\n          for (var _i = 0; _i < ser.length; _i++) {\n            gl.seriesX.push(labelArr);\n          } // turn on the isXNumeric flag to allow minX and maxX to function properly\n\n\n          gl.isXNumeric = true;\n        } // no series to pull labels from, put a 0-10 series\n        // possibly, user collapsed all series. Hence we can't work with above calc\n\n\n        if (labelArr.length === 0) {\n          labelArr = gl.axisCharts ? [] : gl.series.map(function (gls, glsi) {\n            return glsi + 1;\n          });\n\n          for (var _i2 = 0; _i2 < ser.length; _i2++) {\n            gl.seriesX.push(labelArr);\n          }\n        } // Finally, pass the labelArr in gl.labels which will be printed on x-axis\n\n\n        gl.labels = labelArr;\n\n        if (cnf.xaxis.convertedCatToNumeric) {\n          gl.categoryLabels = labelArr.map(function (l) {\n            return cnf.xaxis.labels.formatter(l);\n          });\n        } // Turn on this global flag to indicate no labels were provided by user\n\n\n        gl.noLabelsProvided = true;\n      } // Segregate user provided data into appropriate vars\n\n    }, {\n      key: \"parseData\",\n      value: function parseData(ser) {\n        var w = this.w;\n        var cnf = w.config;\n        var gl = w.globals;\n        this.excludeCollapsedSeriesInYAxis(); // If we detected string in X prop of series, we fallback to category x-axis\n\n        this.fallbackToCategory = false;\n        this.ctx.core.resetGlobals();\n        this.ctx.core.isMultipleY();\n\n        if (gl.axisCharts) {\n          // axisCharts includes line / area / column / scatter\n          this.parseDataAxisCharts(ser);\n        } else {\n          // non-axis charts are pie / donut\n          this.parseDataNonAxisCharts(ser);\n        }\n\n        this.coreUtils.getLargestSeries(); // set Null values to 0 in all series when user hides/shows some series\n\n        if (cnf.chart.type === 'bar' && cnf.chart.stacked) {\n          var series = new Series(this.ctx);\n          gl.series = series.setNullSeriesToZeroValues(gl.series);\n        }\n\n        this.coreUtils.getSeriesTotals();\n\n        if (gl.axisCharts) {\n          this.coreUtils.getStackedSeriesTotals();\n        }\n\n        this.coreUtils.getPercentSeries();\n\n        if (!gl.dataFormatXNumeric && (!gl.isXNumeric || cnf.xaxis.type === 'numeric' && cnf.labels.length === 0 && cnf.xaxis.categories.length === 0)) {\n          // x-axis labels couldn't be detected; hence try searching every option in config\n          this.handleExternalLabelsData(ser);\n        } // check for multiline xaxis\n\n\n        var catLabels = this.coreUtils.getCategoryLabels(gl.labels);\n\n        for (var l = 0; l < catLabels.length; l++) {\n          if (Array.isArray(catLabels[l])) {\n            gl.isMultiLineX = true;\n            break;\n          }\n        }\n      }\n    }, {\n      key: \"excludeCollapsedSeriesInYAxis\",\n      value: function excludeCollapsedSeriesInYAxis() {\n        var _this2 = this;\n\n        var w = this.w;\n        w.globals.ignoreYAxisIndexes = w.globals.collapsedSeries.map(function (collapsed, i) {\n          // fix issue #1215\n          // if stacked, not returning collapsed.index to preserve yaxis\n          if (_this2.w.globals.isMultipleYAxis && !w.config.chart.stacked) {\n            return collapsed.index;\n          }\n        });\n      }\n    }]);\n\n    return Data;\n  }();\n\n  /**\n   * ApexCharts Formatter Class for setting value formatters for axes as well as tooltips.\n   *\n   * @module Formatters\n   **/\n\n  var Formatters = /*#__PURE__*/function () {\n    function Formatters(ctx) {\n      _classCallCheck(this, Formatters);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.tooltipKeyFormat = 'dd MMM';\n    }\n\n    _createClass(Formatters, [{\n      key: \"xLabelFormat\",\n      value: function xLabelFormat(fn, val, timestamp, opts) {\n        var w = this.w;\n\n        if (w.config.xaxis.type === 'datetime') {\n          if (w.config.xaxis.labels.formatter === undefined) {\n            // if user has not specified a custom formatter, use the default tooltip.x.format\n            if (w.config.tooltip.x.formatter === undefined) {\n              var datetimeObj = new DateTime(this.ctx);\n              return datetimeObj.formatDate(datetimeObj.getDate(val), w.config.tooltip.x.format);\n            }\n          }\n        }\n\n        return fn(val, timestamp, opts);\n      }\n    }, {\n      key: \"defaultGeneralFormatter\",\n      value: function defaultGeneralFormatter(val) {\n        if (Array.isArray(val)) {\n          return val.map(function (v) {\n            return v;\n          });\n        } else {\n          return val;\n        }\n      }\n    }, {\n      key: \"defaultYFormatter\",\n      value: function defaultYFormatter(v, yaxe, i) {\n        var w = this.w;\n\n        if (Utils$1.isNumber(v)) {\n          if (w.globals.yValueDecimal !== 0) {\n            v = v.toFixed(yaxe.decimalsInFloat !== undefined ? yaxe.decimalsInFloat : w.globals.yValueDecimal);\n          } else if (w.globals.maxYArr[i] - w.globals.minYArr[i] < 5) {\n            v = v.toFixed(1);\n          } else {\n            v = v.toFixed(0);\n          }\n        }\n\n        return v;\n      }\n    }, {\n      key: \"setLabelFormatters\",\n      value: function setLabelFormatters() {\n        var _this = this;\n\n        var w = this.w;\n\n        w.globals.xaxisTooltipFormatter = function (val) {\n          return _this.defaultGeneralFormatter(val);\n        };\n\n        w.globals.ttKeyFormatter = function (val) {\n          return _this.defaultGeneralFormatter(val);\n        };\n\n        w.globals.ttZFormatter = function (val) {\n          return val;\n        };\n\n        w.globals.legendFormatter = function (val) {\n          return _this.defaultGeneralFormatter(val);\n        }; // formatter function will always overwrite format property\n\n\n        if (w.config.xaxis.labels.formatter !== undefined) {\n          w.globals.xLabelFormatter = w.config.xaxis.labels.formatter;\n        } else {\n          w.globals.xLabelFormatter = function (val) {\n            if (Utils$1.isNumber(val)) {\n              if (!w.config.xaxis.convertedCatToNumeric && w.config.xaxis.type === 'numeric') {\n                if (Utils$1.isNumber(w.config.xaxis.decimalsInFloat)) {\n                  return val.toFixed(w.config.xaxis.decimalsInFloat);\n                } else {\n                  var diff = w.globals.maxX - w.globals.minX;\n\n                  if (diff > 0 && diff < 100) {\n                    return val.toFixed(1);\n                  }\n\n                  return val.toFixed(0);\n                }\n              }\n\n              if (w.globals.isBarHorizontal) {\n                var range = w.globals.maxY - w.globals.minYArr;\n\n                if (range < 4) {\n                  return val.toFixed(1);\n                }\n              }\n\n              return val.toFixed(0);\n            }\n\n            return val;\n          };\n        }\n\n        if (typeof w.config.tooltip.x.formatter === 'function') {\n          w.globals.ttKeyFormatter = w.config.tooltip.x.formatter;\n        } else {\n          w.globals.ttKeyFormatter = w.globals.xLabelFormatter;\n        }\n\n        if (typeof w.config.xaxis.tooltip.formatter === 'function') {\n          w.globals.xaxisTooltipFormatter = w.config.xaxis.tooltip.formatter;\n        }\n\n        if (Array.isArray(w.config.tooltip.y)) {\n          w.globals.ttVal = w.config.tooltip.y;\n        } else {\n          if (w.config.tooltip.y.formatter !== undefined) {\n            w.globals.ttVal = w.config.tooltip.y;\n          }\n        }\n\n        if (w.config.tooltip.z.formatter !== undefined) {\n          w.globals.ttZFormatter = w.config.tooltip.z.formatter;\n        } // legend formatter - if user wants to append any global values of series to legend text\n\n\n        if (w.config.legend.formatter !== undefined) {\n          w.globals.legendFormatter = w.config.legend.formatter;\n        } // formatter function will always overwrite format property\n\n\n        w.config.yaxis.forEach(function (yaxe, i) {\n          if (yaxe.labels.formatter !== undefined) {\n            w.globals.yLabelFormatters[i] = yaxe.labels.formatter;\n          } else {\n            w.globals.yLabelFormatters[i] = function (val) {\n              if (!w.globals.xyCharts) return val;\n\n              if (Array.isArray(val)) {\n                return val.map(function (v) {\n                  return _this.defaultYFormatter(v, yaxe, i);\n                });\n              } else {\n                return _this.defaultYFormatter(val, yaxe, i);\n              }\n            };\n          }\n        });\n        return w.globals;\n      }\n    }, {\n      key: \"heatmapLabelFormatters\",\n      value: function heatmapLabelFormatters() {\n        var w = this.w;\n\n        if (w.config.chart.type === 'heatmap') {\n          w.globals.yAxisScale[0].result = w.globals.seriesNames.slice(); //  get the longest string from the labels array and also apply label formatter to it\n\n          var longest = w.globals.seriesNames.reduce(function (a, b) {\n            return a.length > b.length ? a : b;\n          }, 0);\n          w.globals.yAxisScale[0].niceMax = longest;\n          w.globals.yAxisScale[0].niceMin = longest;\n        }\n      }\n    }]);\n\n    return Formatters;\n  }();\n\n  var AxesUtils = /*#__PURE__*/function () {\n    function AxesUtils(ctx) {\n      _classCallCheck(this, AxesUtils);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    } // Based on the formatter function, get the label text and position\n\n\n    _createClass(AxesUtils, [{\n      key: \"getLabel\",\n      value: function getLabel(labels, timescaleLabels, x, i) {\n        var drawnLabels = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n        var fontSize = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '12px';\n        var w = this.w;\n        var rawLabel = typeof labels[i] === 'undefined' ? '' : labels[i];\n        var label = rawLabel;\n        var xlbFormatter = w.globals.xLabelFormatter;\n        var customFormatter = w.config.xaxis.labels.formatter;\n        var isBold = false;\n        var xFormat = new Formatters(this.ctx);\n        var timestamp = rawLabel;\n        label = xFormat.xLabelFormat(xlbFormatter, rawLabel, timestamp, {\n          i: i,\n          dateFormatter: new DateTime(this.ctx).formatDate,\n          w: w\n        });\n\n        if (customFormatter !== undefined) {\n          label = customFormatter(rawLabel, labels[i], {\n            i: i,\n            dateFormatter: new DateTime(this.ctx).formatDate,\n            w: w\n          });\n        }\n\n        var determineHighestUnit = function determineHighestUnit(unit) {\n          var highestUnit = null;\n          timescaleLabels.forEach(function (t) {\n            if (t.unit === 'month') {\n              highestUnit = 'year';\n            } else if (t.unit === 'day') {\n              highestUnit = 'month';\n            } else if (t.unit === 'hour') {\n              highestUnit = 'day';\n            } else if (t.unit === 'minute') {\n              highestUnit = 'hour';\n            }\n          });\n          return highestUnit === unit;\n        };\n\n        if (timescaleLabels.length > 0) {\n          isBold = determineHighestUnit(timescaleLabels[i].unit);\n          x = timescaleLabels[i].position;\n          label = timescaleLabels[i].value;\n        } else {\n          if (w.config.xaxis.type === 'datetime' && customFormatter === undefined) {\n            label = '';\n          }\n        }\n\n        if (typeof label === 'undefined') label = '';\n        label = Array.isArray(label) ? label : label.toString();\n        var graphics = new Graphics(this.ctx);\n        var textRect = {};\n\n        if (w.globals.rotateXLabels) {\n          textRect = graphics.getTextRects(label, parseInt(fontSize, 10), null, \"rotate(\".concat(w.config.xaxis.labels.rotate, \" 0 0)\"), false);\n        } else {\n          textRect = graphics.getTextRects(label, parseInt(fontSize, 10));\n        }\n\n        var allowDuplicatesInTimeScale = !w.config.xaxis.labels.showDuplicates && this.ctx.timeScale;\n\n        if (!Array.isArray(label) && (label.indexOf('NaN') === 0 || label.toLowerCase().indexOf('invalid') === 0 || label.toLowerCase().indexOf('infinity') >= 0 || drawnLabels.indexOf(label) >= 0 && allowDuplicatesInTimeScale)) {\n          label = '';\n        }\n\n        return {\n          x: x,\n          text: label,\n          textRect: textRect,\n          isBold: isBold\n        };\n      }\n    }, {\n      key: \"checkLabelBasedOnTickamount\",\n      value: function checkLabelBasedOnTickamount(i, label, labelsLen) {\n        var w = this.w;\n        var ticks = w.config.xaxis.tickAmount;\n        if (ticks === 'dataPoints') ticks = Math.round(w.globals.gridWidth / 120);\n        if (ticks > labelsLen) return label;\n        var tickMultiple = Math.round(labelsLen / (ticks + 1));\n\n        if (i % tickMultiple === 0) {\n          return label;\n        } else {\n          label.text = '';\n        }\n\n        return label;\n      }\n    }, {\n      key: \"checkForOverflowingLabels\",\n      value: function checkForOverflowingLabels(i, label, labelsLen, drawnLabels, drawnLabelsRects) {\n        var w = this.w;\n\n        if (i === 0) {\n          // check if first label is being truncated\n          if (w.globals.skipFirstTimelinelabel) {\n            label.text = '';\n          }\n        }\n\n        if (i === labelsLen - 1) {\n          // check if last label is being truncated\n          if (w.globals.skipLastTimelinelabel) {\n            label.text = '';\n          }\n        }\n\n        if (w.config.xaxis.labels.hideOverlappingLabels && drawnLabels.length > 0) {\n          var prev = drawnLabelsRects[drawnLabelsRects.length - 1];\n\n          if (label.x < prev.textRect.width / (w.globals.rotateXLabels ? Math.abs(w.config.xaxis.labels.rotate) / 12 : 1.01) + prev.x) {\n            label.text = '';\n          }\n        }\n\n        return label;\n      }\n    }, {\n      key: \"checkForReversedLabels\",\n      value: function checkForReversedLabels(i, labels) {\n        var w = this.w;\n\n        if (w.config.yaxis[i] && w.config.yaxis[i].reversed) {\n          labels.reverse();\n        }\n\n        return labels;\n      }\n    }, {\n      key: \"isYAxisHidden\",\n      value: function isYAxisHidden(index) {\n        var w = this.w;\n        var coreUtils = new CoreUtils(this.ctx);\n        return !w.config.yaxis[index].show || !w.config.yaxis[index].showForNullSeries && coreUtils.isSeriesNull(index) && w.globals.collapsedSeriesIndices.indexOf(index) === -1;\n      } // get the label color for y-axis\n      // realIndex is the actual series index, while i is the tick Index\n\n    }, {\n      key: \"getYAxisForeColor\",\n      value: function getYAxisForeColor(yColors, realIndex) {\n        var w = this.w;\n\n        if (Array.isArray(yColors) && w.globals.yAxisScale[realIndex]) {\n          this.ctx.theme.pushExtraColors(yColors, w.globals.yAxisScale[realIndex].result.length, false);\n        }\n\n        return yColors;\n      }\n    }, {\n      key: \"drawYAxisTicks\",\n      value: function drawYAxisTicks(x, tickAmount, axisBorder, axisTicks, realIndex, labelsDivider, elYaxis) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx); // initial label position = 0;\n\n        var t = w.globals.translateY;\n\n        if (axisTicks.show && tickAmount > 0) {\n          if (w.config.yaxis[realIndex].opposite === true) x = x + axisTicks.width;\n\n          for (var i = tickAmount; i >= 0; i--) {\n            var tY = t + tickAmount / 10 + w.config.yaxis[realIndex].labels.offsetY - 1;\n\n            if (w.globals.isBarHorizontal) {\n              tY = labelsDivider * i;\n            }\n\n            if (w.config.chart.type === 'heatmap') {\n              tY = tY + labelsDivider / 2;\n            }\n\n            var elTick = graphics.drawLine(x + axisBorder.offsetX - axisTicks.width + axisTicks.offsetX, tY + axisTicks.offsetY, x + axisBorder.offsetX + axisTicks.offsetX, tY + axisTicks.offsetY, axisTicks.color);\n            elYaxis.add(elTick);\n            t = t + labelsDivider;\n          }\n        }\n      }\n    }]);\n\n    return AxesUtils;\n  }();\n\n  var Exports = /*#__PURE__*/function () {\n    function Exports(ctx) {\n      _classCallCheck(this, Exports);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Exports, [{\n      key: \"scaleSvgNode\",\n      value: function scaleSvgNode(svg, scale) {\n        // get current both width and height of the svg\n        var svgWidth = parseFloat(svg.getAttributeNS(null, 'width'));\n        var svgHeight = parseFloat(svg.getAttributeNS(null, 'height')); // set new width and height based on the scale\n\n        svg.setAttributeNS(null, 'width', svgWidth * scale);\n        svg.setAttributeNS(null, 'height', svgHeight * scale);\n        svg.setAttributeNS(null, 'viewBox', '0 0 ' + svgWidth + ' ' + svgHeight);\n      }\n    }, {\n      key: \"fixSvgStringForIe11\",\n      value: function fixSvgStringForIe11(svgData) {\n        // IE11 generates broken SVG that we have to fix by using regex\n        if (!Utils$1.isIE11()) {\n          // not IE11 - noop\n          return svgData.replace(/&nbsp;/g, '&#160;');\n        } // replace second occurrence of \"xmlns\" attribute with \"xmlns:xlink\" with correct url + add xmlns:svgjs\n\n\n        var nXmlnsSeen = 0;\n        var result = svgData.replace(/xmlns=\"http:\\/\\/www.w3.org\\/2000\\/svg\"/g, function (match) {\n          nXmlnsSeen++;\n          return nXmlnsSeen === 2 ? 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:svgjs=\"http://svgjs.dev\"' : match;\n        }); // remove the invalid empty namespace declarations\n\n        result = result.replace(/xmlns:NS\\d+=\"\"/g, ''); // remove these broken namespaces from attributes\n\n        result = result.replace(/NS\\d+:(\\w+:\\w+=\")/g, '$1');\n        return result;\n      }\n    }, {\n      key: \"getSvgString\",\n      value: function getSvgString(scale) {\n        var svgString = this.w.globals.dom.Paper.svg(); // in case the scale is different than 1, the svg needs to be rescaled\n\n        if (scale !== 1) {\n          // clone the svg node so it remains intact in the UI\n          var svgNode = this.w.globals.dom.Paper.node.cloneNode(true); // scale the image\n\n          this.scaleSvgNode(svgNode, scale); // get the string representation of the svgNode\n\n          svgString = new XMLSerializer().serializeToString(svgNode);\n        }\n\n        return this.fixSvgStringForIe11(svgString);\n      }\n    }, {\n      key: \"cleanup\",\n      value: function cleanup() {\n        var w = this.w; // hide some elements to avoid printing them on exported svg\n\n        var xcrosshairs = w.globals.dom.baseEl.getElementsByClassName('apexcharts-xcrosshairs');\n        var ycrosshairs = w.globals.dom.baseEl.getElementsByClassName('apexcharts-ycrosshairs');\n        var zoomSelectionRects = w.globals.dom.baseEl.querySelectorAll('.apexcharts-zoom-rect, .apexcharts-selection-rect');\n        Array.prototype.forEach.call(zoomSelectionRects, function (z) {\n          z.setAttribute('width', 0);\n        });\n\n        if (xcrosshairs && xcrosshairs[0]) {\n          xcrosshairs[0].setAttribute('x', -500);\n          xcrosshairs[0].setAttribute('x1', -500);\n          xcrosshairs[0].setAttribute('x2', -500);\n        }\n\n        if (ycrosshairs && ycrosshairs[0]) {\n          ycrosshairs[0].setAttribute('y', -100);\n          ycrosshairs[0].setAttribute('y1', -100);\n          ycrosshairs[0].setAttribute('y2', -100);\n        }\n      }\n    }, {\n      key: \"svgUrl\",\n      value: function svgUrl() {\n        this.cleanup();\n        var svgData = this.getSvgString();\n        var svgBlob = new Blob([svgData], {\n          type: 'image/svg+xml;charset=utf-8'\n        });\n        return URL.createObjectURL(svgBlob);\n      }\n    }, {\n      key: \"dataURI\",\n      value: function dataURI(options) {\n        var _this = this;\n\n        return new Promise(function (resolve) {\n          var w = _this.w;\n          var scale = options ? options.scale || options.width / w.globals.svgWidth : 1;\n\n          _this.cleanup();\n\n          var canvas = document.createElement('canvas');\n          canvas.width = w.globals.svgWidth * scale;\n          canvas.height = parseInt(w.globals.dom.elWrap.style.height, 10) * scale; // because of resizeNonAxisCharts\n\n          var canvasBg = w.config.chart.background === 'transparent' ? '#fff' : w.config.chart.background;\n          var ctx = canvas.getContext('2d');\n          ctx.fillStyle = canvasBg;\n          ctx.fillRect(0, 0, canvas.width * scale, canvas.height * scale);\n\n          var svgData = _this.getSvgString(scale);\n\n          if (window.canvg && Utils$1.isIE11()) {\n            // use canvg as a polyfill to workaround ie11 considering a canvas with loaded svg 'unsafe'\n            // without ignoreClear we lose our background color; without ignoreDimensions some grid lines become invisible\n            var v = window.canvg.Canvg.fromString(ctx, svgData, {\n              ignoreClear: true,\n              ignoreDimensions: true\n            }); // render the svg to canvas\n\n            v.start();\n            var blob = canvas.msToBlob(); // dispose - missing this will cause a memory leak\n\n            v.stop();\n            resolve({\n              blob: blob\n            });\n          } else {\n            var svgUrl = 'data:image/svg+xml,' + encodeURIComponent(svgData);\n            var img = new Image();\n            img.crossOrigin = 'anonymous';\n\n            img.onload = function () {\n              ctx.drawImage(img, 0, 0);\n\n              if (canvas.msToBlob) {\n                // IE and Edge can't navigate to data urls, so we return the blob instead\n                var _blob = canvas.msToBlob();\n\n                resolve({\n                  blob: _blob\n                });\n              } else {\n                var imgURI = canvas.toDataURL('image/png');\n                resolve({\n                  imgURI: imgURI\n                });\n              }\n            };\n\n            img.src = svgUrl;\n          }\n        });\n      }\n    }, {\n      key: \"exportToSVG\",\n      value: function exportToSVG() {\n        this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, '.svg');\n      }\n    }, {\n      key: \"exportToPng\",\n      value: function exportToPng() {\n        var _this2 = this;\n\n        this.dataURI().then(function (_ref) {\n          var imgURI = _ref.imgURI,\n              blob = _ref.blob;\n\n          if (blob) {\n            navigator.msSaveOrOpenBlob(blob, _this2.w.globals.chartID + '.png');\n          } else {\n            _this2.triggerDownload(imgURI, _this2.w.config.chart.toolbar.export.png.filename, '.png');\n          }\n        });\n      }\n    }, {\n      key: \"exportToCSV\",\n      value: function exportToCSV(_ref2) {\n        var _this3 = this;\n\n        var series = _ref2.series,\n            columnDelimiter = _ref2.columnDelimiter,\n            _ref2$lineDelimiter = _ref2.lineDelimiter,\n            lineDelimiter = _ref2$lineDelimiter === void 0 ? '\\n' : _ref2$lineDelimiter;\n        var w = this.w;\n        var columns = [];\n        var rows = [];\n        var result = '';\n        var universalBOM = \"\\uFEFF\";\n\n        var isTimeStamp = function isTimeStamp(num) {\n          return w.config.xaxis.type === 'datetime' && String(num).length >= 10;\n        };\n\n        var dataFormat = new Data(this.ctx);\n        var axesUtils = new AxesUtils(this.ctx);\n\n        var getCat = function getCat(i) {\n          var cat = ''; // pie / donut/ radial\n\n          if (!w.globals.axisCharts) {\n            cat = w.config.labels[i];\n          } else {\n            // xy charts\n            // non datetime\n            if (w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) {\n              if (w.globals.isBarHorizontal) {\n                var lbFormatter = w.globals.yLabelFormatters[0];\n                var sr = new Series(_this3.ctx);\n                var activeSeries = sr.getActiveConfigSeriesIndex();\n                cat = lbFormatter(w.globals.labels[i], {\n                  seriesIndex: activeSeries,\n                  dataPointIndex: i,\n                  w: w\n                });\n              } else {\n                cat = axesUtils.getLabel(w.globals.labels, w.globals.timescaleLabels, 0, i).text;\n              }\n            } // datetime, but labels specified in categories or labels\n\n\n            if (w.config.xaxis.type === 'datetime') {\n              if (w.config.xaxis.categories.length) {\n                cat = w.config.xaxis.categories[i];\n              } else if (w.config.labels.length) {\n                cat = w.config.labels[i];\n              }\n            }\n          }\n\n          if (Array.isArray(cat)) {\n            cat = cat.join(' ');\n          }\n\n          return Utils$1.isNumber(cat) ? cat : cat.split(columnDelimiter).join('');\n        };\n\n        var handleAxisRowsColumns = function handleAxisRowsColumns(s, sI) {\n          if (columns.length && sI === 0) {\n            rows.push(columns.join(columnDelimiter));\n          }\n\n          if (s.data && s.data.length) {\n            for (var i = 0; i < s.data.length; i++) {\n              columns = [];\n              var cat = getCat(i);\n\n              if (!cat) {\n                if (dataFormat.isFormatXY()) {\n                  cat = series[sI].data[i].x;\n                } else if (dataFormat.isFormat2DArray()) {\n                  cat = series[sI].data[i] ? series[sI].data[i][0] : '';\n                }\n              }\n\n              if (sI === 0) {\n                columns.push(isTimeStamp(cat) ? w.config.chart.toolbar.export.csv.dateFormatter(cat) : Utils$1.isNumber(cat) ? cat : cat.split(columnDelimiter).join(''));\n\n                for (var ci = 0; ci < w.globals.series.length; ci++) {\n                  columns.push(w.globals.series[ci][i]);\n                }\n              }\n\n              if (w.config.chart.type === 'candlestick' || s.type && s.type === 'candlestick') {\n                columns.pop();\n                columns.push(w.globals.seriesCandleO[sI][i]);\n                columns.push(w.globals.seriesCandleH[sI][i]);\n                columns.push(w.globals.seriesCandleL[sI][i]);\n                columns.push(w.globals.seriesCandleC[sI][i]);\n              }\n\n              if (w.config.chart.type === 'boxPlot' || s.type && s.type === 'boxPlot') {\n                columns.pop();\n                columns.push(w.globals.seriesCandleO[sI][i]);\n                columns.push(w.globals.seriesCandleH[sI][i]);\n                columns.push(w.globals.seriesCandleM[sI][i]);\n                columns.push(w.globals.seriesCandleL[sI][i]);\n                columns.push(w.globals.seriesCandleC[sI][i]);\n              }\n\n              if (w.config.chart.type === 'rangeBar') {\n                columns.pop();\n                columns.push(w.globals.seriesRangeStart[sI][i]);\n                columns.push(w.globals.seriesRangeEnd[sI][i]);\n              }\n\n              if (columns.length) {\n                rows.push(columns.join(columnDelimiter));\n              }\n            }\n          }\n        };\n\n        columns.push(w.config.chart.toolbar.export.csv.headerCategory);\n        series.map(function (s, sI) {\n          var sname = s.name ? s.name : \"series-\".concat(sI);\n\n          if (w.globals.axisCharts) {\n            columns.push(sname.split(columnDelimiter).join('') ? sname.split(columnDelimiter).join('') : \"series-\".concat(sI));\n          }\n        });\n\n        if (!w.globals.axisCharts) {\n          columns.push(w.config.chart.toolbar.export.csv.headerValue);\n          rows.push(columns.join(columnDelimiter));\n        }\n\n        series.map(function (s, sI) {\n          if (w.globals.axisCharts) {\n            handleAxisRowsColumns(s, sI);\n          } else {\n            columns = [];\n            columns.push(w.globals.labels[sI].split(columnDelimiter).join(''));\n            columns.push(w.globals.series[sI]);\n            rows.push(columns.join(columnDelimiter));\n          }\n        });\n        result += rows.join(lineDelimiter);\n        this.triggerDownload('data:text/csv; charset=utf-8,' + encodeURIComponent(universalBOM + result), w.config.chart.toolbar.export.csv.filename, '.csv');\n      }\n    }, {\n      key: \"triggerDownload\",\n      value: function triggerDownload(href, filename, ext) {\n        var downloadLink = document.createElement('a');\n        downloadLink.href = href;\n        downloadLink.download = (filename ? filename : this.w.globals.chartID) + ext;\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n      }\n    }]);\n\n    return Exports;\n  }();\n\n  /**\n   * ApexCharts XAxis Class for drawing X-Axis.\n   *\n   * @module XAxis\n   **/\n\n  var XAxis = /*#__PURE__*/function () {\n    function XAxis(ctx) {\n      _classCallCheck(this, XAxis);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.axesUtils = new AxesUtils(ctx);\n      this.xaxisLabels = w.globals.labels.slice();\n\n      if (w.globals.timescaleLabels.length > 0 && !w.globals.isBarHorizontal) {\n        //  timeline labels are there and chart is not rangeabr timeline\n        this.xaxisLabels = w.globals.timescaleLabels.slice();\n      }\n\n      if (w.config.xaxis.overwriteCategories) {\n        this.xaxisLabels = w.config.xaxis.overwriteCategories;\n      }\n\n      this.drawnLabels = [];\n      this.drawnLabelsRects = [];\n\n      if (w.config.xaxis.position === 'top') {\n        this.offY = 0;\n      } else {\n        this.offY = w.globals.gridHeight + 1;\n      }\n\n      this.offY = this.offY + w.config.xaxis.axisBorder.offsetY;\n      this.isCategoryBarHorizontal = w.config.chart.type === 'bar' && w.config.plotOptions.bar.horizontal;\n      this.xaxisFontSize = w.config.xaxis.labels.style.fontSize;\n      this.xaxisFontFamily = w.config.xaxis.labels.style.fontFamily;\n      this.xaxisForeColors = w.config.xaxis.labels.style.colors;\n      this.xaxisBorderWidth = w.config.xaxis.axisBorder.width;\n\n      if (this.isCategoryBarHorizontal) {\n        this.xaxisBorderWidth = w.config.yaxis[0].axisBorder.width.toString();\n      }\n\n      if (this.xaxisBorderWidth.indexOf('%') > -1) {\n        this.xaxisBorderWidth = w.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100;\n      } else {\n        this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10);\n      }\n\n      this.xaxisBorderHeight = w.config.xaxis.axisBorder.height; // For bars, we will only consider single y xais,\n      // as we are not providing multiple yaxis for bar charts\n\n      this.yaxis = w.config.yaxis[0];\n    }\n\n    _createClass(XAxis, [{\n      key: \"drawXaxis\",\n      value: function drawXaxis() {\n        var _this = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var elXaxis = graphics.group({\n          class: 'apexcharts-xaxis',\n          transform: \"translate(\".concat(w.config.xaxis.offsetX, \", \").concat(w.config.xaxis.offsetY, \")\")\n        });\n        var elXaxisTexts = graphics.group({\n          class: 'apexcharts-xaxis-texts-g',\n          transform: \"translate(\".concat(w.globals.translateXAxisX, \", \").concat(w.globals.translateXAxisY, \")\")\n        });\n        elXaxis.add(elXaxisTexts);\n        var colWidth; // initial x Position (keep adding column width in the loop)\n\n        var xPos = w.globals.padHorizontal;\n        var labels = [];\n\n        for (var i = 0; i < this.xaxisLabels.length; i++) {\n          labels.push(this.xaxisLabels[i]);\n        }\n\n        var labelsLen = labels.length;\n\n        if (w.globals.isXNumeric) {\n          var len = labelsLen > 1 ? labelsLen - 1 : labelsLen;\n          colWidth = w.globals.gridWidth / len;\n          xPos = xPos + colWidth / 2 + w.config.xaxis.labels.offsetX;\n        } else {\n          colWidth = w.globals.gridWidth / labels.length;\n          xPos = xPos + colWidth + w.config.xaxis.labels.offsetX;\n        }\n\n        var _loop = function _loop(_i) {\n          var x = xPos - colWidth / 2 + w.config.xaxis.labels.offsetX;\n\n          if (_i === 0 && labelsLen === 1 && colWidth / 2 === xPos && w.globals.dataPoints === 1) {\n            // single datapoint\n            x = w.globals.gridWidth / 2;\n          }\n\n          var label = _this.axesUtils.getLabel(labels, w.globals.timescaleLabels, x, _i, _this.drawnLabels, _this.xaxisFontSize);\n\n          var offsetYCorrection = 28;\n\n          if (w.globals.rotateXLabels) {\n            offsetYCorrection = 22;\n          }\n\n          var isCategoryTickAmounts = typeof w.config.xaxis.tickAmount !== 'undefined' && w.config.xaxis.tickAmount !== 'dataPoints' && w.config.xaxis.type !== 'datetime';\n\n          if (isCategoryTickAmounts) {\n            label = _this.axesUtils.checkLabelBasedOnTickamount(_i, label, labelsLen);\n          } else {\n            label = _this.axesUtils.checkForOverflowingLabels(_i, label, labelsLen, _this.drawnLabels, _this.drawnLabelsRects);\n          }\n\n          var getCatForeColor = function getCatForeColor() {\n            return w.config.xaxis.convertedCatToNumeric ? _this.xaxisForeColors[w.globals.minX + _i - 1] : _this.xaxisForeColors[_i];\n          };\n\n          if (label.text) {\n            w.globals.xaxisLabelsCount++;\n          }\n\n          if (w.config.xaxis.labels.show) {\n            var elText = graphics.drawText({\n              x: label.x,\n              y: _this.offY + w.config.xaxis.labels.offsetY + offsetYCorrection - (w.config.xaxis.position === 'top' ? w.globals.xAxisHeight + w.config.xaxis.axisTicks.height - 2 : 0),\n              text: label.text,\n              textAnchor: 'middle',\n              fontWeight: label.isBold ? 600 : w.config.xaxis.labels.style.fontWeight,\n              fontSize: _this.xaxisFontSize,\n              fontFamily: _this.xaxisFontFamily,\n              foreColor: Array.isArray(_this.xaxisForeColors) ? getCatForeColor() : _this.xaxisForeColors,\n              isPlainText: false,\n              cssClass: 'apexcharts-xaxis-label ' + w.config.xaxis.labels.style.cssClass\n            });\n            elXaxisTexts.add(elText);\n            var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n            elTooltipTitle.textContent = Array.isArray(label.text) ? label.text.join(' ') : label.text;\n            elText.node.appendChild(elTooltipTitle);\n\n            if (label.text !== '') {\n              _this.drawnLabels.push(label.text);\n\n              _this.drawnLabelsRects.push(label);\n            }\n          }\n\n          xPos = xPos + colWidth;\n        };\n\n        for (var _i = 0; _i <= labelsLen - 1; _i++) {\n          _loop(_i);\n        }\n\n        if (w.config.xaxis.title.text !== undefined) {\n          var elXaxisTitle = graphics.group({\n            class: 'apexcharts-xaxis-title'\n          });\n          var elXAxisTitleText = graphics.drawText({\n            x: w.globals.gridWidth / 2 + w.config.xaxis.title.offsetX,\n            y: this.offY + parseFloat(this.xaxisFontSize) + w.globals.xAxisLabelsHeight + w.config.xaxis.title.offsetY,\n            text: w.config.xaxis.title.text,\n            textAnchor: 'middle',\n            fontSize: w.config.xaxis.title.style.fontSize,\n            fontFamily: w.config.xaxis.title.style.fontFamily,\n            fontWeight: w.config.xaxis.title.style.fontWeight,\n            foreColor: w.config.xaxis.title.style.color,\n            cssClass: 'apexcharts-xaxis-title-text ' + w.config.xaxis.title.style.cssClass\n          });\n          elXaxisTitle.add(elXAxisTitleText);\n          elXaxis.add(elXaxisTitle);\n        }\n\n        if (w.config.xaxis.axisBorder.show) {\n          var offX = w.globals.barPadForNumericAxis;\n          var elHorzLine = graphics.drawLine(w.globals.padHorizontal + w.config.xaxis.axisBorder.offsetX - offX, this.offY, this.xaxisBorderWidth + offX, this.offY, w.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);\n          elXaxis.add(elHorzLine);\n        }\n\n        return elXaxis;\n      } // this actually becomes the vertical axis (for bar charts)\n\n    }, {\n      key: \"drawXaxisInversed\",\n      value: function drawXaxisInversed(realIndex) {\n        var _this2 = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var translateYAxisX = w.config.yaxis[0].opposite ? w.globals.translateYAxisX[realIndex] : 0;\n        var elYaxis = graphics.group({\n          class: 'apexcharts-yaxis apexcharts-xaxis-inversed',\n          rel: realIndex\n        });\n        var elYaxisTexts = graphics.group({\n          class: 'apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g',\n          transform: 'translate(' + translateYAxisX + ', 0)'\n        });\n        elYaxis.add(elYaxisTexts);\n        var colHeight; // initial x Position (keep adding column width in the loop)\n\n        var yPos;\n        var labels = [];\n\n        if (w.config.yaxis[realIndex].show) {\n          for (var i = 0; i < this.xaxisLabels.length; i++) {\n            labels.push(this.xaxisLabels[i]);\n          }\n        }\n\n        colHeight = w.globals.gridHeight / labels.length;\n        yPos = -(colHeight / 2.2);\n        var lbFormatter = w.globals.yLabelFormatters[0];\n        var ylabels = w.config.yaxis[0].labels;\n\n        if (ylabels.show) {\n          var _loop2 = function _loop2(_i2) {\n            var label = typeof labels[_i2] === 'undefined' ? '' : labels[_i2];\n            label = lbFormatter(label, {\n              seriesIndex: realIndex,\n              dataPointIndex: _i2,\n              w: w\n            });\n\n            var yColors = _this2.axesUtils.getYAxisForeColor(ylabels.style.colors, realIndex);\n\n            var getForeColor = function getForeColor() {\n              return Array.isArray(yColors) ? yColors[_i2] : yColors;\n            };\n\n            var multiY = 0;\n\n            if (Array.isArray(label)) {\n              multiY = label.length / 2 * parseInt(ylabels.style.fontSize, 10);\n            }\n\n            var elLabel = graphics.drawText({\n              x: ylabels.offsetX - 15,\n              y: yPos + colHeight + ylabels.offsetY - multiY,\n              text: label,\n              textAnchor: _this2.yaxis.opposite ? 'start' : 'end',\n              foreColor: getForeColor(),\n              fontSize: ylabels.style.fontSize,\n              fontFamily: ylabels.style.fontFamily,\n              fontWeight: ylabels.style.fontWeight,\n              isPlainText: false,\n              cssClass: 'apexcharts-yaxis-label ' + ylabels.style.cssClass\n            });\n            elYaxisTexts.add(elLabel);\n            var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n            elTooltipTitle.textContent = Array.isArray(label) ? label.join(' ') : label;\n            elLabel.node.appendChild(elTooltipTitle);\n\n            if (w.config.yaxis[realIndex].labels.rotate !== 0) {\n              var labelRotatingCenter = graphics.rotateAroundCenter(elLabel.node);\n              elLabel.node.setAttribute('transform', \"rotate(\".concat(w.config.yaxis[realIndex].labels.rotate, \" 0 \").concat(labelRotatingCenter.y, \")\"));\n            }\n\n            yPos = yPos + colHeight;\n          };\n\n          for (var _i2 = 0; _i2 <= labels.length - 1; _i2++) {\n            _loop2(_i2);\n          }\n        }\n\n        if (w.config.yaxis[0].title.text !== undefined) {\n          var elXaxisTitle = graphics.group({\n            class: 'apexcharts-yaxis-title apexcharts-xaxis-title-inversed',\n            transform: 'translate(' + translateYAxisX + ', 0)'\n          });\n          var elXAxisTitleText = graphics.drawText({\n            x: 0,\n            y: w.globals.gridHeight / 2,\n            text: w.config.yaxis[0].title.text,\n            textAnchor: 'middle',\n            foreColor: w.config.yaxis[0].title.style.color,\n            fontSize: w.config.yaxis[0].title.style.fontSize,\n            fontWeight: w.config.yaxis[0].title.style.fontWeight,\n            fontFamily: w.config.yaxis[0].title.style.fontFamily,\n            cssClass: 'apexcharts-yaxis-title-text ' + w.config.yaxis[0].title.style.cssClass\n          });\n          elXaxisTitle.add(elXAxisTitleText);\n          elYaxis.add(elXaxisTitle);\n        }\n\n        var offX = 0;\n\n        if (this.isCategoryBarHorizontal && w.config.yaxis[0].opposite) {\n          offX = w.globals.gridWidth;\n        }\n\n        var axisBorder = w.config.xaxis.axisBorder;\n\n        if (axisBorder.show) {\n          var elVerticalLine = graphics.drawLine(w.globals.padHorizontal + axisBorder.offsetX + offX, 1 + axisBorder.offsetY, w.globals.padHorizontal + axisBorder.offsetX + offX, w.globals.gridHeight + axisBorder.offsetY, axisBorder.color, 0);\n          elYaxis.add(elVerticalLine);\n        }\n\n        if (w.config.yaxis[0].axisTicks.show) {\n          this.axesUtils.drawYAxisTicks(offX, labels.length, w.config.yaxis[0].axisBorder, w.config.yaxis[0].axisTicks, 0, colHeight, elYaxis);\n        }\n\n        return elYaxis;\n      }\n    }, {\n      key: \"drawXaxisTicks\",\n      value: function drawXaxisTicks(x1, appendToElement) {\n        var w = this.w;\n        var x2 = x1;\n        if (x1 < 0 || x1 - 2 > w.globals.gridWidth) return;\n        var y1 = this.offY + w.config.xaxis.axisTicks.offsetY;\n        var y2 = y1 + w.config.xaxis.axisTicks.height;\n\n        if (w.config.xaxis.position === 'top') {\n          y2 = y1 - w.config.xaxis.axisTicks.height;\n        }\n\n        if (w.config.xaxis.axisTicks.show) {\n          var graphics = new Graphics(this.ctx);\n          var line = graphics.drawLine(x1 + w.config.xaxis.axisTicks.offsetX, y1 + w.config.xaxis.offsetY, x2 + w.config.xaxis.axisTicks.offsetX, y2 + w.config.xaxis.offsetY, w.config.xaxis.axisTicks.color); // we are not returning anything, but appending directly to the element passed in param\n\n          appendToElement.add(line);\n          line.node.classList.add('apexcharts-xaxis-tick');\n        }\n      }\n    }, {\n      key: \"getXAxisTicksPositions\",\n      value: function getXAxisTicksPositions() {\n        var w = this.w;\n        var xAxisTicksPositions = [];\n        var xCount = this.xaxisLabels.length;\n        var x1 = w.globals.padHorizontal;\n\n        if (w.globals.timescaleLabels.length > 0) {\n          for (var i = 0; i < xCount; i++) {\n            x1 = this.xaxisLabels[i].position;\n            xAxisTicksPositions.push(x1);\n          }\n        } else {\n          var xCountForCategoryCharts = xCount;\n\n          for (var _i3 = 0; _i3 < xCountForCategoryCharts; _i3++) {\n            var x1Count = xCountForCategoryCharts;\n\n            if (w.globals.isXNumeric && w.config.chart.type !== 'bar') {\n              x1Count -= 1;\n            }\n\n            x1 = x1 + w.globals.gridWidth / x1Count;\n            xAxisTicksPositions.push(x1);\n          }\n        }\n\n        return xAxisTicksPositions;\n      } // to rotate x-axis labels or to put ... for longer text in xaxis\n\n    }, {\n      key: \"xAxisLabelCorrections\",\n      value: function xAxisLabelCorrections() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var xAxis = w.globals.dom.baseEl.querySelector('.apexcharts-xaxis-texts-g');\n        var xAxisTexts = w.globals.dom.baseEl.querySelectorAll('.apexcharts-xaxis-texts-g text');\n        var yAxisTextsInversed = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxis-inversed text');\n        var xAxisTextsInversed = w.globals.dom.baseEl.querySelectorAll('.apexcharts-xaxis-inversed-texts-g text tspan');\n\n        if (w.globals.rotateXLabels || w.config.xaxis.labels.rotateAlways) {\n          for (var xat = 0; xat < xAxisTexts.length; xat++) {\n            var textRotatingCenter = graphics.rotateAroundCenter(xAxisTexts[xat]);\n            textRotatingCenter.y = textRotatingCenter.y - 1; // + tickWidth/4;\n\n            textRotatingCenter.x = textRotatingCenter.x + 1;\n            xAxisTexts[xat].setAttribute('transform', \"rotate(\".concat(w.config.xaxis.labels.rotate, \" \").concat(textRotatingCenter.x, \" \").concat(textRotatingCenter.y, \")\"));\n            xAxisTexts[xat].setAttribute('text-anchor', \"end\");\n            var offsetHeight = 10;\n            xAxis.setAttribute('transform', \"translate(0, \".concat(-offsetHeight, \")\"));\n            var tSpan = xAxisTexts[xat].childNodes;\n\n            if (w.config.xaxis.labels.trim) {\n              Array.prototype.forEach.call(tSpan, function (ts) {\n                graphics.placeTextWithEllipsis(ts, ts.textContent, w.globals.xAxisLabelsHeight - (w.config.legend.position === 'bottom' ? 20 : 10));\n              });\n            }\n          }\n        } else {\n          (function () {\n            var width = w.globals.gridWidth / (w.globals.labels.length + 1);\n\n            for (var _xat = 0; _xat < xAxisTexts.length; _xat++) {\n              var _tSpan = xAxisTexts[_xat].childNodes;\n\n              if (w.config.xaxis.labels.trim && w.config.xaxis.type !== 'datetime') {\n                Array.prototype.forEach.call(_tSpan, function (ts) {\n                  graphics.placeTextWithEllipsis(ts, ts.textContent, width);\n                });\n              }\n            }\n          })();\n        }\n\n        if (yAxisTextsInversed.length > 0) {\n          // truncate rotated y axis in bar chart (x axis)\n          var firstLabelPosX = yAxisTextsInversed[yAxisTextsInversed.length - 1].getBBox();\n          var lastLabelPosX = yAxisTextsInversed[0].getBBox();\n\n          if (firstLabelPosX.x < -20) {\n            yAxisTextsInversed[yAxisTextsInversed.length - 1].parentNode.removeChild(yAxisTextsInversed[yAxisTextsInversed.length - 1]);\n          }\n\n          if (lastLabelPosX.x + lastLabelPosX.width > w.globals.gridWidth && !w.globals.isBarHorizontal) {\n            yAxisTextsInversed[0].parentNode.removeChild(yAxisTextsInversed[0]);\n          } // truncate rotated x axis in bar chart (y axis)\n\n\n          for (var _xat2 = 0; _xat2 < xAxisTextsInversed.length; _xat2++) {\n            graphics.placeTextWithEllipsis(xAxisTextsInversed[_xat2], xAxisTextsInversed[_xat2].textContent, w.config.yaxis[0].labels.maxWidth - parseFloat(w.config.yaxis[0].title.style.fontSize) * 2 - 20);\n          }\n        }\n      } // renderXAxisBands() {\n      //   let w = this.w;\n      //   let plotBand = document.createElementNS(w.globals.SVGNS, 'rect')\n      //   w.globals.dom.elGraphical.add(plotBand)\n      // }\n\n    }]);\n\n    return XAxis;\n  }();\n\n  /**\n   * ApexCharts Grid Class for drawing Cartesian Grid.\n   *\n   * @module Grid\n   **/\n\n  var Grid = /*#__PURE__*/function () {\n    function Grid(ctx) {\n      _classCallCheck(this, Grid);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.xaxisLabels = w.globals.labels.slice();\n      this.axesUtils = new AxesUtils(ctx);\n      this.isRangeBar = w.globals.seriesRangeBar.length;\n\n      if (w.globals.timescaleLabels.length > 0) {\n        //  timescaleLabels labels are there\n        this.xaxisLabels = w.globals.timescaleLabels.slice();\n      }\n    } // when using sparklines or when showing no grid, we need to have a grid area which is reused at many places for other calculations as well\n\n\n    _createClass(Grid, [{\n      key: \"drawGridArea\",\n      value: function drawGridArea() {\n        var elGrid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n\n        if (elGrid === null) {\n          elGrid = graphics.group({\n            class: 'apexcharts-grid'\n          });\n        }\n\n        var elVerticalLine = graphics.drawLine(w.globals.padHorizontal, 1, w.globals.padHorizontal, w.globals.gridHeight, 'transparent');\n        var elHorzLine = graphics.drawLine(w.globals.padHorizontal, w.globals.gridHeight, w.globals.gridWidth, w.globals.gridHeight, 'transparent');\n        elGrid.add(elHorzLine);\n        elGrid.add(elVerticalLine);\n        return elGrid;\n      }\n    }, {\n      key: \"drawGrid\",\n      value: function drawGrid() {\n        var gl = this.w.globals;\n        var elgrid = null;\n\n        if (gl.axisCharts) {\n          // grid is drawn after xaxis and yaxis are drawn\n          elgrid = this.renderGrid();\n          this.drawGridArea(elgrid.el);\n        }\n\n        return elgrid;\n      } // This mask will clip off overflowing graphics from the drawable area\n\n    }, {\n      key: \"createGridMask\",\n      value: function createGridMask() {\n        var w = this.w;\n        var gl = w.globals;\n        var graphics = new Graphics(this.ctx);\n        var strokeSize = Array.isArray(w.config.stroke.width) ? 0 : w.config.stroke.width;\n\n        if (Array.isArray(w.config.stroke.width)) {\n          var strokeMaxSize = 0;\n          w.config.stroke.width.forEach(function (m) {\n            strokeMaxSize = Math.max(strokeMaxSize, m);\n          });\n          strokeSize = strokeMaxSize;\n        }\n\n        gl.dom.elGridRectMask = document.createElementNS(gl.SVGNS, 'clipPath');\n        gl.dom.elGridRectMask.setAttribute('id', \"gridRectMask\".concat(gl.cuid));\n        gl.dom.elGridRectMarkerMask = document.createElementNS(gl.SVGNS, 'clipPath');\n        gl.dom.elGridRectMarkerMask.setAttribute('id', \"gridRectMarkerMask\".concat(gl.cuid));\n        gl.dom.elForecastMask = document.createElementNS(gl.SVGNS, 'clipPath');\n        gl.dom.elForecastMask.setAttribute('id', \"forecastMask\".concat(gl.cuid));\n        gl.dom.elNonForecastMask = document.createElementNS(gl.SVGNS, 'clipPath');\n        gl.dom.elNonForecastMask.setAttribute('id', \"nonForecastMask\".concat(gl.cuid)); // let barHalfWidth = 0\n\n        var type = w.config.chart.type;\n        var hasBar = type === 'bar' || type === 'rangeBar' || type === 'candlestick' || type === 'boxPlot' || w.globals.comboBarCount > 0;\n        var barWidthLeft = 0;\n        var barWidthRight = 0;\n\n        if (hasBar && w.globals.isXNumeric && !w.globals.isBarHorizontal) {\n          barWidthLeft = w.config.grid.padding.left;\n          barWidthRight = w.config.grid.padding.right;\n\n          if (gl.barPadForNumericAxis > barWidthLeft) {\n            barWidthLeft = gl.barPadForNumericAxis;\n            barWidthRight = gl.barPadForNumericAxis;\n          }\n        }\n\n        gl.dom.elGridRect = graphics.drawRect(-strokeSize / 2 - barWidthLeft - 2, -strokeSize / 2, gl.gridWidth + strokeSize + barWidthRight + barWidthLeft + 4, gl.gridHeight + strokeSize, 0, '#fff');\n        var coreUtils = new CoreUtils(this);\n        coreUtils.getLargestMarkerSize();\n        var markerSize = w.globals.markers.largestSize + 1;\n        gl.dom.elGridRectMarker = graphics.drawRect(-markerSize * 2, -markerSize * 2, gl.gridWidth + markerSize * 4, gl.gridHeight + markerSize * 4, 0, '#fff');\n        gl.dom.elGridRectMask.appendChild(gl.dom.elGridRect.node);\n        gl.dom.elGridRectMarkerMask.appendChild(gl.dom.elGridRectMarker.node);\n        var defs = gl.dom.baseEl.querySelector('defs');\n        defs.appendChild(gl.dom.elGridRectMask);\n        defs.appendChild(gl.dom.elForecastMask);\n        defs.appendChild(gl.dom.elNonForecastMask);\n        defs.appendChild(gl.dom.elGridRectMarkerMask);\n      }\n    }, {\n      key: \"_drawGridLines\",\n      value: function _drawGridLines(_ref) {\n        var i = _ref.i,\n            x1 = _ref.x1,\n            y1 = _ref.y1,\n            x2 = _ref.x2,\n            y2 = _ref.y2,\n            xCount = _ref.xCount,\n            parent = _ref.parent;\n        var w = this.w;\n\n        var shouldDraw = function shouldDraw() {\n          if (i === 0 && w.globals.skipFirstTimelinelabel) {\n            return false;\n          }\n\n          if (i === xCount - 1 && w.globals.skipLastTimelinelabel && !w.config.xaxis.labels.formatter) {\n            return false;\n          }\n\n          if (w.config.chart.type === 'radar') {\n            return false;\n          }\n\n          return true;\n        };\n\n        if (shouldDraw()) {\n          if (w.config.grid.xaxis.lines.show) {\n            this._drawGridLine({\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              parent: parent\n            });\n          }\n\n          var xAxis = new XAxis(this.ctx);\n          xAxis.drawXaxisTicks(x1, this.elg);\n        }\n      }\n    }, {\n      key: \"_drawGridLine\",\n      value: function _drawGridLine(_ref2) {\n        var x1 = _ref2.x1,\n            y1 = _ref2.y1,\n            x2 = _ref2.x2,\n            y2 = _ref2.y2,\n            parent = _ref2.parent;\n        var w = this.w;\n        var isHorzLine = parent.node.classList.contains('apexcharts-gridlines-horizontal');\n        var strokeDashArray = w.config.grid.strokeDashArray;\n        var offX = w.globals.barPadForNumericAxis;\n        var graphics = new Graphics(this);\n        var line = graphics.drawLine(x1 - (isHorzLine ? offX : 0), y1, x2 + (isHorzLine ? offX : 0), y2, w.config.grid.borderColor, strokeDashArray);\n        line.node.classList.add('apexcharts-gridline');\n        parent.add(line);\n      }\n    }, {\n      key: \"_drawGridBandRect\",\n      value: function _drawGridBandRect(_ref3) {\n        var c = _ref3.c,\n            x1 = _ref3.x1,\n            y1 = _ref3.y1,\n            x2 = _ref3.x2,\n            y2 = _ref3.y2,\n            type = _ref3.type;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var offX = w.globals.barPadForNumericAxis;\n        if (type === 'column' && w.config.xaxis.type === 'datetime') return;\n        var color = w.config.grid[type].colors[c];\n        var rect = graphics.drawRect(x1 - (type === 'row' ? offX : 0), y1, x2 + (type === 'row' ? offX * 2 : 0), y2, 0, color, w.config.grid[type].opacity);\n        this.elg.add(rect);\n        rect.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n        rect.node.classList.add(\"apexcharts-grid-\".concat(type));\n      }\n    }, {\n      key: \"_drawXYLines\",\n      value: function _drawXYLines(_ref4) {\n        var _this = this;\n\n        var xCount = _ref4.xCount,\n            tickAmount = _ref4.tickAmount;\n        var w = this.w;\n\n        var datetimeLines = function datetimeLines(_ref5) {\n          var xC = _ref5.xC,\n              x1 = _ref5.x1,\n              y1 = _ref5.y1,\n              x2 = _ref5.x2,\n              y2 = _ref5.y2;\n\n          for (var i = 0; i < xC; i++) {\n            x1 = _this.xaxisLabels[i].position;\n            x2 = _this.xaxisLabels[i].position;\n\n            _this._drawGridLines({\n              i: i,\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              xCount: xCount,\n              parent: _this.elgridLinesV\n            });\n          }\n        };\n\n        var categoryLines = function categoryLines(_ref6) {\n          var xC = _ref6.xC,\n              x1 = _ref6.x1,\n              y1 = _ref6.y1,\n              x2 = _ref6.x2,\n              y2 = _ref6.y2;\n\n          if (typeof w.config.xaxis.tickAmount !== 'undefined' && w.config.xaxis.tickAmount !== 'dataPoints') {\n            // user has specified tickamount in a category x-axis chart\n            var visibleLabels = w.globals.dom.baseEl.querySelectorAll('.apexcharts-text.apexcharts-xaxis-label tspan:not(:empty)');\n            visibleLabels.forEach(function (d, i) {\n              var textRect = d.getBBox();\n\n              _this._drawGridLines({\n                i: i,\n                x1: textRect.x + textRect.width / 2,\n                y1: y1,\n                x2: textRect.x + textRect.width / 2,\n                y2: y2,\n                xCount: xCount,\n                parent: _this.elgridLinesV\n              });\n            });\n          } else {\n            for (var i = 0; i < xC + (w.globals.isXNumeric ? 0 : 1); i++) {\n              if (i === 0 && xC === 1 && w.globals.dataPoints === 1) {\n                // single datapoint\n                x1 = w.globals.gridWidth / 2;\n                x2 = x1;\n              }\n\n              _this._drawGridLines({\n                i: i,\n                x1: x1,\n                y1: y1,\n                x2: x2,\n                y2: y2,\n                xCount: xCount,\n                parent: _this.elgridLinesV\n              });\n\n              x1 = x1 + w.globals.gridWidth / (w.globals.isXNumeric ? xC - 1 : xC);\n              x2 = x1;\n            }\n          }\n        }; // draw vertical lines\n\n\n        if (w.config.grid.xaxis.lines.show || w.config.xaxis.axisTicks.show) {\n          var x1 = w.globals.padHorizontal;\n          var y1 = 0;\n          var x2;\n          var y2 = w.globals.gridHeight;\n\n          if (w.globals.timescaleLabels.length) {\n            datetimeLines({\n              xC: xCount,\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2\n            });\n          } else {\n            if (w.globals.isXNumeric) {\n              xCount = w.globals.xAxisScale.result.length;\n            }\n\n            if (w.config.xaxis.convertedCatToNumeric) {\n              // in case of a convertedCatToNumeric, some labels might be skipped due to hideOverLapping labels, hence use this var to get the visible ticks\n              xCount = w.globals.xaxisLabelsCount;\n            }\n\n            categoryLines({\n              xC: xCount,\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2\n            });\n          }\n        } // draw horizontal lines\n\n\n        if (w.config.grid.yaxis.lines.show) {\n          var _x = 0;\n          var _y = 0;\n          var _y2 = 0;\n          var _x2 = w.globals.gridWidth;\n          var tA = tickAmount + 1;\n\n          if (this.isRangeBar) {\n            tA = w.globals.labels.length;\n          }\n\n          for (var i = 0; i < tA + (this.isRangeBar ? 1 : 0); i++) {\n            this._drawGridLine({\n              x1: _x,\n              y1: _y,\n              x2: _x2,\n              y2: _y2,\n              parent: this.elgridLinesH\n            });\n\n            _y = _y + w.globals.gridHeight / (this.isRangeBar ? tA : tickAmount);\n            _y2 = _y;\n          }\n        }\n      }\n    }, {\n      key: \"_drawInvertedXYLines\",\n      value: function _drawInvertedXYLines(_ref7) {\n        var xCount = _ref7.xCount;\n        var w = this.w; // draw vertical lines\n\n        if (w.config.grid.xaxis.lines.show || w.config.xaxis.axisTicks.show) {\n          var x1 = w.globals.padHorizontal;\n          var y1 = 0;\n          var x2;\n          var y2 = w.globals.gridHeight;\n\n          for (var i = 0; i < xCount + 1; i++) {\n            if (w.config.grid.xaxis.lines.show) {\n              this._drawGridLine({\n                x1: x1,\n                y1: y1,\n                x2: x2,\n                y2: y2,\n                parent: this.elgridLinesV\n              });\n            }\n\n            var xAxis = new XAxis(this.ctx);\n            xAxis.drawXaxisTicks(x1, this.elg);\n            x1 = x1 + w.globals.gridWidth / xCount + 0.3;\n            x2 = x1;\n          }\n        } // draw horizontal lines\n\n\n        if (w.config.grid.yaxis.lines.show) {\n          var _x3 = 0;\n          var _y3 = 0;\n          var _y4 = 0;\n          var _x4 = w.globals.gridWidth;\n\n          for (var _i = 0; _i < w.globals.dataPoints + 1; _i++) {\n            this._drawGridLine({\n              x1: _x3,\n              y1: _y3,\n              x2: _x4,\n              y2: _y4,\n              parent: this.elgridLinesH\n            });\n\n            _y3 = _y3 + w.globals.gridHeight / w.globals.dataPoints;\n            _y4 = _y3;\n          }\n        }\n      } // actual grid rendering\n\n    }, {\n      key: \"renderGrid\",\n      value: function renderGrid() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        this.elg = graphics.group({\n          class: 'apexcharts-grid'\n        });\n        this.elgridLinesH = graphics.group({\n          class: 'apexcharts-gridlines-horizontal'\n        });\n        this.elgridLinesV = graphics.group({\n          class: 'apexcharts-gridlines-vertical'\n        });\n        this.elg.add(this.elgridLinesH);\n        this.elg.add(this.elgridLinesV);\n\n        if (!w.config.grid.show) {\n          this.elgridLinesV.hide();\n          this.elgridLinesH.hide();\n        }\n\n        var yTickAmount = w.globals.yAxisScale.length ? w.globals.yAxisScale[0].result.length - 1 : 5;\n\n        for (var i = 0; i < w.globals.series.length; i++) {\n          if (typeof w.globals.yAxisScale[i] !== 'undefined') {\n            yTickAmount = w.globals.yAxisScale[i].result.length - 1;\n          }\n\n          if (yTickAmount > 2) break;\n        }\n\n        var xCount;\n\n        if (!w.globals.isBarHorizontal || this.isRangeBar) {\n          xCount = this.xaxisLabels.length;\n\n          if (this.isRangeBar) {\n            yTickAmount = w.globals.labels.length;\n\n            if (w.config.xaxis.tickAmount && w.config.xaxis.labels.formatter) {\n              xCount = w.config.xaxis.tickAmount;\n            }\n          }\n\n          this._drawXYLines({\n            xCount: xCount,\n            tickAmount: yTickAmount\n          });\n        } else {\n          xCount = yTickAmount; // for horizontal bar chart, get the xaxis tickamount\n\n          yTickAmount = w.globals.xTickAmount;\n\n          this._drawInvertedXYLines({\n            xCount: xCount,\n            tickAmount: yTickAmount\n          });\n        }\n\n        this.drawGridBands(xCount, yTickAmount);\n        return {\n          el: this.elg,\n          xAxisTickWidth: w.globals.gridWidth / xCount\n        };\n      }\n    }, {\n      key: \"drawGridBands\",\n      value: function drawGridBands(xCount, tickAmount) {\n        var w = this.w; // rows background bands\n\n        if (w.config.grid.row.colors !== undefined && w.config.grid.row.colors.length > 0) {\n          var x1 = 0;\n          var y1 = 0;\n          var y2 = w.globals.gridHeight / tickAmount;\n          var x2 = w.globals.gridWidth;\n\n          for (var i = 0, c = 0; i < tickAmount; i++, c++) {\n            if (c >= w.config.grid.row.colors.length) {\n              c = 0;\n            }\n\n            this._drawGridBandRect({\n              c: c,\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              type: 'row'\n            });\n\n            y1 = y1 + w.globals.gridHeight / tickAmount;\n          }\n        } // columns background bands\n\n\n        if (w.config.grid.column.colors !== undefined && w.config.grid.column.colors.length > 0) {\n          var xc = !w.globals.isBarHorizontal && (w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) ? xCount - 1 : xCount;\n          var _x5 = w.globals.padHorizontal;\n          var _y5 = 0;\n\n          var _x6 = w.globals.padHorizontal + w.globals.gridWidth / xc;\n\n          var _y6 = w.globals.gridHeight;\n\n          for (var _i2 = 0, _c = 0; _i2 < xCount; _i2++, _c++) {\n            if (_c >= w.config.grid.column.colors.length) {\n              _c = 0;\n            }\n\n            this._drawGridBandRect({\n              c: _c,\n              x1: _x5,\n              y1: _y5,\n              x2: _x6,\n              y2: _y6,\n              type: 'column'\n            });\n\n            _x5 = _x5 + w.globals.gridWidth / xc;\n          }\n        }\n      }\n    }]);\n\n    return Grid;\n  }();\n\n  var Range$1 = /*#__PURE__*/function () {\n    function Range(ctx) {\n      _classCallCheck(this, Range);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    } // http://stackoverflow.com/questions/326679/choosing-an-attractive-linear-scale-for-a-graphs-y-axiss\n    // This routine creates the Y axis values for a graph.\n\n\n    _createClass(Range, [{\n      key: \"niceScale\",\n      value: function niceScale(yMin, yMax) {\n        var ticks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n        var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        var NO_MIN_MAX_PROVIDED = arguments.length > 4 ? arguments[4] : undefined;\n        var w = this.w; // Determine Range\n\n        var range = Math.abs(yMax - yMin);\n        ticks = this._adjustTicksForSmallRange(ticks, index, range);\n\n        if (ticks === 'dataPoints') {\n          ticks = w.globals.dataPoints - 1;\n        }\n\n        if (yMin === Number.MIN_VALUE && yMax === 0 || !Utils$1.isNumber(yMin) && !Utils$1.isNumber(yMax) || yMin === Number.MIN_VALUE && yMax === -Number.MAX_VALUE) {\n          // when all values are 0\n          yMin = 0;\n          yMax = ticks;\n          var linearScale = this.linearScale(yMin, yMax, ticks);\n          return linearScale;\n        }\n\n        if (yMin > yMax) {\n          // if somehow due to some wrong config, user sent max less than min,\n          // adjust the min/max again\n          console.warn('axis.min cannot be greater than axis.max');\n          yMax = yMin + 0.1;\n        } else if (yMin === yMax) {\n          // If yMin and yMax are identical, then\n          // adjust the yMin and yMax values to actually\n          // make a graph. Also avoids division by zero errors.\n          yMin = yMin === 0 ? 0 : yMin - 0.5; // some small value\n\n          yMax = yMax === 0 ? 2 : yMax + 0.5; // some small value\n        } // Calculate Min amd Max graphical labels and graph\n        // increments.  The number of ticks defaults to\n        // 10 which is the SUGGESTED value.  Any tick value\n        // entered is used as a suggested value which is\n        // adjusted to be a 'pretty' value.\n        //\n        // Output will be an array of the Y axis values that\n        // encompass the Y values.\n\n\n        var result = [];\n\n        if (range < 1 && NO_MIN_MAX_PROVIDED && (w.config.chart.type === 'candlestick' || w.config.series[index].type === 'candlestick' || w.config.chart.type === 'boxPlot' || w.config.series[index].type === 'boxPlot' || w.globals.isRangeData)) {\n          /* fix https://github.com/apexcharts/apexcharts.js/issues/430 */\n          yMax = yMax * 1.01;\n        }\n\n        var tiks = ticks + 1; // Adjust ticks if needed\n\n        if (tiks < 2) {\n          tiks = 2;\n        } else if (tiks > 2) {\n          tiks -= 2;\n        } // Get raw step value\n\n\n        var tempStep = range / tiks; // Calculate pretty step value\n\n        var mag = Math.floor(Utils$1.log10(tempStep));\n        var magPow = Math.pow(10, mag);\n        var magMsd = Math.round(tempStep / magPow);\n\n        if (magMsd < 1) {\n          magMsd = 1;\n        }\n\n        var stepSize = magMsd * magPow; // build Y label array.\n        // Lower and upper bounds calculations\n\n        var lb = stepSize * Math.floor(yMin / stepSize);\n        var ub = stepSize * Math.ceil(yMax / stepSize); // Build array\n\n        var val = lb;\n\n        if (NO_MIN_MAX_PROVIDED && range > 2) {\n          while (1) {\n            result.push(val);\n            val += stepSize;\n\n            if (val > ub) {\n              break;\n            }\n          }\n\n          return {\n            result: result,\n            niceMin: result[0],\n            niceMax: result[result.length - 1]\n          };\n        } else {\n          result = [];\n          var v = yMin;\n          result.push(v);\n          var valuesDivider = Math.abs(yMax - yMin) / ticks;\n\n          for (var i = 0; i <= ticks; i++) {\n            v = v + valuesDivider;\n            result.push(v);\n          }\n\n          if (result[result.length - 2] >= yMax) {\n            result.pop();\n          }\n\n          return {\n            result: result,\n            niceMin: result[0],\n            niceMax: result[result.length - 1]\n          };\n        }\n      }\n    }, {\n      key: \"linearScale\",\n      value: function linearScale(yMin, yMax) {\n        var ticks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n        var index = arguments.length > 3 ? arguments[3] : undefined;\n        var range = Math.abs(yMax - yMin);\n        ticks = this._adjustTicksForSmallRange(ticks, index, range);\n\n        if (ticks === 'dataPoints') {\n          ticks = this.w.globals.dataPoints - 1;\n        }\n\n        var step = range / ticks;\n\n        if (ticks === Number.MAX_VALUE) {\n          ticks = 10;\n          step = 1;\n        }\n\n        var result = [];\n        var v = yMin;\n\n        while (ticks >= 0) {\n          result.push(v);\n          v = v + step;\n          ticks -= 1;\n        }\n\n        return {\n          result: result,\n          niceMin: result[0],\n          niceMax: result[result.length - 1]\n        };\n      }\n    }, {\n      key: \"logarithmicScale\",\n      value: function logarithmicScale(yMax, base) {\n        var logs = [];\n        var ticks = Math.ceil(Math.log(yMax) / Math.log(base)) + 1; // Get powers of base up to our max, and then one more\n\n        for (var i = 0; i < ticks; i++) {\n          logs.push(Math.pow(base, i));\n        }\n\n        return {\n          result: logs,\n          niceMin: logs[0],\n          niceMax: logs[logs.length - 1]\n        };\n      }\n    }, {\n      key: \"_adjustTicksForSmallRange\",\n      value: function _adjustTicksForSmallRange(ticks, index, range) {\n        var newTicks = ticks;\n\n        if (typeof index !== 'undefined' && this.w.config.yaxis[index].labels.formatter && this.w.config.yaxis[index].tickAmount === undefined) {\n          var formattedVal = this.w.config.yaxis[index].labels.formatter(1);\n\n          if (Utils$1.isNumber(Number(formattedVal)) && !Utils$1.isFloat(formattedVal)) {\n            newTicks = Math.ceil(range);\n          }\n        }\n\n        return newTicks < ticks ? newTicks : ticks;\n      }\n    }, {\n      key: \"setYScaleForIndex\",\n      value: function setYScaleForIndex(index, minY, maxY) {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        var y = gl.isBarHorizontal ? cnf.xaxis : cnf.yaxis[index];\n\n        if (typeof gl.yAxisScale[index] === 'undefined') {\n          gl.yAxisScale[index] = [];\n        }\n\n        var diff = Math.abs(maxY - minY);\n\n        if (y.logarithmic && diff <= 5) {\n          gl.invalidLogScale = true;\n        }\n\n        if (y.logarithmic && diff > 5) {\n          gl.allSeriesCollapsed = false;\n          gl.yAxisScale[index] = this.logarithmicScale(maxY, y.logBase);\n        } else {\n          if (maxY === -Number.MAX_VALUE || !Utils$1.isNumber(maxY)) {\n            // no data in the chart. Either all series collapsed or user passed a blank array\n            gl.yAxisScale[index] = this.linearScale(0, 5, 5);\n          } else {\n            // there is some data. Turn off the allSeriesCollapsed flag\n            gl.allSeriesCollapsed = false;\n\n            if ((y.min !== undefined || y.max !== undefined) && !y.forceNiceScale) {\n              // fix https://github.com/apexcharts/apexcharts.js/issues/492\n              gl.yAxisScale[index] = this.linearScale(minY, maxY, y.tickAmount, index);\n            } else {\n              var noMinMaxProvided = cnf.yaxis[index].max === undefined && cnf.yaxis[index].min === undefined || cnf.yaxis[index].forceNiceScale;\n              gl.yAxisScale[index] = this.niceScale(minY, maxY, y.tickAmount ? y.tickAmount : diff < 5 && diff > 1 ? diff + 1 : 5, index, // fix https://github.com/apexcharts/apexcharts.js/issues/397\n              noMinMaxProvided);\n            }\n          }\n        }\n      }\n    }, {\n      key: \"setXScale\",\n      value: function setXScale(minX, maxX) {\n        var w = this.w;\n        var gl = w.globals;\n        var x = w.config.xaxis;\n        var diff = Math.abs(maxX - minX);\n\n        if (maxX === -Number.MAX_VALUE || !Utils$1.isNumber(maxX)) {\n          // no data in the chart. Either all series collapsed or user passed a blank array\n          gl.xAxisScale = this.linearScale(0, 5, 5);\n        } else {\n          gl.xAxisScale = this.linearScale(minX, maxX, x.tickAmount ? x.tickAmount : diff < 5 && diff > 1 ? diff + 1 : 5, 0);\n        }\n\n        return gl.xAxisScale;\n      }\n    }, {\n      key: \"setMultipleYScales\",\n      value: function setMultipleYScales() {\n        var _this = this;\n\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        var minYArr = gl.minYArr.concat([]);\n        var maxYArr = gl.maxYArr.concat([]);\n        var scalesIndices = []; // here, we loop through the yaxis array and find the item which has \"seriesName\" property\n\n        cnf.yaxis.forEach(function (yaxe, i) {\n          var index = i;\n          cnf.series.forEach(function (s, si) {\n            // if seriesName matches and that series is not collapsed, we use that scale\n            // fix issue #1215\n            // proceed even if si is in gl.collapsedSeriesIndices\n            if (s.name === yaxe.seriesName) {\n              index = si;\n\n              if (i !== si) {\n                scalesIndices.push({\n                  index: si,\n                  similarIndex: i,\n                  alreadyExists: true\n                });\n              } else {\n                scalesIndices.push({\n                  index: si\n                });\n              }\n            }\n          });\n          var minY = minYArr[index];\n          var maxY = maxYArr[index];\n\n          _this.setYScaleForIndex(i, minY, maxY);\n        });\n        this.sameScaleInMultipleAxes(minYArr, maxYArr, scalesIndices);\n      }\n    }, {\n      key: \"sameScaleInMultipleAxes\",\n      value: function sameScaleInMultipleAxes(minYArr, maxYArr, scalesIndices) {\n        var _this2 = this;\n\n        var cnf = this.w.config;\n        var gl = this.w.globals; // we got the scalesIndices array in the above code, but we need to filter out the items which doesn't have same scales\n\n        var similarIndices = [];\n        scalesIndices.forEach(function (scale) {\n          if (scale.alreadyExists) {\n            if (typeof similarIndices[scale.index] === 'undefined') {\n              similarIndices[scale.index] = [];\n            }\n\n            similarIndices[scale.index].push(scale.index);\n            similarIndices[scale.index].push(scale.similarIndex);\n          }\n        });\n\n        function intersect(a, b) {\n          return a.filter(function (value) {\n            return b.indexOf(value) !== -1;\n          });\n        }\n\n        gl.yAxisSameScaleIndices = similarIndices;\n        similarIndices.forEach(function (si, i) {\n          similarIndices.forEach(function (sj, j) {\n            if (i !== j) {\n              if (intersect(si, sj).length > 0) {\n                similarIndices[i] = similarIndices[i].concat(similarIndices[j]);\n              }\n            }\n          });\n        }); // then, we remove duplicates from the similarScale array\n\n        var uniqueSimilarIndices = similarIndices.map(function (item) {\n          return item.filter(function (i, pos) {\n            return item.indexOf(i) === pos;\n          });\n        }); // sort further to remove whole duplicate arrays later\n\n        var sortedIndices = uniqueSimilarIndices.map(function (s) {\n          return s.sort();\n        }); // remove undefined items\n\n        similarIndices = similarIndices.filter(function (s) {\n          return !!s;\n        });\n        var indices = sortedIndices.slice();\n        var stringIndices = indices.map(function (ind) {\n          return JSON.stringify(ind);\n        });\n        indices = indices.filter(function (ind, p) {\n          return stringIndices.indexOf(JSON.stringify(ind)) === p;\n        });\n        var sameScaleMinYArr = [];\n        var sameScaleMaxYArr = [];\n        minYArr.forEach(function (minYValue, yi) {\n          indices.forEach(function (scale, i) {\n            // we compare only the yIndex which exists in the indices array\n            if (scale.indexOf(yi) > -1) {\n              if (typeof sameScaleMinYArr[i] === 'undefined') {\n                sameScaleMinYArr[i] = [];\n                sameScaleMaxYArr[i] = [];\n              }\n\n              sameScaleMinYArr[i].push({\n                key: yi,\n                value: minYValue\n              });\n              sameScaleMaxYArr[i].push({\n                key: yi,\n                value: maxYArr[yi]\n              });\n            }\n          });\n        });\n        var sameScaleMin = Array.apply(null, Array(indices.length)).map(Number.prototype.valueOf, Number.MIN_VALUE);\n        var sameScaleMax = Array.apply(null, Array(indices.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);\n        sameScaleMinYArr.forEach(function (s, i) {\n          s.forEach(function (sc, j) {\n            sameScaleMin[i] = Math.min(sc.value, sameScaleMin[i]);\n          });\n        });\n        sameScaleMaxYArr.forEach(function (s, i) {\n          s.forEach(function (sc, j) {\n            sameScaleMax[i] = Math.max(sc.value, sameScaleMax[i]);\n          });\n        });\n        minYArr.forEach(function (min, i) {\n          sameScaleMaxYArr.forEach(function (s, si) {\n            var minY = sameScaleMin[si];\n            var maxY = sameScaleMax[si];\n\n            if (cnf.chart.stacked) {\n              // for stacked charts, we need to add the values\n              maxY = 0;\n              s.forEach(function (ind, k) {\n                // fix incorrectly adjust y scale issue #1215\n                if (ind.value !== -Number.MAX_VALUE) {\n                  maxY += ind.value;\n                }\n\n                if (minY !== Number.MIN_VALUE) {\n                  minY += sameScaleMinYArr[si][k].value;\n                }\n              });\n            }\n\n            s.forEach(function (ind, k) {\n              if (s[k].key === i) {\n                if (cnf.yaxis[i].min !== undefined) {\n                  if (typeof cnf.yaxis[i].min === 'function') {\n                    minY = cnf.yaxis[i].min(gl.minY);\n                  } else {\n                    minY = cnf.yaxis[i].min;\n                  }\n                }\n\n                if (cnf.yaxis[i].max !== undefined) {\n                  if (typeof cnf.yaxis[i].max === 'function') {\n                    maxY = cnf.yaxis[i].max(gl.maxY);\n                  } else {\n                    maxY = cnf.yaxis[i].max;\n                  }\n                }\n\n                _this2.setYScaleForIndex(i, minY, maxY);\n              }\n            });\n          });\n        });\n      } // experimental feature which scales the y-axis to a min/max based on x-axis range\n\n    }, {\n      key: \"autoScaleY\",\n      value: function autoScaleY(ctx, yaxis, e) {\n        if (!ctx) {\n          ctx = this;\n        }\n\n        var w = ctx.w;\n\n        if (w.globals.isMultipleYAxis || w.globals.collapsedSeries.length) {\n          // The autoScale option for multiple y-axis is turned off as it leads to buggy behavior.\n          // Also, when a series is collapsed, it results in incorrect behavior. Hence turned it off for that too - fixes apexcharts.js#795\n          console.warn('autoScaleYaxis is not supported in a multi-yaxis chart.');\n          return yaxis;\n        }\n\n        var seriesX = w.globals.seriesX[0];\n        var isStacked = w.config.chart.stacked;\n        yaxis.forEach(function (yaxe, yi) {\n          var firstXIndex = 0;\n\n          for (var xi = 0; xi < seriesX.length; xi++) {\n            if (seriesX[xi] >= e.xaxis.min) {\n              firstXIndex = xi;\n              break;\n            }\n          }\n\n          var initialMin = w.globals.minYArr[yi];\n          var initialMax = w.globals.maxYArr[yi];\n          var min, max;\n          var stackedSer = w.globals.stackedSeriesTotals;\n          w.globals.series.forEach(function (serie, sI) {\n            var firstValue = serie[firstXIndex];\n\n            if (isStacked) {\n              firstValue = stackedSer[firstXIndex];\n              min = max = firstValue;\n              stackedSer.forEach(function (y, yI) {\n                if (seriesX[yI] <= e.xaxis.max && seriesX[yI] >= e.xaxis.min) {\n                  if (y > max && y !== null) max = y;\n                  if (serie[yI] < min && serie[yI] !== null) min = serie[yI];\n                }\n              });\n            } else {\n              min = max = firstValue;\n              serie.forEach(function (y, yI) {\n                if (seriesX[yI] <= e.xaxis.max && seriesX[yI] >= e.xaxis.min) {\n                  var valMin = y;\n                  var valMax = y;\n                  w.globals.series.forEach(function (wS, wSI) {\n                    if (y !== null) {\n                      valMin = Math.min(wS[yI], valMin);\n                      valMax = Math.max(wS[yI], valMax);\n                    }\n                  });\n                  if (valMax > max && valMax !== null) max = valMax;\n                  if (valMin < min && valMin !== null) min = valMin;\n                }\n              });\n            }\n\n            if (min === undefined && max === undefined) {\n              min = initialMin;\n              max = initialMax;\n            }\n\n            min *= min < 0 ? 1.1 : 0.9;\n            max *= max < 0 ? 0.9 : 1.1;\n\n            if (max < 0 && max < initialMax) {\n              max = initialMax;\n            }\n\n            if (min < 0 && min > initialMin) {\n              min = initialMin;\n            }\n\n            if (yaxis.length > 1) {\n              yaxis[sI].min = yaxe.min === undefined ? min : yaxe.min;\n              yaxis[sI].max = yaxe.max === undefined ? max : yaxe.max;\n            } else {\n              yaxis[0].min = yaxe.min === undefined ? min : yaxe.min;\n              yaxis[0].max = yaxe.max === undefined ? max : yaxe.max;\n            }\n          });\n        });\n        return yaxis;\n      }\n    }]);\n\n    return Range;\n  }();\n\n  /**\n   * Range is used to generates values between min and max.\n   *\n   * @module Range\n   **/\n\n  var Range = /*#__PURE__*/function () {\n    function Range(ctx) {\n      _classCallCheck(this, Range);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.scales = new Range$1(ctx);\n    }\n\n    _createClass(Range, [{\n      key: \"init\",\n      value: function init() {\n        this.setYRange();\n        this.setXRange();\n        this.setZRange();\n      }\n    }, {\n      key: \"getMinYMaxY\",\n      value: function getMinYMaxY(startingIndex) {\n        var lowestY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;\n        var highestY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Number.MAX_VALUE;\n        var len = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n        var cnf = this.w.config;\n        var gl = this.w.globals;\n        var maxY = -Number.MAX_VALUE;\n        var minY = Number.MIN_VALUE;\n\n        if (len === null) {\n          len = startingIndex + 1;\n        }\n\n        var series = gl.series;\n        var seriesMin = series;\n        var seriesMax = series;\n\n        if (cnf.chart.type === 'candlestick') {\n          seriesMin = gl.seriesCandleL;\n          seriesMax = gl.seriesCandleH;\n        } else if (cnf.chart.type === 'boxPlot') {\n          seriesMin = gl.seriesCandleO;\n          seriesMax = gl.seriesCandleC;\n        } else if (gl.isRangeData) {\n          seriesMin = gl.seriesRangeStart;\n          seriesMax = gl.seriesRangeEnd;\n        }\n\n        for (var i = startingIndex; i < len; i++) {\n          gl.dataPoints = Math.max(gl.dataPoints, series[i].length);\n\n          for (var j = 0; j < gl.series[i].length; j++) {\n            var val = series[i][j];\n\n            if (val !== null && Utils$1.isNumber(val)) {\n              if (typeof seriesMax[i][j] !== 'undefined') {\n                maxY = Math.max(maxY, seriesMax[i][j]);\n                lowestY = Math.min(lowestY, seriesMax[i][j]);\n              }\n\n              if (typeof seriesMin[i][j] !== 'undefined') {\n                lowestY = Math.min(lowestY, seriesMin[i][j]);\n                highestY = Math.max(highestY, seriesMin[i][j]);\n              }\n\n              if (this.w.config.chart.type === 'candlestick' || this.w.config.chart.type === 'boxPlot') {\n                if (typeof gl.seriesCandleC[i][j] !== 'undefined') {\n                  maxY = Math.max(maxY, gl.seriesCandleO[i][j]);\n                  maxY = Math.max(maxY, gl.seriesCandleH[i][j]);\n                  maxY = Math.max(maxY, gl.seriesCandleL[i][j]);\n                  maxY = Math.max(maxY, gl.seriesCandleC[i][j]);\n\n                  if (this.w.config.chart.type === 'boxPlot') {\n                    maxY = Math.max(maxY, gl.seriesCandleM[i][j]);\n                  }\n                } // there is a combo chart and the specified series in not either candlestick or boxplot, find the max there\n\n\n                if (cnf.series[i].type && (cnf.series[i].type !== 'candlestick' || cnf.series[i].type !== 'boxPlot')) {\n                  maxY = Math.max(maxY, gl.series[i][j]);\n                  lowestY = Math.min(lowestY, gl.series[i][j]);\n                }\n\n                highestY = maxY;\n              }\n\n              if (gl.seriesGoals[i] && gl.seriesGoals[i][j] && Array.isArray(gl.seriesGoals[i][j])) {\n                gl.seriesGoals[i][j].forEach(function (g) {\n                  if (minY !== Number.MIN_VALUE) {\n                    minY = Math.min(minY, g.value);\n                    lowestY = minY;\n                  }\n\n                  maxY = Math.max(maxY, g.value);\n                  highestY = maxY;\n                });\n              }\n\n              if (Utils$1.isFloat(val)) {\n                val = Utils$1.noExponents(val);\n                gl.yValueDecimal = Math.max(gl.yValueDecimal, val.toString().split('.')[1].length);\n              }\n\n              if (minY > seriesMin[i][j] && seriesMin[i][j] < 0) {\n                minY = seriesMin[i][j];\n              }\n            } else {\n              gl.hasNullValues = true;\n            }\n          }\n        }\n\n        if (cnf.chart.type === 'rangeBar' && gl.seriesRangeStart.length && gl.isBarHorizontal) {\n          minY = lowestY;\n        }\n\n        if (cnf.chart.type === 'bar') {\n          if (minY < 0 && maxY < 0) {\n            // all negative values in a bar chart, hence make the max to 0\n            maxY = 0;\n          }\n\n          if (minY === Number.MIN_VALUE) {\n            minY = 0;\n          }\n        }\n\n        return {\n          minY: minY,\n          maxY: maxY,\n          lowestY: lowestY,\n          highestY: highestY\n        };\n      }\n    }, {\n      key: \"setYRange\",\n      value: function setYRange() {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        gl.maxY = -Number.MAX_VALUE;\n        gl.minY = Number.MIN_VALUE;\n        var lowestYInAllSeries = Number.MAX_VALUE;\n\n        if (gl.isMultipleYAxis) {\n          // we need to get minY and maxY for multiple y axis\n          for (var i = 0; i < gl.series.length; i++) {\n            var minYMaxYArr = this.getMinYMaxY(i, lowestYInAllSeries, null, i + 1);\n            gl.minYArr.push(minYMaxYArr.minY);\n            gl.maxYArr.push(minYMaxYArr.maxY);\n            lowestYInAllSeries = minYMaxYArr.lowestY;\n          }\n        } // and then, get the minY and maxY from all series\n\n\n        var minYMaxY = this.getMinYMaxY(0, lowestYInAllSeries, null, gl.series.length);\n        gl.minY = minYMaxY.minY;\n        gl.maxY = minYMaxY.maxY;\n        lowestYInAllSeries = minYMaxY.lowestY;\n\n        if (cnf.chart.stacked) {\n          this._setStackedMinMax();\n        } // if the numbers are too big, reduce the range\n        // for eg, if number is between 100000-110000, putting 0 as the lowest value is not so good idea. So change the gl.minY for line/area/candlesticks/boxPlot\n\n\n        if (cnf.chart.type === 'line' || cnf.chart.type === 'area' || cnf.chart.type === 'candlestick' || cnf.chart.type === 'boxPlot' || cnf.chart.type === 'rangeBar' && !gl.isBarHorizontal) {\n          if (gl.minY === Number.MIN_VALUE && lowestYInAllSeries !== -Number.MAX_VALUE && lowestYInAllSeries !== gl.maxY // single value possibility\n          ) {\n            var diff = gl.maxY - lowestYInAllSeries;\n\n            if (lowestYInAllSeries >= 0 && lowestYInAllSeries <= 10 || cnf.yaxis[0].min !== undefined || cnf.yaxis[0].max !== undefined) {\n              // if minY is already 0/low value, we don't want to go negatives here - so this check is essential.\n              diff = 0;\n            }\n\n            gl.minY = lowestYInAllSeries - diff * 5 / 100;\n            /* fix https://github.com/apexcharts/apexcharts.js/issues/614 */\n\n            /* fix https://github.com/apexcharts/apexcharts.js/issues/968 */\n\n            if (lowestYInAllSeries > 0 && gl.minY < 0) {\n              gl.minY = 0;\n            }\n            /* fix https://github.com/apexcharts/apexcharts.js/issues/426 */\n\n\n            gl.maxY = gl.maxY + diff * 5 / 100;\n          }\n        }\n\n        cnf.yaxis.forEach(function (yaxe, index) {\n          // override all min/max values by user defined values (y axis)\n          if (yaxe.max !== undefined) {\n            if (typeof yaxe.max === 'number') {\n              gl.maxYArr[index] = yaxe.max;\n            } else if (typeof yaxe.max === 'function') {\n              // fixes apexcharts.js/issues/2098\n              gl.maxYArr[index] = yaxe.max(gl.isMultipleYAxis ? gl.maxYArr[index] : gl.maxY);\n            } // gl.maxY is for single y-axis chart, it will be ignored in multi-yaxis\n\n\n            gl.maxY = gl.maxYArr[index];\n          }\n\n          if (yaxe.min !== undefined) {\n            if (typeof yaxe.min === 'number') {\n              gl.minYArr[index] = yaxe.min;\n            } else if (typeof yaxe.min === 'function') {\n              // fixes apexcharts.js/issues/2098\n              gl.minYArr[index] = yaxe.min(gl.isMultipleYAxis ? gl.minYArr[index] === Number.MIN_VALUE ? 0 : gl.minYArr[index] : gl.minY);\n            } // gl.minY is for single y-axis chart, it will be ignored in multi-yaxis\n\n\n            gl.minY = gl.minYArr[index];\n          }\n        }); // for horizontal bar charts, we need to check xaxis min/max as user may have specified there\n\n        if (gl.isBarHorizontal) {\n          var minmax = ['min', 'max'];\n          minmax.forEach(function (m) {\n            if (cnf.xaxis[m] !== undefined && typeof cnf.xaxis[m] === 'number') {\n              m === 'min' ? gl.minY = cnf.xaxis[m] : gl.maxY = cnf.xaxis[m];\n            }\n          });\n        } // for multi y-axis we need different scales for each\n\n\n        if (gl.isMultipleYAxis) {\n          this.scales.setMultipleYScales();\n          gl.minY = lowestYInAllSeries;\n          gl.yAxisScale.forEach(function (scale, i) {\n            gl.minYArr[i] = scale.niceMin;\n            gl.maxYArr[i] = scale.niceMax;\n          });\n        } else {\n          this.scales.setYScaleForIndex(0, gl.minY, gl.maxY);\n          gl.minY = gl.yAxisScale[0].niceMin;\n          gl.maxY = gl.yAxisScale[0].niceMax;\n          gl.minYArr[0] = gl.yAxisScale[0].niceMin;\n          gl.maxYArr[0] = gl.yAxisScale[0].niceMax;\n        }\n\n        return {\n          minY: gl.minY,\n          maxY: gl.maxY,\n          minYArr: gl.minYArr,\n          maxYArr: gl.maxYArr,\n          yAxisScale: gl.yAxisScale\n        };\n      }\n    }, {\n      key: \"setXRange\",\n      value: function setXRange() {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        var isXNumeric = cnf.xaxis.type === 'numeric' || cnf.xaxis.type === 'datetime' || cnf.xaxis.type === 'category' && !gl.noLabelsProvided || gl.noLabelsProvided || gl.isXNumeric;\n\n        var getInitialMinXMaxX = function getInitialMinXMaxX() {\n          for (var i = 0; i < gl.series.length; i++) {\n            if (gl.labels[i]) {\n              for (var j = 0; j < gl.labels[i].length; j++) {\n                if (gl.labels[i][j] !== null && Utils$1.isNumber(gl.labels[i][j])) {\n                  gl.maxX = Math.max(gl.maxX, gl.labels[i][j]);\n                  gl.initialMaxX = Math.max(gl.maxX, gl.labels[i][j]);\n                  gl.minX = Math.min(gl.minX, gl.labels[i][j]);\n                  gl.initialMinX = Math.min(gl.minX, gl.labels[i][j]);\n                }\n              }\n            }\n          }\n        }; // minX maxX starts here\n\n\n        if (gl.isXNumeric) {\n          getInitialMinXMaxX();\n        }\n\n        if (gl.noLabelsProvided) {\n          if (cnf.xaxis.categories.length === 0) {\n            gl.maxX = gl.labels[gl.labels.length - 1];\n            gl.initialMaxX = gl.labels[gl.labels.length - 1];\n            gl.minX = 1;\n            gl.initialMinX = 1;\n          }\n        }\n\n        if (gl.isXNumeric || gl.noLabelsProvided || gl.dataFormatXNumeric) {\n          var ticks;\n\n          if (cnf.xaxis.tickAmount === undefined) {\n            ticks = Math.round(gl.svgWidth / 150); // no labels provided and total number of dataPoints is less than 30\n\n            if (cnf.xaxis.type === 'numeric' && gl.dataPoints < 30) {\n              ticks = gl.dataPoints - 1;\n            } // this check is for when ticks exceeds total datapoints and that would result in duplicate labels\n\n\n            if (ticks > gl.dataPoints && gl.dataPoints !== 0) {\n              ticks = gl.dataPoints - 1;\n            }\n          } else if (cnf.xaxis.tickAmount === 'dataPoints') {\n            if (gl.series.length > 1) {\n              ticks = gl.series[gl.maxValsInArrayIndex].length - 1;\n            }\n\n            if (gl.isXNumeric) {\n              ticks = gl.maxX - gl.minX - 1;\n            }\n          } else {\n            ticks = cnf.xaxis.tickAmount;\n          }\n\n          gl.xTickAmount = ticks; // override all min/max values by user defined values (x axis)\n\n          if (cnf.xaxis.max !== undefined && typeof cnf.xaxis.max === 'number') {\n            gl.maxX = cnf.xaxis.max;\n          }\n\n          if (cnf.xaxis.min !== undefined && typeof cnf.xaxis.min === 'number') {\n            gl.minX = cnf.xaxis.min;\n          } // if range is provided, adjust the new minX\n\n\n          if (cnf.xaxis.range !== undefined) {\n            gl.minX = gl.maxX - cnf.xaxis.range;\n          }\n\n          if (gl.minX !== Number.MAX_VALUE && gl.maxX !== -Number.MAX_VALUE) {\n            if (cnf.xaxis.convertedCatToNumeric && !gl.dataFormatXNumeric) {\n              var catScale = [];\n\n              for (var i = gl.minX - 1; i < gl.maxX; i++) {\n                catScale.push(i + 1);\n              }\n\n              gl.xAxisScale = {\n                result: catScale,\n                niceMin: catScale[0],\n                niceMax: catScale[catScale.length - 1]\n              };\n            } else {\n              gl.xAxisScale = this.scales.setXScale(gl.minX, gl.maxX);\n            }\n          } else {\n            gl.xAxisScale = this.scales.linearScale(1, ticks, ticks);\n\n            if (gl.noLabelsProvided && gl.labels.length > 0) {\n              gl.xAxisScale = this.scales.linearScale(1, gl.labels.length, ticks - 1); // this is the only place seriesX is again mutated\n\n              gl.seriesX = gl.labels.slice();\n            }\n          } // we will still store these labels as the count for this will be different (to draw grid and labels placement)\n\n\n          if (isXNumeric) {\n            gl.labels = gl.xAxisScale.result.slice();\n          }\n        }\n\n        if (gl.isBarHorizontal && gl.labels.length) {\n          gl.xTickAmount = gl.labels.length;\n        } // single dataPoint\n\n\n        this._handleSingleDataPoint(); // minimum x difference to calculate bar width in numeric bars\n\n\n        this._getMinXDiff();\n\n        return {\n          minX: gl.minX,\n          maxX: gl.maxX\n        };\n      }\n    }, {\n      key: \"setZRange\",\n      value: function setZRange() {\n        // minZ, maxZ starts here\n        var gl = this.w.globals;\n        if (!gl.isDataXYZ) return;\n\n        for (var i = 0; i < gl.series.length; i++) {\n          if (typeof gl.seriesZ[i] !== 'undefined') {\n            for (var j = 0; j < gl.seriesZ[i].length; j++) {\n              if (gl.seriesZ[i][j] !== null && Utils$1.isNumber(gl.seriesZ[i][j])) {\n                gl.maxZ = Math.max(gl.maxZ, gl.seriesZ[i][j]);\n                gl.minZ = Math.min(gl.minZ, gl.seriesZ[i][j]);\n              }\n            }\n          }\n        }\n      }\n    }, {\n      key: \"_handleSingleDataPoint\",\n      value: function _handleSingleDataPoint() {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n\n        if (gl.minX === gl.maxX) {\n          var datetimeObj = new DateTime(this.ctx);\n\n          if (cnf.xaxis.type === 'datetime') {\n            var newMinX = datetimeObj.getDate(gl.minX);\n\n            if (cnf.xaxis.labels.datetimeUTC) {\n              newMinX.setUTCDate(newMinX.getUTCDate() - 2);\n            } else {\n              newMinX.setDate(newMinX.getDate() - 2);\n            }\n\n            gl.minX = new Date(newMinX).getTime();\n            var newMaxX = datetimeObj.getDate(gl.maxX);\n\n            if (cnf.xaxis.labels.datetimeUTC) {\n              newMaxX.setUTCDate(newMaxX.getUTCDate() + 2);\n            } else {\n              newMaxX.setDate(newMaxX.getDate() + 2);\n            }\n\n            gl.maxX = new Date(newMaxX).getTime();\n            console.log(gl.minX, gl.maxX);\n          } else if (cnf.xaxis.type === 'numeric' || cnf.xaxis.type === 'category' && !gl.noLabelsProvided) {\n            gl.minX = gl.minX - 2;\n            gl.initialMinX = gl.minX;\n            gl.maxX = gl.maxX + 2;\n            gl.initialMaxX = gl.maxX;\n          }\n        }\n      }\n    }, {\n      key: \"_getMinXDiff\",\n      value: function _getMinXDiff() {\n        var gl = this.w.globals;\n\n        if (gl.isXNumeric) {\n          // get the least x diff if numeric x axis is present\n          gl.seriesX.forEach(function (sX, i) {\n            if (sX.length === 1) {\n              // a small hack to prevent overlapping multiple bars when there is just 1 datapoint in bar series.\n              // fix #811\n              sX.push(gl.seriesX[gl.maxValsInArrayIndex][gl.seriesX[gl.maxValsInArrayIndex].length - 1]);\n            } // fix #983 (clone the array to avoid side effects)\n\n\n            var seriesX = sX.slice();\n            seriesX.sort(function (a, b) {\n              return a - b;\n            });\n            seriesX.forEach(function (s, j) {\n              if (j > 0) {\n                var xDiff = s - seriesX[j - 1];\n\n                if (xDiff > 0) {\n                  gl.minXDiff = Math.min(xDiff, gl.minXDiff);\n                }\n              }\n            });\n\n            if (gl.dataPoints === 1 && gl.minXDiff === Number.MAX_VALUE) {\n              // fixes apexcharts.js #1221\n              gl.minXDiff = 0.5;\n            }\n          });\n        }\n      }\n    }, {\n      key: \"_setStackedMinMax\",\n      value: function _setStackedMinMax() {\n        var gl = this.w.globals; // for stacked charts, we calculate each series's parallel values. i.e, series[0][j] + series[1][j] .... [series[i.length][j]] and get the max out of it\n\n        var stackedPoss = [];\n        var stackedNegs = [];\n\n        if (gl.series.length) {\n          for (var j = 0; j < gl.series[gl.maxValsInArrayIndex].length; j++) {\n            var poss = 0;\n            var negs = 0;\n\n            for (var i = 0; i < gl.series.length; i++) {\n              if (gl.series[i][j] !== null && Utils$1.isNumber(gl.series[i][j])) {\n                // 0.0001 fixes #185 when values are very small\n                gl.series[i][j] > 0 ? poss = poss + parseFloat(gl.series[i][j]) + 0.0001 : negs = negs + parseFloat(gl.series[i][j]);\n              }\n\n              if (i === gl.series.length - 1) {\n                // push all the totals to the array for future use\n                stackedPoss.push(poss);\n                stackedNegs.push(negs);\n              }\n            }\n          }\n        } // get the max/min out of the added parallel values\n\n\n        for (var z = 0; z < stackedPoss.length; z++) {\n          gl.maxY = Math.max(gl.maxY, stackedPoss[z]);\n          gl.minY = Math.min(gl.minY, stackedNegs[z]);\n        }\n      }\n    }]);\n\n    return Range;\n  }();\n\n  /**\n   * ApexCharts YAxis Class for drawing Y-Axis.\n   *\n   * @module YAxis\n   **/\n\n  var YAxis = /*#__PURE__*/function () {\n    function YAxis(ctx) {\n      _classCallCheck(this, YAxis);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.xaxisFontSize = w.config.xaxis.labels.style.fontSize;\n      this.axisFontFamily = w.config.xaxis.labels.style.fontFamily;\n      this.xaxisForeColors = w.config.xaxis.labels.style.colors;\n      this.isCategoryBarHorizontal = w.config.chart.type === 'bar' && w.config.plotOptions.bar.horizontal;\n      this.xAxisoffX = 0;\n\n      if (w.config.xaxis.position === 'bottom') {\n        this.xAxisoffX = w.globals.gridHeight;\n      }\n\n      this.drawnLabels = [];\n      this.axesUtils = new AxesUtils(ctx);\n    }\n\n    _createClass(YAxis, [{\n      key: \"drawYaxis\",\n      value: function drawYaxis(realIndex) {\n        var _this = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var yaxisStyle = w.config.yaxis[realIndex].labels.style;\n        var yaxisFontSize = yaxisStyle.fontSize;\n        var yaxisFontFamily = yaxisStyle.fontFamily;\n        var yaxisFontWeight = yaxisStyle.fontWeight;\n        var elYaxis = graphics.group({\n          class: 'apexcharts-yaxis',\n          rel: realIndex,\n          transform: 'translate(' + w.globals.translateYAxisX[realIndex] + ', 0)'\n        });\n\n        if (this.axesUtils.isYAxisHidden(realIndex)) {\n          return elYaxis;\n        }\n\n        var elYaxisTexts = graphics.group({\n          class: 'apexcharts-yaxis-texts-g'\n        });\n        elYaxis.add(elYaxisTexts);\n        var tickAmount = w.globals.yAxisScale[realIndex].result.length - 1; // labelsDivider is simply svg height/number of ticks\n\n        var labelsDivider = w.globals.gridHeight / tickAmount; // initial label position = 0;\n\n        var l = w.globals.translateY;\n        var lbFormatter = w.globals.yLabelFormatters[realIndex];\n        var labels = w.globals.yAxisScale[realIndex].result.slice();\n        labels = this.axesUtils.checkForReversedLabels(realIndex, labels);\n        var firstLabel = '';\n\n        if (w.config.yaxis[realIndex].labels.show) {\n          var _loop = function _loop(i) {\n            var val = labels[i];\n            val = lbFormatter(val, i, w);\n            var xPad = w.config.yaxis[realIndex].labels.padding;\n\n            if (w.config.yaxis[realIndex].opposite && w.config.yaxis.length !== 0) {\n              xPad = xPad * -1;\n            }\n\n            var yColors = _this.axesUtils.getYAxisForeColor(yaxisStyle.colors, realIndex);\n\n            var getForeColor = function getForeColor() {\n              return Array.isArray(yColors) ? yColors[i] : yColors;\n            };\n\n            var label = graphics.drawText({\n              x: xPad,\n              y: l + tickAmount / 10 + w.config.yaxis[realIndex].labels.offsetY + 1,\n              text: val,\n              textAnchor: w.config.yaxis[realIndex].opposite ? 'start' : 'end',\n              fontSize: yaxisFontSize,\n              fontFamily: yaxisFontFamily,\n              fontWeight: yaxisFontWeight,\n              foreColor: getForeColor(),\n              isPlainText: false,\n              cssClass: 'apexcharts-yaxis-label ' + yaxisStyle.cssClass\n            });\n\n            if (i === tickAmount) {\n              firstLabel = label;\n            }\n\n            elYaxisTexts.add(label);\n            var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n            elTooltipTitle.textContent = Array.isArray(val) ? val.join(' ') : val;\n            label.node.appendChild(elTooltipTitle);\n\n            if (w.config.yaxis[realIndex].labels.rotate !== 0) {\n              var firstabelRotatingCenter = graphics.rotateAroundCenter(firstLabel.node);\n              var labelRotatingCenter = graphics.rotateAroundCenter(label.node);\n              label.node.setAttribute('transform', \"rotate(\".concat(w.config.yaxis[realIndex].labels.rotate, \" \").concat(firstabelRotatingCenter.x, \" \").concat(labelRotatingCenter.y, \")\"));\n            }\n\n            l = l + labelsDivider;\n          };\n\n          for (var i = tickAmount; i >= 0; i--) {\n            _loop(i);\n          }\n        }\n\n        if (w.config.yaxis[realIndex].title.text !== undefined) {\n          var elYaxisTitle = graphics.group({\n            class: 'apexcharts-yaxis-title'\n          });\n          var _x = 0;\n\n          if (w.config.yaxis[realIndex].opposite) {\n            _x = w.globals.translateYAxisX[realIndex];\n          }\n\n          var elYAxisTitleText = graphics.drawText({\n            x: _x,\n            y: w.globals.gridHeight / 2 + w.globals.translateY + w.config.yaxis[realIndex].title.offsetY,\n            text: w.config.yaxis[realIndex].title.text,\n            textAnchor: 'end',\n            foreColor: w.config.yaxis[realIndex].title.style.color,\n            fontSize: w.config.yaxis[realIndex].title.style.fontSize,\n            fontWeight: w.config.yaxis[realIndex].title.style.fontWeight,\n            fontFamily: w.config.yaxis[realIndex].title.style.fontFamily,\n            cssClass: 'apexcharts-yaxis-title-text ' + w.config.yaxis[realIndex].title.style.cssClass\n          });\n          elYaxisTitle.add(elYAxisTitleText);\n          elYaxis.add(elYaxisTitle);\n        }\n\n        var axisBorder = w.config.yaxis[realIndex].axisBorder;\n        var x = 31 + axisBorder.offsetX;\n\n        if (w.config.yaxis[realIndex].opposite) {\n          x = -31 - axisBorder.offsetX;\n        }\n\n        if (axisBorder.show) {\n          var elVerticalLine = graphics.drawLine(x, w.globals.translateY + axisBorder.offsetY - 2, x, w.globals.gridHeight + w.globals.translateY + axisBorder.offsetY + 2, axisBorder.color, 0, axisBorder.width);\n          elYaxis.add(elVerticalLine);\n        }\n\n        if (w.config.yaxis[realIndex].axisTicks.show) {\n          this.axesUtils.drawYAxisTicks(x, tickAmount, axisBorder, w.config.yaxis[realIndex].axisTicks, realIndex, labelsDivider, elYaxis);\n        }\n\n        return elYaxis;\n      } // This actually becomes horizontal axis (for bar charts)\n\n    }, {\n      key: \"drawYaxisInversed\",\n      value: function drawYaxisInversed(realIndex) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var elXaxis = graphics.group({\n          class: 'apexcharts-xaxis apexcharts-yaxis-inversed'\n        });\n        var elXaxisTexts = graphics.group({\n          class: 'apexcharts-xaxis-texts-g',\n          transform: \"translate(\".concat(w.globals.translateXAxisX, \", \").concat(w.globals.translateXAxisY, \")\")\n        });\n        elXaxis.add(elXaxisTexts);\n        var tickAmount = w.globals.yAxisScale[realIndex].result.length - 1; // labelsDivider is simply svg width/number of ticks\n\n        var labelsDivider = w.globals.gridWidth / tickAmount + 0.1; // initial label position;\n\n        var l = labelsDivider + w.config.xaxis.labels.offsetX;\n        var lbFormatter = w.globals.xLabelFormatter;\n        var labels = w.globals.yAxisScale[realIndex].result.slice();\n        var timescaleLabels = w.globals.timescaleLabels;\n\n        if (timescaleLabels.length > 0) {\n          this.xaxisLabels = timescaleLabels.slice();\n          labels = timescaleLabels.slice();\n          tickAmount = labels.length;\n        }\n\n        labels = this.axesUtils.checkForReversedLabels(realIndex, labels);\n        var tl = timescaleLabels.length;\n\n        if (w.config.xaxis.labels.show) {\n          for (var i = tl ? 0 : tickAmount; tl ? i < tl : i >= 0; tl ? i++ : i--) {\n            var val = labels[i];\n            val = lbFormatter(val, i, w);\n            var x = w.globals.gridWidth + w.globals.padHorizontal - (l - labelsDivider + w.config.xaxis.labels.offsetX);\n\n            if (timescaleLabels.length) {\n              var label = this.axesUtils.getLabel(labels, timescaleLabels, x, i, this.drawnLabels, this.xaxisFontSize);\n              x = label.x;\n              val = label.text;\n              this.drawnLabels.push(label.text);\n\n              if (i === 0 && w.globals.skipFirstTimelinelabel) {\n                val = '';\n              }\n\n              if (i === labels.length - 1 && w.globals.skipLastTimelinelabel) {\n                val = '';\n              }\n            }\n\n            var elTick = graphics.drawText({\n              x: x,\n              y: this.xAxisoffX + w.config.xaxis.labels.offsetY + 30 - (w.config.xaxis.position === 'top' ? w.globals.xAxisHeight + w.config.xaxis.axisTicks.height - 2 : 0),\n              text: val,\n              textAnchor: 'middle',\n              foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[realIndex] : this.xaxisForeColors,\n              fontSize: this.xaxisFontSize,\n              fontFamily: this.xaxisFontFamily,\n              fontWeight: w.config.xaxis.labels.style.fontWeight,\n              isPlainText: false,\n              cssClass: 'apexcharts-xaxis-label ' + w.config.xaxis.labels.style.cssClass\n            });\n            elXaxisTexts.add(elTick);\n            elTick.tspan(val);\n            var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n            elTooltipTitle.textContent = val;\n            elTick.node.appendChild(elTooltipTitle);\n            l = l + labelsDivider;\n          }\n        }\n\n        this.inversedYAxisTitleText(elXaxis);\n        this.inversedYAxisBorder(elXaxis);\n        return elXaxis;\n      }\n    }, {\n      key: \"inversedYAxisBorder\",\n      value: function inversedYAxisBorder(parent) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var axisBorder = w.config.xaxis.axisBorder;\n\n        if (axisBorder.show) {\n          var lineCorrection = 0;\n\n          if (w.config.chart.type === 'bar' && w.globals.isXNumeric) {\n            lineCorrection = lineCorrection - 15;\n          }\n\n          var elHorzLine = graphics.drawLine(w.globals.padHorizontal + lineCorrection + axisBorder.offsetX, this.xAxisoffX, w.globals.gridWidth, this.xAxisoffX, axisBorder.color, 0, axisBorder.height);\n          parent.add(elHorzLine);\n        }\n      }\n    }, {\n      key: \"inversedYAxisTitleText\",\n      value: function inversedYAxisTitleText(parent) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n\n        if (w.config.xaxis.title.text !== undefined) {\n          var elYaxisTitle = graphics.group({\n            class: 'apexcharts-xaxis-title apexcharts-yaxis-title-inversed'\n          });\n          var elYAxisTitleText = graphics.drawText({\n            x: w.globals.gridWidth / 2 + w.config.xaxis.title.offsetX,\n            y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(w.config.xaxis.title.style.fontSize) + w.config.xaxis.title.offsetY + 20,\n            text: w.config.xaxis.title.text,\n            textAnchor: 'middle',\n            fontSize: w.config.xaxis.title.style.fontSize,\n            fontFamily: w.config.xaxis.title.style.fontFamily,\n            fontWeight: w.config.xaxis.title.style.fontWeight,\n            foreColor: w.config.xaxis.title.style.color,\n            cssClass: 'apexcharts-xaxis-title-text ' + w.config.xaxis.title.style.cssClass\n          });\n          elYaxisTitle.add(elYAxisTitleText);\n          parent.add(elYaxisTitle);\n        }\n      }\n    }, {\n      key: \"yAxisTitleRotate\",\n      value: function yAxisTitleRotate(realIndex, yAxisOpposite) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var yAxisLabelsCoord = {\n          width: 0,\n          height: 0\n        };\n        var yAxisTitleCoord = {\n          width: 0,\n          height: 0\n        };\n        var elYAxisLabelsWrap = w.globals.dom.baseEl.querySelector(\" .apexcharts-yaxis[rel='\".concat(realIndex, \"'] .apexcharts-yaxis-texts-g\"));\n\n        if (elYAxisLabelsWrap !== null) {\n          yAxisLabelsCoord = elYAxisLabelsWrap.getBoundingClientRect();\n        }\n\n        var yAxisTitle = w.globals.dom.baseEl.querySelector(\".apexcharts-yaxis[rel='\".concat(realIndex, \"'] .apexcharts-yaxis-title text\"));\n\n        if (yAxisTitle !== null) {\n          yAxisTitleCoord = yAxisTitle.getBoundingClientRect();\n        }\n\n        if (yAxisTitle !== null) {\n          var x = this.xPaddingForYAxisTitle(realIndex, yAxisLabelsCoord, yAxisTitleCoord, yAxisOpposite);\n          yAxisTitle.setAttribute('x', x.xPos - (yAxisOpposite ? 10 : 0));\n        }\n\n        if (yAxisTitle !== null) {\n          var titleRotatingCenter = graphics.rotateAroundCenter(yAxisTitle);\n          yAxisTitle.setAttribute('transform', \"rotate(\".concat(yAxisOpposite ? w.config.yaxis[realIndex].title.rotate * -1 : w.config.yaxis[realIndex].title.rotate, \" \").concat(titleRotatingCenter.x, \" \").concat(titleRotatingCenter.y, \")\"));\n        }\n      }\n    }, {\n      key: \"xPaddingForYAxisTitle\",\n      value: function xPaddingForYAxisTitle(realIndex, yAxisLabelsCoord, yAxisTitleCoord, yAxisOpposite) {\n        var w = this.w;\n        var oppositeAxisCount = 0;\n        var x = 0;\n        var padd = 10;\n\n        if (w.config.yaxis[realIndex].title.text === undefined || realIndex < 0) {\n          return {\n            xPos: x,\n            padd: 0\n          };\n        }\n\n        if (yAxisOpposite) {\n          x = yAxisLabelsCoord.width + w.config.yaxis[realIndex].title.offsetX + yAxisTitleCoord.width / 2 + padd / 2;\n          oppositeAxisCount += 1;\n\n          if (oppositeAxisCount === 0) {\n            x = x - padd / 2;\n          }\n        } else {\n          x = yAxisLabelsCoord.width * -1 + w.config.yaxis[realIndex].title.offsetX + padd / 2 + yAxisTitleCoord.width / 2;\n\n          if (w.globals.isBarHorizontal) {\n            padd = 25;\n            x = yAxisLabelsCoord.width * -1 - w.config.yaxis[realIndex].title.offsetX - padd;\n          }\n        }\n\n        return {\n          xPos: x,\n          padd: padd\n        };\n      } // sets the x position of the y-axis by counting the labels width, title width and any offset\n\n    }, {\n      key: \"setYAxisXPosition\",\n      value: function setYAxisXPosition(yaxisLabelCoords, yTitleCoords) {\n        var w = this.w;\n        var xLeft = 0;\n        var xRight = 0;\n        var leftOffsetX = 18;\n        var rightOffsetX = 1;\n\n        if (w.config.yaxis.length > 1) {\n          this.multipleYs = true;\n        }\n\n        w.config.yaxis.map(function (yaxe, index) {\n          var shouldNotDrawAxis = w.globals.ignoreYAxisIndexes.indexOf(index) > -1 || !yaxe.show || yaxe.floating || yaxisLabelCoords[index].width === 0;\n          var axisWidth = yaxisLabelCoords[index].width + yTitleCoords[index].width;\n\n          if (!yaxe.opposite) {\n            xLeft = w.globals.translateX - leftOffsetX;\n\n            if (!shouldNotDrawAxis) {\n              leftOffsetX = leftOffsetX + axisWidth + 20;\n            }\n\n            w.globals.translateYAxisX[index] = xLeft + yaxe.labels.offsetX;\n          } else {\n            if (w.globals.isBarHorizontal) {\n              xRight = w.globals.gridWidth + w.globals.translateX - 1;\n              w.globals.translateYAxisX[index] = xRight - yaxe.labels.offsetX;\n            } else {\n              xRight = w.globals.gridWidth + w.globals.translateX + rightOffsetX;\n\n              if (!shouldNotDrawAxis) {\n                rightOffsetX = rightOffsetX + axisWidth + 20;\n              }\n\n              w.globals.translateYAxisX[index] = xRight - yaxe.labels.offsetX + 20;\n            }\n          }\n        });\n      }\n    }, {\n      key: \"setYAxisTextAlignments\",\n      value: function setYAxisTextAlignments() {\n        var w = this.w;\n        var yaxis = w.globals.dom.baseEl.getElementsByClassName(\"apexcharts-yaxis\");\n        yaxis = Utils$1.listToArray(yaxis);\n        yaxis.forEach(function (y, index) {\n          var yaxe = w.config.yaxis[index]; // proceed only if user has specified alignment\n\n          if (yaxe && yaxe.labels.align !== undefined) {\n            var yAxisInner = w.globals.dom.baseEl.querySelector(\".apexcharts-yaxis[rel='\".concat(index, \"'] .apexcharts-yaxis-texts-g\"));\n            var yAxisTexts = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-yaxis[rel='\".concat(index, \"'] .apexcharts-yaxis-label\"));\n            yAxisTexts = Utils$1.listToArray(yAxisTexts);\n            var rect = yAxisInner.getBoundingClientRect();\n\n            if (yaxe.labels.align === 'left') {\n              yAxisTexts.forEach(function (label, lI) {\n                label.setAttribute('text-anchor', 'start');\n              });\n\n              if (!yaxe.opposite) {\n                yAxisInner.setAttribute('transform', \"translate(-\".concat(rect.width, \", 0)\"));\n              }\n            } else if (yaxe.labels.align === 'center') {\n              yAxisTexts.forEach(function (label, lI) {\n                label.setAttribute('text-anchor', 'middle');\n              });\n              yAxisInner.setAttribute('transform', \"translate(\".concat(rect.width / 2 * (!yaxe.opposite ? -1 : 1), \", 0)\"));\n            } else if (yaxe.labels.align === 'right') {\n              yAxisTexts.forEach(function (label, lI) {\n                label.setAttribute('text-anchor', 'end');\n              });\n\n              if (yaxe.opposite) {\n                yAxisInner.setAttribute('transform', \"translate(\".concat(rect.width, \", 0)\"));\n              }\n            }\n          }\n        });\n      }\n    }]);\n\n    return YAxis;\n  }();\n\n  var Events = /*#__PURE__*/function () {\n    function Events(ctx) {\n      _classCallCheck(this, Events);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.documentEvent = Utils$1.bind(this.documentEvent, this);\n    }\n\n    _createClass(Events, [{\n      key: \"addEventListener\",\n      value: function addEventListener(name, handler) {\n        var w = this.w;\n\n        if (w.globals.events.hasOwnProperty(name)) {\n          w.globals.events[name].push(handler);\n        } else {\n          w.globals.events[name] = [handler];\n        }\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(name, handler) {\n        var w = this.w;\n\n        if (!w.globals.events.hasOwnProperty(name)) {\n          return;\n        }\n\n        var index = w.globals.events[name].indexOf(handler);\n\n        if (index !== -1) {\n          w.globals.events[name].splice(index, 1);\n        }\n      }\n    }, {\n      key: \"fireEvent\",\n      value: function fireEvent(name, args) {\n        var w = this.w;\n\n        if (!w.globals.events.hasOwnProperty(name)) {\n          return;\n        }\n\n        if (!args || !args.length) {\n          args = [];\n        }\n\n        var evs = w.globals.events[name];\n        var l = evs.length;\n\n        for (var i = 0; i < l; i++) {\n          evs[i].apply(null, args);\n        }\n      }\n    }, {\n      key: \"setupEventHandlers\",\n      value: function setupEventHandlers() {\n        var _this = this;\n\n        var w = this.w;\n        var me = this.ctx;\n        var clickableArea = w.globals.dom.baseEl.querySelector(w.globals.chartClass);\n        this.ctx.eventList.forEach(function (event) {\n          clickableArea.addEventListener(event, function (e) {\n            var opts = Object.assign({}, w, {\n              seriesIndex: w.globals.capturedSeriesIndex,\n              dataPointIndex: w.globals.capturedDataPointIndex\n            });\n\n            if (e.type === 'mousemove' || e.type === 'touchmove') {\n              if (typeof w.config.chart.events.mouseMove === 'function') {\n                w.config.chart.events.mouseMove(e, me, opts);\n              }\n            } else if (e.type === 'mouseleave' || e.type === 'touchleave') {\n              if (typeof w.config.chart.events.mouseLeave === 'function') {\n                w.config.chart.events.mouseLeave(e, me, opts);\n              }\n            } else if (e.type === 'mouseup' && e.which === 1 || e.type === 'touchend') {\n              if (typeof w.config.chart.events.click === 'function') {\n                w.config.chart.events.click(e, me, opts);\n              }\n\n              me.ctx.events.fireEvent('click', [e, me, opts]);\n            }\n          }, {\n            capture: false,\n            passive: true\n          });\n        });\n        this.ctx.eventList.forEach(function (event) {\n          w.globals.dom.baseEl.addEventListener(event, _this.documentEvent, {\n            passive: true\n          });\n        });\n        this.ctx.core.setupBrushHandler();\n      }\n    }, {\n      key: \"documentEvent\",\n      value: function documentEvent(e) {\n        var w = this.w;\n        var target = e.target.className;\n\n        if (e.type === 'click') {\n          var elMenu = w.globals.dom.baseEl.querySelector('.apexcharts-menu');\n\n          if (elMenu && elMenu.classList.contains('apexcharts-menu-open') && target !== 'apexcharts-menu-icon') {\n            elMenu.classList.remove('apexcharts-menu-open');\n          }\n        }\n\n        w.globals.clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\n        w.globals.clientY = e.type === 'touchmove' ? e.touches[0].clientY : e.clientY;\n      }\n    }]);\n\n    return Events;\n  }();\n\n  var Localization = /*#__PURE__*/function () {\n    function Localization(ctx) {\n      _classCallCheck(this, Localization);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Localization, [{\n      key: \"setCurrentLocaleValues\",\n      value: function setCurrentLocaleValues(localeName) {\n        var locales = this.w.config.chart.locales; // check if user has specified locales in global Apex variable\n        // if yes - then extend those with local chart's locale\n\n        if (window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0) {\n          locales = this.w.config.chart.locales.concat(window.Apex.chart.locales);\n        } // find the locale from the array of locales which user has set (either by chart.defaultLocale or by calling setLocale() method.)\n\n\n        var selectedLocale = locales.filter(function (c) {\n          return c.name === localeName;\n        })[0];\n\n        if (selectedLocale) {\n          // create a complete locale object by extending defaults so you don't get undefined errors.\n          var ret = Utils$1.extend(en, selectedLocale); // store these locale options in global var for ease access\n\n          this.w.globals.locale = ret.options;\n        } else {\n          throw new Error('Wrong locale name provided. Please make sure you set the correct locale name in options');\n        }\n      }\n    }]);\n\n    return Localization;\n  }();\n\n  var Axes = /*#__PURE__*/function () {\n    function Axes(ctx) {\n      _classCallCheck(this, Axes);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Axes, [{\n      key: \"drawAxis\",\n      value: function drawAxis(type, xyRatios) {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        var xAxis = new XAxis(this.ctx);\n        var yAxis = new YAxis(this.ctx);\n\n        if (gl.axisCharts && type !== 'radar') {\n          var elXaxis, elYaxis;\n\n          if (gl.isBarHorizontal) {\n            elYaxis = yAxis.drawYaxisInversed(0);\n            elXaxis = xAxis.drawXaxisInversed(0);\n            gl.dom.elGraphical.add(elXaxis);\n            gl.dom.elGraphical.add(elYaxis);\n          } else {\n            elXaxis = xAxis.drawXaxis();\n            gl.dom.elGraphical.add(elXaxis);\n            cnf.yaxis.map(function (yaxe, index) {\n              if (gl.ignoreYAxisIndexes.indexOf(index) === -1) {\n                elYaxis = yAxis.drawYaxis(index);\n                gl.dom.Paper.add(elYaxis);\n              }\n            });\n          }\n        }\n      }\n    }]);\n\n    return Axes;\n  }();\n\n  var Crosshairs = /*#__PURE__*/function () {\n    function Crosshairs(ctx) {\n      _classCallCheck(this, Crosshairs);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Crosshairs, [{\n      key: \"drawXCrosshairs\",\n      value: function drawXCrosshairs() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var filters = new Filters(this.ctx);\n        var crosshairGradient = w.config.xaxis.crosshairs.fill.gradient;\n        var crosshairShadow = w.config.xaxis.crosshairs.dropShadow;\n        var fillType = w.config.xaxis.crosshairs.fill.type;\n        var gradientFrom = crosshairGradient.colorFrom;\n        var gradientTo = crosshairGradient.colorTo;\n        var opacityFrom = crosshairGradient.opacityFrom;\n        var opacityTo = crosshairGradient.opacityTo;\n        var stops = crosshairGradient.stops;\n        var shadow = 'none';\n        var dropShadow = crosshairShadow.enabled;\n        var shadowLeft = crosshairShadow.left;\n        var shadowTop = crosshairShadow.top;\n        var shadowBlur = crosshairShadow.blur;\n        var shadowColor = crosshairShadow.color;\n        var shadowOpacity = crosshairShadow.opacity;\n        var xcrosshairsFill = w.config.xaxis.crosshairs.fill.color;\n\n        if (w.config.xaxis.crosshairs.show) {\n          if (fillType === 'gradient') {\n            xcrosshairsFill = graphics.drawGradient('vertical', gradientFrom, gradientTo, opacityFrom, opacityTo, null, stops, null);\n          }\n\n          var xcrosshairs = graphics.drawRect();\n\n          if (w.config.xaxis.crosshairs.width === 1) {\n            // to prevent drawing 2 lines, convert rect to line\n            xcrosshairs = graphics.drawLine();\n          }\n\n          var gridHeight = w.globals.gridHeight;\n\n          if (!Utils$1.isNumber(gridHeight) || gridHeight < 0) {\n            gridHeight = 0;\n          }\n\n          var crosshairsWidth = w.config.xaxis.crosshairs.width;\n\n          if (!Utils$1.isNumber(crosshairsWidth) || crosshairsWidth < 0) {\n            crosshairsWidth = 0;\n          }\n\n          xcrosshairs.attr({\n            class: 'apexcharts-xcrosshairs',\n            x: 0,\n            y: 0,\n            y2: gridHeight,\n            width: crosshairsWidth,\n            height: gridHeight,\n            fill: xcrosshairsFill,\n            filter: shadow,\n            'fill-opacity': w.config.xaxis.crosshairs.opacity,\n            stroke: w.config.xaxis.crosshairs.stroke.color,\n            'stroke-width': w.config.xaxis.crosshairs.stroke.width,\n            'stroke-dasharray': w.config.xaxis.crosshairs.stroke.dashArray\n          });\n\n          if (dropShadow) {\n            xcrosshairs = filters.dropShadow(xcrosshairs, {\n              left: shadowLeft,\n              top: shadowTop,\n              blur: shadowBlur,\n              color: shadowColor,\n              opacity: shadowOpacity\n            });\n          }\n\n          w.globals.dom.elGraphical.add(xcrosshairs);\n        }\n      }\n    }, {\n      key: \"drawYCrosshairs\",\n      value: function drawYCrosshairs() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var crosshair = w.config.yaxis[0].crosshairs;\n        var offX = w.globals.barPadForNumericAxis;\n\n        if (w.config.yaxis[0].crosshairs.show) {\n          var ycrosshairs = graphics.drawLine(-offX, 0, w.globals.gridWidth + offX, 0, crosshair.stroke.color, crosshair.stroke.dashArray, crosshair.stroke.width);\n          ycrosshairs.attr({\n            class: 'apexcharts-ycrosshairs'\n          });\n          w.globals.dom.elGraphical.add(ycrosshairs);\n        } // draw an invisible crosshair to help in positioning the yaxis tooltip\n\n\n        var ycrosshairsHidden = graphics.drawLine(-offX, 0, w.globals.gridWidth + offX, 0, crosshair.stroke.color, 0, 0);\n        ycrosshairsHidden.attr({\n          class: 'apexcharts-ycrosshairs-hidden'\n        });\n        w.globals.dom.elGraphical.add(ycrosshairsHidden);\n      }\n    }]);\n\n    return Crosshairs;\n  }();\n\n  /**\n   * ApexCharts Responsive Class to override options for different screen sizes.\n   *\n   * @module Responsive\n   **/\n\n  var Responsive = /*#__PURE__*/function () {\n    function Responsive(ctx) {\n      _classCallCheck(this, Responsive);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    } // the opts parameter if not null has to be set overriding everything\n    // as the opts is set by user externally\n\n\n    _createClass(Responsive, [{\n      key: \"checkResponsiveConfig\",\n      value: function checkResponsiveConfig(opts) {\n        var _this = this;\n\n        var w = this.w;\n        var cnf = w.config; // check if responsive config exists\n\n        if (cnf.responsive.length === 0) return;\n        var res = cnf.responsive.slice();\n        res.sort(function (a, b) {\n          return a.breakpoint > b.breakpoint ? 1 : b.breakpoint > a.breakpoint ? -1 : 0;\n        }).reverse();\n        var config = new Config({});\n\n        var iterateResponsiveOptions = function iterateResponsiveOptions() {\n          var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var largestBreakpoint = res[0].breakpoint;\n          var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n          if (width > largestBreakpoint) {\n            var options = CoreUtils.extendArrayProps(config, w.globals.initialConfig, w);\n            newOptions = Utils$1.extend(options, newOptions);\n            newOptions = Utils$1.extend(w.config, newOptions);\n\n            _this.overrideResponsiveOptions(newOptions);\n          } else {\n            for (var i = 0; i < res.length; i++) {\n              if (width < res[i].breakpoint) {\n                newOptions = CoreUtils.extendArrayProps(config, res[i].options, w);\n                newOptions = Utils$1.extend(w.config, newOptions);\n\n                _this.overrideResponsiveOptions(newOptions);\n              }\n            }\n          }\n        };\n\n        if (opts) {\n          var options = CoreUtils.extendArrayProps(config, opts, w);\n          options = Utils$1.extend(w.config, options);\n          options = Utils$1.extend(options, opts);\n          iterateResponsiveOptions(options);\n        } else {\n          iterateResponsiveOptions({});\n        }\n      }\n    }, {\n      key: \"overrideResponsiveOptions\",\n      value: function overrideResponsiveOptions(newOptions) {\n        var newConfig = new Config(newOptions).init({\n          responsiveOverride: true\n        });\n        this.w.config = newConfig;\n      }\n    }]);\n\n    return Responsive;\n  }();\n\n  /**\n   * ApexCharts Theme Class for setting the colors and palettes.\n   *\n   * @module Theme\n   **/\n\n  var Theme = /*#__PURE__*/function () {\n    function Theme(ctx) {\n      _classCallCheck(this, Theme);\n\n      this.ctx = ctx;\n      this.colors = [];\n      this.w = ctx.w;\n      var w = this.w;\n      this.isColorFn = false;\n      this.isHeatmapDistributed = w.config.chart.type === 'treemap' && w.config.plotOptions.treemap.distributed || w.config.chart.type === 'heatmap' && w.config.plotOptions.heatmap.distributed;\n      this.isBarDistributed = w.config.plotOptions.bar.distributed && (w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar');\n    }\n\n    _createClass(Theme, [{\n      key: \"init\",\n      value: function init() {\n        this.setDefaultColors();\n      }\n    }, {\n      key: \"setDefaultColors\",\n      value: function setDefaultColors() {\n        var _this = this;\n\n        var w = this.w;\n        var utils = new Utils$1();\n        w.globals.dom.elWrap.classList.add(\"apexcharts-theme-\".concat(w.config.theme.mode));\n\n        if (w.config.colors === undefined) {\n          w.globals.colors = this.predefined();\n        } else {\n          w.globals.colors = w.config.colors; // if user provided a function in colors, we need to eval here\n\n          if (Array.isArray(w.config.colors) && w.config.colors.length > 0 && typeof w.config.colors[0] === 'function') {\n            w.globals.colors = w.config.series.map(function (s, i) {\n              var c = w.config.colors[i];\n              if (!c) c = w.config.colors[0];\n\n              if (typeof c === 'function') {\n                _this.isColorFn = true;\n                return c({\n                  value: w.globals.axisCharts ? w.globals.series[i][0] ? w.globals.series[i][0] : 0 : w.globals.series[i],\n                  seriesIndex: i,\n                  dataPointIndex: i,\n                  w: w\n                });\n              }\n\n              return c;\n            });\n          }\n        } // user defined colors in series array\n\n\n        w.globals.seriesColors.map(function (c, i) {\n          if (c) {\n            w.globals.colors[i] = c;\n          }\n        });\n\n        if (w.config.theme.monochrome.enabled) {\n          var monoArr = [];\n          var glsCnt = w.globals.series.length;\n\n          if (this.isBarDistributed || this.isHeatmapDistributed) {\n            glsCnt = w.globals.series[0].length * w.globals.series.length;\n          }\n\n          var mainColor = w.config.theme.monochrome.color;\n          var part = 1 / (glsCnt / w.config.theme.monochrome.shadeIntensity);\n          var shade = w.config.theme.monochrome.shadeTo;\n          var percent = 0;\n\n          for (var gsl = 0; gsl < glsCnt; gsl++) {\n            var newColor = void 0;\n\n            if (shade === 'dark') {\n              newColor = utils.shadeColor(percent * -1, mainColor);\n              percent = percent + part;\n            } else {\n              newColor = utils.shadeColor(percent, mainColor);\n              percent = percent + part;\n            }\n\n            monoArr.push(newColor);\n          }\n\n          w.globals.colors = monoArr.slice();\n        }\n\n        var defaultColors = w.globals.colors.slice(); // if user specified fewer colors than no. of series, push the same colors again\n\n        this.pushExtraColors(w.globals.colors);\n        var colorTypes = ['fill', 'stroke'];\n        colorTypes.forEach(function (c) {\n          if (w.config[c].colors === undefined) {\n            w.globals[c].colors = _this.isColorFn ? w.config.colors : defaultColors;\n          } else {\n            w.globals[c].colors = w.config[c].colors.slice();\n          }\n\n          _this.pushExtraColors(w.globals[c].colors);\n        });\n\n        if (w.config.dataLabels.style.colors === undefined) {\n          w.globals.dataLabels.style.colors = defaultColors;\n        } else {\n          w.globals.dataLabels.style.colors = w.config.dataLabels.style.colors.slice();\n        }\n\n        this.pushExtraColors(w.globals.dataLabels.style.colors, 50);\n\n        if (w.config.plotOptions.radar.polygons.fill.colors === undefined) {\n          w.globals.radarPolygons.fill.colors = [w.config.theme.mode === 'dark' ? '#424242' : 'none'];\n        } else {\n          w.globals.radarPolygons.fill.colors = w.config.plotOptions.radar.polygons.fill.colors.slice();\n        }\n\n        this.pushExtraColors(w.globals.radarPolygons.fill.colors, 20); // The point colors\n\n        if (w.config.markers.colors === undefined) {\n          w.globals.markers.colors = defaultColors;\n        } else {\n          w.globals.markers.colors = w.config.markers.colors.slice();\n        }\n\n        this.pushExtraColors(w.globals.markers.colors);\n      } // When the number of colors provided is less than the number of series, this method\n      // will push same colors to the list\n      // params:\n      // distributed is only valid for distributed column/bar charts\n\n    }, {\n      key: \"pushExtraColors\",\n      value: function pushExtraColors(colorSeries, length) {\n        var distributed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var w = this.w;\n        var len = length || w.globals.series.length;\n\n        if (distributed === null) {\n          distributed = this.isBarDistributed || this.isHeatmapDistributed || w.config.chart.type === 'heatmap' && w.config.plotOptions.heatmap.colorScale.inverse;\n        }\n\n        if (distributed && w.globals.series.length) {\n          len = w.globals.series[w.globals.maxValsInArrayIndex].length * w.globals.series.length;\n        }\n\n        if (colorSeries.length < len) {\n          var diff = len - colorSeries.length;\n\n          for (var i = 0; i < diff; i++) {\n            colorSeries.push(colorSeries[i]);\n          }\n        }\n      }\n    }, {\n      key: \"updateThemeOptions\",\n      value: function updateThemeOptions(options) {\n        options.chart = options.chart || {};\n        options.tooltip = options.tooltip || {};\n        var mode = options.theme.mode || 'light';\n        var palette = options.theme.palette ? options.theme.palette : mode === 'dark' ? 'palette4' : 'palette1';\n        var foreColor = options.chart.foreColor ? options.chart.foreColor : mode === 'dark' ? '#f6f7f8' : '#373d3f';\n        options.tooltip.theme = mode;\n        options.chart.foreColor = foreColor;\n        options.theme.palette = palette;\n        return options;\n      }\n    }, {\n      key: \"predefined\",\n      value: function predefined() {\n        var palette = this.w.config.theme.palette; // D6E3F8, FCEFEF, DCE0D9, A5978B, EDDDD4, D6E3F8, FEF5EF\n\n        switch (palette) {\n          case 'palette1':\n            this.colors = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0'];\n            break;\n\n          case 'palette2':\n            this.colors = ['#3f51b5', '#03a9f4', '#4caf50', '#f9ce1d', '#FF9800'];\n            break;\n\n          case 'palette3':\n            this.colors = ['#33b2df', '#546E7A', '#d4526e', '#13d8aa', '#A5978B'];\n            break;\n\n          case 'palette4':\n            this.colors = ['#4ecdc4', '#c7f464', '#81D4FA', '#fd6a6a', '#546E7A'];\n            break;\n\n          case 'palette5':\n            this.colors = ['#2b908f', '#f9a3a4', '#90ee7e', '#fa4443', '#69d2e7'];\n            break;\n\n          case 'palette6':\n            this.colors = ['#449DD1', '#F86624', '#EA3546', '#662E9B', '#C5D86D'];\n            break;\n\n          case 'palette7':\n            this.colors = ['#D7263D', '#1B998B', '#2E294E', '#F46036', '#E2C044'];\n            break;\n\n          case 'palette8':\n            this.colors = ['#662E9B', '#F86624', '#F9C80E', '#EA3546', '#43BCCD'];\n            break;\n\n          case 'palette9':\n            this.colors = ['#5C4742', '#A5978B', '#8D5B4C', '#5A2A27', '#C4BBAF'];\n            break;\n\n          case 'palette10':\n            this.colors = ['#A300D6', '#7D02EB', '#5653FE', '#2983FF', '#00B1F2'];\n            break;\n\n          default:\n            this.colors = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0'];\n            break;\n        }\n\n        return this.colors;\n      }\n    }]);\n\n    return Theme;\n  }();\n\n  var TitleSubtitle = /*#__PURE__*/function () {\n    function TitleSubtitle(ctx) {\n      _classCallCheck(this, TitleSubtitle);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(TitleSubtitle, [{\n      key: \"draw\",\n      value: function draw() {\n        this.drawTitleSubtitle('title');\n        this.drawTitleSubtitle('subtitle');\n      }\n    }, {\n      key: \"drawTitleSubtitle\",\n      value: function drawTitleSubtitle(type) {\n        var w = this.w;\n        var tsConfig = type === 'title' ? w.config.title : w.config.subtitle;\n        var x = w.globals.svgWidth / 2;\n        var y = tsConfig.offsetY;\n        var textAnchor = 'middle';\n\n        if (tsConfig.align === 'left') {\n          x = 10;\n          textAnchor = 'start';\n        } else if (tsConfig.align === 'right') {\n          x = w.globals.svgWidth - 10;\n          textAnchor = 'end';\n        }\n\n        x = x + tsConfig.offsetX;\n        y = y + parseInt(tsConfig.style.fontSize, 10) + tsConfig.margin / 2;\n\n        if (tsConfig.text !== undefined) {\n          var graphics = new Graphics(this.ctx);\n          var titleText = graphics.drawText({\n            x: x,\n            y: y,\n            text: tsConfig.text,\n            textAnchor: textAnchor,\n            fontSize: tsConfig.style.fontSize,\n            fontFamily: tsConfig.style.fontFamily,\n            fontWeight: tsConfig.style.fontWeight,\n            foreColor: tsConfig.style.color,\n            opacity: 1\n          });\n          titleText.node.setAttribute('class', \"apexcharts-\".concat(type, \"-text\"));\n          w.globals.dom.Paper.add(titleText);\n        }\n      }\n    }]);\n\n    return TitleSubtitle;\n  }();\n\n  var Helpers$2 = /*#__PURE__*/function () {\n    function Helpers(dCtx) {\n      _classCallCheck(this, Helpers);\n\n      this.w = dCtx.w;\n      this.dCtx = dCtx;\n    }\n    /**\n     * Get Chart Title/Subtitle Dimensions\n     * @memberof Dimensions\n     * @return {{width, height}}\n     **/\n\n\n    _createClass(Helpers, [{\n      key: \"getTitleSubtitleCoords\",\n      value: function getTitleSubtitleCoords(type) {\n        var w = this.w;\n        var width = 0;\n        var height = 0;\n        var floating = type === 'title' ? w.config.title.floating : w.config.subtitle.floating;\n        var el = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-text\"));\n\n        if (el !== null && !floating) {\n          var coord = el.getBoundingClientRect();\n          width = coord.width;\n          height = w.globals.axisCharts ? coord.height + 5 : coord.height;\n        }\n\n        return {\n          width: width,\n          height: height\n        };\n      }\n    }, {\n      key: \"getLegendsRect\",\n      value: function getLegendsRect() {\n        var w = this.w;\n        var elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n\n        if (!w.config.legend.height && (w.config.legend.position === 'top' || w.config.legend.position === 'bottom')) {\n          // avoid legend to take up all the space\n          elLegendWrap.style.maxHeight = w.globals.svgHeight / 2 + 'px';\n        }\n\n        var lgRect = Object.assign({}, Utils$1.getBoundingClientRect(elLegendWrap));\n\n        if (elLegendWrap !== null && !w.config.legend.floating && w.config.legend.show) {\n          this.dCtx.lgRect = {\n            x: lgRect.x,\n            y: lgRect.y,\n            height: lgRect.height,\n            width: lgRect.height === 0 ? 0 : lgRect.width\n          };\n        } else {\n          this.dCtx.lgRect = {\n            x: 0,\n            y: 0,\n            height: 0,\n            width: 0\n          };\n        } // if legend takes up all of the chart space, we need to restrict it.\n\n\n        if (w.config.legend.position === 'left' || w.config.legend.position === 'right') {\n          if (this.dCtx.lgRect.width * 1.5 > w.globals.svgWidth) {\n            this.dCtx.lgRect.width = w.globals.svgWidth / 1.5;\n          }\n        }\n\n        return this.dCtx.lgRect;\n      }\n    }, {\n      key: \"getLargestStringFromMultiArr\",\n      value: function getLargestStringFromMultiArr(val, arr) {\n        var w = this.w;\n        var valArr = val;\n\n        if (w.globals.isMultiLineX) {\n          // if the xaxis labels has multiline texts (array)\n          var maxArrs = arr.map(function (xl, idx) {\n            return Array.isArray(xl) ? xl.length : 1;\n          });\n          var maxArrLen = Math.max.apply(Math, _toConsumableArray(maxArrs));\n          var maxArrIndex = maxArrs.indexOf(maxArrLen);\n          valArr = arr[maxArrIndex];\n        }\n\n        return valArr;\n      }\n    }]);\n\n    return Helpers;\n  }();\n\n  var DimXAxis = /*#__PURE__*/function () {\n    function DimXAxis(dCtx) {\n      _classCallCheck(this, DimXAxis);\n\n      this.w = dCtx.w;\n      this.dCtx = dCtx;\n    }\n    /**\n     * Get X Axis Dimensions\n     * @memberof Dimensions\n     * @return {{width, height}}\n     **/\n\n\n    _createClass(DimXAxis, [{\n      key: \"getxAxisLabelsCoords\",\n      value: function getxAxisLabelsCoords() {\n        var w = this.w;\n        var xaxisLabels = w.globals.labels.slice();\n\n        if (w.config.xaxis.convertedCatToNumeric && xaxisLabels.length === 0) {\n          xaxisLabels = w.globals.categoryLabels;\n        }\n\n        var rect;\n\n        if (w.globals.timescaleLabels.length > 0) {\n          var coords = this.getxAxisTimeScaleLabelsCoords();\n          rect = {\n            width: coords.width,\n            height: coords.height\n          };\n          w.globals.rotateXLabels = false;\n        } else {\n          this.dCtx.lgWidthForSideLegends = (w.config.legend.position === 'left' || w.config.legend.position === 'right') && !w.config.legend.floating ? this.dCtx.lgRect.width : 0; // get the longest string from the labels array and also apply label formatter\n\n          var xlbFormatter = w.globals.xLabelFormatter; // prevent changing xaxisLabels to avoid issues in multi-yaxes - fix #522\n\n          var val = Utils$1.getLargestStringFromArr(xaxisLabels);\n          var valArr = this.dCtx.dimHelpers.getLargestStringFromMultiArr(val, xaxisLabels); // the labels gets changed for bar charts\n\n          if (w.globals.isBarHorizontal) {\n            val = w.globals.yAxisScale[0].result.reduce(function (a, b) {\n              return a.length > b.length ? a : b;\n            }, 0);\n            valArr = val;\n          }\n\n          var xFormat = new Formatters(this.dCtx.ctx);\n          var timestamp = val;\n          val = xFormat.xLabelFormat(xlbFormatter, val, timestamp, {\n            i: undefined,\n            dateFormatter: new DateTime(this.dCtx.ctx).formatDate,\n            w: w\n          });\n          valArr = xFormat.xLabelFormat(xlbFormatter, valArr, timestamp, {\n            i: undefined,\n            dateFormatter: new DateTime(this.dCtx.ctx).formatDate,\n            w: w\n          });\n\n          if (w.config.xaxis.convertedCatToNumeric && typeof val === 'undefined' || String(val).trim() === '') {\n            val = '1';\n            valArr = val;\n          }\n\n          var graphics = new Graphics(this.dCtx.ctx);\n          var xLabelrect = graphics.getTextRects(val, w.config.xaxis.labels.style.fontSize);\n          var xArrLabelrect = xLabelrect;\n\n          if (val !== valArr) {\n            xArrLabelrect = graphics.getTextRects(valArr, w.config.xaxis.labels.style.fontSize);\n          }\n\n          rect = {\n            width: xLabelrect.width >= xArrLabelrect.width ? xLabelrect.width : xArrLabelrect.width,\n            height: xLabelrect.height >= xArrLabelrect.height ? xLabelrect.height : xArrLabelrect.height\n          };\n\n          if (rect.width * xaxisLabels.length > w.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && w.config.xaxis.labels.rotate !== 0 || w.config.xaxis.labels.rotateAlways) {\n            if (!w.globals.isBarHorizontal) {\n              w.globals.rotateXLabels = true;\n\n              var getRotatedTextRects = function getRotatedTextRects(text) {\n                return graphics.getTextRects(text, w.config.xaxis.labels.style.fontSize, w.config.xaxis.labels.style.fontFamily, \"rotate(\".concat(w.config.xaxis.labels.rotate, \" 0 0)\"), false);\n              };\n\n              xLabelrect = getRotatedTextRects(val);\n\n              if (val !== valArr) {\n                xArrLabelrect = getRotatedTextRects(valArr);\n              }\n\n              rect.height = (xLabelrect.height > xArrLabelrect.height ? xLabelrect.height : xArrLabelrect.height) / 1.5;\n              rect.width = xLabelrect.width > xArrLabelrect.width ? xLabelrect.width : xArrLabelrect.width;\n            }\n          } else {\n            w.globals.rotateXLabels = false;\n          }\n        }\n\n        if (!w.config.xaxis.labels.show) {\n          rect = {\n            width: 0,\n            height: 0\n          };\n        }\n\n        return {\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      /**\n       * Get X Axis Title Dimensions\n       * @memberof Dimensions\n       * @return {{width, height}}\n       **/\n\n    }, {\n      key: \"getxAxisTitleCoords\",\n      value: function getxAxisTitleCoords() {\n        var w = this.w;\n        var width = 0;\n        var height = 0;\n\n        if (w.config.xaxis.title.text !== undefined) {\n          var graphics = new Graphics(this.dCtx.ctx);\n          var rect = graphics.getTextRects(w.config.xaxis.title.text, w.config.xaxis.title.style.fontSize);\n          width = rect.width;\n          height = rect.height;\n        }\n\n        return {\n          width: width,\n          height: height\n        };\n      }\n    }, {\n      key: \"getxAxisTimeScaleLabelsCoords\",\n      value: function getxAxisTimeScaleLabelsCoords() {\n        var w = this.w;\n        var rect;\n        this.dCtx.timescaleLabels = w.globals.timescaleLabels.slice();\n        var labels = this.dCtx.timescaleLabels.map(function (label) {\n          return label.value;\n        }); //  get the longest string from the labels array and also apply label formatter to it\n\n        var val = labels.reduce(function (a, b) {\n          // if undefined, maybe user didn't pass the datetime(x) values\n          if (typeof a === 'undefined') {\n            console.error('You have possibly supplied invalid Date format. Please supply a valid JavaScript Date');\n            return 0;\n          } else {\n            return a.length > b.length ? a : b;\n          }\n        }, 0);\n        var graphics = new Graphics(this.dCtx.ctx);\n        rect = graphics.getTextRects(val, w.config.xaxis.labels.style.fontSize);\n        var totalWidthRotated = rect.width * 1.05 * labels.length;\n\n        if (totalWidthRotated > w.globals.gridWidth && w.config.xaxis.labels.rotate !== 0) {\n          w.globals.overlappingXLabels = true;\n        }\n\n        return rect;\n      } // In certain cases, the last labels gets cropped in xaxis.\n      // Hence, we add some additional padding based on the label length to avoid the last label being cropped or we don't draw it at all\n\n    }, {\n      key: \"additionalPaddingXLabels\",\n      value: function additionalPaddingXLabels(xaxisLabelCoords) {\n        var _this = this;\n\n        var w = this.w;\n        var gl = w.globals;\n        var cnf = w.config;\n        var xtype = cnf.xaxis.type;\n        var lbWidth = xaxisLabelCoords.width;\n        gl.skipLastTimelinelabel = false;\n        gl.skipFirstTimelinelabel = false;\n        var isBarOpposite = w.config.yaxis[0].opposite && w.globals.isBarHorizontal;\n\n        var isCollapsed = function isCollapsed(i) {\n          return gl.collapsedSeriesIndices.indexOf(i) !== -1;\n        };\n\n        var rightPad = function rightPad(yaxe) {\n          if (_this.dCtx.timescaleLabels && _this.dCtx.timescaleLabels.length) {\n            // for timeline labels, we take the last label and check if it exceeds gridWidth\n            var firstimescaleLabel = _this.dCtx.timescaleLabels[0];\n            var lastTimescaleLabel = _this.dCtx.timescaleLabels[_this.dCtx.timescaleLabels.length - 1];\n            var lastLabelPosition = lastTimescaleLabel.position + lbWidth / 1.75 - _this.dCtx.yAxisWidthRight;\n            var firstLabelPosition = firstimescaleLabel.position - lbWidth / 1.75 + _this.dCtx.yAxisWidthLeft;\n            var lgRightRectWidth = w.config.legend.position === 'right' && _this.dCtx.lgRect.width > 0 ? _this.dCtx.lgRect.width : 0;\n\n            if (lastLabelPosition > gl.svgWidth - gl.translateX - lgRightRectWidth) {\n              gl.skipLastTimelinelabel = true;\n            }\n\n            if (firstLabelPosition < -((!yaxe.show || yaxe.floating) && (cnf.chart.type === 'bar' || cnf.chart.type === 'candlestick' || cnf.chart.type === 'rangeBar' || cnf.chart.type === 'boxPlot') ? lbWidth / 1.75 : 10)) {\n              gl.skipFirstTimelinelabel = true;\n            }\n          } else if (xtype === 'datetime') {\n            // If user has enabled DateTime, but uses own's formatter\n            if (_this.dCtx.gridPad.right < lbWidth && !gl.rotateXLabels) {\n              gl.skipLastTimelinelabel = true;\n            }\n          } else if (xtype !== 'datetime') {\n            if (_this.dCtx.gridPad.right < lbWidth / 2 - _this.dCtx.yAxisWidthRight && !gl.rotateXLabels && !w.config.xaxis.labels.trim && (w.config.xaxis.tickPlacement !== 'between' || w.globals.isBarHorizontal)) {\n              _this.dCtx.xPadRight = lbWidth / 2 + 1;\n            }\n          }\n        };\n\n        var padYAxe = function padYAxe(yaxe, i) {\n          if (isCollapsed(i)) return; // the code below causes issue apexcharts.js#1989\n          // after testing with other use-cases, this has no actual value, hence commented\n          // if (xtype !== 'datetime') {\n          //   if (\n          //     this.dCtx.gridPad.left < lbWidth / 2 - this.dCtx.yAxisWidthLeft &&\n          //     !gl.rotateXLabels &&\n          //     !cnf.xaxis.labels.trim\n          //   ) {\n          //     this.dCtx.xPadLeft = lbWidth / 2 + 1\n          //   }\n          // }\n\n          rightPad(yaxe);\n        };\n\n        cnf.yaxis.forEach(function (yaxe, i) {\n          if (isBarOpposite) {\n            if (_this.dCtx.gridPad.left < lbWidth) {\n              _this.dCtx.xPadLeft = lbWidth / 2 + 1;\n            }\n\n            _this.dCtx.xPadRight = lbWidth / 2 + 1;\n          } else {\n            padYAxe(yaxe, i);\n          }\n        });\n      }\n    }]);\n\n    return DimXAxis;\n  }();\n\n  var DimYAxis = /*#__PURE__*/function () {\n    function DimYAxis(dCtx) {\n      _classCallCheck(this, DimYAxis);\n\n      this.w = dCtx.w;\n      this.dCtx = dCtx;\n    }\n    /**\n     * Get Y Axis Dimensions\n     * @memberof Dimensions\n     * @return {{width, height}}\n     **/\n\n\n    _createClass(DimYAxis, [{\n      key: \"getyAxisLabelsCoords\",\n      value: function getyAxisLabelsCoords() {\n        var _this = this;\n\n        var w = this.w;\n        var width = 0;\n        var height = 0;\n        var ret = [];\n        var labelPad = 10;\n        var axesUtils = new AxesUtils(this.dCtx.ctx);\n        w.config.yaxis.map(function (yaxe, index) {\n          var yS = w.globals.yAxisScale[index];\n          var yAxisMinWidth = 0;\n          if (!axesUtils.isYAxisHidden(index) && yaxe.labels.show && yaxe.labels.minWidth !== undefined) yAxisMinWidth = yaxe.labels.minWidth;\n\n          if (!axesUtils.isYAxisHidden(index) && yaxe.labels.show && yS.result.length) {\n            var lbFormatter = w.globals.yLabelFormatters[index];\n            var minV = yS.niceMin === Number.MIN_VALUE ? 0 : yS.niceMin;\n            var longestStr = String(minV).length > String(yS.niceMax).length ? minV : yS.niceMax; // the second parameter -1 is the index of tick which user can use in the formatter\n\n            var val = lbFormatter(longestStr, {\n              seriesIndex: index,\n              dataPointIndex: -1,\n              w: w\n            });\n            var valArr = val; // if user has specified a custom formatter, and the result is null or empty, we need to discard the formatter and take the value as it is.\n\n            if (typeof val === 'undefined' || val.length === 0) {\n              val = longestStr;\n            }\n\n            if (w.globals.isBarHorizontal) {\n              labelPad = 0;\n              var barYaxisLabels = w.globals.labels.slice(); //  get the longest string from the labels array and also apply label formatter to it\n\n              val = Utils$1.getLargestStringFromArr(barYaxisLabels);\n              val = lbFormatter(val, {\n                seriesIndex: index,\n                dataPointIndex: -1,\n                w: w\n              });\n              valArr = _this.dCtx.dimHelpers.getLargestStringFromMultiArr(val, barYaxisLabels);\n            }\n\n            var graphics = new Graphics(_this.dCtx.ctx);\n            var rotateStr = 'rotate('.concat(yaxe.labels.rotate, ' 0 0)');\n            var rect = graphics.getTextRects(val, yaxe.labels.style.fontSize, yaxe.labels.style.fontFamily, rotateStr, false);\n            var arrLabelrect = rect;\n\n            if (val !== valArr) {\n              arrLabelrect = graphics.getTextRects(valArr, yaxe.labels.style.fontSize, yaxe.labels.style.fontFamily, rotateStr, false);\n            }\n\n            ret.push({\n              width: (yAxisMinWidth > arrLabelrect.width || yAxisMinWidth > rect.width ? yAxisMinWidth : arrLabelrect.width > rect.width ? arrLabelrect.width : rect.width) + labelPad,\n              height: arrLabelrect.height > rect.height ? arrLabelrect.height : rect.height\n            });\n          } else {\n            ret.push({\n              width: width,\n              height: height\n            });\n          }\n        });\n        return ret;\n      }\n      /**\n       * Get Y Axis Dimensions\n       * @memberof Dimensions\n       * @return {{width, height}}\n       **/\n\n    }, {\n      key: \"getyAxisTitleCoords\",\n      value: function getyAxisTitleCoords() {\n        var _this2 = this;\n\n        var w = this.w;\n        var ret = [];\n        w.config.yaxis.map(function (yaxe, index) {\n          if (yaxe.show && yaxe.title.text !== undefined) {\n            var graphics = new Graphics(_this2.dCtx.ctx);\n            var rotateStr = 'rotate('.concat(yaxe.title.rotate, ' 0 0)');\n            var rect = graphics.getTextRects(yaxe.title.text, yaxe.title.style.fontSize, yaxe.title.style.fontFamily, rotateStr, false);\n            ret.push({\n              width: rect.width,\n              height: rect.height\n            });\n          } else {\n            ret.push({\n              width: 0,\n              height: 0\n            });\n          }\n        });\n        return ret;\n      }\n    }, {\n      key: \"getTotalYAxisWidth\",\n      value: function getTotalYAxisWidth() {\n        var w = this.w;\n        var yAxisWidth = 0;\n        var yAxisWidthLeft = 0;\n        var yAxisWidthRight = 0;\n        var padding = w.globals.yAxisScale.length > 1 ? 10 : 0;\n        var axesUtils = new AxesUtils(this.dCtx.ctx);\n\n        var isHiddenYAxis = function isHiddenYAxis(index) {\n          return w.globals.ignoreYAxisIndexes.indexOf(index) > -1;\n        };\n\n        var padForLabelTitle = function padForLabelTitle(coord, index) {\n          var floating = w.config.yaxis[index].floating;\n          var width = 0;\n\n          if (coord.width > 0 && !floating) {\n            width = coord.width + padding;\n\n            if (isHiddenYAxis(index)) {\n              width = width - coord.width - padding;\n            }\n          } else {\n            width = floating || axesUtils.isYAxisHidden(index) ? 0 : 5;\n          }\n\n          w.config.yaxis[index].opposite ? yAxisWidthRight = yAxisWidthRight + width : yAxisWidthLeft = yAxisWidthLeft + width;\n          yAxisWidth = yAxisWidth + width;\n        };\n\n        w.globals.yLabelsCoords.map(function (yLabelCoord, index) {\n          padForLabelTitle(yLabelCoord, index);\n        });\n        w.globals.yTitleCoords.map(function (yTitleCoord, index) {\n          padForLabelTitle(yTitleCoord, index);\n        });\n\n        if (w.globals.isBarHorizontal && !w.config.yaxis[0].floating) {\n          yAxisWidth = w.globals.yLabelsCoords[0].width + w.globals.yTitleCoords[0].width + 15;\n        }\n\n        this.dCtx.yAxisWidthLeft = yAxisWidthLeft;\n        this.dCtx.yAxisWidthRight = yAxisWidthRight;\n        return yAxisWidth;\n      }\n    }]);\n\n    return DimYAxis;\n  }();\n\n  var DimGrid = /*#__PURE__*/function () {\n    function DimGrid(dCtx) {\n      _classCallCheck(this, DimGrid);\n\n      this.w = dCtx.w;\n      this.dCtx = dCtx;\n    }\n\n    _createClass(DimGrid, [{\n      key: \"gridPadForColumnsInNumericAxis\",\n      value: function gridPadForColumnsInNumericAxis(gridWidth) {\n        var w = this.w;\n\n        if (w.globals.noData || w.globals.allSeriesCollapsed) {\n          return 0;\n        }\n\n        var hasBar = function hasBar(type) {\n          return type === 'bar' || type === 'rangeBar' || type === 'candlestick' || type === 'boxPlot';\n        };\n\n        var type = w.config.chart.type;\n        var barWidth = 0;\n        var seriesLen = hasBar(type) ? w.config.series.length : 1;\n\n        if (w.globals.comboBarCount > 0) {\n          seriesLen = w.globals.comboBarCount;\n        }\n\n        w.globals.collapsedSeries.forEach(function (c) {\n          if (hasBar(c.type)) {\n            seriesLen = seriesLen - 1;\n          }\n        });\n\n        if (w.config.chart.stacked) {\n          seriesLen = 1;\n        }\n\n        var barsPresent = hasBar(type) || w.globals.comboBarCount > 0;\n\n        if (barsPresent && w.globals.isXNumeric && !w.globals.isBarHorizontal && seriesLen > 0) {\n          var xRatio = 0;\n          var xRange = Math.abs(w.globals.initialMaxX - w.globals.initialMinX);\n\n          if (xRange <= 3) {\n            xRange = w.globals.dataPoints;\n          }\n\n          xRatio = xRange / gridWidth;\n          var xDivision; // max barwidth should be equal to minXDiff to avoid overlap\n\n          if (w.globals.minXDiff && w.globals.minXDiff / xRatio > 0) {\n            xDivision = w.globals.minXDiff / xRatio;\n          }\n\n          if (xDivision > gridWidth / 2) {\n            xDivision = xDivision / 2;\n          }\n\n          barWidth = xDivision / seriesLen * parseInt(w.config.plotOptions.bar.columnWidth, 10) / 100;\n\n          if (barWidth < 1) {\n            barWidth = 1;\n          }\n\n          barWidth = barWidth / (seriesLen > 1 ? 1 : 1.5) + 5;\n          w.globals.barPadForNumericAxis = barWidth;\n        }\n\n        return barWidth;\n      }\n    }, {\n      key: \"gridPadFortitleSubtitle\",\n      value: function gridPadFortitleSubtitle() {\n        var _this = this;\n\n        var w = this.w;\n        var gl = w.globals;\n        var gridShrinkOffset = this.dCtx.isSparkline || !w.globals.axisCharts ? 0 : 10;\n        var titleSubtitle = ['title', 'subtitle'];\n        titleSubtitle.forEach(function (t) {\n          if (w.config[t].text !== undefined) {\n            gridShrinkOffset += w.config[t].margin;\n          } else {\n            gridShrinkOffset += _this.dCtx.isSparkline || !w.globals.axisCharts ? 0 : 5;\n          }\n        });\n\n        if (w.config.legend.show && w.config.legend.position === 'bottom' && !w.config.legend.floating && !w.globals.axisCharts) {\n          gridShrinkOffset += 10;\n        }\n\n        var titleCoords = this.dCtx.dimHelpers.getTitleSubtitleCoords('title');\n        var subtitleCoords = this.dCtx.dimHelpers.getTitleSubtitleCoords('subtitle');\n        gl.gridHeight = gl.gridHeight - titleCoords.height - subtitleCoords.height - gridShrinkOffset;\n        gl.translateY = gl.translateY + titleCoords.height + subtitleCoords.height + gridShrinkOffset;\n      }\n    }, {\n      key: \"setGridXPosForDualYAxis\",\n      value: function setGridXPosForDualYAxis(yTitleCoords, yaxisLabelCoords) {\n        var w = this.w;\n        var axesUtils = new AxesUtils(this.dCtx.ctx);\n        w.config.yaxis.map(function (yaxe, index) {\n          if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1 && !yaxe.floating && !axesUtils.isYAxisHidden(index)) {\n            if (yaxe.opposite) {\n              w.globals.translateX = w.globals.translateX - (yaxisLabelCoords[index].width + yTitleCoords[index].width) - parseInt(w.config.yaxis[index].labels.style.fontSize, 10) / 1.2 - 12;\n            } // fixes apexcharts.js#1599\n\n\n            if (w.globals.translateX < 2) {\n              w.globals.translateX = 2;\n            }\n          }\n        });\n      }\n    }]);\n\n    return DimGrid;\n  }();\n\n  /**\n   * ApexCharts Dimensions Class for calculating rects of all elements that are drawn and will be drawn.\n   *\n   * @module Dimensions\n   **/\n\n  var Dimensions = /*#__PURE__*/function () {\n    function Dimensions(ctx) {\n      _classCallCheck(this, Dimensions);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.lgRect = {};\n      this.yAxisWidth = 0;\n      this.yAxisWidthLeft = 0;\n      this.yAxisWidthRight = 0;\n      this.xAxisHeight = 0;\n      this.isSparkline = this.w.config.chart.sparkline.enabled;\n      this.dimHelpers = new Helpers$2(this);\n      this.dimYAxis = new DimYAxis(this);\n      this.dimXAxis = new DimXAxis(this);\n      this.dimGrid = new DimGrid(this);\n      this.lgWidthForSideLegends = 0;\n      this.gridPad = this.w.config.grid.padding;\n      this.xPadRight = 0;\n      this.xPadLeft = 0;\n    }\n    /**\n     * @memberof Dimensions\n     * @param {object} w - chart context\n     **/\n\n\n    _createClass(Dimensions, [{\n      key: \"plotCoords\",\n      value: function plotCoords() {\n        var w = this.w;\n        var gl = w.globals;\n        this.lgRect = this.dimHelpers.getLegendsRect();\n\n        if (gl.axisCharts) {\n          // for line / area / scatter / column\n          this.setDimensionsForAxisCharts();\n        } else {\n          // for pie / donuts / circle\n          this.setDimensionsForNonAxisCharts();\n        }\n\n        this.dimGrid.gridPadFortitleSubtitle(); // after calculating everything, apply padding set by user\n\n        gl.gridHeight = gl.gridHeight - this.gridPad.top - this.gridPad.bottom;\n        gl.gridWidth = gl.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;\n        var barWidth = this.dimGrid.gridPadForColumnsInNumericAxis(gl.gridWidth);\n        gl.gridWidth = gl.gridWidth - barWidth * 2;\n        gl.translateX = gl.translateX + this.gridPad.left + this.xPadLeft + (barWidth > 0 ? barWidth + 4 : 0);\n        gl.translateY = gl.translateY + this.gridPad.top;\n      }\n    }, {\n      key: \"setDimensionsForAxisCharts\",\n      value: function setDimensionsForAxisCharts() {\n        var _this = this;\n\n        var w = this.w;\n        var gl = w.globals;\n        var yaxisLabelCoords = this.dimYAxis.getyAxisLabelsCoords();\n        var yTitleCoords = this.dimYAxis.getyAxisTitleCoords();\n        w.globals.yLabelsCoords = [];\n        w.globals.yTitleCoords = [];\n        w.config.yaxis.map(function (yaxe, index) {\n          // store the labels and titles coords in global vars\n          w.globals.yLabelsCoords.push({\n            width: yaxisLabelCoords[index].width,\n            index: index\n          });\n          w.globals.yTitleCoords.push({\n            width: yTitleCoords[index].width,\n            index: index\n          });\n        });\n        this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();\n        var xaxisLabelCoords = this.dimXAxis.getxAxisLabelsCoords();\n        var xtitleCoords = this.dimXAxis.getxAxisTitleCoords();\n        this.conditionalChecksForAxisCoords(xaxisLabelCoords, xtitleCoords);\n        gl.translateXAxisY = w.globals.rotateXLabels ? this.xAxisHeight / 8 : -4;\n        gl.translateXAxisX = w.globals.rotateXLabels && w.globals.isXNumeric && w.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0;\n\n        if (w.globals.isBarHorizontal) {\n          gl.rotateXLabels = false;\n          gl.translateXAxisY = -1 * (parseInt(w.config.xaxis.labels.style.fontSize, 10) / 1.5);\n        }\n\n        gl.translateXAxisY = gl.translateXAxisY + w.config.xaxis.labels.offsetY;\n        gl.translateXAxisX = gl.translateXAxisX + w.config.xaxis.labels.offsetX;\n        var yAxisWidth = this.yAxisWidth;\n        var xAxisHeight = this.xAxisHeight;\n        gl.xAxisLabelsHeight = this.xAxisHeight - xtitleCoords.height;\n        gl.xAxisLabelsWidth = this.xAxisWidth;\n        gl.xAxisHeight = this.xAxisHeight;\n        var translateY = 10;\n\n        if (w.config.chart.type === 'radar' || this.isSparkline) {\n          yAxisWidth = 0;\n          xAxisHeight = gl.goldenPadding;\n        }\n\n        if (this.isSparkline) {\n          this.lgRect = {\n            height: 0,\n            width: 0\n          };\n        }\n\n        if (this.isSparkline || w.config.chart.type === 'treemap') {\n          yAxisWidth = 0;\n          xAxisHeight = 0;\n          translateY = 0;\n        }\n\n        if (!this.isSparkline) {\n          this.dimXAxis.additionalPaddingXLabels(xaxisLabelCoords);\n        }\n\n        var legendTopBottom = function legendTopBottom() {\n          gl.translateX = yAxisWidth;\n          gl.gridHeight = gl.svgHeight - _this.lgRect.height - xAxisHeight - (!_this.isSparkline && w.config.chart.type !== 'treemap' ? w.globals.rotateXLabels ? 10 : 15 : 0);\n          gl.gridWidth = gl.svgWidth - yAxisWidth;\n        };\n\n        if (w.config.xaxis.position === 'top') translateY = gl.xAxisHeight - w.config.xaxis.axisTicks.height - 5;\n\n        switch (w.config.legend.position) {\n          case 'bottom':\n            gl.translateY = translateY;\n            legendTopBottom();\n            break;\n\n          case 'top':\n            gl.translateY = this.lgRect.height + translateY;\n            legendTopBottom();\n            break;\n\n          case 'left':\n            gl.translateY = translateY;\n            gl.translateX = this.lgRect.width + yAxisWidth;\n            gl.gridHeight = gl.svgHeight - xAxisHeight - 12;\n            gl.gridWidth = gl.svgWidth - this.lgRect.width - yAxisWidth;\n            break;\n\n          case 'right':\n            gl.translateY = translateY;\n            gl.translateX = yAxisWidth;\n            gl.gridHeight = gl.svgHeight - xAxisHeight - 12;\n            gl.gridWidth = gl.svgWidth - this.lgRect.width - yAxisWidth - 5;\n            break;\n\n          default:\n            throw new Error('Legend position not supported');\n        }\n\n        this.dimGrid.setGridXPosForDualYAxis(yTitleCoords, yaxisLabelCoords); // after drawing everything, set the Y axis positions\n\n        var objyAxis = new YAxis(this.ctx);\n        objyAxis.setYAxisXPosition(yaxisLabelCoords, yTitleCoords);\n      }\n    }, {\n      key: \"setDimensionsForNonAxisCharts\",\n      value: function setDimensionsForNonAxisCharts() {\n        var w = this.w;\n        var gl = w.globals;\n        var cnf = w.config;\n        var xPad = 0;\n\n        if (w.config.legend.show && !w.config.legend.floating) {\n          xPad = 20;\n        }\n\n        var type = cnf.chart.type === 'pie' || cnf.chart.type === 'polarArea' || cnf.chart.type === 'donut' ? 'pie' : 'radialBar';\n        var offY = cnf.plotOptions[type].offsetY;\n        var offX = cnf.plotOptions[type].offsetX;\n\n        if (!cnf.legend.show || cnf.legend.floating) {\n          gl.gridHeight = gl.svgHeight - cnf.grid.padding.left + cnf.grid.padding.right;\n          gl.gridWidth = gl.gridHeight;\n          gl.translateY = offY;\n          gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2;\n          return;\n        }\n\n        switch (cnf.legend.position) {\n          case 'bottom':\n            gl.gridHeight = gl.svgHeight - this.lgRect.height - gl.goldenPadding;\n            gl.gridWidth = gl.svgWidth;\n            gl.translateY = offY - 10;\n            gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2;\n            break;\n\n          case 'top':\n            gl.gridHeight = gl.svgHeight - this.lgRect.height - gl.goldenPadding;\n            gl.gridWidth = gl.svgWidth;\n            gl.translateY = this.lgRect.height + offY + 10;\n            gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2;\n            break;\n\n          case 'left':\n            gl.gridWidth = gl.svgWidth - this.lgRect.width - xPad;\n            gl.gridHeight = cnf.chart.height !== 'auto' ? gl.svgHeight : gl.gridWidth;\n            gl.translateY = offY;\n            gl.translateX = offX + this.lgRect.width + xPad;\n            break;\n\n          case 'right':\n            gl.gridWidth = gl.svgWidth - this.lgRect.width - xPad - 5;\n            gl.gridHeight = cnf.chart.height !== 'auto' ? gl.svgHeight : gl.gridWidth;\n            gl.translateY = offY;\n            gl.translateX = offX + 10;\n            break;\n\n          default:\n            throw new Error('Legend position not supported');\n        }\n      }\n    }, {\n      key: \"conditionalChecksForAxisCoords\",\n      value: function conditionalChecksForAxisCoords(xaxisLabelCoords, xtitleCoords) {\n        var w = this.w;\n        var baseXAxisHeight = xaxisLabelCoords.height + xtitleCoords.height;\n        var xAxisHeightMultiplicate = w.globals.isMultiLineX ? 1.2 : w.globals.LINE_HEIGHT_RATIO;\n        var rotatedXAxisOffset = w.globals.rotateXLabels ? 22 : 10;\n        var rotatedXAxisLegendOffset = w.globals.rotateXLabels && w.config.legend.position === 'bottom';\n        var additionalOffset = rotatedXAxisLegendOffset ? 10 : 0;\n        this.xAxisHeight = baseXAxisHeight * xAxisHeightMultiplicate + rotatedXAxisOffset + additionalOffset;\n        this.xAxisWidth = xaxisLabelCoords.width;\n\n        if (this.xAxisHeight - xtitleCoords.height > w.config.xaxis.labels.maxHeight) {\n          this.xAxisHeight = w.config.xaxis.labels.maxHeight;\n        }\n\n        if (w.config.xaxis.labels.minHeight && this.xAxisHeight < w.config.xaxis.labels.minHeight) {\n          this.xAxisHeight = w.config.xaxis.labels.minHeight;\n        }\n\n        if (w.config.xaxis.floating) {\n          this.xAxisHeight = 0;\n        }\n\n        var minYAxisWidth = 0;\n        var maxYAxisWidth = 0;\n        w.config.yaxis.forEach(function (y) {\n          minYAxisWidth += y.labels.minWidth;\n          maxYAxisWidth += y.labels.maxWidth;\n        });\n\n        if (this.yAxisWidth < minYAxisWidth) {\n          this.yAxisWidth = minYAxisWidth;\n        }\n\n        if (this.yAxisWidth > maxYAxisWidth) {\n          this.yAxisWidth = maxYAxisWidth;\n        }\n      }\n    }]);\n\n    return Dimensions;\n  }();\n\n  var Helpers$1 = /*#__PURE__*/function () {\n    function Helpers(lgCtx) {\n      _classCallCheck(this, Helpers);\n\n      this.w = lgCtx.w;\n      this.lgCtx = lgCtx;\n    }\n\n    _createClass(Helpers, [{\n      key: \"getLegendStyles\",\n      value: function getLegendStyles() {\n        var stylesheet = document.createElement('style');\n        stylesheet.setAttribute('type', 'text/css');\n        var text = \"\\t\\n    \\t\\n      .apexcharts-legend {\\t\\n        display: flex;\\t\\n        overflow: auto;\\t\\n        padding: 0 10px;\\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\\t\\n        flex-wrap: wrap\\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\\t\\n        flex-direction: column;\\t\\n        bottom: 0;\\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\\t\\n        justify-content: flex-start;\\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\\t\\n        justify-content: center;  \\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\\t\\n        justify-content: flex-end;\\t\\n      }\\t\\n      .apexcharts-legend-series {\\t\\n        cursor: pointer;\\t\\n        line-height: normal;\\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\\t\\n        display: flex;\\t\\n        align-items: center;\\t\\n      }\\t\\n      .apexcharts-legend-text {\\t\\n        position: relative;\\t\\n        font-size: 14px;\\t\\n      }\\t\\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\\t\\n        pointer-events: none;\\t\\n      }\\t\\n      .apexcharts-legend-marker {\\t\\n        position: relative;\\t\\n        display: inline-block;\\t\\n        cursor: pointer;\\t\\n        margin-right: 3px;\\t\\n        border-style: solid;\\n      }\\t\\n      \\t\\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\\t\\n        display: inline-block;\\t\\n      }\\t\\n      .apexcharts-legend-series.apexcharts-no-click {\\t\\n        cursor: auto;\\t\\n      }\\t\\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\\t\\n        display: none !important;\\t\\n      }\\t\\n      .apexcharts-inactive-legend {\\t\\n        opacity: 0.45;\\t\\n      }\";\n        var rules = document.createTextNode(text);\n        stylesheet.appendChild(rules);\n        return stylesheet;\n      }\n    }, {\n      key: \"getLegendBBox\",\n      value: function getLegendBBox() {\n        var w = this.w;\n        var currLegendsWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n        var currLegendsWrapRect = currLegendsWrap.getBoundingClientRect();\n        var currLegendsWrapWidth = currLegendsWrapRect.width;\n        var currLegendsWrapHeight = currLegendsWrapRect.height;\n        return {\n          clwh: currLegendsWrapHeight,\n          clww: currLegendsWrapWidth\n        };\n      }\n    }, {\n      key: \"appendToForeignObject\",\n      value: function appendToForeignObject() {\n        var gl = this.w.globals;\n        gl.dom.elLegendForeign = document.createElementNS(gl.SVGNS, 'foreignObject');\n        var elForeign = gl.dom.elLegendForeign;\n        elForeign.setAttribute('x', 0);\n        elForeign.setAttribute('y', 0);\n        elForeign.setAttribute('width', gl.svgWidth);\n        elForeign.setAttribute('height', gl.svgHeight);\n        gl.dom.elLegendWrap.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n        elForeign.appendChild(gl.dom.elLegendWrap);\n        elForeign.appendChild(this.getLegendStyles()); //gl.dom.elGraphical.node.insertAdjacentElement('afterend', elForeign)\n        // the above line causes issue #1907\n\n        gl.dom.Paper.node.insertBefore(elForeign, gl.dom.elGraphical.node);\n      }\n    }, {\n      key: \"toggleDataSeries\",\n      value: function toggleDataSeries(seriesCnt, isHidden) {\n        var _this = this;\n\n        var w = this.w;\n\n        if (w.globals.axisCharts || w.config.chart.type === 'radialBar') {\n          w.globals.resized = true; // we don't want initial animations again\n\n          var seriesEl = null;\n          var realIndex = null; // yes, make it null. 1 series will rise at a time\n\n          w.globals.risingSeries = [];\n\n          if (w.globals.axisCharts) {\n            seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[data\\\\:realIndex='\".concat(seriesCnt, \"']\"));\n            realIndex = parseInt(seriesEl.getAttribute('data:realIndex'), 10);\n          } else {\n            seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[rel='\".concat(seriesCnt + 1, \"']\"));\n            realIndex = parseInt(seriesEl.getAttribute('rel'), 10) - 1;\n          }\n\n          if (isHidden) {\n            var seriesToMakeVisible = [{\n              cs: w.globals.collapsedSeries,\n              csi: w.globals.collapsedSeriesIndices\n            }, {\n              cs: w.globals.ancillaryCollapsedSeries,\n              csi: w.globals.ancillaryCollapsedSeriesIndices\n            }];\n            seriesToMakeVisible.forEach(function (r) {\n              _this.riseCollapsedSeries(r.cs, r.csi, realIndex);\n            });\n          } else {\n            this.hideSeries({\n              seriesEl: seriesEl,\n              realIndex: realIndex\n            });\n          }\n        } else {\n          // for non-axis charts i.e pie / donuts\n          var _seriesEl = w.globals.dom.Paper.select(\" .apexcharts-series[rel='\".concat(seriesCnt + 1, \"'] path\"));\n\n          var type = w.config.chart.type;\n\n          if (type === 'pie' || type === 'polarArea' || type === 'donut') {\n            var dataLabels = w.config.plotOptions.pie.donut.labels;\n            var graphics = new Graphics(this.lgCtx.ctx);\n            graphics.pathMouseDown(_seriesEl.members[0], null);\n            this.lgCtx.ctx.pie.printDataLabelsInner(_seriesEl.members[0].node, dataLabels);\n          }\n\n          _seriesEl.fire('click');\n        }\n      }\n    }, {\n      key: \"hideSeries\",\n      value: function hideSeries(_ref) {\n        var seriesEl = _ref.seriesEl,\n            realIndex = _ref.realIndex;\n        var w = this.w;\n        var series = Utils$1.clone(w.config.series);\n\n        if (w.globals.axisCharts) {\n          var shouldNotHideYAxis = false;\n\n          if (w.config.yaxis[realIndex] && w.config.yaxis[realIndex].show && w.config.yaxis[realIndex].showAlways) {\n            shouldNotHideYAxis = true;\n\n            if (w.globals.ancillaryCollapsedSeriesIndices.indexOf(realIndex) < 0) {\n              w.globals.ancillaryCollapsedSeries.push({\n                index: realIndex,\n                data: series[realIndex].data.slice(),\n                type: seriesEl.parentNode.className.baseVal.split('-')[1]\n              });\n              w.globals.ancillaryCollapsedSeriesIndices.push(realIndex);\n            }\n          }\n\n          if (!shouldNotHideYAxis) {\n            w.globals.collapsedSeries.push({\n              index: realIndex,\n              data: series[realIndex].data.slice(),\n              type: seriesEl.parentNode.className.baseVal.split('-')[1]\n            });\n            w.globals.collapsedSeriesIndices.push(realIndex);\n            var removeIndexOfRising = w.globals.risingSeries.indexOf(realIndex);\n            w.globals.risingSeries.splice(removeIndexOfRising, 1);\n          }\n        } else {\n          w.globals.collapsedSeries.push({\n            index: realIndex,\n            data: series[realIndex]\n          });\n          w.globals.collapsedSeriesIndices.push(realIndex);\n        }\n\n        var seriesChildren = seriesEl.childNodes;\n\n        for (var sc = 0; sc < seriesChildren.length; sc++) {\n          if (seriesChildren[sc].classList.contains('apexcharts-series-markers-wrap')) {\n            if (seriesChildren[sc].classList.contains('apexcharts-hide')) {\n              seriesChildren[sc].classList.remove('apexcharts-hide');\n            } else {\n              seriesChildren[sc].classList.add('apexcharts-hide');\n            }\n          }\n        }\n\n        w.globals.allSeriesCollapsed = w.globals.collapsedSeries.length === w.config.series.length;\n        series = this._getSeriesBasedOnCollapsedState(series);\n\n        this.lgCtx.ctx.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n      }\n    }, {\n      key: \"riseCollapsedSeries\",\n      value: function riseCollapsedSeries(collapsedSeries, seriesIndices, realIndex) {\n        var w = this.w;\n        var series = Utils$1.clone(w.config.series);\n\n        if (collapsedSeries.length > 0) {\n          for (var c = 0; c < collapsedSeries.length; c++) {\n            if (collapsedSeries[c].index === realIndex) {\n              if (w.globals.axisCharts) {\n                series[realIndex].data = collapsedSeries[c].data.slice();\n                collapsedSeries.splice(c, 1);\n                seriesIndices.splice(c, 1);\n                w.globals.risingSeries.push(realIndex);\n              } else {\n                series[realIndex] = collapsedSeries[c].data;\n                collapsedSeries.splice(c, 1);\n                seriesIndices.splice(c, 1);\n                w.globals.risingSeries.push(realIndex);\n              }\n            }\n          }\n\n          series = this._getSeriesBasedOnCollapsedState(series);\n\n          this.lgCtx.ctx.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n        }\n      }\n    }, {\n      key: \"_getSeriesBasedOnCollapsedState\",\n      value: function _getSeriesBasedOnCollapsedState(series) {\n        var w = this.w;\n\n        if (w.globals.axisCharts) {\n          series.forEach(function (s, sI) {\n            if (w.globals.collapsedSeriesIndices.indexOf(sI) > -1) {\n              series[sI].data = [];\n            }\n          });\n        } else {\n          series.forEach(function (s, sI) {\n            if (w.globals.collapsedSeriesIndices.indexOf(sI) > -1) {\n              series[sI] = 0;\n            }\n          });\n        }\n\n        return series;\n      }\n    }]);\n\n    return Helpers;\n  }();\n\n  /**\n   * ApexCharts Legend Class to draw legend.\n   *\n   * @module Legend\n   **/\n\n  var Legend = /*#__PURE__*/function () {\n    function Legend(ctx, opts) {\n      _classCallCheck(this, Legend);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.onLegendClick = this.onLegendClick.bind(this);\n      this.onLegendHovered = this.onLegendHovered.bind(this);\n      this.isBarsDistributed = this.w.config.chart.type === 'bar' && this.w.config.plotOptions.bar.distributed && this.w.config.series.length === 1;\n      this.legendHelpers = new Helpers$1(this);\n    }\n\n    _createClass(Legend, [{\n      key: \"init\",\n      value: function init() {\n        var w = this.w;\n        var gl = w.globals;\n        var cnf = w.config;\n        var showLegendAlways = cnf.legend.showForSingleSeries && gl.series.length === 1 || this.isBarsDistributed || gl.series.length > 1;\n\n        if ((showLegendAlways || !gl.axisCharts) && cnf.legend.show) {\n          while (gl.dom.elLegendWrap.firstChild) {\n            gl.dom.elLegendWrap.removeChild(gl.dom.elLegendWrap.firstChild);\n          }\n\n          this.drawLegends();\n\n          if (!Utils$1.isIE11()) {\n            this.legendHelpers.appendToForeignObject();\n          } else {\n            // IE11 doesn't supports foreignObject, hence append it to <head>\n            document.getElementsByTagName('head')[0].appendChild(this.legendHelpers.getLegendStyles());\n          }\n\n          if (cnf.legend.position === 'bottom' || cnf.legend.position === 'top') {\n            this.legendAlignHorizontal();\n          } else if (cnf.legend.position === 'right' || cnf.legend.position === 'left') {\n            this.legendAlignVertical();\n          }\n        }\n      }\n    }, {\n      key: \"drawLegends\",\n      value: function drawLegends() {\n        var me = this;\n        var w = this.w;\n        var fontFamily = w.config.legend.fontFamily;\n        var legendNames = w.globals.seriesNames;\n        var fillcolor = w.globals.colors.slice();\n\n        if (w.config.chart.type === 'heatmap') {\n          var ranges = w.config.plotOptions.heatmap.colorScale.ranges;\n          legendNames = ranges.map(function (colorScale) {\n            return colorScale.name ? colorScale.name : colorScale.from + ' - ' + colorScale.to;\n          });\n          fillcolor = ranges.map(function (color) {\n            return color.color;\n          });\n        } else if (this.isBarsDistributed) {\n          legendNames = w.globals.labels.slice();\n        }\n\n        if (w.config.legend.customLegendItems.length) {\n          legendNames = w.config.legend.customLegendItems;\n        }\n\n        var legendFormatter = w.globals.legendFormatter;\n        var isLegendInversed = w.config.legend.inverseOrder;\n\n        for (var i = isLegendInversed ? legendNames.length - 1 : 0; isLegendInversed ? i >= 0 : i <= legendNames.length - 1; isLegendInversed ? i-- : i++) {\n          var text = legendFormatter(legendNames[i], {\n            seriesIndex: i,\n            w: w\n          });\n          var collapsedSeries = false;\n          var ancillaryCollapsedSeries = false;\n\n          if (w.globals.collapsedSeries.length > 0) {\n            for (var c = 0; c < w.globals.collapsedSeries.length; c++) {\n              if (w.globals.collapsedSeries[c].index === i) {\n                collapsedSeries = true;\n              }\n            }\n          }\n\n          if (w.globals.ancillaryCollapsedSeriesIndices.length > 0) {\n            for (var _c = 0; _c < w.globals.ancillaryCollapsedSeriesIndices.length; _c++) {\n              if (w.globals.ancillaryCollapsedSeriesIndices[_c] === i) {\n                ancillaryCollapsedSeries = true;\n              }\n            }\n          }\n\n          var elMarker = document.createElement('span');\n          elMarker.classList.add('apexcharts-legend-marker');\n          var mOffsetX = w.config.legend.markers.offsetX;\n          var mOffsetY = w.config.legend.markers.offsetY;\n          var mHeight = w.config.legend.markers.height;\n          var mWidth = w.config.legend.markers.width;\n          var mBorderWidth = w.config.legend.markers.strokeWidth;\n          var mBorderColor = w.config.legend.markers.strokeColor;\n          var mBorderRadius = w.config.legend.markers.radius;\n          var mStyle = elMarker.style;\n          mStyle.background = fillcolor[i];\n          mStyle.color = fillcolor[i];\n          mStyle.setProperty('background', fillcolor[i], 'important'); // override fill color with custom legend.markers.fillColors\n\n          if (w.config.legend.markers.fillColors && w.config.legend.markers.fillColors[i]) {\n            mStyle.background = w.config.legend.markers.fillColors[i];\n          } // override with data color\n\n\n          if (w.globals.seriesColors[i] !== undefined) {\n            mStyle.background = w.globals.seriesColors[i];\n            mStyle.color = w.globals.seriesColors[i];\n          }\n\n          mStyle.height = Array.isArray(mHeight) ? parseFloat(mHeight[i]) + 'px' : parseFloat(mHeight) + 'px';\n          mStyle.width = Array.isArray(mWidth) ? parseFloat(mWidth[i]) + 'px' : parseFloat(mWidth) + 'px';\n          mStyle.left = (Array.isArray(mOffsetX) ? parseFloat(mOffsetX[i]) : parseFloat(mOffsetX)) + 'px';\n          mStyle.top = (Array.isArray(mOffsetY) ? parseFloat(mOffsetY[i]) : parseFloat(mOffsetY)) + 'px';\n          mStyle.borderWidth = Array.isArray(mBorderWidth) ? mBorderWidth[i] : mBorderWidth;\n          mStyle.borderColor = Array.isArray(mBorderColor) ? mBorderColor[i] : mBorderColor;\n          mStyle.borderRadius = Array.isArray(mBorderRadius) ? parseFloat(mBorderRadius[i]) + 'px' : parseFloat(mBorderRadius) + 'px';\n\n          if (w.config.legend.markers.customHTML) {\n            if (Array.isArray(w.config.legend.markers.customHTML)) {\n              if (w.config.legend.markers.customHTML[i]) {\n                elMarker.innerHTML = w.config.legend.markers.customHTML[i]();\n              }\n            } else {\n              elMarker.innerHTML = w.config.legend.markers.customHTML();\n            }\n          }\n\n          Graphics.setAttrs(elMarker, {\n            rel: i + 1,\n            'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n          });\n\n          if (collapsedSeries || ancillaryCollapsedSeries) {\n            elMarker.classList.add('apexcharts-inactive-legend');\n          }\n\n          var elLegend = document.createElement('div');\n          var elLegendText = document.createElement('span');\n          elLegendText.classList.add('apexcharts-legend-text');\n          elLegendText.innerHTML = Array.isArray(text) ? text.join(' ') : text;\n          var textColor = w.config.legend.labels.useSeriesColors ? w.globals.colors[i] : w.config.legend.labels.colors;\n\n          if (!textColor) {\n            textColor = w.config.chart.foreColor;\n          }\n\n          elLegendText.style.color = textColor;\n          elLegendText.style.fontSize = parseFloat(w.config.legend.fontSize) + 'px';\n          elLegendText.style.fontWeight = w.config.legend.fontWeight;\n          elLegendText.style.fontFamily = fontFamily || w.config.chart.fontFamily;\n          Graphics.setAttrs(elLegendText, {\n            rel: i + 1,\n            i: i,\n            'data:default-text': encodeURIComponent(text),\n            'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n          });\n          elLegend.appendChild(elMarker);\n          elLegend.appendChild(elLegendText);\n          var coreUtils = new CoreUtils(this.ctx);\n\n          if (!w.config.legend.showForZeroSeries) {\n            var total = coreUtils.getSeriesTotalByIndex(i);\n\n            if (total === 0 && coreUtils.seriesHaveSameValues(i) && !coreUtils.isSeriesNull(i) && w.globals.collapsedSeriesIndices.indexOf(i) === -1 && w.globals.ancillaryCollapsedSeriesIndices.indexOf(i) === -1) {\n              elLegend.classList.add('apexcharts-hidden-zero-series');\n            }\n          }\n\n          if (!w.config.legend.showForNullSeries) {\n            if (coreUtils.isSeriesNull(i) && w.globals.collapsedSeriesIndices.indexOf(i) === -1 && w.globals.ancillaryCollapsedSeriesIndices.indexOf(i) === -1) {\n              elLegend.classList.add('apexcharts-hidden-null-series');\n            }\n          }\n\n          w.globals.dom.elLegendWrap.appendChild(elLegend);\n          w.globals.dom.elLegendWrap.classList.add(\"apexcharts-align-\".concat(w.config.legend.horizontalAlign));\n          w.globals.dom.elLegendWrap.classList.add('apx-legend-position-' + w.config.legend.position);\n          elLegend.classList.add('apexcharts-legend-series');\n          elLegend.style.margin = \"\".concat(w.config.legend.itemMargin.vertical, \"px \").concat(w.config.legend.itemMargin.horizontal, \"px\");\n          w.globals.dom.elLegendWrap.style.width = w.config.legend.width ? w.config.legend.width + 'px' : '';\n          w.globals.dom.elLegendWrap.style.height = w.config.legend.height ? w.config.legend.height + 'px' : '';\n          Graphics.setAttrs(elLegend, {\n            rel: i + 1,\n            seriesName: Utils$1.escapeString(legendNames[i]),\n            'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n          });\n\n          if (collapsedSeries || ancillaryCollapsedSeries) {\n            elLegend.classList.add('apexcharts-inactive-legend');\n          }\n\n          if (!w.config.legend.onItemClick.toggleDataSeries) {\n            elLegend.classList.add('apexcharts-no-click');\n          }\n        }\n\n        w.globals.dom.elWrap.addEventListener('click', me.onLegendClick, true);\n\n        if (w.config.legend.onItemHover.highlightDataSeries && w.config.legend.customLegendItems.length === 0) {\n          w.globals.dom.elWrap.addEventListener('mousemove', me.onLegendHovered, true);\n          w.globals.dom.elWrap.addEventListener('mouseout', me.onLegendHovered, true);\n        }\n      }\n    }, {\n      key: \"setLegendWrapXY\",\n      value: function setLegendWrapXY(offsetX, offsetY) {\n        var w = this.w;\n        var elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n        var legendRect = elLegendWrap.getBoundingClientRect();\n        var x = 0;\n        var y = 0;\n\n        if (w.config.legend.position === 'bottom') {\n          y = y + (w.globals.svgHeight - legendRect.height / 2);\n        } else if (w.config.legend.position === 'top') {\n          var dim = new Dimensions(this.ctx);\n          var titleH = dim.dimHelpers.getTitleSubtitleCoords('title').height;\n          var subtitleH = dim.dimHelpers.getTitleSubtitleCoords('subtitle').height;\n          y = y + (titleH > 0 ? titleH - 10 : 0) + (subtitleH > 0 ? subtitleH - 10 : 0);\n        }\n\n        elLegendWrap.style.position = 'absolute';\n        x = x + offsetX + w.config.legend.offsetX;\n        y = y + offsetY + w.config.legend.offsetY;\n        elLegendWrap.style.left = x + 'px';\n        elLegendWrap.style.top = y + 'px';\n\n        if (w.config.legend.position === 'bottom') {\n          elLegendWrap.style.top = 'auto';\n          elLegendWrap.style.bottom = 5 - w.config.legend.offsetY + 'px';\n        } else if (w.config.legend.position === 'right') {\n          elLegendWrap.style.left = 'auto';\n          elLegendWrap.style.right = 25 + w.config.legend.offsetX + 'px';\n        }\n\n        var fixedHeigthWidth = ['width', 'height'];\n        fixedHeigthWidth.forEach(function (hw) {\n          if (elLegendWrap.style[hw]) {\n            elLegendWrap.style[hw] = parseInt(w.config.legend[hw], 10) + 'px';\n          }\n        });\n      }\n    }, {\n      key: \"legendAlignHorizontal\",\n      value: function legendAlignHorizontal() {\n        var w = this.w;\n        var elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n        elLegendWrap.style.right = 0;\n        var lRect = this.legendHelpers.getLegendBBox();\n        var dimensions = new Dimensions(this.ctx);\n        var titleRect = dimensions.dimHelpers.getTitleSubtitleCoords('title');\n        var subtitleRect = dimensions.dimHelpers.getTitleSubtitleCoords('subtitle');\n        var offsetX = 20;\n        var offsetY = 0; // the whole legend box is set to bottom\n\n        if (w.config.legend.position === 'bottom') {\n          offsetY = -lRect.clwh / 1.8;\n        } else if (w.config.legend.position === 'top') {\n          offsetY = titleRect.height + subtitleRect.height + w.config.title.margin + w.config.subtitle.margin - 10;\n        }\n\n        this.setLegendWrapXY(offsetX, offsetY);\n      }\n    }, {\n      key: \"legendAlignVertical\",\n      value: function legendAlignVertical() {\n        var w = this.w;\n        var lRect = this.legendHelpers.getLegendBBox();\n        var offsetY = 20;\n        var offsetX = 0;\n\n        if (w.config.legend.position === 'left') {\n          offsetX = 20;\n        }\n\n        if (w.config.legend.position === 'right') {\n          offsetX = w.globals.svgWidth - lRect.clww - 10;\n        }\n\n        this.setLegendWrapXY(offsetX, offsetY);\n      }\n    }, {\n      key: \"onLegendHovered\",\n      value: function onLegendHovered(e) {\n        var w = this.w;\n        var hoverOverLegend = e.target.classList.contains('apexcharts-legend-text') || e.target.classList.contains('apexcharts-legend-marker');\n\n        if (w.config.chart.type !== 'heatmap' && !this.isBarsDistributed) {\n          if (!e.target.classList.contains('apexcharts-inactive-legend') && hoverOverLegend) {\n            var series = new Series(this.ctx);\n            series.toggleSeriesOnHover(e, e.target);\n          }\n        } else {\n          // for heatmap handling\n          if (hoverOverLegend) {\n            var seriesCnt = parseInt(e.target.getAttribute('rel'), 10) - 1;\n            this.ctx.events.fireEvent('legendHover', [this.ctx, seriesCnt, this.w]);\n\n            var _series = new Series(this.ctx);\n\n            _series.highlightRangeInSeries(e, e.target);\n          }\n        }\n      }\n    }, {\n      key: \"onLegendClick\",\n      value: function onLegendClick(e) {\n        var w = this.w;\n        if (w.config.legend.customLegendItems.length) return;\n\n        if (e.target.classList.contains('apexcharts-legend-text') || e.target.classList.contains('apexcharts-legend-marker')) {\n          var seriesCnt = parseInt(e.target.getAttribute('rel'), 10) - 1;\n          var isHidden = e.target.getAttribute('data:collapsed') === 'true';\n          var legendClick = this.w.config.chart.events.legendClick;\n\n          if (typeof legendClick === 'function') {\n            legendClick(this.ctx, seriesCnt, this.w);\n          }\n\n          this.ctx.events.fireEvent('legendClick', [this.ctx, seriesCnt, this.w]);\n          var markerClick = this.w.config.legend.markers.onClick;\n\n          if (typeof markerClick === 'function' && e.target.classList.contains('apexcharts-legend-marker')) {\n            markerClick(this.ctx, seriesCnt, this.w);\n            this.ctx.events.fireEvent('legendMarkerClick', [this.ctx, seriesCnt, this.w]);\n          } // for now - just prevent click on heatmap legend - and allow hover only\n\n\n          var clickAllowed = w.config.chart.type !== 'treemap' && w.config.chart.type !== 'heatmap' && !this.isBarsDistributed;\n\n          if (clickAllowed && w.config.legend.onItemClick.toggleDataSeries) {\n            this.legendHelpers.toggleDataSeries(seriesCnt, isHidden);\n          }\n        }\n      }\n    }]);\n\n    return Legend;\n  }();\n\n  var icoPan = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n    <defs>\\n        <path d=\\\"M0 0h24v24H0z\\\" id=\\\"a\\\"/>\\n    </defs>\\n    <clipPath id=\\\"b\\\">\\n        <use overflow=\\\"visible\\\" xlink:href=\\\"#a\\\"/>\\n    </clipPath>\\n    <path clip-path=\\\"url(#b)\\\" d=\\\"M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z\\\"/>\\n</svg>\";\n\n  var icoZoom = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n    <path d=\\\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\\\"/>\\n    <path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\\\"/>\\n</svg>\";\n\n  var icoReset = \"<svg fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path d=\\\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\\\"/>\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n</svg>\";\n\n  var icoZoomIn = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"/>\\n</svg>\\n\";\n\n  var icoZoomOut = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"/>\\n</svg>\\n\";\n\n  var icoSelect = \"<svg fill=\\\"#6E8192\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z\\\"/>\\n</svg>\";\n\n  var icoMenu = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"none\\\" d=\\\"M0 0h24v24H0V0z\\\"/><path d=\\\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\\\"/></svg>\";\n\n  /**\n   * ApexCharts Toolbar Class for creating toolbar in axis based charts.\n   *\n   * @module Toolbar\n   **/\n\n  var Toolbar = /*#__PURE__*/function () {\n    function Toolbar(ctx) {\n      _classCallCheck(this, Toolbar);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.ev = this.w.config.chart.events;\n      this.selectedClass = 'apexcharts-selected';\n      this.localeValues = this.w.globals.locale.toolbar;\n      this.minX = w.globals.minX;\n      this.maxX = w.globals.maxX;\n    }\n\n    _createClass(Toolbar, [{\n      key: \"createToolbar\",\n      value: function createToolbar() {\n        var _this = this;\n\n        var w = this.w;\n\n        var createDiv = function createDiv() {\n          return document.createElement('div');\n        };\n\n        var elToolbarWrap = createDiv();\n        elToolbarWrap.setAttribute('class', 'apexcharts-toolbar');\n        elToolbarWrap.style.top = w.config.chart.toolbar.offsetY + 'px';\n        elToolbarWrap.style.right = -w.config.chart.toolbar.offsetX + 3 + 'px';\n        w.globals.dom.elWrap.appendChild(elToolbarWrap);\n        this.elZoom = createDiv();\n        this.elZoomIn = createDiv();\n        this.elZoomOut = createDiv();\n        this.elPan = createDiv();\n        this.elSelection = createDiv();\n        this.elZoomReset = createDiv();\n        this.elMenuIcon = createDiv();\n        this.elMenu = createDiv();\n        this.elCustomIcons = [];\n        this.t = w.config.chart.toolbar.tools;\n\n        if (Array.isArray(this.t.customIcons)) {\n          for (var i = 0; i < this.t.customIcons.length; i++) {\n            this.elCustomIcons.push(createDiv());\n          }\n        }\n\n        var toolbarControls = [];\n\n        var appendZoomControl = function appendZoomControl(type, el, ico) {\n          var tool = type.toLowerCase();\n\n          if (_this.t[tool] && w.config.chart.zoom.enabled) {\n            toolbarControls.push({\n              el: el,\n              icon: typeof _this.t[tool] === 'string' ? _this.t[tool] : ico,\n              title: _this.localeValues[type],\n              class: \"apexcharts-\".concat(tool, \"-icon\")\n            });\n          }\n        };\n\n        appendZoomControl('zoomIn', this.elZoomIn, icoZoomIn);\n        appendZoomControl('zoomOut', this.elZoomOut, icoZoomOut);\n\n        var zoomSelectionCtrls = function zoomSelectionCtrls(z) {\n          if (_this.t[z] && w.config.chart[z].enabled) {\n            toolbarControls.push({\n              el: z === 'zoom' ? _this.elZoom : _this.elSelection,\n              icon: typeof _this.t[z] === 'string' ? _this.t[z] : z === 'zoom' ? icoZoom : icoSelect,\n              title: _this.localeValues[z === 'zoom' ? 'selectionZoom' : 'selection'],\n              class: w.globals.isTouchDevice ? 'apexcharts-element-hidden' : \"apexcharts-\".concat(z, \"-icon\")\n            });\n          }\n        };\n\n        zoomSelectionCtrls('zoom');\n        zoomSelectionCtrls('selection');\n\n        if (this.t.pan && w.config.chart.zoom.enabled) {\n          toolbarControls.push({\n            el: this.elPan,\n            icon: typeof this.t.pan === 'string' ? this.t.pan : icoPan,\n            title: this.localeValues.pan,\n            class: w.globals.isTouchDevice ? 'apexcharts-element-hidden' : 'apexcharts-pan-icon'\n          });\n        }\n\n        appendZoomControl('reset', this.elZoomReset, icoReset);\n\n        if (this.t.download) {\n          toolbarControls.push({\n            el: this.elMenuIcon,\n            icon: typeof this.t.download === 'string' ? this.t.download : icoMenu,\n            title: this.localeValues.menu,\n            class: 'apexcharts-menu-icon'\n          });\n        }\n\n        for (var _i = 0; _i < this.elCustomIcons.length; _i++) {\n          toolbarControls.push({\n            el: this.elCustomIcons[_i],\n            icon: this.t.customIcons[_i].icon,\n            title: this.t.customIcons[_i].title,\n            index: this.t.customIcons[_i].index,\n            class: 'apexcharts-toolbar-custom-icon ' + this.t.customIcons[_i].class\n          });\n        }\n\n        toolbarControls.forEach(function (t, index) {\n          if (t.index) {\n            Utils$1.moveIndexInArray(toolbarControls, index, t.index);\n          }\n        });\n\n        for (var _i2 = 0; _i2 < toolbarControls.length; _i2++) {\n          Graphics.setAttrs(toolbarControls[_i2].el, {\n            class: toolbarControls[_i2].class,\n            title: toolbarControls[_i2].title\n          });\n          toolbarControls[_i2].el.innerHTML = toolbarControls[_i2].icon;\n          elToolbarWrap.appendChild(toolbarControls[_i2].el);\n        }\n\n        this._createHamburgerMenu(elToolbarWrap);\n\n        if (w.globals.zoomEnabled) {\n          this.elZoom.classList.add(this.selectedClass);\n        } else if (w.globals.panEnabled) {\n          this.elPan.classList.add(this.selectedClass);\n        } else if (w.globals.selectionEnabled) {\n          this.elSelection.classList.add(this.selectedClass);\n        }\n\n        this.addToolbarEventListeners();\n      }\n    }, {\n      key: \"_createHamburgerMenu\",\n      value: function _createHamburgerMenu(parent) {\n        this.elMenuItems = [];\n        parent.appendChild(this.elMenu);\n        Graphics.setAttrs(this.elMenu, {\n          class: 'apexcharts-menu'\n        });\n        var menuItems = [{\n          name: 'exportSVG',\n          title: this.localeValues.exportToSVG\n        }, {\n          name: 'exportPNG',\n          title: this.localeValues.exportToPNG\n        }, {\n          name: 'exportCSV',\n          title: this.localeValues.exportToCSV\n        }];\n\n        if (!this.w.globals.allSeriesHasEqualX) {\n          // if it is a multi series, and all series have variable x values, export CSV won't work\n          menuItems.splice(2, 1);\n        }\n\n        for (var i = 0; i < menuItems.length; i++) {\n          this.elMenuItems.push(document.createElement('div'));\n          this.elMenuItems[i].innerHTML = menuItems[i].title;\n          Graphics.setAttrs(this.elMenuItems[i], {\n            class: \"apexcharts-menu-item \".concat(menuItems[i].name),\n            title: menuItems[i].title\n          });\n          this.elMenu.appendChild(this.elMenuItems[i]);\n        }\n      }\n    }, {\n      key: \"addToolbarEventListeners\",\n      value: function addToolbarEventListeners() {\n        var _this2 = this;\n\n        this.elZoomReset.addEventListener('click', this.handleZoomReset.bind(this));\n        this.elSelection.addEventListener('click', this.toggleZoomSelection.bind(this, 'selection'));\n        this.elZoom.addEventListener('click', this.toggleZoomSelection.bind(this, 'zoom'));\n        this.elZoomIn.addEventListener('click', this.handleZoomIn.bind(this));\n        this.elZoomOut.addEventListener('click', this.handleZoomOut.bind(this));\n        this.elPan.addEventListener('click', this.togglePanning.bind(this));\n        this.elMenuIcon.addEventListener('click', this.toggleMenu.bind(this));\n        this.elMenuItems.forEach(function (m) {\n          if (m.classList.contains('exportSVG')) {\n            m.addEventListener('click', _this2.handleDownload.bind(_this2, 'svg'));\n          } else if (m.classList.contains('exportPNG')) {\n            m.addEventListener('click', _this2.handleDownload.bind(_this2, 'png'));\n          } else if (m.classList.contains('exportCSV')) {\n            m.addEventListener('click', _this2.handleDownload.bind(_this2, 'csv'));\n          }\n        });\n\n        for (var i = 0; i < this.t.customIcons.length; i++) {\n          this.elCustomIcons[i].addEventListener('click', this.t.customIcons[i].click.bind(this, this.ctx, this.ctx.w));\n        }\n      }\n    }, {\n      key: \"toggleZoomSelection\",\n      value: function toggleZoomSelection(type) {\n        var charts = this.ctx.getSyncedCharts();\n        charts.forEach(function (ch) {\n          ch.ctx.toolbar.toggleOtherControls();\n          var el = type === 'selection' ? ch.ctx.toolbar.elSelection : ch.ctx.toolbar.elZoom;\n          var enabledType = type === 'selection' ? 'selectionEnabled' : 'zoomEnabled';\n          ch.w.globals[enabledType] = !ch.w.globals[enabledType];\n\n          if (!el.classList.contains(ch.ctx.toolbar.selectedClass)) {\n            el.classList.add(ch.ctx.toolbar.selectedClass);\n          } else {\n            el.classList.remove(ch.ctx.toolbar.selectedClass);\n          }\n        });\n      }\n    }, {\n      key: \"getToolbarIconsReference\",\n      value: function getToolbarIconsReference() {\n        var w = this.w;\n\n        if (!this.elZoom) {\n          this.elZoom = w.globals.dom.baseEl.querySelector('.apexcharts-zoom-icon');\n        }\n\n        if (!this.elPan) {\n          this.elPan = w.globals.dom.baseEl.querySelector('.apexcharts-pan-icon');\n        }\n\n        if (!this.elSelection) {\n          this.elSelection = w.globals.dom.baseEl.querySelector('.apexcharts-selection-icon');\n        }\n      }\n    }, {\n      key: \"enableZoomPanFromToolbar\",\n      value: function enableZoomPanFromToolbar(type) {\n        this.toggleOtherControls();\n        type === 'pan' ? this.w.globals.panEnabled = true : this.w.globals.zoomEnabled = true;\n        var el = type === 'pan' ? this.elPan : this.elZoom;\n        var el2 = type === 'pan' ? this.elZoom : this.elPan;\n\n        if (el) {\n          el.classList.add(this.selectedClass);\n        }\n\n        if (el2) {\n          el2.classList.remove(this.selectedClass);\n        }\n      }\n    }, {\n      key: \"togglePanning\",\n      value: function togglePanning() {\n        var charts = this.ctx.getSyncedCharts();\n        charts.forEach(function (ch) {\n          ch.ctx.toolbar.toggleOtherControls();\n          ch.w.globals.panEnabled = !ch.w.globals.panEnabled;\n\n          if (!ch.ctx.toolbar.elPan.classList.contains(ch.ctx.toolbar.selectedClass)) {\n            ch.ctx.toolbar.elPan.classList.add(ch.ctx.toolbar.selectedClass);\n          } else {\n            ch.ctx.toolbar.elPan.classList.remove(ch.ctx.toolbar.selectedClass);\n          }\n        });\n      }\n    }, {\n      key: \"toggleOtherControls\",\n      value: function toggleOtherControls() {\n        var _this3 = this;\n\n        var w = this.w;\n        w.globals.panEnabled = false;\n        w.globals.zoomEnabled = false;\n        w.globals.selectionEnabled = false;\n        this.getToolbarIconsReference();\n        var toggleEls = [this.elPan, this.elSelection, this.elZoom];\n        toggleEls.forEach(function (el) {\n          if (el) {\n            el.classList.remove(_this3.selectedClass);\n          }\n        });\n      }\n    }, {\n      key: \"handleZoomIn\",\n      value: function handleZoomIn() {\n        var w = this.w;\n\n        if (w.globals.isRangeBar) {\n          this.minX = w.globals.minY;\n          this.maxX = w.globals.maxY;\n        }\n\n        var centerX = (this.minX + this.maxX) / 2;\n        var newMinX = (this.minX + centerX) / 2;\n        var newMaxX = (this.maxX + centerX) / 2;\n\n        var newMinXMaxX = this._getNewMinXMaxX(newMinX, newMaxX);\n\n        if (!w.globals.disableZoomIn) {\n          this.zoomUpdateOptions(newMinXMaxX.minX, newMinXMaxX.maxX);\n        }\n      }\n    }, {\n      key: \"handleZoomOut\",\n      value: function handleZoomOut() {\n        var w = this.w;\n\n        if (w.globals.isRangeBar) {\n          this.minX = w.globals.minY;\n          this.maxX = w.globals.maxY;\n        } // avoid zooming out beyond 1000 which may result in NaN values being printed on x-axis\n\n\n        if (w.config.xaxis.type === 'datetime' && new Date(this.minX).getUTCFullYear() < 1000) {\n          return;\n        }\n\n        var centerX = (this.minX + this.maxX) / 2;\n        var newMinX = this.minX - (centerX - this.minX);\n        var newMaxX = this.maxX - (centerX - this.maxX);\n\n        var newMinXMaxX = this._getNewMinXMaxX(newMinX, newMaxX);\n\n        if (!w.globals.disableZoomOut) {\n          this.zoomUpdateOptions(newMinXMaxX.minX, newMinXMaxX.maxX);\n        }\n      }\n    }, {\n      key: \"_getNewMinXMaxX\",\n      value: function _getNewMinXMaxX(newMinX, newMaxX) {\n        var shouldFloor = this.w.config.xaxis.convertedCatToNumeric;\n        return {\n          minX: shouldFloor ? Math.floor(newMinX) : newMinX,\n          maxX: shouldFloor ? Math.floor(newMaxX) : newMaxX\n        };\n      }\n    }, {\n      key: \"zoomUpdateOptions\",\n      value: function zoomUpdateOptions(newMinX, newMaxX) {\n        var w = this.w;\n\n        if (newMinX === undefined && newMaxX === undefined) {\n          this.handleZoomReset();\n          return;\n        }\n\n        if (w.config.xaxis.convertedCatToNumeric) {\n          // in category charts, avoid zooming out beyond min and max\n          if (newMinX < 1) {\n            newMinX = 1;\n            newMaxX = w.globals.dataPoints;\n          }\n\n          if (newMaxX - newMinX < 2) {\n            return;\n          }\n        }\n\n        var xaxis = {\n          min: newMinX,\n          max: newMaxX\n        };\n        var beforeZoomRange = this.getBeforeZoomRange(xaxis);\n\n        if (beforeZoomRange) {\n          xaxis = beforeZoomRange.xaxis;\n        }\n\n        var options = {\n          xaxis: xaxis\n        };\n        var yaxis = Utils$1.clone(w.globals.initialConfig.yaxis);\n\n        if (w.config.chart.zoom.autoScaleYaxis) {\n          var scale = new Range$1(this.ctx);\n          yaxis = scale.autoScaleY(this.ctx, yaxis, {\n            xaxis: xaxis\n          });\n        }\n\n        if (!w.config.chart.group) {\n          // if chart in a group, prevent yaxis update here\n          // fix issue #650\n          options.yaxis = yaxis;\n        }\n\n        this.w.globals.zoomed = true;\n\n        this.ctx.updateHelpers._updateOptions(options, false, this.w.config.chart.animations.dynamicAnimation.enabled);\n\n        this.zoomCallback(xaxis, yaxis);\n      }\n    }, {\n      key: \"zoomCallback\",\n      value: function zoomCallback(xaxis, yaxis) {\n        if (typeof this.ev.zoomed === 'function') {\n          this.ev.zoomed(this.ctx, {\n            xaxis: xaxis,\n            yaxis: yaxis\n          });\n        }\n      }\n    }, {\n      key: \"getBeforeZoomRange\",\n      value: function getBeforeZoomRange(xaxis, yaxis) {\n        var newRange = null;\n\n        if (typeof this.ev.beforeZoom === 'function') {\n          newRange = this.ev.beforeZoom(this, {\n            xaxis: xaxis,\n            yaxis: yaxis\n          });\n        }\n\n        return newRange;\n      }\n    }, {\n      key: \"toggleMenu\",\n      value: function toggleMenu() {\n        var _this4 = this;\n\n        window.setTimeout(function () {\n          if (_this4.elMenu.classList.contains('apexcharts-menu-open')) {\n            _this4.elMenu.classList.remove('apexcharts-menu-open');\n          } else {\n            _this4.elMenu.classList.add('apexcharts-menu-open');\n          }\n        }, 0);\n      }\n    }, {\n      key: \"handleDownload\",\n      value: function handleDownload(type) {\n        var w = this.w;\n        var exprt = new Exports(this.ctx);\n\n        switch (type) {\n          case 'svg':\n            exprt.exportToSVG(this.ctx);\n            break;\n\n          case 'png':\n            exprt.exportToPng(this.ctx);\n            break;\n\n          case 'csv':\n            exprt.exportToCSV({\n              series: w.config.series,\n              columnDelimiter: w.config.chart.toolbar.export.csv.columnDelimiter\n            });\n            break;\n        }\n      }\n    }, {\n      key: \"handleZoomReset\",\n      value: function handleZoomReset(e) {\n        var charts = this.ctx.getSyncedCharts();\n        charts.forEach(function (ch) {\n          var w = ch.w; // forget lastXAxis min/max as reset button isn't resetting the x-axis completely if zoomX is called before\n\n          w.globals.lastXAxis.min = undefined;\n          w.globals.lastXAxis.max = undefined;\n          ch.updateHelpers.revertDefaultAxisMinMax();\n\n          if (typeof w.config.chart.events.beforeResetZoom === 'function') {\n            // here, user get an option to control xaxis and yaxis when resetZoom is called\n            // at this point, whatever is returned from w.config.chart.events.beforeResetZoom\n            // is set as the new xaxis/yaxis min/max\n            var resetZoomRange = w.config.chart.events.beforeResetZoom(ch, w);\n\n            if (resetZoomRange) {\n              ch.updateHelpers.revertDefaultAxisMinMax(resetZoomRange);\n            }\n          }\n\n          if (typeof w.config.chart.events.zoomed === 'function') {\n            ch.ctx.toolbar.zoomCallback({\n              min: w.config.xaxis.min,\n              max: w.config.xaxis.max\n            });\n          }\n\n          w.globals.zoomed = false; // if user has some series collapsed before hitting zoom reset button,\n          // those series should stay collapsed\n\n          var series = ch.ctx.series.emptyCollapsedSeries(Utils$1.clone(w.globals.initialSeries));\n\n          ch.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n        });\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        this.elZoom = null;\n        this.elZoomIn = null;\n        this.elZoomOut = null;\n        this.elPan = null;\n        this.elSelection = null;\n        this.elZoomReset = null;\n        this.elMenuIcon = null;\n      }\n    }]);\n\n    return Toolbar;\n  }();\n\n  /**\n   * ApexCharts Zoom Class for handling zooming and panning on axes based charts.\n   *\n   * @module ZoomPanSelection\n   **/\n\n  var ZoomPanSelection = /*#__PURE__*/function (_Toolbar) {\n    _inherits(ZoomPanSelection, _Toolbar);\n\n    var _super = _createSuper(ZoomPanSelection);\n\n    function ZoomPanSelection(ctx) {\n      var _this;\n\n      _classCallCheck(this, ZoomPanSelection);\n\n      _this = _super.call(this, ctx);\n      _this.ctx = ctx;\n      _this.w = ctx.w;\n      _this.dragged = false;\n      _this.graphics = new Graphics(_this.ctx);\n      _this.eventList = ['mousedown', 'mouseleave', 'mousemove', 'touchstart', 'touchmove', 'mouseup', 'touchend'];\n      _this.clientX = 0;\n      _this.clientY = 0;\n      _this.startX = 0;\n      _this.endX = 0;\n      _this.dragX = 0;\n      _this.startY = 0;\n      _this.endY = 0;\n      _this.dragY = 0;\n      _this.moveDirection = 'none';\n      return _this;\n    }\n\n    _createClass(ZoomPanSelection, [{\n      key: \"init\",\n      value: function init(_ref) {\n        var _this2 = this;\n\n        var xyRatios = _ref.xyRatios;\n        var w = this.w;\n        var me = this;\n        this.xyRatios = xyRatios;\n        this.zoomRect = this.graphics.drawRect(0, 0, 0, 0);\n        this.selectionRect = this.graphics.drawRect(0, 0, 0, 0);\n        this.gridRect = w.globals.dom.baseEl.querySelector('.apexcharts-grid');\n        this.zoomRect.node.classList.add('apexcharts-zoom-rect');\n        this.selectionRect.node.classList.add('apexcharts-selection-rect');\n        w.globals.dom.elGraphical.add(this.zoomRect);\n        w.globals.dom.elGraphical.add(this.selectionRect);\n\n        if (w.config.chart.selection.type === 'x') {\n          this.slDraggableRect = this.selectionRect.draggable({\n            minX: 0,\n            minY: 0,\n            maxX: w.globals.gridWidth,\n            maxY: w.globals.gridHeight\n          }).on('dragmove', this.selectionDragging.bind(this, 'dragging'));\n        } else if (w.config.chart.selection.type === 'y') {\n          this.slDraggableRect = this.selectionRect.draggable({\n            minX: 0,\n            maxX: w.globals.gridWidth\n          }).on('dragmove', this.selectionDragging.bind(this, 'dragging'));\n        } else {\n          this.slDraggableRect = this.selectionRect.draggable().on('dragmove', this.selectionDragging.bind(this, 'dragging'));\n        }\n\n        this.preselectedSelection();\n        this.hoverArea = w.globals.dom.baseEl.querySelector(\"\".concat(w.globals.chartClass, \" .apexcharts-svg\"));\n        this.hoverArea.classList.add('apexcharts-zoomable');\n        this.eventList.forEach(function (event) {\n          _this2.hoverArea.addEventListener(event, me.svgMouseEvents.bind(me, xyRatios), {\n            capture: false,\n            passive: true\n          });\n        });\n      } // remove the event listeners which were previously added on hover area\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        if (this.slDraggableRect) {\n          this.slDraggableRect.draggable(false);\n          this.slDraggableRect.off();\n          this.selectionRect.off();\n        }\n\n        this.selectionRect = null;\n        this.zoomRect = null;\n        this.gridRect = null;\n      }\n    }, {\n      key: \"svgMouseEvents\",\n      value: function svgMouseEvents(xyRatios, e) {\n        var w = this.w;\n        var me = this;\n        var toolbar = this.ctx.toolbar;\n        var zoomtype = w.globals.zoomEnabled ? w.config.chart.zoom.type : w.config.chart.selection.type;\n        var autoSelected = w.config.chart.toolbar.autoSelected;\n\n        if (e.shiftKey) {\n          this.shiftWasPressed = true;\n          toolbar.enableZoomPanFromToolbar(autoSelected === 'pan' ? 'zoom' : 'pan');\n        } else {\n          if (this.shiftWasPressed) {\n            toolbar.enableZoomPanFromToolbar(autoSelected);\n            this.shiftWasPressed = false;\n          }\n        }\n\n        if (!e.target) return;\n        var tc = e.target.classList;\n        var pc;\n\n        if (e.target.parentNode && e.target.parentNode !== null) {\n          pc = e.target.parentNode.classList;\n        }\n\n        var falsePositives = tc.contains('apexcharts-selection-rect') || tc.contains('apexcharts-legend-marker') || tc.contains('apexcharts-legend-text') || pc && pc.contains('apexcharts-toolbar');\n        if (falsePositives) return;\n        me.clientX = e.type === 'touchmove' || e.type === 'touchstart' ? e.touches[0].clientX : e.type === 'touchend' ? e.changedTouches[0].clientX : e.clientX;\n        me.clientY = e.type === 'touchmove' || e.type === 'touchstart' ? e.touches[0].clientY : e.type === 'touchend' ? e.changedTouches[0].clientY : e.clientY;\n\n        if (e.type === 'mousedown' && e.which === 1) {\n          var gridRectDim = me.gridRect.getBoundingClientRect();\n          me.startX = me.clientX - gridRectDim.left;\n          me.startY = me.clientY - gridRectDim.top;\n          me.dragged = false;\n          me.w.globals.mousedown = true;\n        }\n\n        if (e.type === 'mousemove' && e.which === 1 || e.type === 'touchmove') {\n          me.dragged = true;\n\n          if (w.globals.panEnabled) {\n            w.globals.selection = null;\n\n            if (me.w.globals.mousedown) {\n              me.panDragging({\n                context: me,\n                zoomtype: zoomtype,\n                xyRatios: xyRatios\n              });\n            }\n          } else {\n            if (me.w.globals.mousedown && w.globals.zoomEnabled || me.w.globals.mousedown && w.globals.selectionEnabled) {\n              me.selection = me.selectionDrawing({\n                context: me,\n                zoomtype: zoomtype\n              });\n            }\n          }\n        }\n\n        if (e.type === 'mouseup' || e.type === 'touchend' || e.type === 'mouseleave') {\n          // we will be calling getBoundingClientRect on each mousedown/mousemove/mouseup\n          var _gridRectDim = me.gridRect.getBoundingClientRect();\n\n          if (me.w.globals.mousedown) {\n            // user released the drag, now do all the calculations\n            me.endX = me.clientX - _gridRectDim.left;\n            me.endY = me.clientY - _gridRectDim.top;\n            me.dragX = Math.abs(me.endX - me.startX);\n            me.dragY = Math.abs(me.endY - me.startY);\n\n            if (w.globals.zoomEnabled || w.globals.selectionEnabled) {\n              me.selectionDrawn({\n                context: me,\n                zoomtype: zoomtype\n              });\n            }\n\n            if (w.globals.panEnabled && w.config.xaxis.convertedCatToNumeric) {\n              me.delayedPanScrolled();\n            }\n          }\n\n          if (w.globals.zoomEnabled) {\n            me.hideSelectionRect(this.selectionRect);\n          }\n\n          me.dragged = false;\n          me.w.globals.mousedown = false;\n        }\n\n        this.makeSelectionRectDraggable();\n      }\n    }, {\n      key: \"makeSelectionRectDraggable\",\n      value: function makeSelectionRectDraggable() {\n        var w = this.w;\n        if (!this.selectionRect) return;\n        var rectDim = this.selectionRect.node.getBoundingClientRect();\n\n        if (rectDim.width > 0 && rectDim.height > 0) {\n          this.slDraggableRect.selectize({\n            points: 'l, r',\n            pointSize: 8,\n            pointType: 'rect'\n          }).resize({\n            constraint: {\n              minX: 0,\n              minY: 0,\n              maxX: w.globals.gridWidth,\n              maxY: w.globals.gridHeight\n            }\n          }).on('resizing', this.selectionDragging.bind(this, 'resizing'));\n        }\n      }\n    }, {\n      key: \"preselectedSelection\",\n      value: function preselectedSelection() {\n        var w = this.w;\n        var xyRatios = this.xyRatios;\n\n        if (!w.globals.zoomEnabled) {\n          if (typeof w.globals.selection !== 'undefined' && w.globals.selection !== null) {\n            this.drawSelectionRect(w.globals.selection);\n          } else {\n            if (w.config.chart.selection.xaxis.min !== undefined && w.config.chart.selection.xaxis.max !== undefined) {\n              var x = (w.config.chart.selection.xaxis.min - w.globals.minX) / xyRatios.xRatio;\n              var width = w.globals.gridWidth - (w.globals.maxX - w.config.chart.selection.xaxis.max) / xyRatios.xRatio - x;\n              var selectionRect = {\n                x: x,\n                y: 0,\n                width: width,\n                height: w.globals.gridHeight,\n                translateX: 0,\n                translateY: 0,\n                selectionEnabled: true\n              };\n              this.drawSelectionRect(selectionRect);\n              this.makeSelectionRectDraggable();\n\n              if (typeof w.config.chart.events.selection === 'function') {\n                w.config.chart.events.selection(this.ctx, {\n                  xaxis: {\n                    min: w.config.chart.selection.xaxis.min,\n                    max: w.config.chart.selection.xaxis.max\n                  },\n                  yaxis: {}\n                });\n              }\n            }\n          }\n        }\n      }\n    }, {\n      key: \"drawSelectionRect\",\n      value: function drawSelectionRect(_ref2) {\n        var x = _ref2.x,\n            y = _ref2.y,\n            width = _ref2.width,\n            height = _ref2.height,\n            _ref2$translateX = _ref2.translateX,\n            translateX = _ref2$translateX === void 0 ? 0 : _ref2$translateX,\n            _ref2$translateY = _ref2.translateY,\n            translateY = _ref2$translateY === void 0 ? 0 : _ref2$translateY;\n        var w = this.w;\n        var zoomRect = this.zoomRect;\n        var selectionRect = this.selectionRect;\n\n        if (this.dragged || w.globals.selection !== null) {\n          var scalingAttrs = {\n            transform: 'translate(' + translateX + ', ' + translateY + ')'\n          }; // change styles based on zoom or selection\n          // zoom is Enabled and user has dragged, so draw blue rect\n\n          if (w.globals.zoomEnabled && this.dragged) {\n            if (width < 0) width = 1; // fixes apexcharts.js#1168\n\n            zoomRect.attr({\n              x: x,\n              y: y,\n              width: width,\n              height: height,\n              fill: w.config.chart.zoom.zoomedArea.fill.color,\n              'fill-opacity': w.config.chart.zoom.zoomedArea.fill.opacity,\n              stroke: w.config.chart.zoom.zoomedArea.stroke.color,\n              'stroke-width': w.config.chart.zoom.zoomedArea.stroke.width,\n              'stroke-opacity': w.config.chart.zoom.zoomedArea.stroke.opacity\n            });\n            Graphics.setAttrs(zoomRect.node, scalingAttrs);\n          } // selection is enabled\n\n\n          if (w.globals.selectionEnabled) {\n            selectionRect.attr({\n              x: x,\n              y: y,\n              width: width > 0 ? width : 0,\n              height: height > 0 ? height : 0,\n              fill: w.config.chart.selection.fill.color,\n              'fill-opacity': w.config.chart.selection.fill.opacity,\n              stroke: w.config.chart.selection.stroke.color,\n              'stroke-width': w.config.chart.selection.stroke.width,\n              'stroke-dasharray': w.config.chart.selection.stroke.dashArray,\n              'stroke-opacity': w.config.chart.selection.stroke.opacity\n            });\n            Graphics.setAttrs(selectionRect.node, scalingAttrs);\n          }\n        }\n      }\n    }, {\n      key: \"hideSelectionRect\",\n      value: function hideSelectionRect(rect) {\n        if (rect) {\n          rect.attr({\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n          });\n        }\n      }\n    }, {\n      key: \"selectionDrawing\",\n      value: function selectionDrawing(_ref3) {\n        var context = _ref3.context,\n            zoomtype = _ref3.zoomtype;\n        var w = this.w;\n        var me = context;\n        var gridRectDim = this.gridRect.getBoundingClientRect();\n        var startX = me.startX - 1;\n        var startY = me.startY;\n        var inversedX = false;\n        var inversedY = false;\n        var selectionWidth = me.clientX - gridRectDim.left - startX;\n        var selectionHeight = me.clientY - gridRectDim.top - startY;\n        var selectionRect = {};\n\n        if (Math.abs(selectionWidth + startX) > w.globals.gridWidth) {\n          // user dragged the mouse outside drawing area to the right\n          selectionWidth = w.globals.gridWidth - startX;\n        } else if (me.clientX - gridRectDim.left < 0) {\n          // user dragged the mouse outside drawing area to the left\n          selectionWidth = startX;\n        } // inverse selection X\n\n\n        if (startX > me.clientX - gridRectDim.left) {\n          inversedX = true;\n          selectionWidth = Math.abs(selectionWidth);\n        } // inverse selection Y\n\n\n        if (startY > me.clientY - gridRectDim.top) {\n          inversedY = true;\n          selectionHeight = Math.abs(selectionHeight);\n        }\n\n        if (zoomtype === 'x') {\n          selectionRect = {\n            x: inversedX ? startX - selectionWidth : startX,\n            y: 0,\n            width: selectionWidth,\n            height: w.globals.gridHeight\n          };\n        } else if (zoomtype === 'y') {\n          selectionRect = {\n            x: 0,\n            y: inversedY ? startY - selectionHeight : startY,\n            width: w.globals.gridWidth,\n            height: selectionHeight\n          };\n        } else {\n          selectionRect = {\n            x: inversedX ? startX - selectionWidth : startX,\n            y: inversedY ? startY - selectionHeight : startY,\n            width: selectionWidth,\n            height: selectionHeight\n          };\n        }\n\n        me.drawSelectionRect(selectionRect);\n        me.selectionDragging('resizing');\n        return selectionRect;\n      }\n    }, {\n      key: \"selectionDragging\",\n      value: function selectionDragging(type, e) {\n        var _this3 = this;\n\n        var w = this.w;\n        var xyRatios = this.xyRatios;\n        var selRect = this.selectionRect;\n        var timerInterval = 0;\n\n        if (type === 'resizing') {\n          timerInterval = 30;\n        } // update selection when selection rect is dragged\n\n\n        var getSelAttr = function getSelAttr(attr) {\n          return parseFloat(selRect.node.getAttribute(attr));\n        };\n\n        var draggedProps = {\n          x: getSelAttr('x'),\n          y: getSelAttr('y'),\n          width: getSelAttr('width'),\n          height: getSelAttr('height')\n        };\n        w.globals.selection = draggedProps; // update selection ends\n\n        if (typeof w.config.chart.events.selection === 'function' && w.globals.selectionEnabled) {\n          // a small debouncer is required when resizing to avoid freezing the chart\n          clearTimeout(this.w.globals.selectionResizeTimer);\n          this.w.globals.selectionResizeTimer = window.setTimeout(function () {\n            var gridRectDim = _this3.gridRect.getBoundingClientRect();\n\n            var selectionRect = selRect.node.getBoundingClientRect();\n            var minX = w.globals.xAxisScale.niceMin + (selectionRect.left - gridRectDim.left) * xyRatios.xRatio;\n            var maxX = w.globals.xAxisScale.niceMin + (selectionRect.right - gridRectDim.left) * xyRatios.xRatio;\n            var minY = w.globals.yAxisScale[0].niceMin + (gridRectDim.bottom - selectionRect.bottom) * xyRatios.yRatio[0];\n            var maxY = w.globals.yAxisScale[0].niceMax - (selectionRect.top - gridRectDim.top) * xyRatios.yRatio[0];\n            var xyAxis = {\n              xaxis: {\n                min: minX,\n                max: maxX\n              },\n              yaxis: {\n                min: minY,\n                max: maxY\n              }\n            };\n            w.config.chart.events.selection(_this3.ctx, xyAxis);\n\n            if (w.config.chart.brush.enabled && w.config.chart.events.brushScrolled !== undefined) {\n              w.config.chart.events.brushScrolled(_this3.ctx, xyAxis);\n            }\n          }, timerInterval);\n        }\n      }\n    }, {\n      key: \"selectionDrawn\",\n      value: function selectionDrawn(_ref4) {\n        var context = _ref4.context,\n            zoomtype = _ref4.zoomtype;\n        var w = this.w;\n        var me = context;\n        var xyRatios = this.xyRatios;\n        var toolbar = this.ctx.toolbar;\n\n        if (me.startX > me.endX) {\n          var tempX = me.startX;\n          me.startX = me.endX;\n          me.endX = tempX;\n        }\n\n        if (me.startY > me.endY) {\n          var tempY = me.startY;\n          me.startY = me.endY;\n          me.endY = tempY;\n        }\n\n        var xLowestValue = undefined;\n        var xHighestValue = undefined;\n\n        if (!w.globals.isRangeBar) {\n          xLowestValue = w.globals.xAxisScale.niceMin + me.startX * xyRatios.xRatio;\n          xHighestValue = w.globals.xAxisScale.niceMin + me.endX * xyRatios.xRatio;\n        } else {\n          xLowestValue = w.globals.yAxisScale[0].niceMin + me.startX * xyRatios.invertedYRatio;\n          xHighestValue = w.globals.yAxisScale[0].niceMin + me.endX * xyRatios.invertedYRatio;\n        } // TODO: we will consider the 1st y axis values here for getting highest and lowest y\n\n\n        var yHighestValue = [];\n        var yLowestValue = [];\n        w.config.yaxis.forEach(function (yaxe, index) {\n          yHighestValue.push(w.globals.yAxisScale[index].niceMax - xyRatios.yRatio[index] * me.startY);\n          yLowestValue.push(w.globals.yAxisScale[index].niceMax - xyRatios.yRatio[index] * me.endY);\n        });\n\n        if (me.dragged && (me.dragX > 10 || me.dragY > 10) && xLowestValue !== xHighestValue) {\n          if (w.globals.zoomEnabled) {\n            var yaxis = Utils$1.clone(w.globals.initialConfig.yaxis);\n            var xaxis = Utils$1.clone(w.globals.initialConfig.xaxis);\n            w.globals.zoomed = true;\n\n            if (w.config.xaxis.convertedCatToNumeric) {\n              xLowestValue = Math.floor(xLowestValue);\n              xHighestValue = Math.floor(xHighestValue);\n\n              if (xLowestValue < 1) {\n                xLowestValue = 1;\n                xHighestValue = w.globals.dataPoints;\n              }\n\n              if (xHighestValue - xLowestValue < 2) {\n                xHighestValue = xLowestValue + 1;\n              }\n            }\n\n            if (zoomtype === 'xy' || zoomtype === 'x') {\n              xaxis = {\n                min: xLowestValue,\n                max: xHighestValue\n              };\n            }\n\n            if (zoomtype === 'xy' || zoomtype === 'y') {\n              yaxis.forEach(function (yaxe, index) {\n                yaxis[index].min = yLowestValue[index];\n                yaxis[index].max = yHighestValue[index];\n              });\n            }\n\n            if (w.config.chart.zoom.autoScaleYaxis) {\n              var scale = new Range$1(me.ctx);\n              yaxis = scale.autoScaleY(me.ctx, yaxis, {\n                xaxis: xaxis\n              });\n            }\n\n            if (toolbar) {\n              var beforeZoomRange = toolbar.getBeforeZoomRange(xaxis, yaxis);\n\n              if (beforeZoomRange) {\n                xaxis = beforeZoomRange.xaxis ? beforeZoomRange.xaxis : xaxis;\n                yaxis = beforeZoomRange.yaxis ? beforeZoomRange.yaxis : yaxis;\n              }\n            }\n\n            var options = {\n              xaxis: xaxis\n            };\n\n            if (!w.config.chart.group) {\n              // if chart in a group, prevent yaxis update here\n              // fix issue #650\n              options.yaxis = yaxis;\n            }\n\n            me.ctx.updateHelpers._updateOptions(options, false, me.w.config.chart.animations.dynamicAnimation.enabled);\n\n            if (typeof w.config.chart.events.zoomed === 'function') {\n              toolbar.zoomCallback(xaxis, yaxis);\n            }\n          } else if (w.globals.selectionEnabled) {\n            var _yaxis = null;\n            var _xaxis = null;\n            _xaxis = {\n              min: xLowestValue,\n              max: xHighestValue\n            };\n\n            if (zoomtype === 'xy' || zoomtype === 'y') {\n              _yaxis = Utils$1.clone(w.config.yaxis);\n\n              _yaxis.forEach(function (yaxe, index) {\n                _yaxis[index].min = yLowestValue[index];\n                _yaxis[index].max = yHighestValue[index];\n              });\n            }\n\n            w.globals.selection = me.selection;\n\n            if (typeof w.config.chart.events.selection === 'function') {\n              w.config.chart.events.selection(me.ctx, {\n                xaxis: _xaxis,\n                yaxis: _yaxis\n              });\n            }\n          }\n        }\n      }\n    }, {\n      key: \"panDragging\",\n      value: function panDragging(_ref5) {\n        var context = _ref5.context;\n        var w = this.w;\n        var me = context; // check to make sure there is data to compare against\n\n        if (typeof w.globals.lastClientPosition.x !== 'undefined') {\n          // get the change from last position to this position\n          var deltaX = w.globals.lastClientPosition.x - me.clientX;\n          var deltaY = w.globals.lastClientPosition.y - me.clientY; // check which direction had the highest amplitude and then figure out direction by checking if the value is greater or less than zero\n\n          if (Math.abs(deltaX) > Math.abs(deltaY) && deltaX > 0) {\n            this.moveDirection = 'left';\n          } else if (Math.abs(deltaX) > Math.abs(deltaY) && deltaX < 0) {\n            this.moveDirection = 'right';\n          } else if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY > 0) {\n            this.moveDirection = 'up';\n          } else if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY < 0) {\n            this.moveDirection = 'down';\n          }\n        } // set the new last position to the current for next time (to get the position of drag)\n\n\n        w.globals.lastClientPosition = {\n          x: me.clientX,\n          y: me.clientY\n        };\n        var xLowestValue = w.globals.isRangeBar ? w.globals.minY : w.globals.minX;\n        var xHighestValue = w.globals.isRangeBar ? w.globals.maxY : w.globals.maxX; // on a category, we don't pan continuosly as it causes bugs\n\n        if (!w.config.xaxis.convertedCatToNumeric) {\n          me.panScrolled(xLowestValue, xHighestValue);\n        }\n      }\n    }, {\n      key: \"delayedPanScrolled\",\n      value: function delayedPanScrolled() {\n        var w = this.w;\n        var newMinX = w.globals.minX;\n        var newMaxX = w.globals.maxX;\n        var centerX = (w.globals.maxX - w.globals.minX) / 2;\n\n        if (this.moveDirection === 'left') {\n          newMinX = w.globals.minX + centerX;\n          newMaxX = w.globals.maxX + centerX;\n        } else if (this.moveDirection === 'right') {\n          newMinX = w.globals.minX - centerX;\n          newMaxX = w.globals.maxX - centerX;\n        }\n\n        newMinX = Math.floor(newMinX);\n        newMaxX = Math.floor(newMaxX);\n        this.updateScrolledChart({\n          xaxis: {\n            min: newMinX,\n            max: newMaxX\n          }\n        }, newMinX, newMaxX);\n      }\n    }, {\n      key: \"panScrolled\",\n      value: function panScrolled(xLowestValue, xHighestValue) {\n        var w = this.w;\n        var xyRatios = this.xyRatios;\n        var yaxis = Utils$1.clone(w.globals.initialConfig.yaxis);\n        var xRatio = xyRatios.xRatio;\n        var minX = w.globals.minX;\n        var maxX = w.globals.maxX;\n\n        if (w.globals.isRangeBar) {\n          xRatio = xyRatios.invertedYRatio;\n          minX = w.globals.minY;\n          maxX = w.globals.maxY;\n        }\n\n        if (this.moveDirection === 'left') {\n          xLowestValue = minX + w.globals.gridWidth / 15 * xRatio;\n          xHighestValue = maxX + w.globals.gridWidth / 15 * xRatio;\n        } else if (this.moveDirection === 'right') {\n          xLowestValue = minX - w.globals.gridWidth / 15 * xRatio;\n          xHighestValue = maxX - w.globals.gridWidth / 15 * xRatio;\n        }\n\n        if (!w.globals.isRangeBar) {\n          if (xLowestValue < w.globals.initialMinX || xHighestValue > w.globals.initialMaxX) {\n            xLowestValue = minX;\n            xHighestValue = maxX;\n          }\n        }\n\n        var xaxis = {\n          min: xLowestValue,\n          max: xHighestValue\n        };\n\n        if (w.config.chart.zoom.autoScaleYaxis) {\n          var scale = new Range$1(this.ctx);\n          yaxis = scale.autoScaleY(this.ctx, yaxis, {\n            xaxis: xaxis\n          });\n        }\n\n        var options = {\n          xaxis: {\n            min: xLowestValue,\n            max: xHighestValue\n          }\n        };\n\n        if (!w.config.chart.group) {\n          // if chart in a group, prevent yaxis update here\n          // fix issue #650\n          options.yaxis = yaxis;\n        }\n\n        this.updateScrolledChart(options, xLowestValue, xHighestValue);\n      }\n    }, {\n      key: \"updateScrolledChart\",\n      value: function updateScrolledChart(options, xLowestValue, xHighestValue) {\n        var w = this.w;\n\n        this.ctx.updateHelpers._updateOptions(options, false, false);\n\n        if (typeof w.config.chart.events.scrolled === 'function') {\n          w.config.chart.events.scrolled(this.ctx, {\n            xaxis: {\n              min: xLowestValue,\n              max: xHighestValue\n            }\n          });\n        }\n      }\n    }]);\n\n    return ZoomPanSelection;\n  }(Toolbar);\n\n  /**\n   * ApexCharts Tooltip.Utils Class to support Tooltip functionality.\n   *\n   * @module Tooltip.Utils\n   **/\n\n  var Utils = /*#__PURE__*/function () {\n    function Utils(tooltipContext) {\n      _classCallCheck(this, Utils);\n\n      this.w = tooltipContext.w;\n      this.ttCtx = tooltipContext;\n      this.ctx = tooltipContext.ctx;\n    }\n    /**\n     ** When hovering over series, you need to capture which series is being hovered on.\n     ** This function will return both capturedseries index as well as inner index of that series\n     * @memberof Utils\n     * @param {object}\n     * - hoverArea = the rect on which user hovers\n     * - elGrid = dimensions of the hover rect (it can be different than hoverarea)\n     */\n\n\n    _createClass(Utils, [{\n      key: \"getNearestValues\",\n      value: function getNearestValues(_ref) {\n        var hoverArea = _ref.hoverArea,\n            elGrid = _ref.elGrid,\n            clientX = _ref.clientX,\n            clientY = _ref.clientY;\n        var w = this.w;\n        var seriesBound = elGrid.getBoundingClientRect();\n        var hoverWidth = seriesBound.width;\n        var hoverHeight = seriesBound.height;\n        var xDivisor = hoverWidth / (w.globals.dataPoints - 1);\n        var yDivisor = hoverHeight / w.globals.dataPoints;\n        var hasBars = this.hasBars();\n\n        if ((w.globals.comboCharts || hasBars) && !w.config.xaxis.convertedCatToNumeric) {\n          xDivisor = hoverWidth / w.globals.dataPoints;\n        }\n\n        var hoverX = clientX - seriesBound.left - w.globals.barPadForNumericAxis;\n        var hoverY = clientY - seriesBound.top;\n        var notInRect = hoverX < 0 || hoverY < 0 || hoverX > hoverWidth || hoverY > hoverHeight;\n\n        if (notInRect) {\n          hoverArea.classList.remove('hovering-zoom');\n          hoverArea.classList.remove('hovering-pan');\n        } else {\n          if (w.globals.zoomEnabled) {\n            hoverArea.classList.remove('hovering-pan');\n            hoverArea.classList.add('hovering-zoom');\n          } else if (w.globals.panEnabled) {\n            hoverArea.classList.remove('hovering-zoom');\n            hoverArea.classList.add('hovering-pan');\n          }\n        }\n\n        var j = Math.round(hoverX / xDivisor);\n        var jHorz = Math.floor(hoverY / yDivisor);\n\n        if (hasBars && !w.config.xaxis.convertedCatToNumeric) {\n          j = Math.ceil(hoverX / xDivisor);\n          j = j - 1;\n        }\n\n        var capturedSeries = null;\n        var closest = null;\n        var seriesXValArr = [];\n        var seriesYValArr = [];\n\n        for (var s = 0; s < w.globals.seriesXvalues.length; s++) {\n          seriesXValArr.push([w.globals.seriesXvalues[s][0] - 0.000001].concat(w.globals.seriesXvalues[s]));\n        }\n\n        seriesXValArr = seriesXValArr.map(function (seriesXVal) {\n          return seriesXVal.filter(function (s) {\n            return s;\n          });\n        });\n        seriesYValArr = w.globals.seriesYvalues.map(function (seriesYVal) {\n          return seriesYVal.filter(function (s) {\n            return Utils$1.isNumber(s);\n          });\n        }); // if X axis type is not category and tooltip is not shared, then we need to find the cursor position and get the nearest value\n\n        if (w.globals.isXNumeric) {\n          // Change origin of cursor position so that we can compute the relative nearest point to the cursor on our chart\n          // we only need to scale because all points are relative to the bounds.left and bounds.top => origin is virtually (0, 0)\n          var chartGridEl = this.ttCtx.getElGrid();\n          var chartGridElBoundingRect = chartGridEl.getBoundingClientRect();\n          var transformedHoverX = hoverX * (chartGridElBoundingRect.width / hoverWidth);\n          var transformedHoverY = hoverY * (chartGridElBoundingRect.height / hoverHeight);\n          closest = this.closestInMultiArray(transformedHoverX, transformedHoverY, seriesXValArr, seriesYValArr);\n          capturedSeries = closest.index;\n          j = closest.j;\n\n          if (capturedSeries !== null) {\n            // initial push, it should be a little smaller than the 1st val\n            seriesXValArr = w.globals.seriesXvalues[capturedSeries];\n            closest = this.closestInArray(transformedHoverX, seriesXValArr);\n            j = closest.index;\n          }\n        }\n\n        w.globals.capturedSeriesIndex = capturedSeries === null ? -1 : capturedSeries;\n        if (!j || j < 1) j = 0;\n\n        if (w.globals.isBarHorizontal) {\n          w.globals.capturedDataPointIndex = jHorz;\n        } else {\n          w.globals.capturedDataPointIndex = j;\n        }\n\n        return {\n          capturedSeries: capturedSeries,\n          j: w.globals.isBarHorizontal ? jHorz : j,\n          hoverX: hoverX,\n          hoverY: hoverY\n        };\n      }\n    }, {\n      key: \"closestInMultiArray\",\n      value: function closestInMultiArray(hoverX, hoverY, Xarrays, Yarrays) {\n        var w = this.w;\n        var activeIndex = 0;\n        var currIndex = null;\n        var j = -1;\n\n        if (w.globals.series.length > 1) {\n          activeIndex = this.getFirstActiveXArray(Xarrays);\n        } else {\n          currIndex = 0;\n        }\n\n        var currY = Yarrays[activeIndex][0];\n        var currX = Xarrays[activeIndex][0];\n        var diffX = Math.abs(hoverX - currX);\n        var diffY = Math.abs(hoverY - currY);\n        var diff = diffY + diffX;\n        Yarrays.map(function (arrY, arrIndex) {\n          arrY.map(function (y, innerKey) {\n            var newdiffY = Math.abs(hoverY - Yarrays[arrIndex][innerKey]);\n            var newdiffX = Math.abs(hoverX - Xarrays[arrIndex][innerKey]);\n            var newdiff = newdiffX + newdiffY;\n\n            if (newdiff < diff) {\n              diff = newdiff;\n              diffX = newdiffX;\n              diffY = newdiffY;\n              currIndex = arrIndex;\n              j = innerKey;\n            }\n          });\n        });\n        return {\n          index: currIndex,\n          j: j\n        };\n      }\n    }, {\n      key: \"getFirstActiveXArray\",\n      value: function getFirstActiveXArray(Xarrays) {\n        var activeIndex = 0;\n        var firstActiveSeriesIndex = Xarrays.map(function (xarr, index) {\n          return xarr.length > 0 ? index : -1;\n        });\n\n        for (var a = 0; a < firstActiveSeriesIndex.length; a++) {\n          if (firstActiveSeriesIndex[a] !== -1) {\n            activeIndex = firstActiveSeriesIndex[a];\n            break;\n          }\n        }\n\n        return activeIndex;\n      }\n    }, {\n      key: \"closestInArray\",\n      value: function closestInArray(val, arr) {\n        var curr = arr[0];\n        var currIndex = null;\n        var diff = Math.abs(val - curr);\n\n        for (var i = 0; i < arr.length; i++) {\n          var newdiff = Math.abs(val - arr[i]);\n\n          if (newdiff < diff) {\n            diff = newdiff;\n            currIndex = i;\n          }\n        }\n\n        return {\n          index: currIndex\n        };\n      }\n      /**\n       * When there are multiple series, it is possible to have different x values for each series.\n       * But it may be possible in those multiple series, that there is same x value for 2 or more\n       * series.\n       * @memberof Utils\n       * @param {int}\n       * - j = is the inner index of series -> (series[i][j])\n       * @return {bool}\n       */\n\n    }, {\n      key: \"isXoverlap\",\n      value: function isXoverlap(j) {\n        var w = this.w;\n        var xSameForAllSeriesJArr = [];\n        var seriesX = w.globals.seriesX.filter(function (s) {\n          return typeof s[0] !== 'undefined';\n        });\n\n        if (seriesX.length > 0) {\n          for (var i = 0; i < seriesX.length - 1; i++) {\n            if (typeof seriesX[i][j] !== 'undefined' && typeof seriesX[i + 1][j] !== 'undefined') {\n              if (seriesX[i][j] !== seriesX[i + 1][j]) {\n                xSameForAllSeriesJArr.push('unEqual');\n              }\n            }\n          }\n        }\n\n        if (xSameForAllSeriesJArr.length === 0) {\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"isInitialSeriesSameLen\",\n      value: function isInitialSeriesSameLen() {\n        var sameLen = true;\n        var initialSeries = this.w.globals.initialSeries;\n\n        for (var i = 0; i < initialSeries.length - 1; i++) {\n          if (initialSeries[i].data.length !== initialSeries[i + 1].data.length) {\n            sameLen = false;\n            break;\n          }\n        }\n\n        return sameLen;\n      }\n    }, {\n      key: \"getBarsHeight\",\n      value: function getBarsHeight(allbars) {\n        var bars = _toConsumableArray(allbars);\n\n        var totalHeight = bars.reduce(function (acc, bar) {\n          return acc + bar.getBBox().height;\n        }, 0);\n        return totalHeight;\n      }\n    }, {\n      key: \"getElMarkers\",\n      value: function getElMarkers() {\n        return this.w.globals.dom.baseEl.querySelectorAll(' .apexcharts-series-markers');\n      }\n    }, {\n      key: \"getAllMarkers\",\n      value: function getAllMarkers() {\n        // first get all marker parents. This parent class contains series-index\n        // which helps to sort the markers as they are dynamic\n        var markersWraps = this.w.globals.dom.baseEl.querySelectorAll('.apexcharts-series-markers-wrap');\n        markersWraps = _toConsumableArray(markersWraps);\n        markersWraps.sort(function (a, b) {\n          return Number(b.getAttribute('data:realIndex')) < Number(a.getAttribute('data:realIndex')) ? 0 : -1;\n        });\n        var markers = [];\n        markersWraps.forEach(function (m) {\n          markers.push(m.querySelector('.apexcharts-marker'));\n        });\n        return markers;\n      }\n    }, {\n      key: \"hasMarkers\",\n      value: function hasMarkers() {\n        var markers = this.getElMarkers();\n        return markers.length > 0;\n      }\n    }, {\n      key: \"getElBars\",\n      value: function getElBars() {\n        return this.w.globals.dom.baseEl.querySelectorAll('.apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series');\n      }\n    }, {\n      key: \"hasBars\",\n      value: function hasBars() {\n        var bars = this.getElBars();\n        return bars.length > 0;\n      }\n    }, {\n      key: \"getHoverMarkerSize\",\n      value: function getHoverMarkerSize(index) {\n        var w = this.w;\n        var hoverSize = w.config.markers.hover.size;\n\n        if (hoverSize === undefined) {\n          hoverSize = w.globals.markers.size[index] + w.config.markers.hover.sizeOffset;\n        }\n\n        return hoverSize;\n      }\n    }, {\n      key: \"toggleAllTooltipSeriesGroups\",\n      value: function toggleAllTooltipSeriesGroups(state) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n\n        if (ttCtx.allTooltipSeriesGroups.length === 0) {\n          ttCtx.allTooltipSeriesGroups = w.globals.dom.baseEl.querySelectorAll('.apexcharts-tooltip-series-group');\n        }\n\n        var allTooltipSeriesGroups = ttCtx.allTooltipSeriesGroups;\n\n        for (var i = 0; i < allTooltipSeriesGroups.length; i++) {\n          if (state === 'enable') {\n            allTooltipSeriesGroups[i].classList.add('apexcharts-active');\n            allTooltipSeriesGroups[i].style.display = w.config.tooltip.items.display;\n          } else {\n            allTooltipSeriesGroups[i].classList.remove('apexcharts-active');\n            allTooltipSeriesGroups[i].style.display = 'none';\n          }\n        }\n      }\n    }]);\n\n    return Utils;\n  }();\n\n  /**\n   * ApexCharts Tooltip.Labels Class to draw texts on the tooltip.\n   * This file deals with printing actual text on the tooltip.\n   *\n   * @module Tooltip.Labels\n   **/\n\n  var Labels = /*#__PURE__*/function () {\n    function Labels(tooltipContext) {\n      _classCallCheck(this, Labels);\n\n      this.w = tooltipContext.w;\n      this.ctx = tooltipContext.ctx;\n      this.ttCtx = tooltipContext;\n      this.tooltipUtil = new Utils(tooltipContext);\n    }\n\n    _createClass(Labels, [{\n      key: \"drawSeriesTexts\",\n      value: function drawSeriesTexts(_ref) {\n        var _ref$shared = _ref.shared,\n            shared = _ref$shared === void 0 ? true : _ref$shared,\n            ttItems = _ref.ttItems,\n            _ref$i = _ref.i,\n            i = _ref$i === void 0 ? 0 : _ref$i,\n            _ref$j = _ref.j,\n            j = _ref$j === void 0 ? null : _ref$j,\n            y1 = _ref.y1,\n            y2 = _ref.y2,\n            e = _ref.e;\n        var w = this.w;\n\n        if (w.config.tooltip.custom !== undefined) {\n          this.handleCustomTooltip({\n            i: i,\n            j: j,\n            y1: y1,\n            y2: y2,\n            w: w\n          });\n        } else {\n          this.toggleActiveInactiveSeries(shared);\n        }\n\n        var values = this.getValuesToPrint({\n          i: i,\n          j: j\n        });\n        this.printLabels({\n          i: i,\n          j: j,\n          values: values,\n          ttItems: ttItems,\n          shared: shared,\n          e: e\n        }); // Re-calculate tooltip dimensions now that we have drawn the text\n\n        var tooltipEl = this.ttCtx.getElTooltip();\n        this.ttCtx.tooltipRect.ttWidth = tooltipEl.getBoundingClientRect().width;\n        this.ttCtx.tooltipRect.ttHeight = tooltipEl.getBoundingClientRect().height;\n      }\n    }, {\n      key: \"printLabels\",\n      value: function printLabels(_ref2) {\n        var _this = this;\n\n        var i = _ref2.i,\n            j = _ref2.j,\n            values = _ref2.values,\n            ttItems = _ref2.ttItems,\n            shared = _ref2.shared,\n            e = _ref2.e;\n        var w = this.w;\n        var val;\n        var goalVals = [];\n\n        var hasGoalValues = function hasGoalValues(gi) {\n          return w.globals.seriesGoals[gi] && w.globals.seriesGoals[gi][j] && Array.isArray(w.globals.seriesGoals[gi][j]);\n        };\n\n        var xVal = values.xVal,\n            zVal = values.zVal,\n            xAxisTTVal = values.xAxisTTVal;\n        var seriesName = '';\n        var pColor = w.globals.colors[i]; // The pColor here is for the markers inside tooltip\n\n        if (j !== null && w.config.plotOptions.bar.distributed) {\n          pColor = w.globals.colors[j];\n        }\n\n        var _loop = function _loop(t, inverset) {\n          var f = _this.getFormatters(i);\n\n          seriesName = _this.getSeriesName({\n            fn: f.yLbTitleFormatter,\n            index: i,\n            seriesIndex: i,\n            j: j\n          });\n\n          if (w.config.chart.type === 'treemap') {\n            seriesName = f.yLbTitleFormatter(String(w.config.series[i].data[j].x), {\n              series: w.globals.series,\n              seriesIndex: i,\n              dataPointIndex: j,\n              w: w\n            });\n          }\n\n          var tIndex = w.config.tooltip.inverseOrder ? inverset : t;\n\n          if (w.globals.axisCharts) {\n            var getValBySeriesIndex = function getValBySeriesIndex(index) {\n              return f.yLbFormatter(w.globals.series[index][j], {\n                series: w.globals.series,\n                seriesIndex: index,\n                dataPointIndex: j,\n                w: w\n              });\n            };\n\n            if (shared) {\n              f = _this.getFormatters(tIndex);\n              seriesName = _this.getSeriesName({\n                fn: f.yLbTitleFormatter,\n                index: tIndex,\n                seriesIndex: i,\n                j: j\n              });\n              pColor = w.globals.colors[tIndex];\n              val = getValBySeriesIndex(tIndex);\n\n              if (hasGoalValues(tIndex)) {\n                goalVals = w.globals.seriesGoals[tIndex][j].map(function (goal) {\n                  return {\n                    attrs: goal,\n                    val: f.yLbFormatter(goal.value, {\n                      seriesIndex: tIndex,\n                      dataPointIndex: j,\n                      w: w\n                    })\n                  };\n                });\n              }\n            } else {\n              if (e && e.target && e.target.getAttribute('fill')) {\n                pColor = e.target.getAttribute('fill');\n              }\n\n              val = getValBySeriesIndex(i);\n\n              if (hasGoalValues(i) && Array.isArray(w.globals.seriesGoals[i][j])) {\n                goalVals = w.globals.seriesGoals[i][j].map(function (goal) {\n                  return {\n                    attrs: goal,\n                    val: f.yLbFormatter(goal.value, {\n                      seriesIndex: i,\n                      dataPointIndex: j,\n                      w: w\n                    })\n                  };\n                });\n              }\n            }\n          } // for pie / donuts\n\n\n          if (j === null) {\n            val = f.yLbFormatter(w.globals.series[i], _objectSpread2(_objectSpread2({}, w), {}, {\n              seriesIndex: i,\n              dataPointIndex: i\n            }));\n          }\n\n          _this.DOMHandling({\n            i: i,\n            t: tIndex,\n            j: j,\n            ttItems: ttItems,\n            values: {\n              val: val,\n              goalVals: goalVals,\n              xVal: xVal,\n              xAxisTTVal: xAxisTTVal,\n              zVal: zVal\n            },\n            seriesName: seriesName,\n            shared: shared,\n            pColor: pColor\n          });\n        };\n\n        for (var t = 0, inverset = w.globals.series.length - 1; t < w.globals.series.length; t++, inverset--) {\n          _loop(t, inverset);\n        }\n      }\n    }, {\n      key: \"getFormatters\",\n      value: function getFormatters(i) {\n        var w = this.w;\n        var yLbFormatter = w.globals.yLabelFormatters[i];\n        var yLbTitleFormatter;\n\n        if (w.globals.ttVal !== undefined) {\n          if (Array.isArray(w.globals.ttVal)) {\n            yLbFormatter = w.globals.ttVal[i] && w.globals.ttVal[i].formatter;\n            yLbTitleFormatter = w.globals.ttVal[i] && w.globals.ttVal[i].title && w.globals.ttVal[i].title.formatter;\n          } else {\n            yLbFormatter = w.globals.ttVal.formatter;\n\n            if (typeof w.globals.ttVal.title.formatter === 'function') {\n              yLbTitleFormatter = w.globals.ttVal.title.formatter;\n            }\n          }\n        } else {\n          yLbTitleFormatter = w.config.tooltip.y.title.formatter;\n        }\n\n        if (typeof yLbFormatter !== 'function') {\n          if (w.globals.yLabelFormatters[0]) {\n            yLbFormatter = w.globals.yLabelFormatters[0];\n          } else {\n            yLbFormatter = function yLbFormatter(label) {\n              return label;\n            };\n          }\n        }\n\n        if (typeof yLbTitleFormatter !== 'function') {\n          yLbTitleFormatter = function yLbTitleFormatter(label) {\n            return label;\n          };\n        }\n\n        return {\n          yLbFormatter: yLbFormatter,\n          yLbTitleFormatter: yLbTitleFormatter\n        };\n      }\n    }, {\n      key: \"getSeriesName\",\n      value: function getSeriesName(_ref3) {\n        var fn = _ref3.fn,\n            index = _ref3.index,\n            seriesIndex = _ref3.seriesIndex,\n            j = _ref3.j;\n        var w = this.w;\n        return fn(String(w.globals.seriesNames[index]), {\n          series: w.globals.series,\n          seriesIndex: seriesIndex,\n          dataPointIndex: j,\n          w: w\n        });\n      }\n    }, {\n      key: \"DOMHandling\",\n      value: function DOMHandling(_ref4) {\n        _ref4.i;\n            var t = _ref4.t,\n            j = _ref4.j,\n            ttItems = _ref4.ttItems,\n            values = _ref4.values,\n            seriesName = _ref4.seriesName,\n            shared = _ref4.shared,\n            pColor = _ref4.pColor;\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var val = values.val,\n            goalVals = values.goalVals,\n            xVal = values.xVal,\n            xAxisTTVal = values.xAxisTTVal,\n            zVal = values.zVal;\n        var ttItemsChildren = null;\n        ttItemsChildren = ttItems[t].children;\n\n        if (w.config.tooltip.fillSeriesColor) {\n          ttItems[t].style.backgroundColor = pColor;\n          ttItemsChildren[0].style.display = 'none';\n        }\n\n        if (ttCtx.showTooltipTitle) {\n          if (ttCtx.tooltipTitle === null) {\n            // get it once if null, and store it in class property\n            ttCtx.tooltipTitle = w.globals.dom.baseEl.querySelector('.apexcharts-tooltip-title');\n          }\n\n          ttCtx.tooltipTitle.innerHTML = xVal;\n        } // if xaxis tooltip is constructed, we need to replace the innerHTML\n\n\n        if (ttCtx.isXAxisTooltipEnabled) {\n          ttCtx.xaxisTooltipText.innerHTML = xAxisTTVal !== '' ? xAxisTTVal : xVal;\n        }\n\n        var ttYLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-y-label');\n\n        if (ttYLabel) {\n          ttYLabel.innerHTML = seriesName ? seriesName : '';\n        }\n\n        var ttYVal = ttItems[t].querySelector('.apexcharts-tooltip-text-y-value');\n\n        if (ttYVal) {\n          ttYVal.innerHTML = typeof val !== 'undefined' ? val : '';\n        }\n\n        if (ttItemsChildren[0] && ttItemsChildren[0].classList.contains('apexcharts-tooltip-marker')) {\n          if (w.config.tooltip.marker.fillColors && Array.isArray(w.config.tooltip.marker.fillColors)) {\n            pColor = w.config.tooltip.marker.fillColors[t];\n          }\n\n          ttItemsChildren[0].style.backgroundColor = pColor;\n        }\n\n        if (!w.config.tooltip.marker.show) {\n          ttItemsChildren[0].style.display = 'none';\n        }\n\n        var ttGLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-goals-label');\n        var ttGVal = ttItems[t].querySelector('.apexcharts-tooltip-text-goals-value');\n\n        if (goalVals.length && w.globals.seriesGoals[t]) {\n          var createGoalsHtml = function createGoalsHtml() {\n            var gLabels = '<div >';\n            var gVals = '<div>';\n            goalVals.forEach(function (goal, gi) {\n              gLabels += \" <div style=\\\"display: flex\\\"><span class=\\\"apexcharts-tooltip-marker\\\" style=\\\"background-color: \".concat(goal.attrs.strokeColor, \"; height: 3px; border-radius: 0; top: 5px;\\\"></span> \").concat(goal.attrs.name, \"</div>\");\n              gVals += \"<div>\".concat(goal.val, \"</div>\");\n            });\n            ttGLabel.innerHTML = gLabels + \"</div>\";\n            ttGVal.innerHTML = gVals + \"</div>\";\n          };\n\n          if (shared) {\n            if (w.globals.seriesGoals[t][j] && Array.isArray(w.globals.seriesGoals[t][j])) {\n              createGoalsHtml();\n            } else {\n              ttGLabel.innerHTML = '';\n              ttGVal.innerHTML = '';\n            }\n          } else {\n            createGoalsHtml();\n          }\n        } else {\n          ttGLabel.innerHTML = '';\n          ttGVal.innerHTML = '';\n        }\n\n        if (zVal !== null) {\n          var ttZLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-z-label');\n          ttZLabel.innerHTML = w.config.tooltip.z.title;\n          var ttZVal = ttItems[t].querySelector('.apexcharts-tooltip-text-z-value');\n          ttZVal.innerHTML = typeof zVal !== 'undefined' ? zVal : '';\n        }\n\n        if (shared && ttItemsChildren[0]) {\n          // hide when no Val or series collapsed\n          if (typeof val === 'undefined' || val === null || w.globals.collapsedSeriesIndices.indexOf(t) > -1) {\n            ttItemsChildren[0].parentNode.style.display = 'none';\n          } else {\n            ttItemsChildren[0].parentNode.style.display = w.config.tooltip.items.display;\n          } // TODO: issue #1240 needs to be looked at again. commenting it because this also hides single series values with 0 in it (shared tooltip)\n          // if (w.globals.stackedSeriesTotals[j] === 0) {\n          //   // shared tooltip and all values are null, so we need to hide the x value too\n          //   let allYZeroForJ = false\n          //   for (let si = 1; si < w.globals.seriesYvalues.length; si++) {\n          //     if (\n          //       w.globals.seriesYvalues[si][j] ===\n          //       w.globals.seriesYvalues[si - 1][j]\n          //     ) {\n          //       allYZeroForJ = true\n          //     }\n          //   }\n          //   if (allYZeroForJ) {\n          //     ttCtx.tooltipTitle.style.display = 'none'\n          //   } else {\n          //     ttCtx.tooltipTitle.style.display = w.config.tooltip.items.display\n          //   }\n          // } else {\n          //   ttCtx.tooltipTitle.style.display = w.config.tooltip.items.display\n          // }\n\n        }\n      }\n    }, {\n      key: \"toggleActiveInactiveSeries\",\n      value: function toggleActiveInactiveSeries(shared) {\n        var w = this.w;\n\n        if (shared) {\n          // make all tooltips active\n          this.tooltipUtil.toggleAllTooltipSeriesGroups('enable');\n        } else {\n          // disable all tooltip text groups\n          this.tooltipUtil.toggleAllTooltipSeriesGroups('disable'); // enable the first tooltip text group\n\n          var firstTooltipSeriesGroup = w.globals.dom.baseEl.querySelector('.apexcharts-tooltip-series-group');\n\n          if (firstTooltipSeriesGroup) {\n            firstTooltipSeriesGroup.classList.add('apexcharts-active');\n            firstTooltipSeriesGroup.style.display = w.config.tooltip.items.display;\n          }\n        }\n      }\n    }, {\n      key: \"getValuesToPrint\",\n      value: function getValuesToPrint(_ref5) {\n        var i = _ref5.i,\n            j = _ref5.j;\n        var w = this.w;\n        var filteredSeriesX = this.ctx.series.filteredSeriesX();\n        var xVal = '';\n        var xAxisTTVal = '';\n        var zVal = null;\n        var val = null;\n        var customFormatterOpts = {\n          series: w.globals.series,\n          seriesIndex: i,\n          dataPointIndex: j,\n          w: w\n        };\n        var zFormatter = w.globals.ttZFormatter;\n\n        if (j === null) {\n          val = w.globals.series[i];\n        } else {\n          if (w.globals.isXNumeric && w.config.chart.type !== 'treemap') {\n            xVal = filteredSeriesX[i][j];\n\n            if (filteredSeriesX[i].length === 0) {\n              // a series (possibly the first one) might be collapsed, so get the next active index\n              var firstActiveSeriesIndex = this.tooltipUtil.getFirstActiveXArray(filteredSeriesX);\n              xVal = filteredSeriesX[firstActiveSeriesIndex][j];\n            }\n          } else {\n            xVal = typeof w.globals.labels[j] !== 'undefined' ? w.globals.labels[j] : '';\n          }\n        }\n\n        var bufferXVal = xVal;\n\n        if (w.globals.isXNumeric && w.config.xaxis.type === 'datetime') {\n          var xFormat = new Formatters(this.ctx);\n          xVal = xFormat.xLabelFormat(w.globals.ttKeyFormatter, bufferXVal, bufferXVal, {\n            i: undefined,\n            dateFormatter: new DateTime(this.ctx).formatDate,\n            w: this.w\n          });\n        } else {\n          if (w.globals.isBarHorizontal) {\n            xVal = w.globals.yLabelFormatters[0](bufferXVal, customFormatterOpts);\n          } else {\n            xVal = w.globals.xLabelFormatter(bufferXVal, customFormatterOpts);\n          }\n        } // override default x-axis formatter with tooltip formatter\n\n\n        if (w.config.tooltip.x.formatter !== undefined) {\n          xVal = w.globals.ttKeyFormatter(bufferXVal, customFormatterOpts);\n        }\n\n        if (w.globals.seriesZ.length > 0 && w.globals.seriesZ[i].length > 0) {\n          zVal = zFormatter(w.globals.seriesZ[i][j], w);\n        }\n\n        if (typeof w.config.xaxis.tooltip.formatter === 'function') {\n          xAxisTTVal = w.globals.xaxisTooltipFormatter(bufferXVal, customFormatterOpts);\n        } else {\n          xAxisTTVal = xVal;\n        }\n\n        return {\n          val: Array.isArray(val) ? val.join(' ') : val,\n          xVal: Array.isArray(xVal) ? xVal.join(' ') : xVal,\n          xAxisTTVal: Array.isArray(xAxisTTVal) ? xAxisTTVal.join(' ') : xAxisTTVal,\n          zVal: zVal\n        };\n      }\n    }, {\n      key: \"handleCustomTooltip\",\n      value: function handleCustomTooltip(_ref6) {\n        var i = _ref6.i,\n            j = _ref6.j,\n            y1 = _ref6.y1,\n            y2 = _ref6.y2,\n            w = _ref6.w;\n        var tooltipEl = this.ttCtx.getElTooltip();\n        var fn = w.config.tooltip.custom;\n\n        if (Array.isArray(fn) && fn[i]) {\n          fn = fn[i];\n        } // override everything with a custom html tooltip and replace it\n\n\n        tooltipEl.innerHTML = fn({\n          ctx: this.ctx,\n          series: w.globals.series,\n          seriesIndex: i,\n          dataPointIndex: j,\n          y1: y1,\n          y2: y2,\n          w: w\n        });\n      }\n    }]);\n\n    return Labels;\n  }();\n\n  /**\n   * ApexCharts Tooltip.Position Class to move the tooltip based on x and y position.\n   *\n   * @module Tooltip.Position\n   **/\n\n  var Position = /*#__PURE__*/function () {\n    function Position(tooltipContext) {\n      _classCallCheck(this, Position);\n\n      this.ttCtx = tooltipContext;\n      this.ctx = tooltipContext.ctx;\n      this.w = tooltipContext.w;\n    }\n    /**\n     * This will move the crosshair (the vertical/horz line that moves along with mouse)\n     * Along with this, this function also calls the xaxisMove function\n     * @memberof Position\n     * @param {int} - cx = point's x position, wherever point's x is, you need to move crosshair\n     */\n\n\n    _createClass(Position, [{\n      key: \"moveXCrosshairs\",\n      value: function moveXCrosshairs(cx) {\n        var j = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var ttCtx = this.ttCtx;\n        var w = this.w;\n        var xcrosshairs = ttCtx.getElXCrosshairs();\n        var x = cx - ttCtx.xcrosshairsWidth / 2;\n        var tickAmount = w.globals.labels.slice().length;\n\n        if (j !== null) {\n          x = w.globals.gridWidth / tickAmount * j;\n        }\n\n        if (xcrosshairs !== null && !w.globals.isBarHorizontal) {\n          xcrosshairs.setAttribute('x', x);\n          xcrosshairs.setAttribute('x1', x);\n          xcrosshairs.setAttribute('x2', x);\n          xcrosshairs.setAttribute('y2', w.globals.gridHeight);\n          xcrosshairs.classList.add('apexcharts-active');\n        }\n\n        if (x < 0) {\n          x = 0;\n        }\n\n        if (x > w.globals.gridWidth) {\n          x = w.globals.gridWidth;\n        }\n\n        if (ttCtx.isXAxisTooltipEnabled) {\n          var tx = x;\n\n          if (w.config.xaxis.crosshairs.width === 'tickWidth' || w.config.xaxis.crosshairs.width === 'barWidth') {\n            tx = x + ttCtx.xcrosshairsWidth / 2;\n          }\n\n          this.moveXAxisTooltip(tx);\n        }\n      }\n      /**\n       * This will move the crosshair (the vertical/horz line that moves along with mouse)\n       * Along with this, this function also calls the xaxisMove function\n       * @memberof Position\n       * @param {int} - cx = point's x position, wherever point's x is, you need to move crosshair\n       */\n\n    }, {\n      key: \"moveYCrosshairs\",\n      value: function moveYCrosshairs(cy) {\n        var ttCtx = this.ttCtx;\n\n        if (ttCtx.ycrosshairs !== null) {\n          Graphics.setAttrs(ttCtx.ycrosshairs, {\n            y1: cy,\n            y2: cy\n          });\n        }\n\n        if (ttCtx.ycrosshairsHidden !== null) {\n          Graphics.setAttrs(ttCtx.ycrosshairsHidden, {\n            y1: cy,\n            y2: cy\n          });\n        }\n      }\n      /**\n       ** AxisTooltip is the small rectangle which appears on x axis with x value, when user moves\n       * @memberof Position\n       * @param {int} - cx = point's x position, wherever point's x is, you need to move\n       */\n\n    }, {\n      key: \"moveXAxisTooltip\",\n      value: function moveXAxisTooltip(cx) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n\n        if (ttCtx.xaxisTooltip !== null && ttCtx.xcrosshairsWidth !== 0) {\n          ttCtx.xaxisTooltip.classList.add('apexcharts-active');\n          var cy = ttCtx.xaxisOffY + w.config.xaxis.tooltip.offsetY + w.globals.translateY + 1 + w.config.xaxis.offsetY;\n          var xaxisTTText = ttCtx.xaxisTooltip.getBoundingClientRect();\n          var xaxisTTTextWidth = xaxisTTText.width;\n          cx = cx - xaxisTTTextWidth / 2;\n\n          if (!isNaN(cx)) {\n            cx = cx + w.globals.translateX;\n            var textRect = 0;\n            var graphics = new Graphics(this.ctx);\n            textRect = graphics.getTextRects(ttCtx.xaxisTooltipText.innerHTML);\n            ttCtx.xaxisTooltipText.style.minWidth = textRect.width + 'px';\n            ttCtx.xaxisTooltip.style.left = cx + 'px';\n            ttCtx.xaxisTooltip.style.top = cy + 'px';\n          }\n        }\n      }\n    }, {\n      key: \"moveYAxisTooltip\",\n      value: function moveYAxisTooltip(index) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n\n        if (ttCtx.yaxisTTEls === null) {\n          ttCtx.yaxisTTEls = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxistooltip');\n        }\n\n        var ycrosshairsHiddenRectY1 = parseInt(ttCtx.ycrosshairsHidden.getAttribute('y1'), 10);\n        var cy = w.globals.translateY + ycrosshairsHiddenRectY1;\n        var yAxisTTRect = ttCtx.yaxisTTEls[index].getBoundingClientRect();\n        var yAxisTTHeight = yAxisTTRect.height;\n        var cx = w.globals.translateYAxisX[index] - 2;\n\n        if (w.config.yaxis[index].opposite) {\n          cx = cx - 26;\n        }\n\n        cy = cy - yAxisTTHeight / 2;\n\n        if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1) {\n          ttCtx.yaxisTTEls[index].classList.add('apexcharts-active');\n          ttCtx.yaxisTTEls[index].style.top = cy + 'px';\n          ttCtx.yaxisTTEls[index].style.left = cx + w.config.yaxis[index].tooltip.offsetX + 'px';\n        } else {\n          ttCtx.yaxisTTEls[index].classList.remove('apexcharts-active');\n        }\n      }\n      /**\n       ** moves the whole tooltip by changing x, y attrs\n       * @memberof Position\n       * @param {int} - cx = point's x position, wherever point's x is, you need to move tooltip\n       * @param {int} - cy = point's y position, wherever point's y is, you need to move tooltip\n       * @param {int} - r = point's radius\n       */\n\n    }, {\n      key: \"moveTooltip\",\n      value: function moveTooltip(cx, cy) {\n        var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var tooltipEl = ttCtx.getElTooltip();\n        var tooltipRect = ttCtx.tooltipRect;\n        var pointR = r !== null ? parseFloat(r) : 1;\n        var x = parseFloat(cx) + pointR + 5;\n        var y = parseFloat(cy) + pointR / 2; // - tooltipRect.ttHeight / 2\n\n        if (x > w.globals.gridWidth / 2) {\n          x = x - tooltipRect.ttWidth - pointR - 15;\n        }\n\n        if (x > w.globals.gridWidth - tooltipRect.ttWidth - 10) {\n          x = w.globals.gridWidth - tooltipRect.ttWidth;\n        }\n\n        if (x < -20) {\n          x = -20;\n        }\n\n        if (w.config.tooltip.followCursor) {\n          var elGrid = ttCtx.getElGrid();\n          var seriesBound = elGrid.getBoundingClientRect();\n          y = ttCtx.e.clientY + w.globals.translateY - seriesBound.top - tooltipRect.ttHeight / 2;\n        } else {\n          if (w.globals.isBarHorizontal) {\n            // non follow shared tooltip in a horizontal bar chart\n            y = y - tooltipRect.ttHeight;\n          } else {\n            if (tooltipRect.ttHeight / 2 + y > w.globals.gridHeight) {\n              y = w.globals.gridHeight - tooltipRect.ttHeight + w.globals.translateY;\n            }\n\n            if (y < 0) {\n              y = 0;\n            }\n          }\n        }\n\n        if (!isNaN(x)) {\n          x = x + w.globals.translateX;\n          tooltipEl.style.left = x + 'px';\n          tooltipEl.style.top = y + 'px';\n        }\n      }\n    }, {\n      key: \"moveMarkers\",\n      value: function moveMarkers(i, j) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n\n        if (w.globals.markers.size[i] > 0) {\n          var allPoints = w.globals.dom.baseEl.querySelectorAll(\" .apexcharts-series[data\\\\:realIndex='\".concat(i, \"'] .apexcharts-marker\"));\n\n          for (var p = 0; p < allPoints.length; p++) {\n            if (parseInt(allPoints[p].getAttribute('rel'), 10) === j) {\n              ttCtx.marker.resetPointsSize();\n              ttCtx.marker.enlargeCurrentPoint(j, allPoints[p]);\n            }\n          }\n        } else {\n          ttCtx.marker.resetPointsSize();\n          this.moveDynamicPointOnHover(j, i);\n        }\n      } // This function is used when you need to show markers/points only on hover -\n      // DIFFERENT X VALUES in multiple series\n\n    }, {\n      key: \"moveDynamicPointOnHover\",\n      value: function moveDynamicPointOnHover(j, capturedSeries) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var cx = 0;\n        var cy = 0;\n        var pointsArr = w.globals.pointsArray;\n        var hoverSize = ttCtx.tooltipUtil.getHoverMarkerSize(capturedSeries);\n        var serType = w.config.series[capturedSeries].type;\n\n        if (serType && (serType === 'column' || serType === 'candlestick' || serType === 'boxPlot')) {\n          // fix error mentioned in #811\n          return;\n        }\n\n        cx = pointsArr[capturedSeries][j][0];\n        cy = pointsArr[capturedSeries][j][1] ? pointsArr[capturedSeries][j][1] : 0;\n        var point = w.globals.dom.baseEl.querySelector(\".apexcharts-series[data\\\\:realIndex='\".concat(capturedSeries, \"'] .apexcharts-series-markers circle\"));\n\n        if (point && cy < w.globals.gridHeight && cy > 0) {\n          point.setAttribute('r', hoverSize);\n          point.setAttribute('cx', cx);\n          point.setAttribute('cy', cy);\n        } // point.style.opacity = w.config.markers.hover.opacity\n\n\n        this.moveXCrosshairs(cx);\n\n        if (!ttCtx.fixedTooltip) {\n          this.moveTooltip(cx, cy, hoverSize);\n        }\n      } // This function is used when you need to show markers/points only on hover -\n      // SAME X VALUES in multiple series\n\n    }, {\n      key: \"moveDynamicPointsOnHover\",\n      value: function moveDynamicPointsOnHover(j) {\n        var ttCtx = this.ttCtx;\n        var w = ttCtx.w;\n        var cx = 0;\n        var cy = 0;\n        var activeSeries = 0;\n        var pointsArr = w.globals.pointsArray;\n        var series = new Series(this.ctx);\n        activeSeries = series.getActiveConfigSeriesIndex(true);\n        var hoverSize = ttCtx.tooltipUtil.getHoverMarkerSize(activeSeries);\n\n        if (pointsArr[activeSeries]) {\n          cx = pointsArr[activeSeries][j][0];\n          cy = pointsArr[activeSeries][j][1];\n        }\n\n        var points = ttCtx.tooltipUtil.getAllMarkers();\n\n        if (points !== null) {\n          for (var p = 0; p < w.globals.series.length; p++) {\n            var pointArr = pointsArr[p];\n\n            if (w.globals.comboCharts) {\n              // in a combo chart, if column charts are present, markers will not match with the number of series, hence this patch to push a null value in points array\n              if (typeof pointArr === 'undefined') {\n                // nodelist to array\n                points.splice(p, 0, null);\n              }\n            }\n\n            if (pointArr && pointArr.length) {\n              var pcy = pointsArr[p][j][1];\n              points[p].setAttribute('cx', cx);\n\n              if (pcy !== null && !isNaN(pcy) && pcy < w.globals.gridHeight && pcy > 0) {\n                points[p] && points[p].setAttribute('r', hoverSize);\n                points[p] && points[p].setAttribute('cy', pcy);\n              } else {\n                points[p] && points[p].setAttribute('r', 0);\n              }\n            }\n          }\n        }\n\n        this.moveXCrosshairs(cx);\n\n        if (!ttCtx.fixedTooltip) {\n          var tcy = cy || w.globals.gridHeight;\n          this.moveTooltip(cx, tcy, hoverSize);\n        }\n      }\n    }, {\n      key: \"moveStickyTooltipOverBars\",\n      value: function moveStickyTooltipOverBars(j) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var barLen = w.globals.columnSeries ? w.globals.columnSeries.length : w.globals.series.length;\n        var i = barLen >= 2 && barLen % 2 === 0 ? Math.floor(barLen / 2) : Math.floor(barLen / 2) + 1;\n\n        if (w.globals.isBarHorizontal) {\n          var series = new Series(this.ctx);\n          i = series.getActiveConfigSeriesIndex(false, 'desc') + 1;\n        }\n\n        var jBar = w.globals.dom.baseEl.querySelector(\".apexcharts-bar-series .apexcharts-series[rel='\".concat(i, \"'] path[j='\").concat(j, \"'], .apexcharts-candlestick-series .apexcharts-series[rel='\").concat(i, \"'] path[j='\").concat(j, \"'], .apexcharts-boxPlot-series .apexcharts-series[rel='\").concat(i, \"'] path[j='\").concat(j, \"'], .apexcharts-rangebar-series .apexcharts-series[rel='\").concat(i, \"'] path[j='\").concat(j, \"']\"));\n        var bcx = jBar ? parseFloat(jBar.getAttribute('cx')) : 0;\n        var bcy = jBar ? parseFloat(jBar.getAttribute('cy')) : 0;\n        var bw = jBar ? parseFloat(jBar.getAttribute('barWidth')) : 0;\n        var bh = jBar ? parseFloat(jBar.getAttribute('barHeight')) : 0;\n        var elGrid = ttCtx.getElGrid();\n        var seriesBound = elGrid.getBoundingClientRect();\n        var isBoxOrCandle = jBar.classList.contains('apexcharts-candlestick-area') || jBar.classList.contains('apexcharts-boxPlot-area');\n\n        if (w.globals.isXNumeric) {\n          if (jBar && !isBoxOrCandle) {\n            bcx = bcx - (barLen % 2 !== 0 ? bw / 2 : 0);\n          }\n\n          if (jBar && // fixes apexcharts.js#2354\n          isBoxOrCandle && w.globals.comboCharts) {\n            bcx = bcx - bw / 2;\n          }\n        } else {\n          if (!w.globals.isBarHorizontal) {\n            bcx = ttCtx.xAxisTicksPositions[j - 1] + ttCtx.dataPointsDividedWidth / 2;\n\n            if (isNaN(bcx)) {\n              bcx = ttCtx.xAxisTicksPositions[j] - ttCtx.dataPointsDividedWidth / 2;\n            }\n          }\n        }\n\n        if (!w.globals.isBarHorizontal) {\n          bcy = ttCtx.e.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight / 2;\n        } else {\n          bcy = bcy + bh / 3;\n        }\n\n        if (!w.globals.isBarHorizontal) {\n          this.moveXCrosshairs(bcx);\n        }\n\n        if (!ttCtx.fixedTooltip) {\n          var tcy = bcy || w.globals.gridHeight;\n          this.moveTooltip(bcx, tcy);\n        }\n      }\n    }]);\n\n    return Position;\n  }();\n\n  /**\n   * ApexCharts Tooltip.Marker Class to draw texts on the tooltip.\n   * This file deals with the markers that appear near tooltip in line/area charts.\n   * These markers helps the user to associate the data-points and the values\n   * that are shown in the tooltip\n   *\n   * @module Tooltip.Marker\n   **/\n\n  var Marker = /*#__PURE__*/function () {\n    function Marker(tooltipContext) {\n      _classCallCheck(this, Marker);\n\n      this.w = tooltipContext.w;\n      this.ttCtx = tooltipContext;\n      this.ctx = tooltipContext.ctx;\n      this.tooltipPosition = new Position(tooltipContext);\n    }\n\n    _createClass(Marker, [{\n      key: \"drawDynamicPoints\",\n      value: function drawDynamicPoints() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var marker = new Markers(this.ctx);\n        var elsSeries = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series');\n        elsSeries = _toConsumableArray(elsSeries);\n\n        if (w.config.chart.stacked) {\n          elsSeries.sort(function (a, b) {\n            return parseFloat(a.getAttribute('data:realIndex')) - parseFloat(b.getAttribute('data:realIndex'));\n          });\n        }\n\n        for (var i = 0; i < elsSeries.length; i++) {\n          var pointsMain = elsSeries[i].querySelector(\".apexcharts-series-markers-wrap\");\n\n          if (pointsMain !== null) {\n            // it can be null as we have tooltips in donut/bar charts\n            var point = void 0;\n            var PointClasses = \"apexcharts-marker w\".concat((Math.random() + 1).toString(36).substring(4));\n\n            if ((w.config.chart.type === 'line' || w.config.chart.type === 'area') && !w.globals.comboCharts && !w.config.tooltip.intersect) {\n              PointClasses += ' no-pointer-events';\n            }\n\n            var elPointOptions = marker.getMarkerConfig({\n              cssClass: PointClasses,\n              seriesIndex: Number(pointsMain.getAttribute('data:realIndex')) // fixes apexcharts/apexcharts.js #1427\n\n            });\n            point = graphics.drawMarker(0, 0, elPointOptions);\n            point.node.setAttribute('default-marker-size', 0);\n            var elPointsG = document.createElementNS(w.globals.SVGNS, 'g');\n            elPointsG.classList.add('apexcharts-series-markers');\n            elPointsG.appendChild(point.node);\n            pointsMain.appendChild(elPointsG);\n          }\n        }\n      }\n    }, {\n      key: \"enlargeCurrentPoint\",\n      value: function enlargeCurrentPoint(rel, point) {\n        var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n        var w = this.w;\n\n        if (w.config.chart.type !== 'bubble') {\n          this.newPointSize(rel, point);\n        }\n\n        var cx = point.getAttribute('cx');\n        var cy = point.getAttribute('cy');\n\n        if (x !== null && y !== null) {\n          cx = x;\n          cy = y;\n        }\n\n        this.tooltipPosition.moveXCrosshairs(cx);\n\n        if (!this.fixedTooltip) {\n          if (w.config.chart.type === 'radar') {\n            var elGrid = this.ttCtx.getElGrid();\n            var seriesBound = elGrid.getBoundingClientRect();\n            cx = this.ttCtx.e.clientX - seriesBound.left;\n          }\n\n          this.tooltipPosition.moveTooltip(cx, cy, w.config.markers.hover.size);\n        }\n      }\n    }, {\n      key: \"enlargePoints\",\n      value: function enlargePoints(j) {\n        var w = this.w;\n        var me = this;\n        var ttCtx = this.ttCtx;\n        var col = j;\n        var points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker');\n        var newSize = w.config.markers.hover.size;\n\n        for (var p = 0; p < points.length; p++) {\n          var rel = points[p].getAttribute('rel');\n          var index = points[p].getAttribute('index');\n\n          if (newSize === undefined) {\n            newSize = w.globals.markers.size[index] + w.config.markers.hover.sizeOffset;\n          }\n\n          if (col === parseInt(rel, 10)) {\n            me.newPointSize(col, points[p]);\n            var cx = points[p].getAttribute('cx');\n            var cy = points[p].getAttribute('cy');\n            me.tooltipPosition.moveXCrosshairs(cx);\n\n            if (!ttCtx.fixedTooltip) {\n              me.tooltipPosition.moveTooltip(cx, cy, newSize);\n            }\n          } else {\n            me.oldPointSize(points[p]);\n          }\n        }\n      }\n    }, {\n      key: \"newPointSize\",\n      value: function newPointSize(rel, point) {\n        var w = this.w;\n        var newSize = w.config.markers.hover.size;\n        var elPoint = rel === 0 ? point.parentNode.firstChild : point.parentNode.lastChild;\n\n        if (elPoint.getAttribute('default-marker-size') !== '0') {\n          var index = parseInt(elPoint.getAttribute('index'), 10);\n\n          if (newSize === undefined) {\n            newSize = w.globals.markers.size[index] + w.config.markers.hover.sizeOffset;\n          }\n\n          if (newSize < 0) newSize = 0;\n          elPoint.setAttribute('r', newSize);\n        }\n      }\n    }, {\n      key: \"oldPointSize\",\n      value: function oldPointSize(point) {\n        var size = parseFloat(point.getAttribute('default-marker-size'));\n        point.setAttribute('r', size);\n      }\n    }, {\n      key: \"resetPointsSize\",\n      value: function resetPointsSize() {\n        var w = this.w;\n        var points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker');\n\n        for (var p = 0; p < points.length; p++) {\n          var size = parseFloat(points[p].getAttribute('default-marker-size'));\n\n          if (Utils$1.isNumber(size) && size >= 0) {\n            points[p].setAttribute('r', size);\n          } else {\n            points[p].setAttribute('r', 0);\n          }\n        }\n      }\n    }]);\n\n    return Marker;\n  }();\n\n  /**\n   * ApexCharts Tooltip.Intersect Class.\n   * This file deals with functions related to intersecting tooltips\n   * (tooltips that appear when user hovers directly over a data-point whether)\n   *\n   * @module Tooltip.Intersect\n   **/\n\n  var Intersect = /*#__PURE__*/function () {\n    function Intersect(tooltipContext) {\n      _classCallCheck(this, Intersect);\n\n      this.w = tooltipContext.w;\n      this.ttCtx = tooltipContext;\n    } // a helper function to get an element's attribute value\n\n\n    _createClass(Intersect, [{\n      key: \"getAttr\",\n      value: function getAttr(e, attr) {\n        return parseFloat(e.target.getAttribute(attr));\n      } // handle tooltip for heatmaps and treemaps\n\n    }, {\n      key: \"handleHeatTreeTooltip\",\n      value: function handleHeatTreeTooltip(_ref) {\n        var e = _ref.e,\n            opt = _ref.opt,\n            x = _ref.x,\n            y = _ref.y,\n            type = _ref.type;\n        var ttCtx = this.ttCtx;\n        var w = this.w;\n\n        if (e.target.classList.contains(\"apexcharts-\".concat(type, \"-rect\"))) {\n          var i = this.getAttr(e, 'i');\n          var j = this.getAttr(e, 'j');\n          var cx = this.getAttr(e, 'cx');\n          var cy = this.getAttr(e, 'cy');\n          var width = this.getAttr(e, 'width');\n          var height = this.getAttr(e, 'height');\n          ttCtx.tooltipLabels.drawSeriesTexts({\n            ttItems: opt.ttItems,\n            i: i,\n            j: j,\n            shared: false,\n            e: e\n          });\n          w.globals.capturedSeriesIndex = i;\n          w.globals.capturedDataPointIndex = j;\n          x = cx + ttCtx.tooltipRect.ttWidth / 2 + width;\n          y = cy + ttCtx.tooltipRect.ttHeight / 2 - height / 2;\n          ttCtx.tooltipPosition.moveXCrosshairs(cx + width / 2);\n\n          if (x > w.globals.gridWidth / 2) {\n            x = cx - ttCtx.tooltipRect.ttWidth / 2 + width;\n          }\n\n          if (ttCtx.w.config.tooltip.followCursor) {\n            var seriesBound = w.globals.dom.elWrap.getBoundingClientRect();\n            x = w.globals.clientX - seriesBound.left - ttCtx.tooltipRect.ttWidth / 2;\n            y = w.globals.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight - 5;\n          }\n        }\n\n        return {\n          x: x,\n          y: y\n        };\n      }\n      /**\n       * handle tooltips for line/area/scatter charts where tooltip.intersect is true\n       * when user hovers over the marker directly, this function is executed\n       */\n\n    }, {\n      key: \"handleMarkerTooltip\",\n      value: function handleMarkerTooltip(_ref2) {\n        var e = _ref2.e,\n            opt = _ref2.opt,\n            x = _ref2.x,\n            y = _ref2.y;\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var i;\n        var j;\n\n        if (e.target.classList.contains('apexcharts-marker')) {\n          var cx = parseInt(opt.paths.getAttribute('cx'), 10);\n          var cy = parseInt(opt.paths.getAttribute('cy'), 10);\n          var val = parseFloat(opt.paths.getAttribute('val'));\n          j = parseInt(opt.paths.getAttribute('rel'), 10);\n          i = parseInt(opt.paths.parentNode.parentNode.parentNode.getAttribute('rel'), 10) - 1;\n\n          if (ttCtx.intersect) {\n            var el = Utils$1.findAncestor(opt.paths, 'apexcharts-series');\n\n            if (el) {\n              i = parseInt(el.getAttribute('data:realIndex'), 10);\n            }\n          }\n\n          ttCtx.tooltipLabels.drawSeriesTexts({\n            ttItems: opt.ttItems,\n            i: i,\n            j: j,\n            shared: ttCtx.showOnIntersect ? false : w.config.tooltip.shared,\n            e: e\n          });\n\n          if (e.type === 'mouseup') {\n            ttCtx.markerClick(e, i, j);\n          }\n\n          w.globals.capturedSeriesIndex = i;\n          w.globals.capturedDataPointIndex = j;\n          x = cx;\n          y = cy + w.globals.translateY - ttCtx.tooltipRect.ttHeight * 1.4;\n\n          if (ttCtx.w.config.tooltip.followCursor) {\n            var elGrid = ttCtx.getElGrid();\n            var seriesBound = elGrid.getBoundingClientRect();\n            y = ttCtx.e.clientY + w.globals.translateY - seriesBound.top;\n          }\n\n          if (val < 0) {\n            y = cy;\n          }\n\n          ttCtx.marker.enlargeCurrentPoint(j, opt.paths, x, y);\n        }\n\n        return {\n          x: x,\n          y: y\n        };\n      }\n      /**\n       * handle tooltips for bar/column charts\n       */\n\n    }, {\n      key: \"handleBarTooltip\",\n      value: function handleBarTooltip(_ref3) {\n        var e = _ref3.e,\n            opt = _ref3.opt;\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var tooltipEl = ttCtx.getElTooltip();\n        var bx = 0;\n        var x = 0;\n        var y = 0;\n        var i = 0;\n        var strokeWidth;\n        var barXY = this.getBarTooltipXY({\n          e: e,\n          opt: opt\n        });\n        i = barXY.i;\n        var barHeight = barXY.barHeight;\n        var j = barXY.j;\n        w.globals.capturedSeriesIndex = i;\n        w.globals.capturedDataPointIndex = j;\n\n        if (w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars() || !w.config.tooltip.shared) {\n          x = barXY.x;\n          y = barXY.y;\n          strokeWidth = Array.isArray(w.config.stroke.width) ? w.config.stroke.width[i] : w.config.stroke.width;\n          bx = x;\n        } else {\n          if (!w.globals.comboCharts && !w.config.tooltip.shared) {\n            // todo: re-check this condition as it's always 0\n            bx = bx / 2;\n          }\n        } // y is NaN, make it touch the bottom of grid area\n\n\n        if (isNaN(y)) {\n          y = w.globals.svgHeight - ttCtx.tooltipRect.ttHeight;\n        } else if (y < 0) {\n          y = 0;\n        }\n\n        var seriesIndex = parseInt(opt.paths.parentNode.getAttribute('data:realIndex'), 10);\n        var isReversed = w.globals.isMultipleYAxis ? w.config.yaxis[seriesIndex] && w.config.yaxis[seriesIndex].reversed : w.config.yaxis[0].reversed;\n\n        if (x + ttCtx.tooltipRect.ttWidth > w.globals.gridWidth && !isReversed) {\n          x = x - ttCtx.tooltipRect.ttWidth;\n        } else if (x < 0) {\n          x = 0;\n        }\n\n        if (ttCtx.w.config.tooltip.followCursor) {\n          var elGrid = ttCtx.getElGrid();\n          var seriesBound = elGrid.getBoundingClientRect();\n          y = ttCtx.e.clientY - seriesBound.top;\n        } // if tooltip is still null, querySelector\n\n\n        if (ttCtx.tooltip === null) {\n          ttCtx.tooltip = w.globals.dom.baseEl.querySelector('.apexcharts-tooltip');\n        }\n\n        if (!w.config.tooltip.shared) {\n          if (w.globals.comboBarCount > 0) {\n            ttCtx.tooltipPosition.moveXCrosshairs(bx + strokeWidth / 2);\n          } else {\n            ttCtx.tooltipPosition.moveXCrosshairs(bx);\n          }\n        } // move tooltip here\n\n\n        if (!ttCtx.fixedTooltip && (!w.config.tooltip.shared || w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars())) {\n          if (isReversed) {\n            x = x - ttCtx.tooltipRect.ttWidth;\n\n            if (x < 0) {\n              x = 0;\n            }\n          }\n\n          tooltipEl.style.left = x + w.globals.translateX + 'px';\n\n          if (isReversed && !(w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars())) {\n            y = y + barHeight - (w.globals.series[i][j] < 0 ? barHeight : 0) * 2;\n          }\n\n          if (ttCtx.tooltipRect.ttHeight + y > w.globals.gridHeight) {\n            y = w.globals.gridHeight - ttCtx.tooltipRect.ttHeight + w.globals.translateY;\n            tooltipEl.style.top = y + 'px';\n          } else {\n            tooltipEl.style.top = y + w.globals.translateY - ttCtx.tooltipRect.ttHeight / 2 + 'px';\n          }\n        }\n      }\n    }, {\n      key: \"getBarTooltipXY\",\n      value: function getBarTooltipXY(_ref4) {\n        var e = _ref4.e,\n            opt = _ref4.opt;\n        var w = this.w;\n        var j = null;\n        var ttCtx = this.ttCtx;\n        var i = 0;\n        var x = 0;\n        var y = 0;\n        var barWidth = 0;\n        var barHeight = 0;\n        var cl = e.target.classList;\n\n        if (cl.contains('apexcharts-bar-area') || cl.contains('apexcharts-candlestick-area') || cl.contains('apexcharts-boxPlot-area') || cl.contains('apexcharts-rangebar-area')) {\n          var bar = e.target;\n          var barRect = bar.getBoundingClientRect();\n          var seriesBound = opt.elGrid.getBoundingClientRect();\n          var bh = barRect.height;\n          barHeight = barRect.height;\n          var bw = barRect.width;\n          var cx = parseInt(bar.getAttribute('cx'), 10);\n          var cy = parseInt(bar.getAttribute('cy'), 10);\n          barWidth = parseFloat(bar.getAttribute('barWidth'));\n          var clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\n          j = parseInt(bar.getAttribute('j'), 10);\n          i = parseInt(bar.parentNode.getAttribute('rel'), 10) - 1;\n          var y1 = bar.getAttribute('data-range-y1');\n          var y2 = bar.getAttribute('data-range-y2');\n\n          if (w.globals.comboCharts) {\n            i = parseInt(bar.parentNode.getAttribute('data:realIndex'), 10);\n          } // if (w.config.tooltip.shared) {\n          // this check not needed  at the moment\n          //   const yDivisor = w.globals.gridHeight / (w.globals.series.length)\n          //   const hoverY = ttCtx.clientY - ttCtx.seriesBound.top\n          //   j = Math.ceil(hoverY / yDivisor)\n          // }\n\n\n          ttCtx.tooltipLabels.drawSeriesTexts({\n            ttItems: opt.ttItems,\n            i: i,\n            j: j,\n            y1: y1 ? parseInt(y1, 10) : null,\n            y2: y2 ? parseInt(y2, 10) : null,\n            shared: ttCtx.showOnIntersect ? false : w.config.tooltip.shared,\n            e: e\n          });\n\n          if (w.config.tooltip.followCursor) {\n            if (w.globals.isBarHorizontal) {\n              x = clientX - seriesBound.left + 15;\n              y = cy - ttCtx.dataPointsDividedHeight + bh / 2 - ttCtx.tooltipRect.ttHeight / 2;\n            } else {\n              if (w.globals.isXNumeric) {\n                x = cx - bw / 2;\n              } else {\n                x = cx - ttCtx.dataPointsDividedWidth + bw / 2;\n              }\n\n              y = e.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight / 2 - 15;\n            }\n          } else {\n            if (w.globals.isBarHorizontal) {\n              x = cx;\n\n              if (x < ttCtx.xyRatios.baseLineInvertedY) {\n                x = cx - ttCtx.tooltipRect.ttWidth;\n              }\n\n              y = cy - ttCtx.dataPointsDividedHeight + bh / 2 - ttCtx.tooltipRect.ttHeight / 2;\n            } else {\n              // if columns\n              if (w.globals.isXNumeric) {\n                x = cx - bw / 2;\n              } else {\n                x = cx - ttCtx.dataPointsDividedWidth + bw / 2;\n              }\n\n              y = cy; // - ttCtx.tooltipRect.ttHeight / 2 + 10\n            }\n          }\n        }\n\n        return {\n          x: x,\n          y: y,\n          barHeight: barHeight,\n          barWidth: barWidth,\n          i: i,\n          j: j\n        };\n      }\n    }]);\n\n    return Intersect;\n  }();\n\n  /**\n   * ApexCharts Tooltip.AxesTooltip Class.\n   * This file deals with the x-axis and y-axis tooltips.\n   *\n   * @module Tooltip.AxesTooltip\n   **/\n  var AxesTooltip = /*#__PURE__*/function () {\n    function AxesTooltip(tooltipContext) {\n      _classCallCheck(this, AxesTooltip);\n\n      this.w = tooltipContext.w;\n      this.ttCtx = tooltipContext;\n    }\n    /**\n     * This method adds the secondary tooltip which appears below x axis\n     * @memberof Tooltip\n     **/\n\n\n    _createClass(AxesTooltip, [{\n      key: \"drawXaxisTooltip\",\n      value: function drawXaxisTooltip() {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var isBottom = w.config.xaxis.position === 'bottom';\n        ttCtx.xaxisOffY = isBottom ? w.globals.gridHeight + 1 : -w.globals.xAxisHeight - w.config.xaxis.axisTicks.height + 3;\n        var tooltipCssClass = isBottom ? 'apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom' : 'apexcharts-xaxistooltip apexcharts-xaxistooltip-top';\n        var renderTo = w.globals.dom.elWrap;\n\n        if (ttCtx.isXAxisTooltipEnabled) {\n          var xaxisTooltip = w.globals.dom.baseEl.querySelector('.apexcharts-xaxistooltip');\n\n          if (xaxisTooltip === null) {\n            ttCtx.xaxisTooltip = document.createElement('div');\n            ttCtx.xaxisTooltip.setAttribute('class', tooltipCssClass + ' apexcharts-theme-' + w.config.tooltip.theme);\n            renderTo.appendChild(ttCtx.xaxisTooltip);\n            ttCtx.xaxisTooltipText = document.createElement('div');\n            ttCtx.xaxisTooltipText.classList.add('apexcharts-xaxistooltip-text');\n            ttCtx.xaxisTooltipText.style.fontFamily = w.config.xaxis.tooltip.style.fontFamily || w.config.chart.fontFamily;\n            ttCtx.xaxisTooltipText.style.fontSize = w.config.xaxis.tooltip.style.fontSize;\n            ttCtx.xaxisTooltip.appendChild(ttCtx.xaxisTooltipText);\n          }\n        }\n      }\n      /**\n       * This method adds the secondary tooltip which appears below x axis\n       * @memberof Tooltip\n       **/\n\n    }, {\n      key: \"drawYaxisTooltip\",\n      value: function drawYaxisTooltip() {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n\n        var _loop = function _loop(i) {\n          var isRight = w.config.yaxis[i].opposite || w.config.yaxis[i].crosshairs.opposite;\n          ttCtx.yaxisOffX = isRight ? w.globals.gridWidth + 1 : 1;\n          var tooltipCssClass = isRight ? \"apexcharts-yaxistooltip apexcharts-yaxistooltip-\".concat(i, \" apexcharts-yaxistooltip-right\") : \"apexcharts-yaxistooltip apexcharts-yaxistooltip-\".concat(i, \" apexcharts-yaxistooltip-left\");\n          w.globals.yAxisSameScaleIndices.map(function (samescales, ssi) {\n            samescales.map(function (s, si) {\n              if (si === i) {\n                tooltipCssClass += w.config.yaxis[si].show ? \" \" : \" apexcharts-yaxistooltip-hidden\";\n              }\n            });\n          });\n          var renderTo = w.globals.dom.elWrap;\n          var yaxisTooltip = w.globals.dom.baseEl.querySelector(\".apexcharts-yaxistooltip apexcharts-yaxistooltip-\".concat(i));\n\n          if (yaxisTooltip === null) {\n            ttCtx.yaxisTooltip = document.createElement('div');\n            ttCtx.yaxisTooltip.setAttribute('class', tooltipCssClass + ' apexcharts-theme-' + w.config.tooltip.theme);\n            renderTo.appendChild(ttCtx.yaxisTooltip);\n            if (i === 0) ttCtx.yaxisTooltipText = [];\n            ttCtx.yaxisTooltipText[i] = document.createElement('div');\n            ttCtx.yaxisTooltipText[i].classList.add('apexcharts-yaxistooltip-text');\n            ttCtx.yaxisTooltip.appendChild(ttCtx.yaxisTooltipText[i]);\n          }\n        };\n\n        for (var i = 0; i < w.config.yaxis.length; i++) {\n          _loop(i);\n        }\n      }\n      /**\n       * @memberof Tooltip\n       **/\n\n    }, {\n      key: \"setXCrosshairWidth\",\n      value: function setXCrosshairWidth() {\n        var w = this.w;\n        var ttCtx = this.ttCtx; // set xcrosshairs width\n\n        var xcrosshairs = ttCtx.getElXCrosshairs();\n        ttCtx.xcrosshairsWidth = parseInt(w.config.xaxis.crosshairs.width, 10);\n\n        if (!w.globals.comboCharts) {\n          if (w.config.xaxis.crosshairs.width === 'tickWidth') {\n            var count = w.globals.labels.length;\n            ttCtx.xcrosshairsWidth = w.globals.gridWidth / count;\n          } else if (w.config.xaxis.crosshairs.width === 'barWidth') {\n            var bar = w.globals.dom.baseEl.querySelector('.apexcharts-bar-area');\n\n            if (bar !== null) {\n              var barWidth = parseFloat(bar.getAttribute('barWidth'));\n              ttCtx.xcrosshairsWidth = barWidth;\n            } else {\n              ttCtx.xcrosshairsWidth = 1;\n            }\n          }\n        } else {\n          var _bar = w.globals.dom.baseEl.querySelector('.apexcharts-bar-area');\n\n          if (_bar !== null && w.config.xaxis.crosshairs.width === 'barWidth') {\n            var _barWidth = parseFloat(_bar.getAttribute('barWidth'));\n\n            ttCtx.xcrosshairsWidth = _barWidth;\n          } else {\n            if (w.config.xaxis.crosshairs.width === 'tickWidth') {\n              var _count = w.globals.labels.length;\n              ttCtx.xcrosshairsWidth = w.globals.gridWidth / _count;\n            }\n          }\n        }\n\n        if (w.globals.isBarHorizontal) {\n          ttCtx.xcrosshairsWidth = 0;\n        }\n\n        if (xcrosshairs !== null && ttCtx.xcrosshairsWidth > 0) {\n          xcrosshairs.setAttribute('width', ttCtx.xcrosshairsWidth);\n        }\n      }\n    }, {\n      key: \"handleYCrosshair\",\n      value: function handleYCrosshair() {\n        var w = this.w;\n        var ttCtx = this.ttCtx; // set ycrosshairs height\n\n        ttCtx.ycrosshairs = w.globals.dom.baseEl.querySelector('.apexcharts-ycrosshairs');\n        ttCtx.ycrosshairsHidden = w.globals.dom.baseEl.querySelector('.apexcharts-ycrosshairs-hidden');\n      }\n    }, {\n      key: \"drawYaxisTooltipText\",\n      value: function drawYaxisTooltipText(index, clientY, xyRatios) {\n        var ttCtx = this.ttCtx;\n        var w = this.w;\n        var lbFormatter = w.globals.yLabelFormatters[index];\n\n        if (ttCtx.yaxisTooltips[index]) {\n          var elGrid = ttCtx.getElGrid();\n          var seriesBound = elGrid.getBoundingClientRect();\n          var hoverY = (clientY - seriesBound.top) * xyRatios.yRatio[index];\n          var height = w.globals.maxYArr[index] - w.globals.minYArr[index];\n          var val = w.globals.minYArr[index] + (height - hoverY);\n          ttCtx.tooltipPosition.moveYCrosshairs(clientY - seriesBound.top);\n          ttCtx.yaxisTooltipText[index].innerHTML = lbFormatter(val);\n          ttCtx.tooltipPosition.moveYAxisTooltip(index);\n        }\n      }\n    }]);\n\n    return AxesTooltip;\n  }();\n\n  /**\n   * ApexCharts Core Tooltip Class to handle the tooltip generation.\n   *\n   * @module Tooltip\n   **/\n\n  var Tooltip = /*#__PURE__*/function () {\n    function Tooltip(ctx) {\n      _classCallCheck(this, Tooltip);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.tConfig = w.config.tooltip;\n      this.tooltipUtil = new Utils(this);\n      this.tooltipLabels = new Labels(this);\n      this.tooltipPosition = new Position(this);\n      this.marker = new Marker(this);\n      this.intersect = new Intersect(this);\n      this.axesTooltip = new AxesTooltip(this);\n      this.showOnIntersect = this.tConfig.intersect;\n      this.showTooltipTitle = this.tConfig.x.show;\n      this.fixedTooltip = this.tConfig.fixed.enabled;\n      this.xaxisTooltip = null;\n      this.yaxisTTEls = null;\n      this.isBarShared = !w.globals.isBarHorizontal && this.tConfig.shared;\n      this.lastHoverTime = Date.now();\n    }\n\n    _createClass(Tooltip, [{\n      key: \"getElTooltip\",\n      value: function getElTooltip(ctx) {\n        if (!ctx) ctx = this;\n        return ctx.w.globals.dom.baseEl.querySelector('.apexcharts-tooltip');\n      }\n    }, {\n      key: \"getElXCrosshairs\",\n      value: function getElXCrosshairs() {\n        return this.w.globals.dom.baseEl.querySelector('.apexcharts-xcrosshairs');\n      }\n    }, {\n      key: \"getElGrid\",\n      value: function getElGrid() {\n        return this.w.globals.dom.baseEl.querySelector('.apexcharts-grid');\n      }\n    }, {\n      key: \"drawTooltip\",\n      value: function drawTooltip(xyRatios) {\n        var w = this.w;\n        this.xyRatios = xyRatios;\n        this.isXAxisTooltipEnabled = w.config.xaxis.tooltip.enabled && w.globals.axisCharts;\n        this.yaxisTooltips = w.config.yaxis.map(function (y, i) {\n          return y.show && y.tooltip.enabled && w.globals.axisCharts ? true : false;\n        });\n        this.allTooltipSeriesGroups = [];\n\n        if (!w.globals.axisCharts) {\n          this.showTooltipTitle = false;\n        }\n\n        var tooltipEl = document.createElement('div');\n        tooltipEl.classList.add('apexcharts-tooltip');\n        tooltipEl.classList.add(\"apexcharts-theme-\".concat(this.tConfig.theme));\n        w.globals.dom.elWrap.appendChild(tooltipEl);\n\n        if (w.globals.axisCharts) {\n          this.axesTooltip.drawXaxisTooltip();\n          this.axesTooltip.drawYaxisTooltip();\n          this.axesTooltip.setXCrosshairWidth();\n          this.axesTooltip.handleYCrosshair();\n          var xAxis = new XAxis(this.ctx);\n          this.xAxisTicksPositions = xAxis.getXAxisTicksPositions();\n        } // we forcefully set intersect true for these conditions\n\n\n        if ((w.globals.comboCharts || this.tConfig.intersect || w.config.chart.type === 'rangeBar') && !this.tConfig.shared) {\n          this.showOnIntersect = true;\n        }\n\n        if (w.config.markers.size === 0 || w.globals.markers.largestSize === 0) {\n          // when user don't want to show points all the time, but only on when hovering on series\n          this.marker.drawDynamicPoints(this);\n        } // no visible series, exit\n\n\n        if (w.globals.collapsedSeries.length === w.globals.series.length) return;\n        this.dataPointsDividedHeight = w.globals.gridHeight / w.globals.dataPoints;\n        this.dataPointsDividedWidth = w.globals.gridWidth / w.globals.dataPoints;\n\n        if (this.showTooltipTitle) {\n          this.tooltipTitle = document.createElement('div');\n          this.tooltipTitle.classList.add('apexcharts-tooltip-title');\n          this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || w.config.chart.fontFamily;\n          this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize;\n          tooltipEl.appendChild(this.tooltipTitle);\n        }\n\n        var ttItemsCnt = w.globals.series.length; // whether shared or not, default is shared\n\n        if ((w.globals.xyCharts || w.globals.comboCharts) && this.tConfig.shared) {\n          if (!this.showOnIntersect) {\n            ttItemsCnt = w.globals.series.length;\n          } else {\n            ttItemsCnt = 1;\n          }\n        }\n\n        this.legendLabels = w.globals.dom.baseEl.querySelectorAll('.apexcharts-legend-text');\n        this.ttItems = this.createTTElements(ttItemsCnt);\n        this.addSVGEvents();\n      }\n    }, {\n      key: \"createTTElements\",\n      value: function createTTElements(ttItemsCnt) {\n        var _this = this;\n\n        var w = this.w;\n        var ttItems = [];\n        var tooltipEl = this.getElTooltip();\n\n        var _loop = function _loop(i) {\n          var gTxt = document.createElement('div');\n          gTxt.classList.add('apexcharts-tooltip-series-group');\n          gTxt.style.order = w.config.tooltip.inverseOrder ? ttItemsCnt - i : i + 1;\n\n          if (_this.tConfig.shared && _this.tConfig.enabledOnSeries && Array.isArray(_this.tConfig.enabledOnSeries)) {\n            if (_this.tConfig.enabledOnSeries.indexOf(i) < 0) {\n              gTxt.classList.add('apexcharts-tooltip-series-group-hidden');\n            }\n          }\n\n          var point = document.createElement('span');\n          point.classList.add('apexcharts-tooltip-marker');\n          point.style.backgroundColor = w.globals.colors[i];\n          gTxt.appendChild(point);\n          var gYZ = document.createElement('div');\n          gYZ.classList.add('apexcharts-tooltip-text');\n          gYZ.style.fontFamily = _this.tConfig.style.fontFamily || w.config.chart.fontFamily;\n          gYZ.style.fontSize = _this.tConfig.style.fontSize;\n          ['y', 'goals', 'z'].forEach(function (g) {\n            var gValText = document.createElement('div');\n            gValText.classList.add(\"apexcharts-tooltip-\".concat(g, \"-group\"));\n            var txtLabel = document.createElement('span');\n            txtLabel.classList.add(\"apexcharts-tooltip-text-\".concat(g, \"-label\"));\n            gValText.appendChild(txtLabel);\n            var txtValue = document.createElement('span');\n            txtValue.classList.add(\"apexcharts-tooltip-text-\".concat(g, \"-value\"));\n            gValText.appendChild(txtValue);\n            gYZ.appendChild(gValText);\n          });\n          gTxt.appendChild(gYZ);\n          tooltipEl.appendChild(gTxt);\n          ttItems.push(gTxt);\n        };\n\n        for (var i = 0; i < ttItemsCnt; i++) {\n          _loop(i);\n        }\n\n        return ttItems;\n      }\n    }, {\n      key: \"addSVGEvents\",\n      value: function addSVGEvents() {\n        var w = this.w;\n        var type = w.config.chart.type;\n        var tooltipEl = this.getElTooltip();\n        var commonBar = !!(type === 'bar' || type === 'candlestick' || type === 'boxPlot' || type === 'rangeBar');\n        var chartWithmarkers = type === 'area' || type === 'line' || type === 'scatter' || type === 'bubble' || type === 'radar';\n        var hoverArea = w.globals.dom.Paper.node;\n        var elGrid = this.getElGrid();\n\n        if (elGrid) {\n          this.seriesBound = elGrid.getBoundingClientRect();\n        }\n\n        var tooltipY = [];\n        var tooltipX = [];\n        var seriesHoverParams = {\n          hoverArea: hoverArea,\n          elGrid: elGrid,\n          tooltipEl: tooltipEl,\n          tooltipY: tooltipY,\n          tooltipX: tooltipX,\n          ttItems: this.ttItems\n        };\n        var points;\n\n        if (w.globals.axisCharts) {\n          if (chartWithmarkers) {\n            points = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-series[data\\\\:longestSeries='true'] .apexcharts-marker\");\n          } else if (commonBar) {\n            points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area');\n          } else if (type === 'heatmap' || type === 'treemap') {\n            points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap');\n          }\n\n          if (points && points.length) {\n            for (var p = 0; p < points.length; p++) {\n              tooltipY.push(points[p].getAttribute('cy'));\n              tooltipX.push(points[p].getAttribute('cx'));\n            }\n          }\n        }\n\n        var validSharedChartTypes = w.globals.xyCharts && !this.showOnIntersect || w.globals.comboCharts && !this.showOnIntersect || commonBar && this.tooltipUtil.hasBars() && this.tConfig.shared;\n\n        if (validSharedChartTypes) {\n          this.addPathsEventListeners([hoverArea], seriesHoverParams);\n        } else if (commonBar && !w.globals.comboCharts || chartWithmarkers && this.showOnIntersect) {\n          this.addDatapointEventsListeners(seriesHoverParams);\n        } else if (!w.globals.axisCharts || type === 'heatmap' || type === 'treemap') {\n          var seriesAll = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series');\n          this.addPathsEventListeners(seriesAll, seriesHoverParams);\n        }\n\n        if (this.showOnIntersect) {\n          var lineAreaPoints = w.globals.dom.baseEl.querySelectorAll('.apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker');\n\n          if (lineAreaPoints.length > 0) {\n            // if we find any lineSeries, addEventListeners for them\n            this.addPathsEventListeners(lineAreaPoints, seriesHoverParams);\n          } // combo charts may have bars, so add event listeners here too\n\n\n          if (this.tooltipUtil.hasBars() && !this.tConfig.shared) {\n            this.addDatapointEventsListeners(seriesHoverParams);\n          }\n        }\n      }\n    }, {\n      key: \"drawFixedTooltipRect\",\n      value: function drawFixedTooltipRect() {\n        var w = this.w;\n        var tooltipEl = this.getElTooltip();\n        var tooltipRect = tooltipEl.getBoundingClientRect();\n        var ttWidth = tooltipRect.width + 10;\n        var ttHeight = tooltipRect.height + 10;\n        var x = this.tConfig.fixed.offsetX;\n        var y = this.tConfig.fixed.offsetY;\n        var fixed = this.tConfig.fixed.position.toLowerCase();\n\n        if (fixed.indexOf('right') > -1) {\n          x = x + w.globals.svgWidth - ttWidth + 10;\n        }\n\n        if (fixed.indexOf('bottom') > -1) {\n          y = y + w.globals.svgHeight - ttHeight - 10;\n        }\n\n        tooltipEl.style.left = x + 'px';\n        tooltipEl.style.top = y + 'px';\n        return {\n          x: x,\n          y: y,\n          ttWidth: ttWidth,\n          ttHeight: ttHeight\n        };\n      }\n    }, {\n      key: \"addDatapointEventsListeners\",\n      value: function addDatapointEventsListeners(seriesHoverParams) {\n        var w = this.w;\n        var points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area');\n        this.addPathsEventListeners(points, seriesHoverParams);\n      }\n    }, {\n      key: \"addPathsEventListeners\",\n      value: function addPathsEventListeners(paths, opts) {\n        var self = this;\n\n        var _loop2 = function _loop2(p) {\n          var extendedOpts = {\n            paths: paths[p],\n            tooltipEl: opts.tooltipEl,\n            tooltipY: opts.tooltipY,\n            tooltipX: opts.tooltipX,\n            elGrid: opts.elGrid,\n            hoverArea: opts.hoverArea,\n            ttItems: opts.ttItems\n          };\n          var events = ['mousemove', 'mouseup', 'touchmove', 'mouseout', 'touchend'];\n          events.map(function (ev) {\n            return paths[p].addEventListener(ev, self.onSeriesHover.bind(self, extendedOpts), {\n              capture: false,\n              passive: true\n            });\n          });\n        };\n\n        for (var p = 0; p < paths.length; p++) {\n          _loop2(p);\n        }\n      }\n      /*\n       ** Check to see if the tooltips should be updated based on a mouse / touch event\n       */\n\n    }, {\n      key: \"onSeriesHover\",\n      value: function onSeriesHover(opt, e) {\n        var _this2 = this;\n\n        // If a user is moving their mouse quickly, don't bother updating the tooltip every single frame\n        var targetDelay = 100;\n        var timeSinceLastUpdate = Date.now() - this.lastHoverTime;\n\n        if (timeSinceLastUpdate >= targetDelay) {\n          // The tooltip was last updated over 100ms ago - redraw it even if the user is still moving their\n          // mouse so they get some feedback that their moves are being registered\n          this.seriesHover(opt, e);\n        } else {\n          // The tooltip was last updated less than 100ms ago\n          // Cancel any other delayed draw, so we don't show stale data\n          clearTimeout(this.seriesHoverTimeout); // Schedule the next draw so that it happens about 100ms after the last update\n\n          this.seriesHoverTimeout = setTimeout(function () {\n            _this2.seriesHover(opt, e);\n          }, targetDelay - timeSinceLastUpdate);\n        }\n      }\n      /*\n       ** The actual series hover function\n       */\n\n    }, {\n      key: \"seriesHover\",\n      value: function seriesHover(opt, e) {\n        var _this3 = this;\n\n        this.lastHoverTime = Date.now();\n        var chartGroups = [];\n        var w = this.w; // if user has more than one charts in group, we need to sync\n\n        if (w.config.chart.group) {\n          chartGroups = this.ctx.getGroupedCharts();\n        }\n\n        if (w.globals.axisCharts && (w.globals.minX === -Infinity && w.globals.maxX === Infinity || w.globals.dataPoints === 0)) {\n          return;\n        }\n\n        if (chartGroups.length) {\n          chartGroups.forEach(function (ch) {\n            var tooltipEl = _this3.getElTooltip(ch);\n\n            var newOpts = {\n              paths: opt.paths,\n              tooltipEl: tooltipEl,\n              tooltipY: opt.tooltipY,\n              tooltipX: opt.tooltipX,\n              elGrid: opt.elGrid,\n              hoverArea: opt.hoverArea,\n              ttItems: ch.w.globals.tooltip.ttItems\n            }; // all the charts should have the same minX and maxX (same xaxis) for multiple tooltips to work correctly\n\n            if (ch.w.globals.minX === _this3.w.globals.minX && ch.w.globals.maxX === _this3.w.globals.maxX) {\n              ch.w.globals.tooltip.seriesHoverByContext({\n                chartCtx: ch,\n                ttCtx: ch.w.globals.tooltip,\n                opt: newOpts,\n                e: e\n              });\n            }\n          });\n        } else {\n          this.seriesHoverByContext({\n            chartCtx: this.ctx,\n            ttCtx: this.w.globals.tooltip,\n            opt: opt,\n            e: e\n          });\n        }\n      }\n    }, {\n      key: \"seriesHoverByContext\",\n      value: function seriesHoverByContext(_ref) {\n        var chartCtx = _ref.chartCtx,\n            ttCtx = _ref.ttCtx,\n            opt = _ref.opt,\n            e = _ref.e;\n        var w = chartCtx.w;\n        var tooltipEl = this.getElTooltip(); // tooltipRect is calculated on every mousemove, because the text is dynamic\n\n        ttCtx.tooltipRect = {\n          x: 0,\n          y: 0,\n          ttWidth: tooltipEl.getBoundingClientRect().width,\n          ttHeight: tooltipEl.getBoundingClientRect().height\n        };\n        ttCtx.e = e; // highlight the current hovered bars\n\n        if (ttCtx.tooltipUtil.hasBars() && !w.globals.comboCharts && !ttCtx.isBarShared) {\n          if (this.tConfig.onDatasetHover.highlightDataSeries) {\n            var series = new Series(chartCtx);\n            series.toggleSeriesOnHover(e, e.target.parentNode);\n          }\n        }\n\n        if (ttCtx.fixedTooltip) {\n          ttCtx.drawFixedTooltipRect();\n        }\n\n        if (w.globals.axisCharts) {\n          ttCtx.axisChartsTooltips({\n            e: e,\n            opt: opt,\n            tooltipRect: ttCtx.tooltipRect\n          });\n        } else {\n          // non-plot charts i.e pie/donut/circle\n          ttCtx.nonAxisChartsTooltips({\n            e: e,\n            opt: opt,\n            tooltipRect: ttCtx.tooltipRect\n          });\n        }\n      } // tooltip handling for line/area/bar/columns/scatter\n\n    }, {\n      key: \"axisChartsTooltips\",\n      value: function axisChartsTooltips(_ref2) {\n        var e = _ref2.e,\n            opt = _ref2.opt;\n        var w = this.w;\n        var x, y;\n        var seriesBound = opt.elGrid.getBoundingClientRect();\n        var clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\n        var clientY = e.type === 'touchmove' ? e.touches[0].clientY : e.clientY;\n        this.clientY = clientY;\n        this.clientX = clientX;\n        w.globals.capturedSeriesIndex = -1;\n        w.globals.capturedDataPointIndex = -1;\n\n        if (clientY < seriesBound.top || clientY > seriesBound.top + seriesBound.height) {\n          this.handleMouseOut(opt);\n          return;\n        }\n\n        if (Array.isArray(this.tConfig.enabledOnSeries) && !w.config.tooltip.shared) {\n          var index = parseInt(opt.paths.getAttribute('index'), 10);\n\n          if (this.tConfig.enabledOnSeries.indexOf(index) < 0) {\n            this.handleMouseOut(opt);\n            return;\n          }\n        }\n\n        var tooltipEl = this.getElTooltip();\n        var xcrosshairs = this.getElXCrosshairs();\n        var isStickyTooltip = w.globals.xyCharts || w.config.chart.type === 'bar' && !w.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || w.globals.comboCharts && this.tooltipUtil.hasBars();\n\n        if (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'mouseup') {\n          if (xcrosshairs !== null) {\n            xcrosshairs.classList.add('apexcharts-active');\n          }\n\n          var hasYAxisTooltip = this.yaxisTooltips.filter(function (b) {\n            return b === true;\n          });\n\n          if (this.ycrosshairs !== null && hasYAxisTooltip.length) {\n            this.ycrosshairs.classList.add('apexcharts-active');\n          }\n\n          if (isStickyTooltip && !this.showOnIntersect) {\n            this.handleStickyTooltip(e, clientX, clientY, opt);\n          } else {\n            if (w.config.chart.type === 'heatmap' || w.config.chart.type === 'treemap') {\n              var markerXY = this.intersect.handleHeatTreeTooltip({\n                e: e,\n                opt: opt,\n                x: x,\n                y: y,\n                type: w.config.chart.type\n              });\n              x = markerXY.x;\n              y = markerXY.y;\n              tooltipEl.style.left = x + 'px';\n              tooltipEl.style.top = y + 'px';\n            } else {\n              if (this.tooltipUtil.hasBars()) {\n                this.intersect.handleBarTooltip({\n                  e: e,\n                  opt: opt\n                });\n              }\n\n              if (this.tooltipUtil.hasMarkers()) {\n                // intersect - line/area/scatter/bubble\n                this.intersect.handleMarkerTooltip({\n                  e: e,\n                  opt: opt,\n                  x: x,\n                  y: y\n                });\n              }\n            }\n          }\n\n          if (this.yaxisTooltips.length) {\n            for (var yt = 0; yt < w.config.yaxis.length; yt++) {\n              this.axesTooltip.drawYaxisTooltipText(yt, clientY, this.xyRatios);\n            }\n          }\n\n          opt.tooltipEl.classList.add('apexcharts-active');\n        } else if (e.type === 'mouseout' || e.type === 'touchend') {\n          this.handleMouseOut(opt);\n        }\n      } // tooltip handling for pie/donuts\n\n    }, {\n      key: \"nonAxisChartsTooltips\",\n      value: function nonAxisChartsTooltips(_ref3) {\n        var e = _ref3.e,\n            opt = _ref3.opt,\n            tooltipRect = _ref3.tooltipRect;\n        var w = this.w;\n        var rel = opt.paths.getAttribute('rel');\n        var tooltipEl = this.getElTooltip();\n        var seriesBound = w.globals.dom.elWrap.getBoundingClientRect();\n\n        if (e.type === 'mousemove' || e.type === 'touchmove') {\n          tooltipEl.classList.add('apexcharts-active');\n          this.tooltipLabels.drawSeriesTexts({\n            ttItems: opt.ttItems,\n            i: parseInt(rel, 10) - 1,\n            shared: false\n          });\n          var x = w.globals.clientX - seriesBound.left - tooltipRect.ttWidth / 2;\n          var y = w.globals.clientY - seriesBound.top - tooltipRect.ttHeight - 10;\n          tooltipEl.style.left = x + 'px';\n          tooltipEl.style.top = y + 'px';\n\n          if (w.config.legend.tooltipHoverFormatter) {\n            var legendFormatter = w.config.legend.tooltipHoverFormatter;\n            var i = rel - 1;\n            var legendName = this.legendLabels[i].getAttribute('data:default-text');\n            var text = legendFormatter(legendName, {\n              seriesIndex: i,\n              dataPointIndex: i,\n              w: w\n            });\n            this.legendLabels[i].innerHTML = text;\n          }\n        } else if (e.type === 'mouseout' || e.type === 'touchend') {\n          tooltipEl.classList.remove('apexcharts-active');\n\n          if (w.config.legend.tooltipHoverFormatter) {\n            this.legendLabels.forEach(function (l) {\n              var defaultText = l.getAttribute('data:default-text');\n              l.innerHTML = decodeURIComponent(defaultText);\n            });\n          }\n        }\n      }\n    }, {\n      key: \"handleStickyTooltip\",\n      value: function handleStickyTooltip(e, clientX, clientY, opt) {\n        var w = this.w;\n        var capj = this.tooltipUtil.getNearestValues({\n          context: this,\n          hoverArea: opt.hoverArea,\n          elGrid: opt.elGrid,\n          clientX: clientX,\n          clientY: clientY\n        });\n        var j = capj.j;\n        var capturedSeries = capj.capturedSeries;\n        var bounds = opt.elGrid.getBoundingClientRect();\n\n        if (capj.hoverX < 0 || capj.hoverX > bounds.width) {\n          this.handleMouseOut(opt);\n          return;\n        }\n\n        if (capturedSeries !== null) {\n          this.handleStickyCapturedSeries(e, capturedSeries, opt, j);\n        } else {\n          // couldn't capture any series. check if shared X is same,\n          // if yes, draw a grouped tooltip\n          if (this.tooltipUtil.isXoverlap(j) || w.globals.isBarHorizontal) {\n            this.create(e, this, 0, j, opt.ttItems);\n          }\n        }\n      }\n    }, {\n      key: \"handleStickyCapturedSeries\",\n      value: function handleStickyCapturedSeries(e, capturedSeries, opt, j) {\n        var w = this.w;\n\n        if (!this.tConfig.shared) {\n          var ignoreNull = w.globals.series[capturedSeries][j] === null;\n\n          if (ignoreNull) {\n            this.handleMouseOut(opt);\n            return;\n          }\n        }\n\n        if (typeof w.globals.series[capturedSeries][j] !== 'undefined') {\n          if (this.tConfig.shared && this.tooltipUtil.isXoverlap(j) && this.tooltipUtil.isInitialSeriesSameLen()) {\n            this.create(e, this, capturedSeries, j, opt.ttItems);\n          } else {\n            this.create(e, this, capturedSeries, j, opt.ttItems, false);\n          }\n        } else {\n          if (this.tooltipUtil.isXoverlap(j)) {\n            this.create(e, this, 0, j, opt.ttItems);\n          }\n        }\n      }\n    }, {\n      key: \"deactivateHoverFilter\",\n      value: function deactivateHoverFilter() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var allPaths = w.globals.dom.Paper.select(\".apexcharts-bar-area\");\n\n        for (var b = 0; b < allPaths.length; b++) {\n          graphics.pathMouseLeave(allPaths[b]);\n        }\n      }\n    }, {\n      key: \"handleMouseOut\",\n      value: function handleMouseOut(opt) {\n        var w = this.w;\n        var xcrosshairs = this.getElXCrosshairs();\n        opt.tooltipEl.classList.remove('apexcharts-active');\n        this.deactivateHoverFilter();\n\n        if (w.config.chart.type !== 'bubble') {\n          this.marker.resetPointsSize();\n        }\n\n        if (xcrosshairs !== null) {\n          xcrosshairs.classList.remove('apexcharts-active');\n        }\n\n        if (this.ycrosshairs !== null) {\n          this.ycrosshairs.classList.remove('apexcharts-active');\n        }\n\n        if (this.isXAxisTooltipEnabled) {\n          this.xaxisTooltip.classList.remove('apexcharts-active');\n        }\n\n        if (this.yaxisTooltips.length) {\n          if (this.yaxisTTEls === null) {\n            this.yaxisTTEls = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxistooltip');\n          }\n\n          for (var i = 0; i < this.yaxisTTEls.length; i++) {\n            this.yaxisTTEls[i].classList.remove('apexcharts-active');\n          }\n        }\n\n        if (w.config.legend.tooltipHoverFormatter) {\n          this.legendLabels.forEach(function (l) {\n            var defaultText = l.getAttribute('data:default-text');\n            l.innerHTML = decodeURIComponent(defaultText);\n          });\n        }\n      }\n    }, {\n      key: \"markerClick\",\n      value: function markerClick(e, seriesIndex, dataPointIndex) {\n        var w = this.w;\n\n        if (typeof w.config.chart.events.markerClick === 'function') {\n          w.config.chart.events.markerClick(e, this.ctx, {\n            seriesIndex: seriesIndex,\n            dataPointIndex: dataPointIndex,\n            w: w\n          });\n        }\n\n        this.ctx.events.fireEvent('markerClick', [e, this.ctx, {\n          seriesIndex: seriesIndex,\n          dataPointIndex: dataPointIndex,\n          w: w\n        }]);\n      }\n    }, {\n      key: \"create\",\n      value: function create(e, context, capturedSeries, j, ttItems) {\n        var shared = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var w = this.w;\n        var ttCtx = context;\n\n        if (e.type === 'mouseup') {\n          this.markerClick(e, capturedSeries, j);\n        }\n\n        if (shared === null) shared = this.tConfig.shared;\n        var hasMarkers = this.tooltipUtil.hasMarkers();\n        var bars = this.tooltipUtil.getElBars();\n\n        if (w.config.legend.tooltipHoverFormatter) {\n          var legendFormatter = w.config.legend.tooltipHoverFormatter;\n          var els = Array.from(this.legendLabels); // reset all legend values first\n\n          els.forEach(function (l) {\n            var legendName = l.getAttribute('data:default-text');\n            l.innerHTML = decodeURIComponent(legendName);\n          }); // for irregular time series\n\n          for (var i = 0; i < els.length; i++) {\n            var l = els[i];\n            var lsIndex = parseInt(l.getAttribute('i'), 10);\n            var legendName = decodeURIComponent(l.getAttribute('data:default-text'));\n            var text = legendFormatter(legendName, {\n              seriesIndex: shared ? lsIndex : capturedSeries,\n              dataPointIndex: j,\n              w: w\n            });\n\n            if (!shared) {\n              l.innerHTML = lsIndex === capturedSeries ? text : legendName;\n\n              if (capturedSeries === lsIndex) {\n                break;\n              }\n            } else {\n              l.innerHTML = w.globals.collapsedSeriesIndices.indexOf(lsIndex) < 0 ? text : legendName;\n            }\n          }\n        }\n\n        if (shared) {\n          ttCtx.tooltipLabels.drawSeriesTexts({\n            ttItems: ttItems,\n            i: capturedSeries,\n            j: j,\n            shared: this.showOnIntersect ? false : this.tConfig.shared\n          });\n\n          if (hasMarkers) {\n            if (w.globals.markers.largestSize > 0) {\n              ttCtx.marker.enlargePoints(j);\n            } else {\n              ttCtx.tooltipPosition.moveDynamicPointsOnHover(j);\n            }\n          }\n\n          if (this.tooltipUtil.hasBars()) {\n            this.barSeriesHeight = this.tooltipUtil.getBarsHeight(bars);\n\n            if (this.barSeriesHeight > 0) {\n              // hover state, activate snap filter\n              var graphics = new Graphics(this.ctx);\n              var paths = w.globals.dom.Paper.select(\".apexcharts-bar-area[j='\".concat(j, \"']\")); // de-activate first\n\n              this.deactivateHoverFilter();\n              this.tooltipPosition.moveStickyTooltipOverBars(j);\n\n              for (var b = 0; b < paths.length; b++) {\n                graphics.pathMouseEnter(paths[b]);\n              }\n            }\n          }\n        } else {\n          ttCtx.tooltipLabels.drawSeriesTexts({\n            shared: false,\n            ttItems: ttItems,\n            i: capturedSeries,\n            j: j\n          });\n\n          if (this.tooltipUtil.hasBars()) {\n            ttCtx.tooltipPosition.moveStickyTooltipOverBars(j);\n          }\n\n          if (hasMarkers) {\n            ttCtx.tooltipPosition.moveMarkers(capturedSeries, j);\n          }\n        }\n      }\n    }]);\n\n    return Tooltip;\n  }();\n\n  /**\n   * ApexCharts BarStacked Class responsible for drawing both Stacked Columns and Bars.\n   *\n   * @module BarStacked\n   * The whole calculation for stacked bar/column is different from normal bar/column,\n   * hence it makes sense to derive a new class for it extending most of the props of Parent Bar\n   **/\n\n  var BarStacked = /*#__PURE__*/function (_Bar) {\n    _inherits(BarStacked, _Bar);\n\n    var _super = _createSuper(BarStacked);\n\n    function BarStacked() {\n      _classCallCheck(this, BarStacked);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(BarStacked, [{\n      key: \"draw\",\n      value: function draw(series, seriesIndex) {\n        var _this = this;\n\n        var w = this.w;\n        this.graphics = new Graphics(this.ctx);\n        this.bar = new Bar(this.ctx, this.xyRatios);\n        var coreUtils = new CoreUtils(this.ctx, w);\n        series = coreUtils.getLogSeries(series);\n        this.yRatio = coreUtils.getLogYRatios(this.yRatio);\n        this.barHelpers.initVariables(series);\n\n        if (w.config.chart.stackType === '100%') {\n          series = w.globals.seriesPercent.slice();\n        }\n\n        this.series = series;\n        this.totalItems = 0;\n        this.prevY = []; // y position on chart\n\n        this.prevX = []; // x position on chart\n\n        this.prevYF = []; // y position including shapes on chart\n\n        this.prevXF = []; // x position including shapes on chart\n\n        this.prevYVal = []; // y values (series[i][j]) in columns\n\n        this.prevXVal = []; // x values (series[i][j]) in bars\n\n        this.xArrj = []; // xj indicates x position on graph in bars\n\n        this.xArrjF = []; // xjF indicates bar's x position + roundedShape's positions in bars\n\n        this.xArrjVal = []; // x val means the actual series's y values in horizontal/bars\n\n        this.yArrj = []; // yj indicates y position on graph in columns\n\n        this.yArrjF = []; // yjF indicates bar's y position + roundedShape's positions in columns\n\n        this.yArrjVal = []; // y val means the actual series's y values in columns\n\n        for (var sl = 0; sl < series.length; sl++) {\n          if (series[sl].length > 0) {\n            this.totalItems += series[sl].length;\n          }\n        }\n\n        var ret = this.graphics.group({\n          class: 'apexcharts-bar-series apexcharts-plot-series'\n        });\n        var x = 0;\n        var y = 0;\n\n        var _loop = function _loop(i, bc) {\n          var xDivision = void 0; // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n\n          var yDivision = void 0; // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n\n          var zeroH = void 0; // zeroH is the baseline where 0 meets y axis\n\n          var zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n          var xArrValues = [];\n          var yArrValues = [];\n          var realIndex = w.globals.comboCharts ? seriesIndex[i] : i;\n\n          if (_this.yRatio.length > 1) {\n            _this.yaxisIndex = realIndex;\n          }\n\n          _this.isReversed = w.config.yaxis[_this.yaxisIndex] && w.config.yaxis[_this.yaxisIndex].reversed; // el to which series will be drawn\n\n          var elSeries = _this.graphics.group({\n            class: \"apexcharts-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[realIndex]),\n            rel: i + 1,\n            'data:realIndex': realIndex\n          });\n\n          _this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex); // eldatalabels\n\n\n          var elDataLabelsWrap = _this.graphics.group({\n            class: 'apexcharts-datalabels',\n            'data:realIndex': realIndex\n          });\n\n          var barHeight = 0;\n          var barWidth = 0;\n\n          var initPositions = _this.initialPositions(x, y, xDivision, yDivision, zeroH, zeroW);\n\n          y = initPositions.y;\n          barHeight = initPositions.barHeight;\n          yDivision = initPositions.yDivision;\n          zeroW = initPositions.zeroW;\n          x = initPositions.x;\n          barWidth = initPositions.barWidth;\n          xDivision = initPositions.xDivision;\n          zeroH = initPositions.zeroH;\n          _this.yArrj = [];\n          _this.yArrjF = [];\n          _this.yArrjVal = [];\n          _this.xArrj = [];\n          _this.xArrjF = [];\n          _this.xArrjVal = []; // if (!this.horizontal) {\n          // this.xArrj.push(x + barWidth / 2)\n          // }\n          // fix issue #1215;\n          // where all stack bar disappear after collapsing the first series\n          // sol: if only 1 arr in this.prevY(this.prevY.length === 1) and all are NaN\n\n          if (_this.prevY.length === 1 && _this.prevY[0].every(function (val) {\n            return isNaN(val);\n          })) {\n            // make this.prevY[0] all zeroH\n            _this.prevY[0] = _this.prevY[0].map(function (val) {\n              return zeroH;\n            }); // make this.prevYF[0] all 0\n\n            _this.prevYF[0] = _this.prevYF[0].map(function (val) {\n              return 0;\n            });\n          }\n\n          for (var j = 0; j < w.globals.dataPoints; j++) {\n            var strokeWidth = _this.barHelpers.getStrokeWidth(i, j, realIndex);\n\n            var commonPathOpts = {\n              indexes: {\n                i: i,\n                j: j,\n                realIndex: realIndex,\n                bc: bc\n              },\n              strokeWidth: strokeWidth,\n              x: x,\n              y: y,\n              elSeries: elSeries\n            };\n            var paths = null;\n\n            if (_this.isHorizontal) {\n              paths = _this.drawStackedBarPaths(_objectSpread2(_objectSpread2({}, commonPathOpts), {}, {\n                zeroW: zeroW,\n                barHeight: barHeight,\n                yDivision: yDivision\n              }));\n              barWidth = _this.series[i][j] / _this.invertedYRatio;\n            } else {\n              paths = _this.drawStackedColumnPaths(_objectSpread2(_objectSpread2({}, commonPathOpts), {}, {\n                xDivision: xDivision,\n                barWidth: barWidth,\n                zeroH: zeroH\n              }));\n              barHeight = _this.series[i][j] / _this.yRatio[_this.yaxisIndex];\n            }\n\n            y = paths.y;\n            x = paths.x;\n            xArrValues.push(x);\n            yArrValues.push(y);\n\n            var pathFill = _this.barHelpers.getPathFillColor(series, i, j, realIndex);\n\n            elSeries = _this.renderSeries({\n              realIndex: realIndex,\n              pathFill: pathFill,\n              j: j,\n              i: i,\n              pathFrom: paths.pathFrom,\n              pathTo: paths.pathTo,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries,\n              x: x,\n              y: y,\n              series: series,\n              barHeight: barHeight,\n              barWidth: barWidth,\n              elDataLabelsWrap: elDataLabelsWrap,\n              type: 'bar',\n              visibleSeries: 0\n            });\n          } // push all x val arrays into main xArr\n\n\n          w.globals.seriesXvalues[realIndex] = xArrValues;\n          w.globals.seriesYvalues[realIndex] = yArrValues; // push all current y values array to main PrevY Array\n\n          _this.prevY.push(_this.yArrj);\n\n          _this.prevYF.push(_this.yArrjF);\n\n          _this.prevYVal.push(_this.yArrjVal);\n\n          _this.prevX.push(_this.xArrj);\n\n          _this.prevXF.push(_this.xArrjF);\n\n          _this.prevXVal.push(_this.xArrjVal);\n\n          ret.add(elSeries);\n        };\n\n        for (var i = 0, bc = 0; i < series.length; i++, bc++) {\n          _loop(i, bc);\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"initialPositions\",\n      value: function initialPositions(x, y, xDivision, yDivision, zeroH, zeroW) {\n        var w = this.w;\n        var barHeight, barWidth;\n\n        if (this.isHorizontal) {\n          // height divided into equal parts\n          yDivision = w.globals.gridHeight / w.globals.dataPoints;\n          barHeight = yDivision;\n          barHeight = barHeight * parseInt(w.config.plotOptions.bar.barHeight, 10) / 100;\n          zeroW = this.baseLineInvertedY + w.globals.padHorizontal + (this.isReversed ? w.globals.gridWidth : 0) - (this.isReversed ? this.baseLineInvertedY * 2 : 0); // initial y position is half of barHeight * half of number of Bars\n\n          y = (yDivision - barHeight) / 2;\n        } else {\n          // width divided into equal parts\n          xDivision = w.globals.gridWidth / w.globals.dataPoints;\n          barWidth = xDivision;\n\n          if (w.globals.isXNumeric && w.globals.dataPoints > 1) {\n            // the check (w.globals.dataPoints > 1) fixes apexcharts.js #1617\n            xDivision = w.globals.minXDiff / this.xRatio;\n            barWidth = xDivision * parseInt(this.barOptions.columnWidth, 10) / 100;\n          } else {\n            barWidth = barWidth * parseInt(w.config.plotOptions.bar.columnWidth, 10) / 100;\n          }\n\n          zeroH = this.baseLineY[this.yaxisIndex] + (this.isReversed ? w.globals.gridHeight : 0) - (this.isReversed ? this.baseLineY[this.yaxisIndex] * 2 : 0); // initial x position is one third of barWidth\n\n          x = w.globals.padHorizontal + (xDivision - barWidth) / 2;\n        }\n\n        return {\n          x: x,\n          y: y,\n          yDivision: yDivision,\n          xDivision: xDivision,\n          barHeight: barHeight,\n          barWidth: barWidth,\n          zeroH: zeroH,\n          zeroW: zeroW\n        };\n      }\n    }, {\n      key: \"drawStackedBarPaths\",\n      value: function drawStackedBarPaths(_ref) {\n        var indexes = _ref.indexes,\n            barHeight = _ref.barHeight,\n            strokeWidth = _ref.strokeWidth,\n            zeroW = _ref.zeroW,\n            x = _ref.x,\n            y = _ref.y,\n            yDivision = _ref.yDivision,\n            elSeries = _ref.elSeries;\n        var w = this.w;\n        var barYPosition = y;\n        var barXPosition;\n        var i = indexes.i;\n        var j = indexes.j;\n        var prevBarW = 0;\n\n        for (var k = 0; k < this.prevXF.length; k++) {\n          prevBarW = prevBarW + this.prevXF[k][j];\n        }\n\n        if (i > 0) {\n          var bXP = zeroW;\n\n          if (this.prevXVal[i - 1][j] < 0) {\n            bXP = this.series[i][j] >= 0 ? this.prevX[i - 1][j] + prevBarW - (this.isReversed ? prevBarW : 0) * 2 : this.prevX[i - 1][j];\n          } else if (this.prevXVal[i - 1][j] >= 0) {\n            bXP = this.series[i][j] >= 0 ? this.prevX[i - 1][j] : this.prevX[i - 1][j] - prevBarW + (this.isReversed ? prevBarW : 0) * 2;\n          }\n\n          barXPosition = bXP;\n        } else {\n          // the first series will not have prevX values\n          barXPosition = zeroW;\n        }\n\n        if (this.series[i][j] === null) {\n          x = barXPosition;\n        } else {\n          x = barXPosition + this.series[i][j] / this.invertedYRatio - (this.isReversed ? this.series[i][j] / this.invertedYRatio : 0) * 2;\n        }\n\n        var paths = this.barHelpers.getBarpaths({\n          barYPosition: barYPosition,\n          barHeight: barHeight,\n          x1: barXPosition,\n          x2: x,\n          strokeWidth: strokeWidth,\n          series: this.series,\n          realIndex: indexes.realIndex,\n          i: i,\n          j: j,\n          w: w\n        });\n        this.barHelpers.barBackground({\n          j: j,\n          i: i,\n          y1: barYPosition,\n          y2: barHeight,\n          elSeries: elSeries\n        });\n        y = y + yDivision;\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          x: x,\n          y: y\n        };\n      }\n    }, {\n      key: \"drawStackedColumnPaths\",\n      value: function drawStackedColumnPaths(_ref2) {\n        var indexes = _ref2.indexes,\n            x = _ref2.x,\n            y = _ref2.y,\n            xDivision = _ref2.xDivision,\n            barWidth = _ref2.barWidth,\n            zeroH = _ref2.zeroH;\n            _ref2.strokeWidth;\n            var elSeries = _ref2.elSeries;\n        var w = this.w;\n        var i = indexes.i;\n        var j = indexes.j;\n        var bc = indexes.bc;\n\n        if (w.globals.isXNumeric) {\n          var seriesVal = w.globals.seriesX[i][j];\n          if (!seriesVal) seriesVal = 0;\n          x = (seriesVal - w.globals.minX) / this.xRatio - barWidth / 2;\n        }\n\n        var barXPosition = x;\n        var barYPosition;\n        var prevBarH = 0;\n\n        for (var k = 0; k < this.prevYF.length; k++) {\n          // fix issue #1215\n          // in case where this.prevYF[k][j] is NaN, use 0 instead\n          prevBarH = prevBarH + (!isNaN(this.prevYF[k][j]) ? this.prevYF[k][j] : 0);\n        }\n\n        if (i > 0 && !w.globals.isXNumeric || i > 0 && w.globals.isXNumeric && w.globals.seriesX[i - 1][j] === w.globals.seriesX[i][j]) {\n          var bYP;\n          var prevYValue;\n          var p = Math.min(this.yRatio.length + 1, i + 1);\n\n          if (this.prevY[i - 1] !== undefined) {\n            for (var ii = 1; ii < p; ii++) {\n              if (!isNaN(this.prevY[i - ii][j])) {\n                // find the previous available value to give prevYValue\n                prevYValue = this.prevY[i - ii][j]; // if found it, break the loop\n\n                break;\n              }\n            }\n          }\n\n          for (var _ii = 1; _ii < p; _ii++) {\n            // find the previous available value(non-NaN) to give bYP\n            if (this.prevYVal[i - _ii][j] < 0) {\n              bYP = this.series[i][j] >= 0 ? prevYValue - prevBarH + (this.isReversed ? prevBarH : 0) * 2 : prevYValue; // found it? break the loop\n\n              break;\n            } else if (this.prevYVal[i - _ii][j] >= 0) {\n              bYP = this.series[i][j] >= 0 ? prevYValue : prevYValue + prevBarH - (this.isReversed ? prevBarH : 0) * 2; // found it? break the loop\n\n              break;\n            }\n          }\n\n          if (typeof bYP === 'undefined') bYP = w.globals.gridHeight; // if this.prevYF[0] is all 0 resulted from line #486\n          // AND every arr starting from the second only contains NaN\n\n          if (this.prevYF[0].every(function (val) {\n            return val === 0;\n          }) && this.prevYF.slice(1, i).every(function (arr) {\n            return arr.every(function (val) {\n              return isNaN(val);\n            });\n          })) {\n            // Use the same calc way as line #485\n            barYPosition = w.globals.gridHeight - zeroH;\n          } else {\n            // Nothing special\n            barYPosition = bYP;\n          }\n        } else {\n          // the first series will not have prevY values, also if the prev index's series X doesn't matches the current index's series X, then start from zero\n          barYPosition = w.globals.gridHeight - zeroH;\n        }\n\n        y = barYPosition - this.series[i][j] / this.yRatio[this.yaxisIndex] + (this.isReversed ? this.series[i][j] / this.yRatio[this.yaxisIndex] : 0) * 2;\n        var paths = this.barHelpers.getColumnPaths({\n          barXPosition: barXPosition,\n          barWidth: barWidth,\n          y1: barYPosition,\n          y2: y,\n          yRatio: this.yRatio[this.yaxisIndex],\n          strokeWidth: this.strokeWidth,\n          series: this.series,\n          realIndex: indexes.realIndex,\n          i: i,\n          j: j,\n          w: w\n        });\n        this.barHelpers.barBackground({\n          bc: bc,\n          j: j,\n          i: i,\n          x1: barXPosition,\n          x2: barWidth,\n          elSeries: elSeries\n        });\n        x = x + xDivision;\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          x: w.globals.isXNumeric ? x - xDivision : x,\n          y: y\n        };\n      }\n    }]);\n\n    return BarStacked;\n  }(Bar);\n\n  /**\n   * ApexCharts BoxCandleStick Class responsible for drawing both Stacked Columns and Bars.\n   *\n   * @module BoxCandleStick\n   **/\n\n  var BoxCandleStick = /*#__PURE__*/function (_Bar) {\n    _inherits(BoxCandleStick, _Bar);\n\n    var _super = _createSuper(BoxCandleStick);\n\n    function BoxCandleStick() {\n      _classCallCheck(this, BoxCandleStick);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(BoxCandleStick, [{\n      key: \"draw\",\n      value: function draw(series, seriesIndex) {\n        var _this = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var fill = new Fill(this.ctx);\n        this.candlestickOptions = this.w.config.plotOptions.candlestick;\n        this.boxOptions = this.w.config.plotOptions.boxPlot;\n        this.isHorizontal = w.config.plotOptions.bar.horizontal;\n        var coreUtils = new CoreUtils(this.ctx, w);\n        series = coreUtils.getLogSeries(series);\n        this.series = series;\n        this.yRatio = coreUtils.getLogYRatios(this.yRatio);\n        this.barHelpers.initVariables(series);\n        var ret = graphics.group({\n          class: \"apexcharts-\".concat(w.config.chart.type, \"-series apexcharts-plot-series\")\n        });\n\n        var _loop = function _loop(i) {\n          _this.isBoxPlot = w.config.chart.type === 'boxPlot' || w.config.series[i].type === 'boxPlot';\n          var x = void 0,\n              y = void 0,\n              xDivision = void 0,\n              // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n          yDivision = void 0,\n              // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n          zeroH = void 0,\n              // zeroH is the baseline where 0 meets y axis\n          zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n          var yArrj = []; // hold y values of current iterating series\n\n          var xArrj = []; // hold x values of current iterating series\n\n          var realIndex = w.globals.comboCharts ? seriesIndex[i] : i; // el to which series will be drawn\n\n          var elSeries = graphics.group({\n            class: \"apexcharts-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[realIndex]),\n            rel: i + 1,\n            'data:realIndex': realIndex\n          });\n\n          _this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex);\n\n          if (series[i].length > 0) {\n            _this.visibleI = _this.visibleI + 1;\n          }\n\n          var barHeight = 0;\n          var barWidth = 0;\n\n          if (_this.yRatio.length > 1) {\n            _this.yaxisIndex = realIndex;\n          }\n\n          var initPositions = _this.barHelpers.initialPositions();\n\n          y = initPositions.y;\n          barHeight = initPositions.barHeight;\n          yDivision = initPositions.yDivision;\n          zeroW = initPositions.zeroW;\n          x = initPositions.x;\n          barWidth = initPositions.barWidth;\n          xDivision = initPositions.xDivision;\n          zeroH = initPositions.zeroH;\n          xArrj.push(x + barWidth / 2); // eldatalabels\n\n          var elDataLabelsWrap = graphics.group({\n            class: 'apexcharts-datalabels',\n            'data:realIndex': realIndex\n          });\n\n          var _loop2 = function _loop2(j) {\n            var strokeWidth = _this.barHelpers.getStrokeWidth(i, j, realIndex);\n\n            var paths = null;\n            var pathsParams = {\n              indexes: {\n                i: i,\n                j: j,\n                realIndex: realIndex\n              },\n              x: x,\n              y: y,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries\n            };\n\n            if (_this.isHorizontal) {\n              paths = _this.drawHorizontalBoxPaths(_objectSpread2(_objectSpread2({}, pathsParams), {}, {\n                yDivision: yDivision,\n                barHeight: barHeight,\n                zeroW: zeroW\n              }));\n            } else {\n              paths = _this.drawVerticalBoxPaths(_objectSpread2(_objectSpread2({}, pathsParams), {}, {\n                xDivision: xDivision,\n                barWidth: barWidth,\n                zeroH: zeroH\n              }));\n            }\n\n            y = paths.y;\n            x = paths.x; // push current X\n\n            if (j > 0) {\n              xArrj.push(x + barWidth / 2);\n            }\n\n            yArrj.push(y);\n            paths.pathTo.forEach(function (pathTo, pi) {\n              var lineFill = !_this.isBoxPlot && _this.candlestickOptions.wick.useFillColor ? paths.color[pi] : w.globals.stroke.colors[i];\n              var pathFill = fill.fillPath({\n                seriesNumber: realIndex,\n                dataPointIndex: j,\n                color: paths.color[pi],\n                value: series[i][j]\n              });\n\n              _this.renderSeries({\n                realIndex: realIndex,\n                pathFill: pathFill,\n                lineFill: lineFill,\n                j: j,\n                i: i,\n                pathFrom: paths.pathFrom,\n                pathTo: pathTo,\n                strokeWidth: strokeWidth,\n                elSeries: elSeries,\n                x: x,\n                y: y,\n                series: series,\n                barHeight: barHeight,\n                barWidth: barWidth,\n                elDataLabelsWrap: elDataLabelsWrap,\n                visibleSeries: _this.visibleI,\n                type: w.config.chart.type\n              });\n            });\n          };\n\n          for (var j = 0; j < w.globals.dataPoints; j++) {\n            _loop2(j);\n          } // push all x val arrays into main xArr\n\n\n          w.globals.seriesXvalues[realIndex] = xArrj;\n          w.globals.seriesYvalues[realIndex] = yArrj;\n          ret.add(elSeries);\n        };\n\n        for (var i = 0; i < series.length; i++) {\n          _loop(i);\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"drawVerticalBoxPaths\",\n      value: function drawVerticalBoxPaths(_ref) {\n        var indexes = _ref.indexes,\n            x = _ref.x;\n            _ref.y;\n            var xDivision = _ref.xDivision,\n            barWidth = _ref.barWidth,\n            zeroH = _ref.zeroH,\n            strokeWidth = _ref.strokeWidth;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var i = indexes.i;\n        var j = indexes.j;\n        var isPositive = true;\n        var colorPos = w.config.plotOptions.candlestick.colors.upward;\n        var colorNeg = w.config.plotOptions.candlestick.colors.downward;\n        var color = '';\n\n        if (this.isBoxPlot) {\n          color = [this.boxOptions.colors.lower, this.boxOptions.colors.upper];\n        }\n\n        var yRatio = this.yRatio[this.yaxisIndex];\n        var realIndex = indexes.realIndex;\n        var ohlc = this.getOHLCValue(realIndex, j);\n        var l1 = zeroH;\n        var l2 = zeroH;\n\n        if (ohlc.o > ohlc.c) {\n          isPositive = false;\n        }\n\n        var y1 = Math.min(ohlc.o, ohlc.c);\n        var y2 = Math.max(ohlc.o, ohlc.c);\n        var m = ohlc.m;\n\n        if (w.globals.isXNumeric) {\n          x = (w.globals.seriesX[realIndex][j] - w.globals.minX) / this.xRatio - barWidth / 2;\n        }\n\n        var barXPosition = x + barWidth * this.visibleI;\n\n        if (typeof this.series[i][j] === 'undefined' || this.series[i][j] === null) {\n          y1 = zeroH;\n          y2 = zeroH;\n        } else {\n          y1 = zeroH - y1 / yRatio;\n          y2 = zeroH - y2 / yRatio;\n          l1 = zeroH - ohlc.h / yRatio;\n          l2 = zeroH - ohlc.l / yRatio;\n          m = zeroH - ohlc.m / yRatio;\n        }\n\n        var pathTo = graphics.move(barXPosition, zeroH);\n        var pathFrom = graphics.move(barXPosition + barWidth / 2, y1);\n\n        if (w.globals.previousPaths.length > 0) {\n          pathFrom = this.getPreviousPath(realIndex, j, true);\n        }\n\n        if (this.isBoxPlot) {\n          pathTo = [graphics.move(barXPosition, y1) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition + barWidth / 2, l1) + graphics.line(barXPosition + barWidth / 4, l1) + graphics.line(barXPosition + barWidth - barWidth / 4, l1) + graphics.line(barXPosition + barWidth / 2, l1) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition + barWidth, y1) + graphics.line(barXPosition + barWidth, m) + graphics.line(barXPosition, m) + graphics.line(barXPosition, y1 + strokeWidth / 2), graphics.move(barXPosition, m) + graphics.line(barXPosition + barWidth, m) + graphics.line(barXPosition + barWidth, y2) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition + barWidth / 2, l2) + graphics.line(barXPosition + barWidth - barWidth / 4, l2) + graphics.line(barXPosition + barWidth / 4, l2) + graphics.line(barXPosition + barWidth / 2, l2) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition, y2) + graphics.line(barXPosition, m) + 'z'];\n        } else {\n          // candlestick\n          pathTo = [graphics.move(barXPosition, y2) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition + barWidth / 2, l1) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition + barWidth, y2) + graphics.line(barXPosition + barWidth, y1) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition + barWidth / 2, l2) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition, y1) + graphics.line(barXPosition, y2 - strokeWidth / 2)];\n        }\n\n        pathFrom = pathFrom + graphics.move(barXPosition, y1);\n\n        if (!w.globals.isXNumeric) {\n          x = x + xDivision;\n        }\n\n        return {\n          pathTo: pathTo,\n          pathFrom: pathFrom,\n          x: x,\n          y: y2,\n          barXPosition: barXPosition,\n          color: this.isBoxPlot ? color : isPositive ? [colorPos] : [colorNeg]\n        };\n      }\n    }, {\n      key: \"drawHorizontalBoxPaths\",\n      value: function drawHorizontalBoxPaths(_ref2) {\n        var indexes = _ref2.indexes;\n            _ref2.x;\n            var y = _ref2.y,\n            yDivision = _ref2.yDivision,\n            barHeight = _ref2.barHeight,\n            zeroW = _ref2.zeroW,\n            strokeWidth = _ref2.strokeWidth;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var i = indexes.i;\n        var j = indexes.j;\n        var color = this.boxOptions.colors.lower;\n\n        if (this.isBoxPlot) {\n          color = [this.boxOptions.colors.lower, this.boxOptions.colors.upper];\n        }\n\n        var yRatio = this.invertedYRatio;\n        var realIndex = indexes.realIndex;\n        var ohlc = this.getOHLCValue(realIndex, j);\n        var l1 = zeroW;\n        var l2 = zeroW;\n        var x1 = Math.min(ohlc.o, ohlc.c);\n        var x2 = Math.max(ohlc.o, ohlc.c);\n        var m = ohlc.m;\n\n        if (w.globals.isXNumeric) {\n          y = (w.globals.seriesX[realIndex][j] - w.globals.minX) / this.invertedXRatio - barHeight / 2;\n        }\n\n        var barYPosition = y + barHeight * this.visibleI;\n\n        if (typeof this.series[i][j] === 'undefined' || this.series[i][j] === null) {\n          x1 = zeroW;\n          x2 = zeroW;\n        } else {\n          x1 = zeroW + x1 / yRatio;\n          x2 = zeroW + x2 / yRatio;\n          l1 = zeroW + ohlc.h / yRatio;\n          l2 = zeroW + ohlc.l / yRatio;\n          m = zeroW + ohlc.m / yRatio;\n        }\n\n        var pathTo = graphics.move(zeroW, barYPosition);\n        var pathFrom = graphics.move(x1, barYPosition + barHeight / 2);\n\n        if (w.globals.previousPaths.length > 0) {\n          pathFrom = this.getPreviousPath(realIndex, j, true);\n        }\n\n        pathTo = [graphics.move(x1, barYPosition) + graphics.line(x1, barYPosition + barHeight / 2) + graphics.line(l1, barYPosition + barHeight / 2) + graphics.line(l1, barYPosition + barHeight / 2 - barHeight / 4) + graphics.line(l1, barYPosition + barHeight / 2 + barHeight / 4) + graphics.line(l1, barYPosition + barHeight / 2) + graphics.line(x1, barYPosition + barHeight / 2) + graphics.line(x1, barYPosition + barHeight) + graphics.line(m, barYPosition + barHeight) + graphics.line(m, barYPosition) + graphics.line(x1 + strokeWidth / 2, barYPosition), graphics.move(m, barYPosition) + graphics.line(m, barYPosition + barHeight) + graphics.line(x2, barYPosition + barHeight) + graphics.line(x2, barYPosition + barHeight / 2) + graphics.line(l2, barYPosition + barHeight / 2) + graphics.line(l2, barYPosition + barHeight - barHeight / 4) + graphics.line(l2, barYPosition + barHeight / 4) + graphics.line(l2, barYPosition + barHeight / 2) + graphics.line(x2, barYPosition + barHeight / 2) + graphics.line(x2, barYPosition) + graphics.line(m, barYPosition) + 'z'];\n        pathFrom = pathFrom + graphics.move(x1, barYPosition);\n\n        if (!w.globals.isXNumeric) {\n          y = y + yDivision;\n        }\n\n        return {\n          pathTo: pathTo,\n          pathFrom: pathFrom,\n          x: x2,\n          y: y,\n          barYPosition: barYPosition,\n          color: color\n        };\n      }\n    }, {\n      key: \"getOHLCValue\",\n      value: function getOHLCValue(i, j) {\n        var w = this.w;\n        return {\n          o: this.isBoxPlot ? w.globals.seriesCandleH[i][j] : w.globals.seriesCandleO[i][j],\n          h: this.isBoxPlot ? w.globals.seriesCandleO[i][j] : w.globals.seriesCandleH[i][j],\n          m: w.globals.seriesCandleM[i][j],\n          l: this.isBoxPlot ? w.globals.seriesCandleC[i][j] : w.globals.seriesCandleL[i][j],\n          c: this.isBoxPlot ? w.globals.seriesCandleL[i][j] : w.globals.seriesCandleC[i][j]\n        };\n      }\n    }]);\n\n    return BoxCandleStick;\n  }(Bar);\n\n  var TreemapHelpers = /*#__PURE__*/function () {\n    function TreemapHelpers(ctx) {\n      _classCallCheck(this, TreemapHelpers);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(TreemapHelpers, [{\n      key: \"checkColorRange\",\n      value: function checkColorRange() {\n        var w = this.w;\n        var negRange = false;\n        var chartOpts = w.config.plotOptions[w.config.chart.type];\n\n        if (chartOpts.colorScale.ranges.length > 0) {\n          chartOpts.colorScale.ranges.map(function (range, index) {\n            if (range.from <= 0) {\n              negRange = true;\n            }\n          });\n        }\n\n        return negRange;\n      }\n    }, {\n      key: \"getShadeColor\",\n      value: function getShadeColor(chartType, i, j, negRange) {\n        var w = this.w;\n        var colorShadePercent = 1;\n        var shadeIntensity = w.config.plotOptions[chartType].shadeIntensity;\n        var colorProps = this.determineColor(chartType, i, j);\n\n        if (w.globals.hasNegs || negRange) {\n          if (w.config.plotOptions[chartType].reverseNegativeShade) {\n            if (colorProps.percent < 0) {\n              colorShadePercent = colorProps.percent / 100 * (shadeIntensity * 1.25);\n            } else {\n              colorShadePercent = (1 - colorProps.percent / 100) * (shadeIntensity * 1.25);\n            }\n          } else {\n            if (colorProps.percent <= 0) {\n              colorShadePercent = 1 - (1 + colorProps.percent / 100) * shadeIntensity;\n            } else {\n              colorShadePercent = (1 - colorProps.percent / 100) * shadeIntensity;\n            }\n          }\n        } else {\n          colorShadePercent = 1 - colorProps.percent / 100;\n\n          if (chartType === 'treemap') {\n            colorShadePercent = (1 - colorProps.percent / 100) * (shadeIntensity * 1.25);\n          }\n        }\n\n        var color = colorProps.color;\n        var utils = new Utils$1();\n\n        if (w.config.plotOptions[chartType].enableShades) {\n          if (this.w.config.theme.mode === 'dark') {\n            color = Utils$1.hexToRgba(utils.shadeColor(colorShadePercent * -1, colorProps.color), w.config.fill.opacity);\n          } else {\n            color = Utils$1.hexToRgba(utils.shadeColor(colorShadePercent, colorProps.color), w.config.fill.opacity);\n          }\n        }\n\n        return {\n          color: color,\n          colorProps: colorProps\n        };\n      }\n    }, {\n      key: \"determineColor\",\n      value: function determineColor(chartType, i, j) {\n        var w = this.w;\n        var val = w.globals.series[i][j];\n        var chartOpts = w.config.plotOptions[chartType];\n        var seriesNumber = chartOpts.colorScale.inverse ? j : i;\n        var isDistributed = w.config.plotOptions[chartType].distributed;\n\n        if (isDistributed) {\n          seriesNumber = j;\n        }\n\n        var color = w.globals.colors[seriesNumber];\n        var foreColor = null;\n        var min = Math.min.apply(Math, _toConsumableArray(w.globals.series[i]));\n        var max = Math.max.apply(Math, _toConsumableArray(w.globals.series[i]));\n\n        if (!chartOpts.distributed && chartType === 'heatmap') {\n          min = w.globals.minY;\n          max = w.globals.maxY;\n        }\n\n        if (typeof chartOpts.colorScale.min !== 'undefined') {\n          min = chartOpts.colorScale.min < w.globals.minY ? chartOpts.colorScale.min : w.globals.minY;\n          max = chartOpts.colorScale.max > w.globals.maxY ? chartOpts.colorScale.max : w.globals.maxY;\n        }\n\n        var total = Math.abs(max) + Math.abs(min);\n        var percent = 100 * val / (total === 0 ? total - 0.000001 : total);\n\n        if (chartOpts.colorScale.ranges.length > 0) {\n          var colorRange = chartOpts.colorScale.ranges;\n          colorRange.map(function (range, index) {\n            if (val >= range.from && val <= range.to) {\n              color = range.color;\n              foreColor = range.foreColor ? range.foreColor : null;\n              min = range.from;\n              max = range.to;\n              var rTotal = Math.abs(max) + Math.abs(min);\n              percent = 100 * val / (rTotal === 0 ? rTotal - 0.000001 : rTotal);\n            }\n          });\n        }\n\n        return {\n          color: color,\n          foreColor: foreColor,\n          percent: percent\n        };\n      }\n    }, {\n      key: \"calculateDataLabels\",\n      value: function calculateDataLabels(_ref) {\n        var text = _ref.text,\n            x = _ref.x,\n            y = _ref.y,\n            i = _ref.i,\n            j = _ref.j,\n            colorProps = _ref.colorProps,\n            fontSize = _ref.fontSize;\n        var w = this.w;\n        var dataLabelsConfig = w.config.dataLabels;\n        var graphics = new Graphics(this.ctx);\n        var dataLabels = new DataLabels(this.ctx);\n        var elDataLabelsWrap = null;\n\n        if (dataLabelsConfig.enabled) {\n          elDataLabelsWrap = graphics.group({\n            class: 'apexcharts-data-labels'\n          });\n          var offX = dataLabelsConfig.offsetX;\n          var offY = dataLabelsConfig.offsetY;\n          var dataLabelsX = x + offX;\n          var dataLabelsY = y + parseFloat(dataLabelsConfig.style.fontSize) / 3 + offY;\n          dataLabels.plotDataLabelsText({\n            x: dataLabelsX,\n            y: dataLabelsY,\n            text: text,\n            i: i,\n            j: j,\n            color: colorProps.foreColor,\n            parent: elDataLabelsWrap,\n            fontSize: fontSize,\n            dataLabelsConfig: dataLabelsConfig\n          });\n        }\n\n        return elDataLabelsWrap;\n      }\n    }, {\n      key: \"addListeners\",\n      value: function addListeners(elRect) {\n        var graphics = new Graphics(this.ctx);\n        elRect.node.addEventListener('mouseenter', graphics.pathMouseEnter.bind(this, elRect));\n        elRect.node.addEventListener('mouseleave', graphics.pathMouseLeave.bind(this, elRect));\n        elRect.node.addEventListener('mousedown', graphics.pathMouseDown.bind(this, elRect));\n      }\n    }]);\n\n    return TreemapHelpers;\n  }();\n\n  /**\n   * ApexCharts HeatMap Class.\n   * @module HeatMap\n   **/\n\n  var HeatMap = /*#__PURE__*/function () {\n    function HeatMap(ctx, xyRatios) {\n      _classCallCheck(this, HeatMap);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.xRatio = xyRatios.xRatio;\n      this.yRatio = xyRatios.yRatio;\n      this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation;\n      this.helpers = new TreemapHelpers(ctx);\n      this.rectRadius = this.w.config.plotOptions.heatmap.radius;\n      this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0;\n    }\n\n    _createClass(HeatMap, [{\n      key: \"draw\",\n      value: function draw(series) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var ret = graphics.group({\n          class: 'apexcharts-heatmap'\n        });\n        ret.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\")); // width divided into equal parts\n\n        var xDivision = w.globals.gridWidth / w.globals.dataPoints;\n        var yDivision = w.globals.gridHeight / w.globals.series.length;\n        var y1 = 0;\n        var rev = false;\n        this.negRange = this.helpers.checkColorRange();\n        var heatSeries = series.slice();\n\n        if (w.config.yaxis[0].reversed) {\n          rev = true;\n          heatSeries.reverse();\n        }\n\n        for (var i = rev ? 0 : heatSeries.length - 1; rev ? i < heatSeries.length : i >= 0; rev ? i++ : i--) {\n          // el to which series will be drawn\n          var elSeries = graphics.group({\n            class: \"apexcharts-series apexcharts-heatmap-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[i]),\n            rel: i + 1,\n            'data:realIndex': i\n          });\n          this.ctx.series.addCollapsedClassToSeries(elSeries, i);\n\n          if (w.config.chart.dropShadow.enabled) {\n            var shadow = w.config.chart.dropShadow;\n            var filters = new Filters(this.ctx);\n            filters.dropShadow(elSeries, shadow, i);\n          }\n\n          var x1 = 0;\n          var shadeIntensity = w.config.plotOptions.heatmap.shadeIntensity;\n\n          for (var j = 0; j < heatSeries[i].length; j++) {\n            var heatColor = this.helpers.getShadeColor(w.config.chart.type, i, j, this.negRange);\n            var color = heatColor.color;\n            var heatColorProps = heatColor.colorProps;\n\n            if (w.config.fill.type === 'image') {\n              var fill = new Fill(this.ctx);\n              color = fill.fillPath({\n                seriesNumber: i,\n                dataPointIndex: j,\n                opacity: w.globals.hasNegs ? heatColorProps.percent < 0 ? 1 - (1 + heatColorProps.percent / 100) : shadeIntensity + heatColorProps.percent / 100 : heatColorProps.percent / 100,\n                patternID: Utils$1.randomId(),\n                width: w.config.fill.image.width ? w.config.fill.image.width : xDivision,\n                height: w.config.fill.image.height ? w.config.fill.image.height : yDivision\n              });\n            }\n\n            var radius = this.rectRadius;\n            var rect = graphics.drawRect(x1, y1, xDivision, yDivision, radius);\n            rect.attr({\n              cx: x1,\n              cy: y1\n            });\n            rect.node.classList.add('apexcharts-heatmap-rect');\n            elSeries.add(rect);\n            rect.attr({\n              fill: color,\n              i: i,\n              index: i,\n              j: j,\n              val: heatSeries[i][j],\n              'stroke-width': this.strokeWidth,\n              stroke: w.config.plotOptions.heatmap.useFillColorAsStroke ? color : w.globals.stroke.colors[0],\n              color: color\n            });\n            this.helpers.addListeners(rect);\n\n            if (w.config.chart.animations.enabled && !w.globals.dataChanged) {\n              var speed = 1;\n\n              if (!w.globals.resized) {\n                speed = w.config.chart.animations.speed;\n              }\n\n              this.animateHeatMap(rect, x1, y1, xDivision, yDivision, speed);\n            }\n\n            if (w.globals.dataChanged) {\n              var _speed = 1;\n\n              if (this.dynamicAnim.enabled && w.globals.shouldAnimate) {\n                _speed = this.dynamicAnim.speed;\n                var colorFrom = w.globals.previousPaths[i] && w.globals.previousPaths[i][j] && w.globals.previousPaths[i][j].color;\n                if (!colorFrom) colorFrom = 'rgba(255, 255, 255, 0)';\n                this.animateHeatColor(rect, Utils$1.isColorHex(colorFrom) ? colorFrom : Utils$1.rgb2hex(colorFrom), Utils$1.isColorHex(color) ? color : Utils$1.rgb2hex(color), _speed);\n              }\n            }\n\n            var formatter = w.config.dataLabels.formatter;\n            var formattedText = formatter(w.globals.series[i][j], {\n              value: w.globals.series[i][j],\n              seriesIndex: i,\n              dataPointIndex: j,\n              w: w\n            });\n            var dataLabels = this.helpers.calculateDataLabels({\n              text: formattedText,\n              x: x1 + xDivision / 2,\n              y: y1 + yDivision / 2,\n              i: i,\n              j: j,\n              colorProps: heatColorProps,\n              series: heatSeries\n            });\n\n            if (dataLabels !== null) {\n              elSeries.add(dataLabels);\n            }\n\n            x1 = x1 + xDivision;\n          }\n\n          y1 = y1 + yDivision;\n          ret.add(elSeries);\n        } // adjust yaxis labels for heatmap\n\n\n        var yAxisScale = w.globals.yAxisScale[0].result.slice();\n\n        if (w.config.yaxis[0].reversed) {\n          yAxisScale.unshift('');\n        } else {\n          yAxisScale.push('');\n        }\n\n        w.globals.yAxisScale[0].result = yAxisScale;\n        var divisor = w.globals.gridHeight / w.globals.series.length;\n        w.config.yaxis[0].labels.offsetY = -(divisor / 2);\n        return ret;\n      }\n    }, {\n      key: \"animateHeatMap\",\n      value: function animateHeatMap(el, x, y, width, height, speed) {\n        var animations = new Animations(this.ctx);\n        animations.animateRect(el, {\n          x: x + width / 2,\n          y: y + height / 2,\n          width: 0,\n          height: 0\n        }, {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        }, speed, function () {\n          animations.animationCompleted(el);\n        });\n      }\n    }, {\n      key: \"animateHeatColor\",\n      value: function animateHeatColor(el, colorFrom, colorTo, speed) {\n        el.attr({\n          fill: colorFrom\n        }).animate(speed).attr({\n          fill: colorTo\n        });\n      }\n    }]);\n\n    return HeatMap;\n  }();\n\n  var CircularChartsHelpers = /*#__PURE__*/function () {\n    function CircularChartsHelpers(ctx) {\n      _classCallCheck(this, CircularChartsHelpers);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(CircularChartsHelpers, [{\n      key: \"drawYAxisTexts\",\n      value: function drawYAxisTexts(x, y, i, text) {\n        var w = this.w;\n        var yaxisConfig = w.config.yaxis[0];\n        var formatter = w.globals.yLabelFormatters[0];\n        var graphics = new Graphics(this.ctx);\n        var yaxisLabel = graphics.drawText({\n          x: x + yaxisConfig.labels.offsetX,\n          y: y + yaxisConfig.labels.offsetY,\n          text: formatter(text, i),\n          textAnchor: 'middle',\n          fontSize: yaxisConfig.labels.style.fontSize,\n          fontFamily: yaxisConfig.labels.style.fontFamily,\n          foreColor: Array.isArray(yaxisConfig.labels.style.colors) ? yaxisConfig.labels.style.colors[i] : yaxisConfig.labels.style.colors\n        });\n        return yaxisLabel;\n      }\n    }]);\n\n    return CircularChartsHelpers;\n  }();\n\n  /**\n   * ApexCharts Pie Class for drawing Pie / Donut Charts.\n   * @module Pie\n   **/\n\n  var Pie = /*#__PURE__*/function () {\n    function Pie(ctx) {\n      _classCallCheck(this, Pie);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.chartType = this.w.config.chart.type;\n      this.initialAnim = this.w.config.chart.animations.enabled;\n      this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n      this.animBeginArr = [0];\n      this.animDur = 0;\n      this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels;\n      this.lineColorArr = w.globals.stroke.colors !== undefined ? w.globals.stroke.colors : w.globals.colors;\n      this.defaultSize = Math.min(w.globals.gridWidth, w.globals.gridHeight);\n      this.centerY = this.defaultSize / 2;\n      this.centerX = w.globals.gridWidth / 2;\n\n      if (w.config.chart.type === 'radialBar') {\n        this.fullAngle = 360;\n      } else {\n        this.fullAngle = Math.abs(w.config.plotOptions.pie.endAngle - w.config.plotOptions.pie.startAngle);\n      }\n\n      this.initialAngle = w.config.plotOptions.pie.startAngle % this.fullAngle;\n      w.globals.radialSize = this.defaultSize / 2.05 - w.config.stroke.width - (!w.config.chart.sparkline.enabled ? w.config.chart.dropShadow.blur : 0);\n      this.donutSize = w.globals.radialSize * parseInt(w.config.plotOptions.pie.donut.size, 10) / 100;\n      this.maxY = 0;\n      this.sliceLabels = [];\n      this.sliceSizes = [];\n      this.prevSectorAngleArr = []; // for dynamic animations\n    }\n\n    _createClass(Pie, [{\n      key: \"draw\",\n      value: function draw(series) {\n        var _this = this;\n\n        var self = this;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        this.ret = graphics.group({\n          class: 'apexcharts-pie'\n        });\n        if (w.globals.noData) return this.ret;\n        var total = 0;\n\n        for (var k = 0; k < series.length; k++) {\n          // CALCULATE THE TOTAL\n          total += Utils$1.negToZero(series[k]);\n        }\n\n        var sectorAngleArr = []; // el to which series will be drawn\n\n        var elSeries = graphics.group(); // prevent division by zero error if there is no data\n\n        if (total === 0) {\n          total = 0.00001;\n        }\n\n        series.forEach(function (m) {\n          _this.maxY = Math.max(_this.maxY, m);\n        }); // override maxY if user provided in config\n\n        if (w.config.yaxis[0].max) {\n          this.maxY = w.config.yaxis[0].max;\n        }\n\n        if (w.config.grid.position === 'back' && this.chartType === 'polarArea') {\n          this.drawPolarElements(this.ret);\n        }\n\n        for (var i = 0; i < series.length; i++) {\n          // CALCULATE THE ANGLES\n          var angle = this.fullAngle * Utils$1.negToZero(series[i]) / total;\n          sectorAngleArr.push(angle);\n\n          if (this.chartType === 'polarArea') {\n            sectorAngleArr[i] = this.fullAngle / series.length;\n            this.sliceSizes.push(w.globals.radialSize * series[i] / this.maxY);\n          } else {\n            this.sliceSizes.push(w.globals.radialSize);\n          }\n        }\n\n        if (w.globals.dataChanged) {\n          var prevTotal = 0;\n\n          for (var _k = 0; _k < w.globals.previousPaths.length; _k++) {\n            // CALCULATE THE PREV TOTAL\n            prevTotal += Utils$1.negToZero(w.globals.previousPaths[_k]);\n          }\n\n          var previousAngle;\n\n          for (var _i = 0; _i < w.globals.previousPaths.length; _i++) {\n            // CALCULATE THE PREVIOUS ANGLES\n            previousAngle = this.fullAngle * Utils$1.negToZero(w.globals.previousPaths[_i]) / prevTotal;\n            this.prevSectorAngleArr.push(previousAngle);\n          }\n        } // on small chart size after few count of resizes browser window donutSize can be negative\n\n\n        if (this.donutSize < 0) {\n          this.donutSize = 0;\n        }\n\n        var scaleSize = w.config.plotOptions.pie.customScale;\n        var halfW = w.globals.gridWidth / 2;\n        var halfH = w.globals.gridHeight / 2;\n        var translateX = halfW - w.globals.gridWidth / 2 * scaleSize;\n        var translateY = halfH - w.globals.gridHeight / 2 * scaleSize;\n\n        if (this.chartType === 'donut') {\n          // draw the inner circle and add some text to it\n          var circle = graphics.drawCircle(this.donutSize);\n          circle.attr({\n            cx: this.centerX,\n            cy: this.centerY,\n            fill: w.config.plotOptions.pie.donut.background ? w.config.plotOptions.pie.donut.background : 'transparent'\n          });\n          elSeries.add(circle);\n        }\n\n        var elG = self.drawArcs(sectorAngleArr, series); // add slice dataLabels at the end\n\n        this.sliceLabels.forEach(function (s) {\n          elG.add(s);\n        });\n        elSeries.attr({\n          transform: \"translate(\".concat(translateX, \", \").concat(translateY, \") scale(\").concat(scaleSize, \")\")\n        });\n        elSeries.add(elG);\n        this.ret.add(elSeries);\n\n        if (this.donutDataLabels.show) {\n          var dataLabels = this.renderInnerDataLabels(this.donutDataLabels, {\n            hollowSize: this.donutSize,\n            centerX: this.centerX,\n            centerY: this.centerY,\n            opacity: this.donutDataLabels.show,\n            translateX: translateX,\n            translateY: translateY\n          });\n          this.ret.add(dataLabels);\n        }\n\n        if (w.config.grid.position === 'front' && this.chartType === 'polarArea') {\n          this.drawPolarElements(this.ret);\n        }\n\n        return this.ret;\n      } // core function for drawing pie arcs\n\n    }, {\n      key: \"drawArcs\",\n      value: function drawArcs(sectorAngleArr, series) {\n        var w = this.w;\n        var filters = new Filters(this.ctx);\n        var graphics = new Graphics(this.ctx);\n        var fill = new Fill(this.ctx);\n        var g = graphics.group({\n          class: 'apexcharts-slices'\n        });\n        var startAngle = this.initialAngle;\n        var prevStartAngle = this.initialAngle;\n        var endAngle = this.initialAngle;\n        var prevEndAngle = this.initialAngle;\n        this.strokeWidth = w.config.stroke.show ? w.config.stroke.width : 0;\n\n        for (var i = 0; i < sectorAngleArr.length; i++) {\n          var elPieArc = graphics.group({\n            class: \"apexcharts-series apexcharts-pie-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[i]),\n            rel: i + 1,\n            'data:realIndex': i\n          });\n          g.add(elPieArc);\n          startAngle = endAngle;\n          prevStartAngle = prevEndAngle;\n          endAngle = startAngle + sectorAngleArr[i];\n          prevEndAngle = prevStartAngle + this.prevSectorAngleArr[i];\n          var angle = endAngle < startAngle ? this.fullAngle + endAngle - startAngle : endAngle - startAngle;\n          var pathFill = fill.fillPath({\n            seriesNumber: i,\n            size: this.sliceSizes[i],\n            value: series[i]\n          }); // additionally, pass size for gradient drawing in the fillPath function\n\n          var path = this.getChangedPath(prevStartAngle, prevEndAngle);\n          var elPath = graphics.drawPath({\n            d: path,\n            stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[i] : this.lineColorArr,\n            strokeWidth: 0,\n            fill: pathFill,\n            fillOpacity: w.config.fill.opacity,\n            classes: \"apexcharts-pie-area apexcharts-\".concat(this.chartType.toLowerCase(), \"-slice-\").concat(i)\n          });\n          elPath.attr({\n            index: 0,\n            j: i\n          });\n          filters.setSelectionFilter(elPath, 0, i);\n\n          if (w.config.chart.dropShadow.enabled) {\n            var shadow = w.config.chart.dropShadow;\n            filters.dropShadow(elPath, shadow, i);\n          }\n\n          this.addListeners(elPath, this.donutDataLabels);\n          Graphics.setAttrs(elPath.node, {\n            'data:angle': angle,\n            'data:startAngle': startAngle,\n            'data:strokeWidth': this.strokeWidth,\n            'data:value': series[i]\n          });\n          var labelPosition = {\n            x: 0,\n            y: 0\n          };\n\n          if (this.chartType === 'pie' || this.chartType === 'polarArea') {\n            labelPosition = Utils$1.polarToCartesian(this.centerX, this.centerY, w.globals.radialSize / 1.25 + w.config.plotOptions.pie.dataLabels.offset, (startAngle + angle / 2) % this.fullAngle);\n          } else if (this.chartType === 'donut') {\n            labelPosition = Utils$1.polarToCartesian(this.centerX, this.centerY, (w.globals.radialSize + this.donutSize) / 2 + w.config.plotOptions.pie.dataLabels.offset, (startAngle + angle / 2) % this.fullAngle);\n          }\n\n          elPieArc.add(elPath); // Animation code starts\n\n          var dur = 0;\n\n          if (this.initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n            dur = angle / this.fullAngle * w.config.chart.animations.speed;\n            if (dur === 0) dur = 1;\n            this.animDur = dur + this.animDur;\n            this.animBeginArr.push(this.animDur);\n          } else {\n            this.animBeginArr.push(0);\n          }\n\n          if (this.dynamicAnim && w.globals.dataChanged) {\n            this.animatePaths(elPath, {\n              size: this.sliceSizes[i],\n              endAngle: endAngle,\n              startAngle: startAngle,\n              prevStartAngle: prevStartAngle,\n              prevEndAngle: prevEndAngle,\n              animateStartingPos: true,\n              i: i,\n              animBeginArr: this.animBeginArr,\n              shouldSetPrevPaths: true,\n              dur: w.config.chart.animations.dynamicAnimation.speed\n            });\n          } else {\n            this.animatePaths(elPath, {\n              size: this.sliceSizes[i],\n              endAngle: endAngle,\n              startAngle: startAngle,\n              i: i,\n              totalItems: sectorAngleArr.length - 1,\n              animBeginArr: this.animBeginArr,\n              dur: dur\n            });\n          } // animation code ends\n\n\n          if (w.config.plotOptions.pie.expandOnClick && this.chartType !== 'polarArea') {\n            elPath.click(this.pieClicked.bind(this, i));\n          }\n\n          if (typeof w.globals.selectedDataPoints[0] !== 'undefined' && w.globals.selectedDataPoints[0].indexOf(i) > -1) {\n            this.pieClicked(i);\n          }\n\n          if (w.config.dataLabels.enabled) {\n            var xPos = labelPosition.x;\n            var yPos = labelPosition.y;\n            var text = 100 * angle / this.fullAngle + '%';\n\n            if (angle !== 0 && w.config.plotOptions.pie.dataLabels.minAngleToShowLabel < sectorAngleArr[i]) {\n              var formatter = w.config.dataLabels.formatter;\n\n              if (formatter !== undefined) {\n                text = formatter(w.globals.seriesPercent[i][0], {\n                  seriesIndex: i,\n                  w: w\n                });\n              }\n\n              var foreColor = w.globals.dataLabels.style.colors[i];\n              var elPieLabelWrap = graphics.group({\n                class: \"apexcharts-datalabels\"\n              });\n              var elPieLabel = graphics.drawText({\n                x: xPos,\n                y: yPos,\n                text: text,\n                textAnchor: 'middle',\n                fontSize: w.config.dataLabels.style.fontSize,\n                fontFamily: w.config.dataLabels.style.fontFamily,\n                fontWeight: w.config.dataLabels.style.fontWeight,\n                foreColor: foreColor\n              });\n              elPieLabelWrap.add(elPieLabel);\n\n              if (w.config.dataLabels.dropShadow.enabled) {\n                var textShadow = w.config.dataLabels.dropShadow;\n                filters.dropShadow(elPieLabel, textShadow);\n              }\n\n              elPieLabel.node.classList.add('apexcharts-pie-label');\n\n              if (w.config.chart.animations.animate && w.globals.resized === false) {\n                elPieLabel.node.classList.add('apexcharts-pie-label-delay');\n                elPieLabel.node.style.animationDelay = w.config.chart.animations.speed / 940 + 's';\n              }\n\n              this.sliceLabels.push(elPieLabelWrap);\n            }\n          }\n        }\n\n        return g;\n      }\n    }, {\n      key: \"addListeners\",\n      value: function addListeners(elPath, dataLabels) {\n        var graphics = new Graphics(this.ctx); // append filters on mouseenter and mouseleave\n\n        elPath.node.addEventListener('mouseenter', graphics.pathMouseEnter.bind(this, elPath));\n        elPath.node.addEventListener('mouseleave', graphics.pathMouseLeave.bind(this, elPath));\n        elPath.node.addEventListener('mouseleave', this.revertDataLabelsInner.bind(this, elPath.node, dataLabels));\n        elPath.node.addEventListener('mousedown', graphics.pathMouseDown.bind(this, elPath));\n\n        if (!this.donutDataLabels.total.showAlways) {\n          elPath.node.addEventListener('mouseenter', this.printDataLabelsInner.bind(this, elPath.node, dataLabels));\n          elPath.node.addEventListener('mousedown', this.printDataLabelsInner.bind(this, elPath.node, dataLabels));\n        }\n      } // This function can be used for other circle charts too\n\n    }, {\n      key: \"animatePaths\",\n      value: function animatePaths(el, opts) {\n        var w = this.w;\n        var me = this;\n        var angle = opts.endAngle < opts.startAngle ? this.fullAngle + opts.endAngle - opts.startAngle : opts.endAngle - opts.startAngle;\n        var prevAngle = angle;\n        var fromStartAngle = opts.startAngle;\n        var toStartAngle = opts.startAngle;\n\n        if (opts.prevStartAngle !== undefined && opts.prevEndAngle !== undefined) {\n          fromStartAngle = opts.prevEndAngle;\n          prevAngle = opts.prevEndAngle < opts.prevStartAngle ? this.fullAngle + opts.prevEndAngle - opts.prevStartAngle : opts.prevEndAngle - opts.prevStartAngle;\n        }\n\n        if (opts.i === w.config.series.length - 1) {\n          // some adjustments for the last overlapping paths\n          if (angle + toStartAngle > this.fullAngle) {\n            opts.endAngle = opts.endAngle - (angle + toStartAngle);\n          } else if (angle + toStartAngle < this.fullAngle) {\n            opts.endAngle = opts.endAngle + (this.fullAngle - (angle + toStartAngle));\n          }\n        }\n\n        if (angle === this.fullAngle) angle = this.fullAngle - 0.01;\n        me.animateArc(el, fromStartAngle, toStartAngle, angle, prevAngle, opts);\n      }\n    }, {\n      key: \"animateArc\",\n      value: function animateArc(el, fromStartAngle, toStartAngle, angle, prevAngle, opts) {\n        var me = this;\n        var w = this.w;\n        var animations = new Animations(this.ctx);\n        var size = opts.size;\n        var path;\n\n        if (isNaN(fromStartAngle) || isNaN(prevAngle)) {\n          fromStartAngle = toStartAngle;\n          prevAngle = angle;\n          opts.dur = 0;\n        }\n\n        var currAngle = angle;\n        var startAngle = toStartAngle;\n        var fromAngle = fromStartAngle < toStartAngle ? this.fullAngle + fromStartAngle - toStartAngle : fromStartAngle - toStartAngle;\n\n        if (w.globals.dataChanged && opts.shouldSetPrevPaths) {\n          // to avoid flicker when updating, set prev path first and then animate from there\n          if (opts.prevEndAngle) {\n            path = me.getPiePath({\n              me: me,\n              startAngle: opts.prevStartAngle,\n              angle: opts.prevEndAngle < opts.prevStartAngle ? this.fullAngle + opts.prevEndAngle - opts.prevStartAngle : opts.prevEndAngle - opts.prevStartAngle,\n              size: size\n            });\n            el.attr({\n              d: path\n            });\n          }\n        }\n\n        if (opts.dur !== 0) {\n          el.animate(opts.dur, w.globals.easing, opts.animBeginArr[opts.i]).afterAll(function () {\n            if (me.chartType === 'pie' || me.chartType === 'donut' || me.chartType === 'polarArea') {\n              this.animate(w.config.chart.animations.dynamicAnimation.speed).attr({\n                'stroke-width': me.strokeWidth\n              });\n            }\n\n            if (opts.i === w.config.series.length - 1) {\n              animations.animationCompleted(el);\n            }\n          }).during(function (pos) {\n            currAngle = fromAngle + (angle - fromAngle) * pos;\n\n            if (opts.animateStartingPos) {\n              currAngle = prevAngle + (angle - prevAngle) * pos;\n              startAngle = fromStartAngle - prevAngle + (toStartAngle - (fromStartAngle - prevAngle)) * pos;\n            }\n\n            path = me.getPiePath({\n              me: me,\n              startAngle: startAngle,\n              angle: currAngle,\n              size: size\n            });\n            el.node.setAttribute('data:pathOrig', path);\n            el.attr({\n              d: path\n            });\n          });\n        } else {\n          path = me.getPiePath({\n            me: me,\n            startAngle: startAngle,\n            angle: angle,\n            size: size\n          });\n\n          if (!opts.isTrack) {\n            w.globals.animationEnded = true;\n          }\n\n          el.node.setAttribute('data:pathOrig', path);\n          el.attr({\n            d: path,\n            'stroke-width': me.strokeWidth\n          });\n        }\n      }\n    }, {\n      key: \"pieClicked\",\n      value: function pieClicked(i) {\n        var w = this.w;\n        var me = this;\n        var path;\n        var size = me.sliceSizes[i] + (w.config.plotOptions.pie.expandOnClick ? 4 : 0);\n        var elPath = w.globals.dom.Paper.select(\".apexcharts-\".concat(me.chartType.toLowerCase(), \"-slice-\").concat(i)).members[0];\n\n        if (elPath.attr('data:pieClicked') === 'true') {\n          elPath.attr({\n            'data:pieClicked': 'false'\n          });\n          this.revertDataLabelsInner(elPath.node, this.donutDataLabels);\n          var origPath = elPath.attr('data:pathOrig');\n          elPath.attr({\n            d: origPath\n          });\n          return;\n        } else {\n          // reset all elems\n          var allEls = w.globals.dom.baseEl.getElementsByClassName('apexcharts-pie-area');\n          Array.prototype.forEach.call(allEls, function (pieSlice) {\n            pieSlice.setAttribute('data:pieClicked', 'false');\n            var origPath = pieSlice.getAttribute('data:pathOrig');\n            pieSlice.setAttribute('d', origPath);\n          });\n          elPath.attr('data:pieClicked', 'true');\n        }\n\n        var startAngle = parseInt(elPath.attr('data:startAngle'), 10);\n        var angle = parseInt(elPath.attr('data:angle'), 10);\n        path = me.getPiePath({\n          me: me,\n          startAngle: startAngle,\n          angle: angle,\n          size: size\n        });\n        if (angle === 360) return;\n        elPath.plot(path);\n      }\n    }, {\n      key: \"getChangedPath\",\n      value: function getChangedPath(prevStartAngle, prevEndAngle) {\n        var path = '';\n\n        if (this.dynamicAnim && this.w.globals.dataChanged) {\n          path = this.getPiePath({\n            me: this,\n            startAngle: prevStartAngle,\n            angle: prevEndAngle - prevStartAngle,\n            size: this.size\n          });\n        }\n\n        return path;\n      }\n    }, {\n      key: \"getPiePath\",\n      value: function getPiePath(_ref) {\n        var me = _ref.me,\n            startAngle = _ref.startAngle,\n            angle = _ref.angle,\n            size = _ref.size;\n        var path;\n        var startDeg = startAngle;\n        var startRadians = Math.PI * (startDeg - 90) / 180;\n        var endDeg = angle + startAngle; // prevent overlap\n\n        if (Math.ceil(endDeg) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle) {\n          endDeg = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - 0.01;\n        }\n\n        if (Math.ceil(endDeg) > this.fullAngle) endDeg -= this.fullAngle;\n        var endRadians = Math.PI * (endDeg - 90) / 180;\n        var x1 = me.centerX + size * Math.cos(startRadians);\n        var y1 = me.centerY + size * Math.sin(startRadians);\n        var x2 = me.centerX + size * Math.cos(endRadians);\n        var y2 = me.centerY + size * Math.sin(endRadians);\n        var startInner = Utils$1.polarToCartesian(me.centerX, me.centerY, me.donutSize, endDeg);\n        var endInner = Utils$1.polarToCartesian(me.centerX, me.centerY, me.donutSize, startDeg);\n        var largeArc = angle > 180 ? 1 : 0;\n        var pathBeginning = ['M', x1, y1, 'A', size, size, 0, largeArc, 1, x2, y2];\n\n        if (me.chartType === 'donut') {\n          path = [].concat(pathBeginning, ['L', startInner.x, startInner.y, 'A', me.donutSize, me.donutSize, 0, largeArc, 0, endInner.x, endInner.y, 'L', x1, y1, 'z']).join(' ');\n        } else if (me.chartType === 'pie' || me.chartType === 'polarArea') {\n          path = [].concat(pathBeginning, ['L', me.centerX, me.centerY, 'L', x1, y1]).join(' ');\n        } else {\n          path = [].concat(pathBeginning).join(' ');\n        }\n\n        return path;\n      }\n    }, {\n      key: \"drawPolarElements\",\n      value: function drawPolarElements(parent) {\n        var w = this.w;\n        var scale = new Range$1(this.ctx);\n        var graphics = new Graphics(this.ctx);\n        var helpers = new CircularChartsHelpers(this.ctx);\n        var gCircles = graphics.group();\n        var gYAxis = graphics.group();\n        var yScale = scale.niceScale(0, Math.ceil(this.maxY), w.config.yaxis[0].tickAmount, 0, true);\n        var yTexts = yScale.result.reverse();\n        var len = yScale.result.length;\n        this.maxY = yScale.niceMax;\n        var circleSize = w.globals.radialSize;\n        var diff = circleSize / (len - 1);\n\n        for (var i = 0; i < len - 1; i++) {\n          var circle = graphics.drawCircle(circleSize);\n          circle.attr({\n            cx: this.centerX,\n            cy: this.centerY,\n            fill: 'none',\n            'stroke-width': w.config.plotOptions.polarArea.rings.strokeWidth,\n            stroke: w.config.plotOptions.polarArea.rings.strokeColor\n          });\n\n          if (w.config.yaxis[0].show) {\n            var yLabel = helpers.drawYAxisTexts(this.centerX, this.centerY - circleSize + parseInt(w.config.yaxis[0].labels.style.fontSize, 10) / 2, i, yTexts[i]);\n            gYAxis.add(yLabel);\n          }\n\n          gCircles.add(circle);\n          circleSize = circleSize - diff;\n        }\n\n        this.drawSpokes(parent);\n        parent.add(gCircles);\n        parent.add(gYAxis);\n      }\n    }, {\n      key: \"renderInnerDataLabels\",\n      value: function renderInnerDataLabels(dataLabelsConfig, opts) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var g = graphics.group({\n          class: 'apexcharts-datalabels-group',\n          transform: \"translate(\".concat(opts.translateX ? opts.translateX : 0, \", \").concat(opts.translateY ? opts.translateY : 0, \") scale(\").concat(w.config.plotOptions.pie.customScale, \")\")\n        });\n        var showTotal = dataLabelsConfig.total.show;\n        g.node.style.opacity = opts.opacity;\n        var x = opts.centerX;\n        var y = opts.centerY;\n        var labelColor, valueColor;\n\n        if (dataLabelsConfig.name.color === undefined) {\n          labelColor = w.globals.colors[0];\n        } else {\n          labelColor = dataLabelsConfig.name.color;\n        }\n\n        var labelFontSize = dataLabelsConfig.name.fontSize;\n        var labelFontFamily = dataLabelsConfig.name.fontFamily;\n        var labelFontWeight = dataLabelsConfig.name.fontWeight;\n\n        if (dataLabelsConfig.value.color === undefined) {\n          valueColor = w.config.chart.foreColor;\n        } else {\n          valueColor = dataLabelsConfig.value.color;\n        }\n\n        var lbFormatter = dataLabelsConfig.value.formatter;\n        var val = '';\n        var name = '';\n\n        if (showTotal) {\n          labelColor = dataLabelsConfig.total.color;\n          labelFontSize = dataLabelsConfig.total.fontSize;\n          labelFontFamily = dataLabelsConfig.total.fontFamily;\n          labelFontWeight = dataLabelsConfig.total.fontWeight;\n          name = dataLabelsConfig.total.label;\n          val = dataLabelsConfig.total.formatter(w);\n        } else {\n          if (w.globals.series.length === 1) {\n            val = lbFormatter(w.globals.series[0], w);\n            name = w.globals.seriesNames[0];\n          }\n        }\n\n        if (name) {\n          name = dataLabelsConfig.name.formatter(name, dataLabelsConfig.total.show, w);\n        }\n\n        if (dataLabelsConfig.name.show) {\n          var elLabel = graphics.drawText({\n            x: x,\n            y: y + parseFloat(dataLabelsConfig.name.offsetY),\n            text: name,\n            textAnchor: 'middle',\n            foreColor: labelColor,\n            fontSize: labelFontSize,\n            fontWeight: labelFontWeight,\n            fontFamily: labelFontFamily\n          });\n          elLabel.node.classList.add('apexcharts-datalabel-label');\n          g.add(elLabel);\n        }\n\n        if (dataLabelsConfig.value.show) {\n          var valOffset = dataLabelsConfig.name.show ? parseFloat(dataLabelsConfig.value.offsetY) + 16 : dataLabelsConfig.value.offsetY;\n          var elValue = graphics.drawText({\n            x: x,\n            y: y + valOffset,\n            text: val,\n            textAnchor: 'middle',\n            foreColor: valueColor,\n            fontWeight: dataLabelsConfig.value.fontWeight,\n            fontSize: dataLabelsConfig.value.fontSize,\n            fontFamily: dataLabelsConfig.value.fontFamily\n          });\n          elValue.node.classList.add('apexcharts-datalabel-value');\n          g.add(elValue);\n        } // for a multi-series circle chart, we need to show total value instead of first series labels\n\n\n        return g;\n      }\n      /**\n       *\n       * @param {string} name - The name of the series\n       * @param {string} val - The value of that series\n       * @param {object} el - Optional el (indicates which series was hovered/clicked). If this param is not present, means we need to show total\n       */\n\n    }, {\n      key: \"printInnerLabels\",\n      value: function printInnerLabels(labelsConfig, name, val, el) {\n        var w = this.w;\n        var labelColor;\n\n        if (el) {\n          if (labelsConfig.name.color === undefined) {\n            labelColor = w.globals.colors[parseInt(el.parentNode.getAttribute('rel'), 10) - 1];\n          } else {\n            labelColor = labelsConfig.name.color;\n          }\n        } else {\n          if (w.globals.series.length > 1 && labelsConfig.total.show) {\n            labelColor = labelsConfig.total.color;\n          }\n        }\n\n        var elLabel = w.globals.dom.baseEl.querySelector('.apexcharts-datalabel-label');\n        var elValue = w.globals.dom.baseEl.querySelector('.apexcharts-datalabel-value');\n        var lbFormatter = labelsConfig.value.formatter;\n        val = lbFormatter(val, w); // we need to show Total Val - so get the formatter of it\n\n        if (!el && typeof labelsConfig.total.formatter === 'function') {\n          val = labelsConfig.total.formatter(w);\n        }\n\n        var isTotal = name === labelsConfig.total.label;\n        name = labelsConfig.name.formatter(name, isTotal, w);\n\n        if (elLabel !== null) {\n          elLabel.textContent = name;\n        }\n\n        if (elValue !== null) {\n          elValue.textContent = val;\n        }\n\n        if (elLabel !== null) {\n          elLabel.style.fill = labelColor;\n        }\n      }\n    }, {\n      key: \"printDataLabelsInner\",\n      value: function printDataLabelsInner(el, dataLabelsConfig) {\n        var w = this.w;\n        var val = el.getAttribute('data:value');\n        var name = w.globals.seriesNames[parseInt(el.parentNode.getAttribute('rel'), 10) - 1];\n\n        if (w.globals.series.length > 1) {\n          this.printInnerLabels(dataLabelsConfig, name, val, el);\n        }\n\n        var dataLabelsGroup = w.globals.dom.baseEl.querySelector('.apexcharts-datalabels-group');\n\n        if (dataLabelsGroup !== null) {\n          dataLabelsGroup.style.opacity = 1;\n        }\n      }\n    }, {\n      key: \"drawSpokes\",\n      value: function drawSpokes(parent) {\n        var _this2 = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var spokeConfig = w.config.plotOptions.polarArea.spokes;\n        if (spokeConfig.strokeWidth === 0) return;\n        var spokes = [];\n        var angleDivision = 360 / w.globals.series.length;\n\n        for (var i = 0; i < w.globals.series.length; i++) {\n          spokes.push(Utils$1.polarToCartesian(this.centerX, this.centerY, w.globals.radialSize, w.config.plotOptions.pie.startAngle + angleDivision * i));\n        }\n\n        spokes.forEach(function (p, i) {\n          var line = graphics.drawLine(p.x, p.y, _this2.centerX, _this2.centerY, Array.isArray(spokeConfig.connectorColors) ? spokeConfig.connectorColors[i] : spokeConfig.connectorColors);\n          parent.add(line);\n        });\n      }\n    }, {\n      key: \"revertDataLabelsInner\",\n      value: function revertDataLabelsInner(elem, dataLabelsConfig, event) {\n        var _this3 = this;\n\n        var w = this.w;\n        var dataLabelsGroup = w.globals.dom.baseEl.querySelector('.apexcharts-datalabels-group');\n        var sliceOut = false;\n        var slices = w.globals.dom.baseEl.getElementsByClassName(\"apexcharts-pie-area\");\n\n        var selectSlice = function selectSlice(_ref2) {\n          var makeSliceOut = _ref2.makeSliceOut,\n              printLabel = _ref2.printLabel;\n          Array.prototype.forEach.call(slices, function (s) {\n            if (s.getAttribute('data:pieClicked') === 'true') {\n              if (makeSliceOut) {\n                sliceOut = true;\n              }\n\n              if (printLabel) {\n                _this3.printDataLabelsInner(s, dataLabelsConfig);\n              }\n            }\n          });\n        };\n\n        selectSlice({\n          makeSliceOut: true,\n          printLabel: false\n        });\n\n        if (dataLabelsConfig.total.show && w.globals.series.length > 1) {\n          if (sliceOut && !dataLabelsConfig.total.showAlways) {\n            selectSlice({\n              makeSliceOut: false,\n              printLabel: true\n            });\n          } else {\n            this.printInnerLabels(dataLabelsConfig, dataLabelsConfig.total.label, dataLabelsConfig.total.formatter(w));\n          }\n        } else {\n          selectSlice({\n            makeSliceOut: false,\n            printLabel: true\n          });\n\n          if (!sliceOut) {\n            if (w.globals.selectedDataPoints.length && w.globals.series.length > 1) {\n              if (w.globals.selectedDataPoints[0].length > 0) {\n                var index = w.globals.selectedDataPoints[0];\n                var el = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(this.chartType.toLowerCase(), \"-slice-\").concat(index));\n                this.printDataLabelsInner(el, dataLabelsConfig);\n              } else if (dataLabelsGroup && w.globals.selectedDataPoints.length && w.globals.selectedDataPoints[0].length === 0) {\n                dataLabelsGroup.style.opacity = 0;\n              }\n            } else {\n              if (dataLabelsGroup && w.globals.series.length > 1) {\n                dataLabelsGroup.style.opacity = 0;\n              }\n            }\n          }\n        }\n      }\n    }]);\n\n    return Pie;\n  }();\n\n  /**\n   * ApexCharts Radar Class for Spider/Radar Charts.\n   * @module Radar\n   **/\n\n  var Radar = /*#__PURE__*/function () {\n    function Radar(ctx) {\n      _classCallCheck(this, Radar);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.chartType = this.w.config.chart.type;\n      this.initialAnim = this.w.config.chart.animations.enabled;\n      this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n      this.animDur = 0;\n      var w = this.w;\n      this.graphics = new Graphics(this.ctx);\n      this.lineColorArr = w.globals.stroke.colors !== undefined ? w.globals.stroke.colors : w.globals.colors;\n      this.defaultSize = w.globals.svgHeight < w.globals.svgWidth ? w.globals.gridHeight + w.globals.goldenPadding * 1.5 : w.globals.gridWidth;\n      this.isLog = w.config.yaxis[0].logarithmic;\n      this.coreUtils = new CoreUtils(this.ctx);\n      this.maxValue = this.isLog ? this.coreUtils.getLogVal(w.globals.maxY, 0) : w.globals.maxY;\n      this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : w.globals.minY;\n      this.polygons = w.config.plotOptions.radar.polygons;\n      this.strokeWidth = w.config.stroke.show ? w.config.stroke.width : 0;\n      this.size = this.defaultSize / 2.1 - this.strokeWidth - w.config.chart.dropShadow.blur;\n\n      if (w.config.xaxis.labels.show) {\n        this.size = this.size - w.globals.xAxisLabelsWidth / 1.75;\n      }\n\n      if (w.config.plotOptions.radar.size !== undefined) {\n        this.size = w.config.plotOptions.radar.size;\n      }\n\n      this.dataRadiusOfPercent = [];\n      this.dataRadius = [];\n      this.angleArr = [];\n      this.yaxisLabelsTextsPos = [];\n    }\n\n    _createClass(Radar, [{\n      key: \"draw\",\n      value: function draw(series) {\n        var _this = this;\n\n        var w = this.w;\n        var fill = new Fill(this.ctx);\n        var allSeries = [];\n        var dataLabels = new DataLabels(this.ctx);\n\n        if (series.length) {\n          this.dataPointsLen = series[w.globals.maxValsInArrayIndex].length;\n        }\n\n        this.disAngle = Math.PI * 2 / this.dataPointsLen;\n        var halfW = w.globals.gridWidth / 2;\n        var halfH = w.globals.gridHeight / 2;\n        var translateX = halfW + w.config.plotOptions.radar.offsetX;\n        var translateY = halfH + w.config.plotOptions.radar.offsetY;\n        var ret = this.graphics.group({\n          class: 'apexcharts-radar-series apexcharts-plot-series',\n          transform: \"translate(\".concat(translateX || 0, \", \").concat(translateY || 0, \")\")\n        });\n        var dataPointsPos = [];\n        var elPointsMain = null;\n        var elDataPointsMain = null;\n        this.yaxisLabels = this.graphics.group({\n          class: 'apexcharts-yaxis'\n        });\n        series.forEach(function (s, i) {\n          var longestSeries = s.length === w.globals.dataPoints; // el to which series will be drawn\n\n          var elSeries = _this.graphics.group().attr({\n            class: \"apexcharts-series\",\n            'data:longestSeries': longestSeries,\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[i]),\n            rel: i + 1,\n            'data:realIndex': i\n          });\n\n          _this.dataRadiusOfPercent[i] = [];\n          _this.dataRadius[i] = [];\n          _this.angleArr[i] = [];\n          s.forEach(function (dv, j) {\n            var range = Math.abs(_this.maxValue - _this.minValue);\n            dv = dv + Math.abs(_this.minValue);\n\n            if (_this.isLog) {\n              dv = _this.coreUtils.getLogVal(dv, 0);\n            }\n\n            _this.dataRadiusOfPercent[i][j] = dv / range;\n            _this.dataRadius[i][j] = _this.dataRadiusOfPercent[i][j] * _this.size;\n            _this.angleArr[i][j] = j * _this.disAngle;\n          });\n          dataPointsPos = _this.getDataPointsPos(_this.dataRadius[i], _this.angleArr[i]);\n\n          var paths = _this.createPaths(dataPointsPos, {\n            x: 0,\n            y: 0\n          }); // points\n\n\n          elPointsMain = _this.graphics.group({\n            class: 'apexcharts-series-markers-wrap apexcharts-element-hidden'\n          }); // datapoints\n\n          elDataPointsMain = _this.graphics.group({\n            class: \"apexcharts-datalabels\",\n            'data:realIndex': i\n          });\n          w.globals.delayedElements.push({\n            el: elPointsMain.node,\n            index: i\n          });\n          var defaultRenderedPathOptions = {\n            i: i,\n            realIndex: i,\n            animationDelay: i,\n            initialSpeed: w.config.chart.animations.speed,\n            dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n            className: \"apexcharts-radar\",\n            shouldClipToGrid: false,\n            bindEventsOnPaths: false,\n            stroke: w.globals.stroke.colors[i],\n            strokeLineCap: w.config.stroke.lineCap\n          };\n          var pathFrom = null;\n\n          if (w.globals.previousPaths.length > 0) {\n            pathFrom = _this.getPreviousPath(i);\n          }\n\n          for (var p = 0; p < paths.linePathsTo.length; p++) {\n            var renderedLinePath = _this.graphics.renderPaths(_objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n              pathFrom: pathFrom === null ? paths.linePathsFrom[p] : pathFrom,\n              pathTo: paths.linePathsTo[p],\n              strokeWidth: Array.isArray(_this.strokeWidth) ? _this.strokeWidth[i] : _this.strokeWidth,\n              fill: 'none',\n              drawShadow: false\n            }));\n\n            elSeries.add(renderedLinePath);\n            var pathFill = fill.fillPath({\n              seriesNumber: i\n            });\n\n            var renderedAreaPath = _this.graphics.renderPaths(_objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n              pathFrom: pathFrom === null ? paths.areaPathsFrom[p] : pathFrom,\n              pathTo: paths.areaPathsTo[p],\n              strokeWidth: 0,\n              fill: pathFill,\n              drawShadow: false\n            }));\n\n            if (w.config.chart.dropShadow.enabled) {\n              var filters = new Filters(_this.ctx);\n              var shadow = w.config.chart.dropShadow;\n              filters.dropShadow(renderedAreaPath, Object.assign({}, shadow, {\n                noUserSpaceOnUse: true\n              }), i);\n            }\n\n            elSeries.add(renderedAreaPath);\n          }\n\n          s.forEach(function (sj, j) {\n            var markers = new Markers(_this.ctx);\n            var opts = markers.getMarkerConfig({\n              cssClass: 'apexcharts-marker',\n              seriesIndex: i,\n              dataPointIndex: j\n            });\n\n            var point = _this.graphics.drawMarker(dataPointsPos[j].x, dataPointsPos[j].y, opts);\n\n            point.attr('rel', j);\n            point.attr('j', j);\n            point.attr('index', i);\n            point.node.setAttribute('default-marker-size', opts.pSize);\n\n            var elPointsWrap = _this.graphics.group({\n              class: 'apexcharts-series-markers'\n            });\n\n            if (elPointsWrap) {\n              elPointsWrap.add(point);\n            }\n\n            elPointsMain.add(elPointsWrap);\n            elSeries.add(elPointsMain);\n            var dataLabelsConfig = w.config.dataLabels;\n\n            if (dataLabelsConfig.enabled) {\n              var text = dataLabelsConfig.formatter(w.globals.series[i][j], {\n                seriesIndex: i,\n                dataPointIndex: j,\n                w: w\n              });\n              dataLabels.plotDataLabelsText({\n                x: dataPointsPos[j].x,\n                y: dataPointsPos[j].y,\n                text: text,\n                textAnchor: 'middle',\n                i: i,\n                j: i,\n                parent: elDataPointsMain,\n                offsetCorrection: false,\n                dataLabelsConfig: _objectSpread2({}, dataLabelsConfig)\n              });\n            }\n\n            elSeries.add(elDataPointsMain);\n          });\n          allSeries.push(elSeries);\n        });\n        this.drawPolygons({\n          parent: ret\n        });\n\n        if (w.config.xaxis.labels.show) {\n          var xaxisTexts = this.drawXAxisTexts();\n          ret.add(xaxisTexts);\n        }\n\n        allSeries.forEach(function (elS) {\n          ret.add(elS);\n        });\n        ret.add(this.yaxisLabels);\n        return ret;\n      }\n    }, {\n      key: \"drawPolygons\",\n      value: function drawPolygons(opts) {\n        var _this2 = this;\n\n        var w = this.w;\n        var parent = opts.parent;\n        var helpers = new CircularChartsHelpers(this.ctx);\n        var yaxisTexts = w.globals.yAxisScale[0].result.reverse();\n        var layers = yaxisTexts.length;\n        var radiusSizes = [];\n        var layerDis = this.size / (layers - 1);\n\n        for (var i = 0; i < layers; i++) {\n          radiusSizes[i] = layerDis * i;\n        }\n\n        radiusSizes.reverse();\n        var polygonStrings = [];\n        var lines = [];\n        radiusSizes.forEach(function (radiusSize, r) {\n          var polygon = Utils$1.getPolygonPos(radiusSize, _this2.dataPointsLen);\n          var string = '';\n          polygon.forEach(function (p, i) {\n            if (r === 0) {\n              var line = _this2.graphics.drawLine(p.x, p.y, 0, 0, Array.isArray(_this2.polygons.connectorColors) ? _this2.polygons.connectorColors[i] : _this2.polygons.connectorColors);\n\n              lines.push(line);\n            }\n\n            if (i === 0) {\n              _this2.yaxisLabelsTextsPos.push({\n                x: p.x,\n                y: p.y\n              });\n            }\n\n            string += p.x + ',' + p.y + ' ';\n          });\n          polygonStrings.push(string);\n        });\n        polygonStrings.forEach(function (p, i) {\n          var strokeColors = _this2.polygons.strokeColors;\n          var strokeWidth = _this2.polygons.strokeWidth;\n\n          var polygon = _this2.graphics.drawPolygon(p, Array.isArray(strokeColors) ? strokeColors[i] : strokeColors, Array.isArray(strokeWidth) ? strokeWidth[i] : strokeWidth, w.globals.radarPolygons.fill.colors[i]);\n\n          parent.add(polygon);\n        });\n        lines.forEach(function (l) {\n          parent.add(l);\n        });\n\n        if (w.config.yaxis[0].show) {\n          this.yaxisLabelsTextsPos.forEach(function (p, i) {\n            var yText = helpers.drawYAxisTexts(p.x, p.y, i, yaxisTexts[i]);\n\n            _this2.yaxisLabels.add(yText);\n          });\n        }\n      }\n    }, {\n      key: \"drawXAxisTexts\",\n      value: function drawXAxisTexts() {\n        var _this3 = this;\n\n        var w = this.w;\n        var xaxisLabelsConfig = w.config.xaxis.labels;\n        var elXAxisWrap = this.graphics.group({\n          class: 'apexcharts-xaxis'\n        });\n        var polygonPos = Utils$1.getPolygonPos(this.size, this.dataPointsLen);\n        w.globals.labels.forEach(function (label, i) {\n          var formatter = w.config.xaxis.labels.formatter;\n          var dataLabels = new DataLabels(_this3.ctx);\n\n          if (polygonPos[i]) {\n            var textPos = _this3.getTextPos(polygonPos[i], _this3.size);\n\n            var text = formatter(label, {\n              seriesIndex: -1,\n              dataPointIndex: i,\n              w: w\n            });\n            dataLabels.plotDataLabelsText({\n              x: textPos.newX,\n              y: textPos.newY,\n              text: text,\n              textAnchor: textPos.textAnchor,\n              i: i,\n              j: i,\n              parent: elXAxisWrap,\n              color: Array.isArray(xaxisLabelsConfig.style.colors) && xaxisLabelsConfig.style.colors[i] ? xaxisLabelsConfig.style.colors[i] : '#a8a8a8',\n              dataLabelsConfig: _objectSpread2({\n                textAnchor: textPos.textAnchor,\n                dropShadow: {\n                  enabled: false\n                }\n              }, xaxisLabelsConfig),\n              offsetCorrection: false\n            });\n          }\n        });\n        return elXAxisWrap;\n      }\n    }, {\n      key: \"createPaths\",\n      value: function createPaths(pos, origin) {\n        var _this4 = this;\n\n        var linePathsTo = [];\n        var linePathsFrom = [];\n        var areaPathsTo = [];\n        var areaPathsFrom = [];\n\n        if (pos.length) {\n          linePathsFrom = [this.graphics.move(origin.x, origin.y)];\n          areaPathsFrom = [this.graphics.move(origin.x, origin.y)];\n          var linePathTo = this.graphics.move(pos[0].x, pos[0].y);\n          var areaPathTo = this.graphics.move(pos[0].x, pos[0].y);\n          pos.forEach(function (p, i) {\n            linePathTo += _this4.graphics.line(p.x, p.y);\n            areaPathTo += _this4.graphics.line(p.x, p.y);\n\n            if (i === pos.length - 1) {\n              linePathTo += 'Z';\n              areaPathTo += 'Z';\n            }\n          });\n          linePathsTo.push(linePathTo);\n          areaPathsTo.push(areaPathTo);\n        }\n\n        return {\n          linePathsFrom: linePathsFrom,\n          linePathsTo: linePathsTo,\n          areaPathsFrom: areaPathsFrom,\n          areaPathsTo: areaPathsTo\n        };\n      }\n    }, {\n      key: \"getTextPos\",\n      value: function getTextPos(pos, polygonSize) {\n        var limit = 10;\n        var textAnchor = 'middle';\n        var newX = pos.x;\n        var newY = pos.y;\n\n        if (Math.abs(pos.x) >= limit) {\n          if (pos.x > 0) {\n            textAnchor = 'start';\n            newX += 10;\n          } else if (pos.x < 0) {\n            textAnchor = 'end';\n            newX -= 10;\n          }\n        } else {\n          textAnchor = 'middle';\n        }\n\n        if (Math.abs(pos.y) >= polygonSize - limit) {\n          if (pos.y < 0) {\n            newY -= 10;\n          } else if (pos.y > 0) {\n            newY += 10;\n          }\n        }\n\n        return {\n          textAnchor: textAnchor,\n          newX: newX,\n          newY: newY\n        };\n      }\n    }, {\n      key: \"getPreviousPath\",\n      value: function getPreviousPath(realIndex) {\n        var w = this.w;\n        var pathFrom = null;\n\n        for (var pp = 0; pp < w.globals.previousPaths.length; pp++) {\n          var gpp = w.globals.previousPaths[pp];\n\n          if (gpp.paths.length > 0 && parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)) {\n            if (typeof w.globals.previousPaths[pp].paths[0] !== 'undefined') {\n              pathFrom = w.globals.previousPaths[pp].paths[0].d;\n            }\n          }\n        }\n\n        return pathFrom;\n      }\n    }, {\n      key: \"getDataPointsPos\",\n      value: function getDataPointsPos(dataRadiusArr, angleArr) {\n        var dataPointsLen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.dataPointsLen;\n        dataRadiusArr = dataRadiusArr || [];\n        angleArr = angleArr || [];\n        var dataPointsPosArray = [];\n\n        for (var j = 0; j < dataPointsLen; j++) {\n          var curPointPos = {};\n          curPointPos.x = dataRadiusArr[j] * Math.sin(angleArr[j]);\n          curPointPos.y = -dataRadiusArr[j] * Math.cos(angleArr[j]);\n          dataPointsPosArray.push(curPointPos);\n        }\n\n        return dataPointsPosArray;\n      }\n    }]);\n\n    return Radar;\n  }();\n\n  /**\n   * ApexCharts Radial Class for drawing Circle / Semi Circle Charts.\n   * @module Radial\n   **/\n\n  var Radial = /*#__PURE__*/function (_Pie) {\n    _inherits(Radial, _Pie);\n\n    var _super = _createSuper(Radial);\n\n    function Radial(ctx) {\n      var _this;\n\n      _classCallCheck(this, Radial);\n\n      _this = _super.call(this, ctx);\n      _this.ctx = ctx;\n      _this.w = ctx.w;\n      _this.animBeginArr = [0];\n      _this.animDur = 0;\n      var w = _this.w;\n      _this.startAngle = w.config.plotOptions.radialBar.startAngle;\n      _this.endAngle = w.config.plotOptions.radialBar.endAngle;\n      _this.totalAngle = Math.abs(w.config.plotOptions.radialBar.endAngle - w.config.plotOptions.radialBar.startAngle);\n      _this.trackStartAngle = w.config.plotOptions.radialBar.track.startAngle;\n      _this.trackEndAngle = w.config.plotOptions.radialBar.track.endAngle;\n      _this.donutDataLabels = _this.w.config.plotOptions.radialBar.dataLabels;\n      _this.radialDataLabels = _this.donutDataLabels; // make a copy for easy reference\n\n      if (!_this.trackStartAngle) _this.trackStartAngle = _this.startAngle;\n      if (!_this.trackEndAngle) _this.trackEndAngle = _this.endAngle;\n      if (_this.endAngle === 360) _this.endAngle = 359.99;\n      _this.margin = parseInt(w.config.plotOptions.radialBar.track.margin, 10);\n      return _this;\n    }\n\n    _createClass(Radial, [{\n      key: \"draw\",\n      value: function draw(series) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var ret = graphics.group({\n          class: 'apexcharts-radialbar'\n        });\n        if (w.globals.noData) return ret;\n        var elSeries = graphics.group();\n        var centerY = this.defaultSize / 2;\n        var centerX = w.globals.gridWidth / 2;\n        var size = this.defaultSize / 2.05;\n\n        if (!w.config.chart.sparkline.enabled) {\n          size = size - w.config.stroke.width - w.config.chart.dropShadow.blur;\n        }\n\n        var colorArr = w.globals.fill.colors;\n\n        if (w.config.plotOptions.radialBar.track.show) {\n          var elTracks = this.drawTracks({\n            size: size,\n            centerX: centerX,\n            centerY: centerY,\n            colorArr: colorArr,\n            series: series\n          });\n          elSeries.add(elTracks);\n        }\n\n        var elG = this.drawArcs({\n          size: size,\n          centerX: centerX,\n          centerY: centerY,\n          colorArr: colorArr,\n          series: series\n        });\n        var totalAngle = 360;\n\n        if (w.config.plotOptions.radialBar.startAngle < 0) {\n          totalAngle = this.totalAngle;\n        }\n\n        var angleRatio = (360 - totalAngle) / 360;\n        w.globals.radialSize = size - size * angleRatio;\n\n        if (this.radialDataLabels.value.show) {\n          var offset = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);\n          w.globals.radialSize += offset * angleRatio;\n        }\n\n        elSeries.add(elG.g);\n\n        if (w.config.plotOptions.radialBar.hollow.position === 'front') {\n          elG.g.add(elG.elHollow);\n\n          if (elG.dataLabels) {\n            elG.g.add(elG.dataLabels);\n          }\n        }\n\n        ret.add(elSeries);\n        return ret;\n      }\n    }, {\n      key: \"drawTracks\",\n      value: function drawTracks(opts) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var g = graphics.group({\n          class: 'apexcharts-tracks'\n        });\n        var filters = new Filters(this.ctx);\n        var fill = new Fill(this.ctx);\n        var strokeWidth = this.getStrokeWidth(opts);\n        opts.size = opts.size - strokeWidth / 2;\n\n        for (var i = 0; i < opts.series.length; i++) {\n          var elRadialBarTrack = graphics.group({\n            class: 'apexcharts-radialbar-track apexcharts-track'\n          });\n          g.add(elRadialBarTrack);\n          elRadialBarTrack.attr({\n            rel: i + 1\n          });\n          opts.size = opts.size - strokeWidth - this.margin;\n          var trackConfig = w.config.plotOptions.radialBar.track;\n          var pathFill = fill.fillPath({\n            seriesNumber: 0,\n            size: opts.size,\n            fillColors: Array.isArray(trackConfig.background) ? trackConfig.background[i] : trackConfig.background,\n            solid: true\n          });\n          var startAngle = this.trackStartAngle;\n          var endAngle = this.trackEndAngle;\n          if (Math.abs(endAngle) + Math.abs(startAngle) >= 360) endAngle = 360 - Math.abs(this.startAngle) - 0.1;\n          var elPath = graphics.drawPath({\n            d: '',\n            stroke: pathFill,\n            strokeWidth: strokeWidth * parseInt(trackConfig.strokeWidth, 10) / 100,\n            fill: 'none',\n            strokeOpacity: trackConfig.opacity,\n            classes: 'apexcharts-radialbar-area'\n          });\n\n          if (trackConfig.dropShadow.enabled) {\n            var shadow = trackConfig.dropShadow;\n            filters.dropShadow(elPath, shadow);\n          }\n\n          elRadialBarTrack.add(elPath);\n          elPath.attr('id', 'apexcharts-radialbarTrack-' + i);\n          this.animatePaths(elPath, {\n            centerX: opts.centerX,\n            centerY: opts.centerY,\n            endAngle: endAngle,\n            startAngle: startAngle,\n            size: opts.size,\n            i: i,\n            totalItems: 2,\n            animBeginArr: 0,\n            dur: 0,\n            isTrack: true,\n            easing: w.globals.easing\n          });\n        }\n\n        return g;\n      }\n    }, {\n      key: \"drawArcs\",\n      value: function drawArcs(opts) {\n        var w = this.w; // size, donutSize, centerX, centerY, colorArr, lineColorArr, sectorAngleArr, series\n\n        var graphics = new Graphics(this.ctx);\n        var fill = new Fill(this.ctx);\n        var filters = new Filters(this.ctx);\n        var g = graphics.group();\n        var strokeWidth = this.getStrokeWidth(opts);\n        opts.size = opts.size - strokeWidth / 2;\n        var hollowFillID = w.config.plotOptions.radialBar.hollow.background;\n        var hollowSize = opts.size - strokeWidth * opts.series.length - this.margin * opts.series.length - strokeWidth * parseInt(w.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2;\n        var hollowRadius = hollowSize - w.config.plotOptions.radialBar.hollow.margin;\n\n        if (w.config.plotOptions.radialBar.hollow.image !== undefined) {\n          hollowFillID = this.drawHollowImage(opts, g, hollowSize, hollowFillID);\n        }\n\n        var elHollow = this.drawHollow({\n          size: hollowRadius,\n          centerX: opts.centerX,\n          centerY: opts.centerY,\n          fill: hollowFillID ? hollowFillID : 'transparent'\n        });\n\n        if (w.config.plotOptions.radialBar.hollow.dropShadow.enabled) {\n          var shadow = w.config.plotOptions.radialBar.hollow.dropShadow;\n          filters.dropShadow(elHollow, shadow);\n        }\n\n        var shown = 1;\n\n        if (!this.radialDataLabels.total.show && w.globals.series.length > 1) {\n          shown = 0;\n        }\n\n        var dataLabels = null;\n\n        if (this.radialDataLabels.show) {\n          dataLabels = this.renderInnerDataLabels(this.radialDataLabels, {\n            hollowSize: hollowSize,\n            centerX: opts.centerX,\n            centerY: opts.centerY,\n            opacity: shown\n          });\n        }\n\n        if (w.config.plotOptions.radialBar.hollow.position === 'back') {\n          g.add(elHollow);\n\n          if (dataLabels) {\n            g.add(dataLabels);\n          }\n        }\n\n        var reverseLoop = false;\n\n        if (w.config.plotOptions.radialBar.inverseOrder) {\n          reverseLoop = true;\n        }\n\n        for (var i = reverseLoop ? opts.series.length - 1 : 0; reverseLoop ? i >= 0 : i < opts.series.length; reverseLoop ? i-- : i++) {\n          var elRadialBarArc = graphics.group({\n            class: \"apexcharts-series apexcharts-radial-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[i])\n          });\n          g.add(elRadialBarArc);\n          elRadialBarArc.attr({\n            rel: i + 1,\n            'data:realIndex': i\n          });\n          this.ctx.series.addCollapsedClassToSeries(elRadialBarArc, i);\n          opts.size = opts.size - strokeWidth - this.margin;\n          var pathFill = fill.fillPath({\n            seriesNumber: i,\n            size: opts.size,\n            value: opts.series[i]\n          });\n          var startAngle = this.startAngle;\n          var prevStartAngle = void 0; // if data exceeds 100, make it 100\n\n          var dataValue = Utils$1.negToZero(opts.series[i] > 100 ? 100 : opts.series[i]) / 100;\n          var endAngle = Math.round(this.totalAngle * dataValue) + this.startAngle;\n          var prevEndAngle = void 0;\n\n          if (w.globals.dataChanged) {\n            prevStartAngle = this.startAngle;\n            prevEndAngle = Math.round(this.totalAngle * Utils$1.negToZero(w.globals.previousPaths[i]) / 100) + prevStartAngle;\n          }\n\n          var currFullAngle = Math.abs(endAngle) + Math.abs(startAngle);\n\n          if (currFullAngle >= 360) {\n            endAngle = endAngle - 0.01;\n          }\n\n          var prevFullAngle = Math.abs(prevEndAngle) + Math.abs(prevStartAngle);\n\n          if (prevFullAngle >= 360) {\n            prevEndAngle = prevEndAngle - 0.01;\n          }\n\n          var angle = endAngle - startAngle;\n          var dashArray = Array.isArray(w.config.stroke.dashArray) ? w.config.stroke.dashArray[i] : w.config.stroke.dashArray;\n          var elPath = graphics.drawPath({\n            d: '',\n            stroke: pathFill,\n            strokeWidth: strokeWidth,\n            fill: 'none',\n            fillOpacity: w.config.fill.opacity,\n            classes: 'apexcharts-radialbar-area apexcharts-radialbar-slice-' + i,\n            strokeDashArray: dashArray\n          });\n          Graphics.setAttrs(elPath.node, {\n            'data:angle': angle,\n            'data:value': opts.series[i]\n          });\n\n          if (w.config.chart.dropShadow.enabled) {\n            var _shadow = w.config.chart.dropShadow;\n            filters.dropShadow(elPath, _shadow, i);\n          }\n\n          filters.setSelectionFilter(elPath, 0, i);\n          this.addListeners(elPath, this.radialDataLabels);\n          elRadialBarArc.add(elPath);\n          elPath.attr({\n            index: 0,\n            j: i\n          });\n          var dur = 0;\n\n          if (this.initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n            dur = (endAngle - startAngle) / 360 * w.config.chart.animations.speed;\n            this.animDur = dur / (opts.series.length * 1.2) + this.animDur;\n            this.animBeginArr.push(this.animDur);\n          }\n\n          if (w.globals.dataChanged) {\n            dur = (endAngle - startAngle) / 360 * w.config.chart.animations.dynamicAnimation.speed;\n            this.animDur = dur / (opts.series.length * 1.2) + this.animDur;\n            this.animBeginArr.push(this.animDur);\n          }\n\n          this.animatePaths(elPath, {\n            centerX: opts.centerX,\n            centerY: opts.centerY,\n            endAngle: endAngle,\n            startAngle: startAngle,\n            prevEndAngle: prevEndAngle,\n            prevStartAngle: prevStartAngle,\n            size: opts.size,\n            i: i,\n            totalItems: 2,\n            animBeginArr: this.animBeginArr,\n            dur: dur,\n            shouldSetPrevPaths: true,\n            easing: w.globals.easing\n          });\n        }\n\n        return {\n          g: g,\n          elHollow: elHollow,\n          dataLabels: dataLabels\n        };\n      }\n    }, {\n      key: \"drawHollow\",\n      value: function drawHollow(opts) {\n        var graphics = new Graphics(this.ctx);\n        var circle = graphics.drawCircle(opts.size * 2);\n        circle.attr({\n          class: 'apexcharts-radialbar-hollow',\n          cx: opts.centerX,\n          cy: opts.centerY,\n          r: opts.size,\n          fill: opts.fill\n        });\n        return circle;\n      }\n    }, {\n      key: \"drawHollowImage\",\n      value: function drawHollowImage(opts, g, hollowSize, hollowFillID) {\n        var w = this.w;\n        var fill = new Fill(this.ctx);\n        var randID = Utils$1.randomId();\n        var hollowFillImg = w.config.plotOptions.radialBar.hollow.image;\n\n        if (w.config.plotOptions.radialBar.hollow.imageClipped) {\n          fill.clippedImgArea({\n            width: hollowSize,\n            height: hollowSize,\n            image: hollowFillImg,\n            patternID: \"pattern\".concat(w.globals.cuid).concat(randID)\n          });\n          hollowFillID = \"url(#pattern\".concat(w.globals.cuid).concat(randID, \")\");\n        } else {\n          var imgWidth = w.config.plotOptions.radialBar.hollow.imageWidth;\n          var imgHeight = w.config.plotOptions.radialBar.hollow.imageHeight;\n\n          if (imgWidth === undefined && imgHeight === undefined) {\n            var image = w.globals.dom.Paper.image(hollowFillImg).loaded(function (loader) {\n              this.move(opts.centerX - loader.width / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetX, opts.centerY - loader.height / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetY);\n            });\n            g.add(image);\n          } else {\n            var _image = w.globals.dom.Paper.image(hollowFillImg).loaded(function (loader) {\n              this.move(opts.centerX - imgWidth / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetX, opts.centerY - imgHeight / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetY);\n              this.size(imgWidth, imgHeight);\n            });\n\n            g.add(_image);\n          }\n        }\n\n        return hollowFillID;\n      }\n    }, {\n      key: \"getStrokeWidth\",\n      value: function getStrokeWidth(opts) {\n        var w = this.w;\n        return opts.size * (100 - parseInt(w.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (opts.series.length + 1) - this.margin;\n      }\n    }]);\n\n    return Radial;\n  }(Pie);\n\n  var Helpers = /*#__PURE__*/function () {\n    function Helpers(lineCtx) {\n      _classCallCheck(this, Helpers);\n\n      this.w = lineCtx.w;\n      this.lineCtx = lineCtx;\n    }\n\n    _createClass(Helpers, [{\n      key: \"sameValueSeriesFix\",\n      value: function sameValueSeriesFix(i, series) {\n        var w = this.w;\n\n        if (w.config.chart.type === 'line' && (w.config.fill.type === 'gradient' || w.config.fill.type[i] === 'gradient')) {\n          var coreUtils = new CoreUtils(this.lineCtx.ctx, w); // a small adjustment to allow gradient line to draw correctly for all same values\n\n          /* #fix https://github.com/apexcharts/apexcharts.js/issues/358 */\n\n          if (coreUtils.seriesHaveSameValues(i)) {\n            var gSeries = series[i].slice();\n            gSeries[gSeries.length - 1] = gSeries[gSeries.length - 1] + 0.000001;\n            series[i] = gSeries;\n          }\n        }\n\n        return series;\n      }\n    }, {\n      key: \"calculatePoints\",\n      value: function calculatePoints(_ref) {\n        var series = _ref.series,\n            realIndex = _ref.realIndex,\n            x = _ref.x,\n            y = _ref.y,\n            i = _ref.i,\n            j = _ref.j,\n            prevY = _ref.prevY;\n        var w = this.w;\n        var ptX = [];\n        var ptY = [];\n\n        if (j === 0) {\n          var xPT1st = this.lineCtx.categoryAxisCorrection + w.config.markers.offsetX; // the first point for line series\n          // we need to check whether it's not a time series, because a time series may\n          // start from the middle of the x axis\n\n          if (w.globals.isXNumeric) {\n            xPT1st = (w.globals.seriesX[realIndex][0] - w.globals.minX) / this.lineCtx.xRatio + w.config.markers.offsetX;\n          } // push 2 points for the first data values\n\n\n          ptX.push(xPT1st);\n          ptY.push(Utils$1.isNumber(series[i][0]) ? prevY + w.config.markers.offsetY : null);\n          ptX.push(x + w.config.markers.offsetX);\n          ptY.push(Utils$1.isNumber(series[i][j + 1]) ? y + w.config.markers.offsetY : null);\n        } else {\n          ptX.push(x + w.config.markers.offsetX);\n          ptY.push(Utils$1.isNumber(series[i][j + 1]) ? y + w.config.markers.offsetY : null);\n        }\n\n        var pointsPos = {\n          x: ptX,\n          y: ptY\n        };\n        return pointsPos;\n      }\n    }, {\n      key: \"checkPreviousPaths\",\n      value: function checkPreviousPaths(_ref2) {\n        var pathFromLine = _ref2.pathFromLine,\n            pathFromArea = _ref2.pathFromArea,\n            realIndex = _ref2.realIndex;\n        var w = this.w;\n\n        for (var pp = 0; pp < w.globals.previousPaths.length; pp++) {\n          var gpp = w.globals.previousPaths[pp];\n\n          if ((gpp.type === 'line' || gpp.type === 'area') && gpp.paths.length > 0 && parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)) {\n            if (gpp.type === 'line') {\n              this.lineCtx.appendPathFrom = false;\n              pathFromLine = w.globals.previousPaths[pp].paths[0].d;\n            } else if (gpp.type === 'area') {\n              this.lineCtx.appendPathFrom = false;\n              pathFromArea = w.globals.previousPaths[pp].paths[0].d;\n\n              if (w.config.stroke.show && w.globals.previousPaths[pp].paths[1]) {\n                pathFromLine = w.globals.previousPaths[pp].paths[1].d;\n              }\n            }\n          }\n        }\n\n        return {\n          pathFromLine: pathFromLine,\n          pathFromArea: pathFromArea\n        };\n      }\n    }, {\n      key: \"determineFirstPrevY\",\n      value: function determineFirstPrevY(_ref3) {\n        var i = _ref3.i,\n            series = _ref3.series,\n            prevY = _ref3.prevY,\n            lineYPosition = _ref3.lineYPosition;\n        var w = this.w;\n\n        if (typeof series[i][0] !== 'undefined') {\n          if (w.config.chart.stacked) {\n            if (i > 0) {\n              // 1st y value of previous series\n              lineYPosition = this.lineCtx.prevSeriesY[i - 1][0];\n            } else {\n              // the first series will not have prevY values\n              lineYPosition = this.lineCtx.zeroY;\n            }\n          } else {\n            lineYPosition = this.lineCtx.zeroY;\n          }\n\n          prevY = lineYPosition - series[i][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + (this.lineCtx.isReversed ? series[i][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0) * 2;\n        } else {\n          // the first value in the current series is null\n          if (w.config.chart.stacked && i > 0 && typeof series[i][0] === 'undefined') {\n            // check for undefined value (undefined value will occur when we clear the series while user clicks on legend to hide serieses)\n            for (var s = i - 1; s >= 0; s--) {\n              // for loop to get to 1st previous value until we get it\n              if (series[s][0] !== null && typeof series[s][0] !== 'undefined') {\n                lineYPosition = this.lineCtx.prevSeriesY[s][0];\n                prevY = lineYPosition;\n                break;\n              }\n            }\n          }\n        }\n\n        return {\n          prevY: prevY,\n          lineYPosition: lineYPosition\n        };\n      }\n    }]);\n\n    return Helpers;\n  }();\n\n  /**\n   * ApexCharts Line Class responsible for drawing Line / Area Charts.\n   * This class is also responsible for generating values for Bubble/Scatter charts, so need to rename it to Axis Charts to avoid confusions\n   * @module Line\n   **/\n\n  var Line = /*#__PURE__*/function () {\n    function Line(ctx, xyRatios, isPointsChart) {\n      _classCallCheck(this, Line);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.xyRatios = xyRatios;\n      this.pointsChart = !(this.w.config.chart.type !== 'bubble' && this.w.config.chart.type !== 'scatter') || isPointsChart;\n      this.scatter = new Scatter(this.ctx);\n      this.noNegatives = this.w.globals.minX === Number.MAX_VALUE;\n      this.lineHelpers = new Helpers(this);\n      this.markers = new Markers(this.ctx);\n      this.prevSeriesY = [];\n      this.categoryAxisCorrection = 0;\n      this.yaxisIndex = 0;\n    }\n\n    _createClass(Line, [{\n      key: \"draw\",\n      value: function draw(series, ptype, seriesIndex) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var type = w.globals.comboCharts ? ptype : w.config.chart.type;\n        var ret = graphics.group({\n          class: \"apexcharts-\".concat(type, \"-series apexcharts-plot-series\")\n        });\n        var coreUtils = new CoreUtils(this.ctx, w);\n        this.yRatio = this.xyRatios.yRatio;\n        this.zRatio = this.xyRatios.zRatio;\n        this.xRatio = this.xyRatios.xRatio;\n        this.baseLineY = this.xyRatios.baseLineY;\n        series = coreUtils.getLogSeries(series);\n        this.yRatio = coreUtils.getLogYRatios(this.yRatio); // push all series in an array, so we can draw in reverse order (for stacked charts)\n\n        var allSeries = [];\n\n        for (var i = 0; i < series.length; i++) {\n          series = this.lineHelpers.sameValueSeriesFix(i, series);\n          var realIndex = w.globals.comboCharts ? seriesIndex[i] : i;\n\n          this._initSerieVariables(series, i, realIndex);\n\n          var yArrj = []; // hold y values of current iterating series\n\n          var xArrj = []; // hold x values of current iterating series\n\n          var x = w.globals.padHorizontal + this.categoryAxisCorrection;\n          var y = 1;\n          var linePaths = [];\n          var areaPaths = [];\n          this.ctx.series.addCollapsedClassToSeries(this.elSeries, realIndex);\n\n          if (w.globals.isXNumeric && w.globals.seriesX.length > 0) {\n            x = (w.globals.seriesX[realIndex][0] - w.globals.minX) / this.xRatio;\n          }\n\n          xArrj.push(x);\n          var pX = x;\n          var pY = void 0;\n          var prevX = pX;\n          var prevY = this.zeroY;\n          var lineYPosition = 0; // the first value in the current series is not null or undefined\n\n          var firstPrevY = this.lineHelpers.determineFirstPrevY({\n            i: i,\n            series: series,\n            prevY: prevY,\n            lineYPosition: lineYPosition\n          });\n          prevY = firstPrevY.prevY;\n          yArrj.push(prevY);\n          pY = prevY;\n\n          var pathsFrom = this._calculatePathsFrom({\n            series: series,\n            i: i,\n            realIndex: realIndex,\n            prevX: prevX,\n            prevY: prevY\n          });\n\n          var paths = this._iterateOverDataPoints({\n            series: series,\n            realIndex: realIndex,\n            i: i,\n            x: x,\n            y: y,\n            pX: pX,\n            pY: pY,\n            pathsFrom: pathsFrom,\n            linePaths: linePaths,\n            areaPaths: areaPaths,\n            seriesIndex: seriesIndex,\n            lineYPosition: lineYPosition,\n            xArrj: xArrj,\n            yArrj: yArrj\n          });\n\n          this._handlePaths({\n            type: type,\n            realIndex: realIndex,\n            i: i,\n            paths: paths\n          });\n\n          this.elSeries.add(this.elPointsMain);\n          this.elSeries.add(this.elDataLabelsWrap);\n          allSeries.push(this.elSeries);\n        }\n\n        if (w.config.chart.stacked) {\n          for (var s = allSeries.length; s > 0; s--) {\n            ret.add(allSeries[s - 1]);\n          }\n        } else {\n          for (var _s = 0; _s < allSeries.length; _s++) {\n            ret.add(allSeries[_s]);\n          }\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"_initSerieVariables\",\n      value: function _initSerieVariables(series, i, realIndex) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx); // width divided into equal parts\n\n        this.xDivision = w.globals.gridWidth / (w.globals.dataPoints - (w.config.xaxis.tickPlacement === 'on' ? 1 : 0));\n        this.strokeWidth = Array.isArray(w.config.stroke.width) ? w.config.stroke.width[realIndex] : w.config.stroke.width;\n\n        if (this.yRatio.length > 1) {\n          this.yaxisIndex = realIndex;\n        }\n\n        this.isReversed = w.config.yaxis[this.yaxisIndex] && w.config.yaxis[this.yaxisIndex].reversed; // zeroY is the 0 value in y series which can be used in negative charts\n\n        this.zeroY = w.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? w.globals.gridHeight : 0) + (this.isReversed ? this.baseLineY[this.yaxisIndex] * 2 : 0);\n        this.areaBottomY = this.zeroY;\n\n        if (this.zeroY > w.globals.gridHeight || w.config.plotOptions.area.fillTo === 'end') {\n          this.areaBottomY = w.globals.gridHeight;\n        }\n\n        this.categoryAxisCorrection = this.xDivision / 2; // el to which series will be drawn\n\n        this.elSeries = graphics.group({\n          class: \"apexcharts-series\",\n          seriesName: Utils$1.escapeString(w.globals.seriesNames[realIndex])\n        }); // points\n\n        this.elPointsMain = graphics.group({\n          class: 'apexcharts-series-markers-wrap',\n          'data:realIndex': realIndex\n        }); // eldatalabels\n\n        this.elDataLabelsWrap = graphics.group({\n          class: 'apexcharts-datalabels',\n          'data:realIndex': realIndex\n        });\n        var longestSeries = series[i].length === w.globals.dataPoints;\n        this.elSeries.attr({\n          'data:longestSeries': longestSeries,\n          rel: i + 1,\n          'data:realIndex': realIndex\n        });\n        this.appendPathFrom = true;\n      }\n    }, {\n      key: \"_calculatePathsFrom\",\n      value: function _calculatePathsFrom(_ref) {\n        var series = _ref.series,\n            i = _ref.i,\n            realIndex = _ref.realIndex,\n            prevX = _ref.prevX,\n            prevY = _ref.prevY;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var linePath, areaPath, pathFromLine, pathFromArea;\n\n        if (series[i][0] === null) {\n          // when the first value itself is null, we need to move the pointer to a location where a null value is not found\n          for (var s = 0; s < series[i].length; s++) {\n            if (series[i][s] !== null) {\n              prevX = this.xDivision * s;\n              prevY = this.zeroY - series[i][s] / this.yRatio[this.yaxisIndex];\n              linePath = graphics.move(prevX, prevY);\n              areaPath = graphics.move(prevX, this.areaBottomY);\n              break;\n            }\n          }\n        } else {\n          linePath = graphics.move(prevX, prevY);\n          areaPath = graphics.move(prevX, this.areaBottomY) + graphics.line(prevX, prevY);\n        }\n\n        pathFromLine = graphics.move(-1, this.zeroY) + graphics.line(-1, this.zeroY);\n        pathFromArea = graphics.move(-1, this.zeroY) + graphics.line(-1, this.zeroY);\n\n        if (w.globals.previousPaths.length > 0) {\n          var pathFrom = this.lineHelpers.checkPreviousPaths({\n            pathFromLine: pathFromLine,\n            pathFromArea: pathFromArea,\n            realIndex: realIndex\n          });\n          pathFromLine = pathFrom.pathFromLine;\n          pathFromArea = pathFrom.pathFromArea;\n        }\n\n        return {\n          prevX: prevX,\n          prevY: prevY,\n          linePath: linePath,\n          areaPath: areaPath,\n          pathFromLine: pathFromLine,\n          pathFromArea: pathFromArea\n        };\n      }\n    }, {\n      key: \"_handlePaths\",\n      value: function _handlePaths(_ref2) {\n        var type = _ref2.type,\n            realIndex = _ref2.realIndex,\n            i = _ref2.i,\n            paths = _ref2.paths;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var fill = new Fill(this.ctx); // push all current y values array to main PrevY Array\n\n        this.prevSeriesY.push(paths.yArrj); // push all x val arrays into main xArr\n\n        w.globals.seriesXvalues[realIndex] = paths.xArrj;\n        w.globals.seriesYvalues[realIndex] = paths.yArrj;\n        var forecast = w.config.forecastDataPoints;\n\n        if (forecast.count > 0) {\n          var forecastCutoff = w.globals.seriesXvalues[realIndex][w.globals.seriesXvalues[realIndex].length - forecast.count - 1];\n          var elForecastMask = graphics.drawRect(forecastCutoff, 0, w.globals.gridWidth, w.globals.gridHeight, 0);\n          w.globals.dom.elForecastMask.appendChild(elForecastMask.node);\n          var elNonForecastMask = graphics.drawRect(0, 0, forecastCutoff, w.globals.gridHeight, 0);\n          w.globals.dom.elNonForecastMask.appendChild(elNonForecastMask.node);\n        } // these elements will be shown after area path animation completes\n\n\n        if (!this.pointsChart) {\n          w.globals.delayedElements.push({\n            el: this.elPointsMain.node,\n            index: realIndex\n          });\n        }\n\n        var defaultRenderedPathOptions = {\n          i: i,\n          realIndex: realIndex,\n          animationDelay: i,\n          initialSpeed: w.config.chart.animations.speed,\n          dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n          className: \"apexcharts-\".concat(type)\n        };\n\n        if (type === 'area') {\n          var pathFill = fill.fillPath({\n            seriesNumber: realIndex\n          });\n\n          for (var p = 0; p < paths.areaPaths.length; p++) {\n            var renderedPath = graphics.renderPaths(_objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n              pathFrom: paths.pathFromArea,\n              pathTo: paths.areaPaths[p],\n              stroke: 'none',\n              strokeWidth: 0,\n              strokeLineCap: null,\n              fill: pathFill\n            }));\n            this.elSeries.add(renderedPath);\n          }\n        }\n\n        if (w.config.stroke.show && !this.pointsChart) {\n          var lineFill = null;\n\n          if (type === 'line') {\n            // fillable lines only for lineChart\n            lineFill = fill.fillPath({\n              seriesNumber: realIndex,\n              i: i\n            });\n          } else {\n            lineFill = w.globals.stroke.colors[realIndex];\n          }\n\n          for (var _p = 0; _p < paths.linePaths.length; _p++) {\n            var linePathCommonOpts = _objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n              pathFrom: paths.pathFromLine,\n              pathTo: paths.linePaths[_p],\n              stroke: lineFill,\n              strokeWidth: this.strokeWidth,\n              strokeLineCap: w.config.stroke.lineCap,\n              fill: 'none'\n            });\n\n            var _renderedPath = graphics.renderPaths(linePathCommonOpts);\n\n            this.elSeries.add(_renderedPath);\n\n            if (forecast.count > 0) {\n              var renderedForecastPath = graphics.renderPaths(linePathCommonOpts);\n              renderedForecastPath.node.setAttribute('stroke-dasharray', forecast.dashArray);\n\n              if (forecast.strokeWidth) {\n                renderedForecastPath.node.setAttribute('stroke-width', forecast.strokeWidth);\n              }\n\n              this.elSeries.add(renderedForecastPath);\n              renderedForecastPath.attr('clip-path', \"url(#forecastMask\".concat(w.globals.cuid, \")\"));\n\n              _renderedPath.attr('clip-path', \"url(#nonForecastMask\".concat(w.globals.cuid, \")\"));\n            }\n          }\n        }\n      }\n    }, {\n      key: \"_iterateOverDataPoints\",\n      value: function _iterateOverDataPoints(_ref3) {\n        var series = _ref3.series,\n            realIndex = _ref3.realIndex,\n            i = _ref3.i,\n            x = _ref3.x,\n            y = _ref3.y,\n            pX = _ref3.pX,\n            pY = _ref3.pY,\n            pathsFrom = _ref3.pathsFrom,\n            linePaths = _ref3.linePaths,\n            areaPaths = _ref3.areaPaths,\n            seriesIndex = _ref3.seriesIndex,\n            lineYPosition = _ref3.lineYPosition,\n            xArrj = _ref3.xArrj,\n            yArrj = _ref3.yArrj;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var yRatio = this.yRatio;\n        var prevY = pathsFrom.prevY,\n            linePath = pathsFrom.linePath,\n            areaPath = pathsFrom.areaPath,\n            pathFromLine = pathsFrom.pathFromLine,\n            pathFromArea = pathsFrom.pathFromArea;\n        var minY = Utils$1.isNumber(w.globals.minYArr[realIndex]) ? w.globals.minYArr[realIndex] : w.globals.minY;\n        var iterations = w.globals.dataPoints > 1 ? w.globals.dataPoints - 1 : w.globals.dataPoints;\n\n        for (var j = 0; j < iterations; j++) {\n          var isNull = typeof series[i][j + 1] === 'undefined' || series[i][j + 1] === null;\n\n          if (w.globals.isXNumeric) {\n            var sX = w.globals.seriesX[realIndex][j + 1];\n\n            if (typeof w.globals.seriesX[realIndex][j + 1] === 'undefined') {\n              /* fix #374 */\n              sX = w.globals.seriesX[realIndex][iterations - 1];\n            }\n\n            x = (sX - w.globals.minX) / this.xRatio;\n          } else {\n            x = x + this.xDivision;\n          }\n\n          if (w.config.chart.stacked) {\n            if (i > 0 && w.globals.collapsedSeries.length < w.config.series.length - 1) {\n              // a collapsed series in a stacked bar chart may provide wrong result for the next series, hence find the prevIndex of prev series which is not collapsed - fixes apexcharts.js#1372\n              var prevIndex = function prevIndex(pi) {\n                var pii = pi;\n\n                for (var cpi = 0; cpi < w.globals.series.length; cpi++) {\n                  if (w.globals.collapsedSeriesIndices.indexOf(pi) > -1) {\n                    pii--;\n                    break;\n                  }\n                }\n\n                return pii >= 0 ? pii : 0;\n              };\n\n              lineYPosition = this.prevSeriesY[prevIndex(i - 1)][j + 1];\n            } else {\n              // the first series will not have prevY values\n              lineYPosition = this.zeroY;\n            }\n          } else {\n            lineYPosition = this.zeroY;\n          }\n\n          if (isNull) {\n            y = lineYPosition - minY / yRatio[this.yaxisIndex] + (this.isReversed ? minY / yRatio[this.yaxisIndex] : 0) * 2;\n          } else {\n            y = lineYPosition - series[i][j + 1] / yRatio[this.yaxisIndex] + (this.isReversed ? series[i][j + 1] / yRatio[this.yaxisIndex] : 0) * 2;\n          } // push current X\n\n\n          xArrj.push(x); // push current Y that will be used as next series's bottom position\n\n          yArrj.push(y);\n          var pointsPos = this.lineHelpers.calculatePoints({\n            series: series,\n            x: x,\n            y: y,\n            realIndex: realIndex,\n            i: i,\n            j: j,\n            prevY: prevY\n          });\n\n          var calculatedPaths = this._createPaths({\n            series: series,\n            i: i,\n            realIndex: realIndex,\n            j: j,\n            x: x,\n            y: y,\n            pX: pX,\n            pY: pY,\n            linePath: linePath,\n            areaPath: areaPath,\n            linePaths: linePaths,\n            areaPaths: areaPaths,\n            seriesIndex: seriesIndex\n          });\n\n          areaPaths = calculatedPaths.areaPaths;\n          linePaths = calculatedPaths.linePaths;\n          pX = calculatedPaths.pX;\n          pY = calculatedPaths.pY;\n          areaPath = calculatedPaths.areaPath;\n          linePath = calculatedPaths.linePath;\n\n          if (this.appendPathFrom) {\n            pathFromLine = pathFromLine + graphics.line(x, this.zeroY);\n            pathFromArea = pathFromArea + graphics.line(x, this.zeroY);\n          }\n\n          this.handleNullDataPoints(series, pointsPos, i, j, realIndex);\n\n          this._handleMarkersAndLabels({\n            pointsPos: pointsPos,\n            series: series,\n            x: x,\n            y: y,\n            prevY: prevY,\n            i: i,\n            j: j,\n            realIndex: realIndex\n          });\n        }\n\n        return {\n          yArrj: yArrj,\n          xArrj: xArrj,\n          pathFromArea: pathFromArea,\n          areaPaths: areaPaths,\n          pathFromLine: pathFromLine,\n          linePaths: linePaths\n        };\n      }\n    }, {\n      key: \"_handleMarkersAndLabels\",\n      value: function _handleMarkersAndLabels(_ref4) {\n        var pointsPos = _ref4.pointsPos;\n            _ref4.series;\n            _ref4.x;\n            _ref4.y;\n            _ref4.prevY;\n            var i = _ref4.i,\n            j = _ref4.j,\n            realIndex = _ref4.realIndex;\n        var w = this.w;\n        var dataLabels = new DataLabels(this.ctx);\n\n        if (!this.pointsChart) {\n          if (w.globals.series[i].length > 1) {\n            this.elPointsMain.node.classList.add('apexcharts-element-hidden');\n          }\n\n          var elPointsWrap = this.markers.plotChartMarkers(pointsPos, realIndex, j + 1);\n\n          if (elPointsWrap !== null) {\n            this.elPointsMain.add(elPointsWrap);\n          }\n        } else {\n          // scatter / bubble chart points creation\n          this.scatter.draw(this.elSeries, j, {\n            realIndex: realIndex,\n            pointsPos: pointsPos,\n            zRatio: this.zRatio,\n            elParent: this.elPointsMain\n          });\n        }\n\n        var drawnLabels = dataLabels.drawDataLabel(pointsPos, realIndex, j + 1, null);\n\n        if (drawnLabels !== null) {\n          this.elDataLabelsWrap.add(drawnLabels);\n        }\n      }\n    }, {\n      key: \"_createPaths\",\n      value: function _createPaths(_ref5) {\n        var series = _ref5.series,\n            i = _ref5.i,\n            realIndex = _ref5.realIndex,\n            j = _ref5.j,\n            x = _ref5.x,\n            y = _ref5.y,\n            pX = _ref5.pX,\n            pY = _ref5.pY,\n            linePath = _ref5.linePath,\n            areaPath = _ref5.areaPath,\n            linePaths = _ref5.linePaths,\n            areaPaths = _ref5.areaPaths,\n            seriesIndex = _ref5.seriesIndex;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var curve = w.config.stroke.curve;\n        var areaBottomY = this.areaBottomY;\n\n        if (Array.isArray(w.config.stroke.curve)) {\n          if (Array.isArray(seriesIndex)) {\n            curve = w.config.stroke.curve[seriesIndex[i]];\n          } else {\n            curve = w.config.stroke.curve[i];\n          }\n        } // logic of smooth curve derived from chartist\n        // CREDITS: https://gionkunz.github.io/chartist-js/\n\n\n        if (curve === 'smooth') {\n          var length = (x - pX) * 0.35;\n\n          if (w.globals.hasNullValues) {\n            if (series[i][j] !== null) {\n              if (series[i][j + 1] !== null) {\n                linePath = graphics.move(pX, pY) + graphics.curve(pX + length, pY, x - length, y, x + 1, y);\n                areaPath = graphics.move(pX + 1, pY) + graphics.curve(pX + length, pY, x - length, y, x + 1, y) + graphics.line(x, areaBottomY) + graphics.line(pX, areaBottomY) + 'z';\n              } else {\n                linePath = graphics.move(pX, pY);\n                areaPath = graphics.move(pX, pY) + 'z';\n              }\n            }\n\n            linePaths.push(linePath);\n            areaPaths.push(areaPath);\n          } else {\n            linePath = linePath + graphics.curve(pX + length, pY, x - length, y, x, y);\n            areaPath = areaPath + graphics.curve(pX + length, pY, x - length, y, x, y);\n          }\n\n          pX = x;\n          pY = y;\n\n          if (j === series[i].length - 2) {\n            // last loop, close path\n            areaPath = areaPath + graphics.curve(pX, pY, x, y, x, areaBottomY) + graphics.move(x, y) + 'z';\n\n            if (!w.globals.hasNullValues) {\n              linePaths.push(linePath);\n              areaPaths.push(areaPath);\n            }\n          }\n        } else {\n          if (series[i][j + 1] === null) {\n            linePath = linePath + graphics.move(x, y);\n            var numericOrCatX = w.globals.isXNumeric ? (w.globals.seriesX[realIndex][j] - w.globals.minX) / this.xRatio : x - this.xDivision;\n            areaPath = areaPath + graphics.line(numericOrCatX, areaBottomY) + graphics.move(x, y) + 'z';\n          }\n\n          if (series[i][j] === null) {\n            linePath = linePath + graphics.move(x, y);\n            areaPath = areaPath + graphics.move(x, areaBottomY);\n          }\n\n          if (curve === 'stepline') {\n            linePath = linePath + graphics.line(x, null, 'H') + graphics.line(null, y, 'V');\n            areaPath = areaPath + graphics.line(x, null, 'H') + graphics.line(null, y, 'V');\n          } else if (curve === 'straight') {\n            linePath = linePath + graphics.line(x, y);\n            areaPath = areaPath + graphics.line(x, y);\n          }\n\n          if (j === series[i].length - 2) {\n            // last loop, close path\n            areaPath = areaPath + graphics.line(x, areaBottomY) + graphics.move(x, y) + 'z';\n            linePaths.push(linePath);\n            areaPaths.push(areaPath);\n          }\n        }\n\n        return {\n          linePaths: linePaths,\n          areaPaths: areaPaths,\n          pX: pX,\n          pY: pY,\n          linePath: linePath,\n          areaPath: areaPath\n        };\n      }\n    }, {\n      key: \"handleNullDataPoints\",\n      value: function handleNullDataPoints(series, pointsPos, i, j, realIndex) {\n        var w = this.w;\n\n        if (series[i][j] === null && w.config.markers.showNullDataPoints || series[i].length === 1) {\n          // fixes apexcharts.js#1282, #1252\n          var elPointsWrap = this.markers.plotChartMarkers(pointsPos, realIndex, j + 1, this.strokeWidth - w.config.markers.strokeWidth / 2, true);\n\n          if (elPointsWrap !== null) {\n            this.elPointsMain.add(elPointsWrap);\n          }\n        }\n      }\n    }]);\n\n    return Line;\n  }();\n\n  /*\n   * treemap-squarify.js - open source implementation of squarified treemaps\n   *\n   * Treemap Squared 0.5 - Treemap Charting library\n   *\n   * https://github.com/imranghory/treemap-squared/\n   *\n   * Copyright (c) 2012 Imran Ghory (imranghory@gmail.com)\n   * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.\n   *\n   *\n   * Implementation of the squarify treemap algorithm described in:\n   *\n   * Bruls, Mark; Huizing, Kees; van Wijk, Jarke J. (2000), \"Squarified treemaps\"\n   * in de Leeuw, W.; van Liere, R., Data Visualization 2000:\n   * Proc. Joint Eurographics and IEEE TCVG Symp. on Visualization, Springer-Verlag, pp. 33–42.\n   *\n   * Paper is available online at: http://www.win.tue.nl/~vanwijk/stm.pdf\n   *\n   * The code in this file is completeley decoupled from the drawing code so it should be trivial\n   * to port it to any other vector drawing library. Given an array of datapoints this library returns\n   * an array of cartesian coordinates that represent the rectangles that make up the treemap.\n   *\n   * The library also supports multidimensional data (nested treemaps) and performs normalization on the data.\n   *\n   * See the README file for more details.\n   */\n  window.TreemapSquared = {};\n\n  (function () {\n\n    window.TreemapSquared.generate = function () {\n      function Container(xoffset, yoffset, width, height) {\n        this.xoffset = xoffset; // offset from the the top left hand corner\n\n        this.yoffset = yoffset; // ditto\n\n        this.height = height;\n        this.width = width;\n\n        this.shortestEdge = function () {\n          return Math.min(this.height, this.width);\n        }; // getCoordinates - for a row of boxes which we've placed\n        //                  return an array of their cartesian coordinates\n\n\n        this.getCoordinates = function (row) {\n          var coordinates = [];\n          var subxoffset = this.xoffset,\n              subyoffset = this.yoffset; //our offset within the container\n\n          var areawidth = sumArray(row) / this.height;\n          var areaheight = sumArray(row) / this.width;\n          var i;\n\n          if (this.width >= this.height) {\n            for (i = 0; i < row.length; i++) {\n              coordinates.push([subxoffset, subyoffset, subxoffset + areawidth, subyoffset + row[i] / areawidth]);\n              subyoffset = subyoffset + row[i] / areawidth;\n            }\n          } else {\n            for (i = 0; i < row.length; i++) {\n              coordinates.push([subxoffset, subyoffset, subxoffset + row[i] / areaheight, subyoffset + areaheight]);\n              subxoffset = subxoffset + row[i] / areaheight;\n            }\n          }\n\n          return coordinates;\n        }; // cutArea - once we've placed some boxes into an row we then need to identify the remaining area,\n        //           this function takes the area of the boxes we've placed and calculates the location and\n        //           dimensions of the remaining space and returns a container box defined by the remaining area\n\n\n        this.cutArea = function (area) {\n          var newcontainer;\n\n          if (this.width >= this.height) {\n            var areawidth = area / this.height;\n            var newwidth = this.width - areawidth;\n            newcontainer = new Container(this.xoffset + areawidth, this.yoffset, newwidth, this.height);\n          } else {\n            var areaheight = area / this.width;\n            var newheight = this.height - areaheight;\n            newcontainer = new Container(this.xoffset, this.yoffset + areaheight, this.width, newheight);\n          }\n\n          return newcontainer;\n        };\n      } // normalize - the Bruls algorithm assumes we're passing in areas that nicely fit into our\n      //             container box, this method takes our raw data and normalizes the data values into\n      //             area values so that this assumption is valid.\n\n\n      function normalize(data, area) {\n        var normalizeddata = [];\n        var sum = sumArray(data);\n        var multiplier = area / sum;\n        var i;\n\n        for (i = 0; i < data.length; i++) {\n          normalizeddata[i] = data[i] * multiplier;\n        }\n\n        return normalizeddata;\n      } // treemapMultidimensional - takes multidimensional data (aka [[23,11],[11,32]] - nested array)\n      //                           and recursively calls itself using treemapSingledimensional\n      //                           to create a patchwork of treemaps and merge them\n\n\n      function treemapMultidimensional(data, width, height, xoffset, yoffset) {\n        xoffset = typeof xoffset === 'undefined' ? 0 : xoffset;\n        yoffset = typeof yoffset === 'undefined' ? 0 : yoffset;\n        var mergeddata = [];\n        var mergedtreemap;\n        var results = [];\n        var i;\n\n        if (isArray(data[0])) {\n          // if we've got more dimensions of depth\n          for (i = 0; i < data.length; i++) {\n            mergeddata[i] = sumMultidimensionalArray(data[i]);\n          }\n\n          mergedtreemap = treemapSingledimensional(mergeddata, width, height, xoffset, yoffset);\n\n          for (i = 0; i < data.length; i++) {\n            results.push(treemapMultidimensional(data[i], mergedtreemap[i][2] - mergedtreemap[i][0], mergedtreemap[i][3] - mergedtreemap[i][1], mergedtreemap[i][0], mergedtreemap[i][1]));\n          }\n        } else {\n          results = treemapSingledimensional(data, width, height, xoffset, yoffset);\n        }\n\n        return results;\n      } // treemapSingledimensional - simple wrapper around squarify\n\n\n      function treemapSingledimensional(data, width, height, xoffset, yoffset) {\n        xoffset = typeof xoffset === 'undefined' ? 0 : xoffset;\n        yoffset = typeof yoffset === 'undefined' ? 0 : yoffset;\n        var rawtreemap = squarify(normalize(data, width * height), [], new Container(xoffset, yoffset, width, height), []);\n        return flattenTreemap(rawtreemap);\n      } // flattenTreemap - squarify implementation returns an array of arrays of coordinates\n      //                  because we have a new array everytime we switch to building a new row\n      //                  this converts it into an array of coordinates.\n\n\n      function flattenTreemap(rawtreemap) {\n        var flattreemap = [];\n        var i, j;\n\n        for (i = 0; i < rawtreemap.length; i++) {\n          for (j = 0; j < rawtreemap[i].length; j++) {\n            flattreemap.push(rawtreemap[i][j]);\n          }\n        }\n\n        return flattreemap;\n      } // squarify  - as per the Bruls paper\n      //             plus coordinates stack and containers so we get\n      //             usable data out of it\n\n\n      function squarify(data, currentrow, container, stack) {\n        var length;\n        var nextdatapoint;\n        var newcontainer;\n\n        if (data.length === 0) {\n          stack.push(container.getCoordinates(currentrow));\n          return;\n        }\n\n        length = container.shortestEdge();\n        nextdatapoint = data[0];\n\n        if (improvesRatio(currentrow, nextdatapoint, length)) {\n          currentrow.push(nextdatapoint);\n          squarify(data.slice(1), currentrow, container, stack);\n        } else {\n          newcontainer = container.cutArea(sumArray(currentrow), stack);\n          stack.push(container.getCoordinates(currentrow));\n          squarify(data, [], newcontainer, stack);\n        }\n\n        return stack;\n      } // improveRatio - implements the worse calculation and comparision as given in Bruls\n      //                (note the error in the original paper; fixed here)\n\n\n      function improvesRatio(currentrow, nextnode, length) {\n        var newrow;\n\n        if (currentrow.length === 0) {\n          return true;\n        }\n\n        newrow = currentrow.slice();\n        newrow.push(nextnode);\n        var currentratio = calculateRatio(currentrow, length);\n        var newratio = calculateRatio(newrow, length); // the pseudocode in the Bruls paper has the direction of the comparison\n        // wrong, this is the correct one.\n\n        return currentratio >= newratio;\n      } // calculateRatio - calculates the maximum width to height ratio of the\n      //                  boxes in this row\n\n\n      function calculateRatio(row, length) {\n        var min = Math.min.apply(Math, row);\n        var max = Math.max.apply(Math, row);\n        var sum = sumArray(row);\n        return Math.max(Math.pow(length, 2) * max / Math.pow(sum, 2), Math.pow(sum, 2) / (Math.pow(length, 2) * min));\n      } // isArray - checks if arr is an array\n\n\n      function isArray(arr) {\n        return arr && arr.constructor === Array;\n      } // sumArray - sums a single dimensional array\n\n\n      function sumArray(arr) {\n        var sum = 0;\n        var i;\n\n        for (i = 0; i < arr.length; i++) {\n          sum += arr[i];\n        }\n\n        return sum;\n      } // sumMultidimensionalArray - sums the values in a nested array (aka [[0,1],[[2,3]]])\n\n\n      function sumMultidimensionalArray(arr) {\n        var i,\n            total = 0;\n\n        if (isArray(arr[0])) {\n          for (i = 0; i < arr.length; i++) {\n            total += sumMultidimensionalArray(arr[i]);\n          }\n        } else {\n          total = sumArray(arr);\n        }\n\n        return total;\n      }\n\n      return treemapMultidimensional;\n    }();\n  })();\n\n  /**\n   * ApexCharts TreemapChart Class.\n   * @module TreemapChart\n   **/\n\n  var TreemapChart = /*#__PURE__*/function () {\n    function TreemapChart(ctx, xyRatios) {\n      _classCallCheck(this, TreemapChart);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.strokeWidth = this.w.config.stroke.width;\n      this.helpers = new TreemapHelpers(ctx);\n      this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation;\n      this.labels = [];\n    }\n\n    _createClass(TreemapChart, [{\n      key: \"draw\",\n      value: function draw(series) {\n        var _this = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var fill = new Fill(this.ctx);\n        var ret = graphics.group({\n          class: 'apexcharts-treemap'\n        });\n        if (w.globals.noData) return ret;\n        var ser = [];\n        series.forEach(function (s) {\n          var d = s.map(function (v) {\n            return Math.abs(v);\n          });\n          ser.push(d);\n        });\n        this.negRange = this.helpers.checkColorRange();\n        w.config.series.forEach(function (s, i) {\n          s.data.forEach(function (l) {\n            if (!Array.isArray(_this.labels[i])) _this.labels[i] = [];\n\n            _this.labels[i].push(l.x);\n          });\n        });\n        var nodes = window.TreemapSquared.generate(ser, w.globals.gridWidth, w.globals.gridHeight);\n        nodes.forEach(function (node, i) {\n          var elSeries = graphics.group({\n            class: \"apexcharts-series apexcharts-treemap-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[i]),\n            rel: i + 1,\n            'data:realIndex': i\n          });\n\n          if (w.config.chart.dropShadow.enabled) {\n            var shadow = w.config.chart.dropShadow;\n            var filters = new Filters(_this.ctx);\n            filters.dropShadow(ret, shadow, i);\n          }\n\n          var elDataLabelWrap = graphics.group({\n            class: 'apexcharts-data-labels'\n          });\n          node.forEach(function (r, j) {\n            var x1 = r[0];\n            var y1 = r[1];\n            var x2 = r[2];\n            var y2 = r[3];\n            var elRect = graphics.drawRect(x1, y1, x2 - x1, y2 - y1, 0, '#fff', 1, _this.strokeWidth, w.config.plotOptions.treemap.useFillColorAsStroke ? color : w.globals.stroke.colors[i]);\n            elRect.attr({\n              cx: x1,\n              cy: y1,\n              index: i,\n              i: i,\n              j: j,\n              width: x2 - x1,\n              height: y2 - y1\n            });\n\n            var colorProps = _this.helpers.getShadeColor(w.config.chart.type, i, j, _this.negRange);\n\n            var color = colorProps.color;\n\n            if (typeof w.config.series[i].data[j] !== 'undefined' && w.config.series[i].data[j].fillColor) {\n              color = w.config.series[i].data[j].fillColor;\n            }\n\n            var pathFill = fill.fillPath({\n              color: color,\n              seriesNumber: i,\n              dataPointIndex: j\n            });\n            elRect.node.classList.add('apexcharts-treemap-rect');\n            elRect.attr({\n              fill: pathFill\n            });\n\n            _this.helpers.addListeners(elRect);\n\n            var fromRect = {\n              x: x1 + (x2 - x1) / 2,\n              y: y1 + (y2 - y1) / 2,\n              width: 0,\n              height: 0\n            };\n            var toRect = {\n              x: x1,\n              y: y1,\n              width: x2 - x1,\n              height: y2 - y1\n            };\n\n            if (w.config.chart.animations.enabled && !w.globals.dataChanged) {\n              var speed = 1;\n\n              if (!w.globals.resized) {\n                speed = w.config.chart.animations.speed;\n              }\n\n              _this.animateTreemap(elRect, fromRect, toRect, speed);\n            }\n\n            if (w.globals.dataChanged) {\n              var _speed = 1;\n\n              if (_this.dynamicAnim.enabled && w.globals.shouldAnimate) {\n                _speed = _this.dynamicAnim.speed;\n\n                if (w.globals.previousPaths[i] && w.globals.previousPaths[i][j] && w.globals.previousPaths[i][j].rect) {\n                  fromRect = w.globals.previousPaths[i][j].rect;\n                }\n\n                _this.animateTreemap(elRect, fromRect, toRect, _speed);\n              }\n            }\n\n            var fontSize = _this.getFontSize(r);\n\n            var formattedText = w.config.dataLabels.formatter(_this.labels[i][j], {\n              value: w.globals.series[i][j],\n              seriesIndex: i,\n              dataPointIndex: j,\n              w: w\n            });\n\n            var dataLabels = _this.helpers.calculateDataLabels({\n              text: formattedText,\n              x: (x1 + x2) / 2,\n              y: (y1 + y2) / 2 + _this.strokeWidth / 2 + fontSize / 3,\n              i: i,\n              j: j,\n              colorProps: colorProps,\n              fontSize: fontSize,\n              series: series\n            });\n\n            if (w.config.dataLabels.enabled && dataLabels) {\n              _this.rotateToFitLabel(dataLabels, formattedText, x1, y1, x2, y2);\n            }\n\n            elSeries.add(elRect);\n\n            if (dataLabels !== null) {\n              elSeries.add(dataLabels);\n            }\n          });\n          elSeries.add(elDataLabelWrap);\n          ret.add(elSeries);\n        });\n        return ret;\n      } // This calculates a font-size based upon\n      // average label length and the size of the box the label is\n      // going into. The maximum font size is set in chart config.\n\n    }, {\n      key: \"getFontSize\",\n      value: function getFontSize(coordinates) {\n        var w = this.w; // total length of labels (i.e [[\"Italy\"],[\"Spain\", \"Greece\"]] -> 16)\n\n        function totalLabelLength(arr) {\n          var i,\n              total = 0;\n\n          if (Array.isArray(arr[0])) {\n            for (i = 0; i < arr.length; i++) {\n              total += totalLabelLength(arr[i]);\n            }\n          } else {\n            for (i = 0; i < arr.length; i++) {\n              total += arr[i].length;\n            }\n          }\n\n          return total;\n        } // count of labels (i.e [[\"Italy\"],[\"Spain\", \"Greece\"]] -> 3)\n\n\n        function countLabels(arr) {\n          var i,\n              total = 0;\n\n          if (Array.isArray(arr[0])) {\n            for (i = 0; i < arr.length; i++) {\n              total += countLabels(arr[i]);\n            }\n          } else {\n            for (i = 0; i < arr.length; i++) {\n              total += 1;\n            }\n          }\n\n          return total;\n        }\n\n        var averagelabelsize = totalLabelLength(this.labels) / countLabels(this.labels);\n\n        function fontSize(width, height) {\n          // the font size should be proportional to the size of the box (and the value)\n          // otherwise you can end up creating a visual distortion where two boxes of identical\n          // size have different sized labels, and thus make it look as if the two boxes\n          // represent different sizes\n          var area = width * height;\n          var arearoot = Math.pow(area, 0.5);\n          return Math.min(arearoot / averagelabelsize, parseInt(w.config.dataLabels.style.fontSize, 10));\n        }\n\n        return fontSize(coordinates[2] - coordinates[0], coordinates[3] - coordinates[1]);\n      }\n    }, {\n      key: \"rotateToFitLabel\",\n      value: function rotateToFitLabel(elText, text, x1, y1, x2, y2) {\n        var graphics = new Graphics(this.ctx);\n        var textRect = graphics.getTextRects(text); //if the label fits better sideways then rotate it\n\n        if (textRect.width + 5 > x2 - x1 && textRect.width <= y2 - y1) {\n          var labelRotatingCenter = graphics.rotateAroundCenter(elText.node);\n          elText.node.setAttribute('transform', \"rotate(-90 \".concat(labelRotatingCenter.x, \" \").concat(labelRotatingCenter.y, \")\"));\n        }\n      }\n    }, {\n      key: \"animateTreemap\",\n      value: function animateTreemap(el, fromRect, toRect, speed) {\n        var animations = new Animations(this.ctx);\n        animations.animateRect(el, {\n          x: fromRect.x,\n          y: fromRect.y,\n          width: fromRect.width,\n          height: fromRect.height\n        }, {\n          x: toRect.x,\n          y: toRect.y,\n          width: toRect.width,\n          height: toRect.height\n        }, speed, function () {\n          animations.animationCompleted(el);\n        });\n      }\n    }]);\n\n    return TreemapChart;\n  }();\n\n  var MINUTES_IN_DAY = 24 * 60;\n  var SECONDS_IN_DAY = MINUTES_IN_DAY * 60;\n  var MIN_ZOOM_DAYS = 10 / SECONDS_IN_DAY;\n  /**\n   * ApexCharts TimeScale Class for generating time ticks for x-axis.\n   *\n   * @module TimeScale\n   **/\n\n  var TimeScale = /*#__PURE__*/function () {\n    function TimeScale(ctx) {\n      _classCallCheck(this, TimeScale);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.timeScaleArray = [];\n      this.utc = this.w.config.xaxis.labels.datetimeUTC;\n    }\n\n    _createClass(TimeScale, [{\n      key: \"calculateTimeScaleTicks\",\n      value: function calculateTimeScaleTicks(minX, maxX) {\n        var _this = this;\n\n        var w = this.w; // null check when no series to show\n\n        if (w.globals.allSeriesCollapsed) {\n          w.globals.labels = [];\n          w.globals.timescaleLabels = [];\n          return [];\n        }\n\n        var dt = new DateTime(this.ctx);\n        var daysDiff = (maxX - minX) / (1000 * SECONDS_IN_DAY);\n        this.determineInterval(daysDiff);\n        w.globals.disableZoomIn = false;\n        w.globals.disableZoomOut = false;\n\n        if (daysDiff < MIN_ZOOM_DAYS) {\n          w.globals.disableZoomIn = true;\n        } else if (daysDiff > 50000) {\n          w.globals.disableZoomOut = true;\n        }\n\n        var timeIntervals = dt.getTimeUnitsfromTimestamp(minX, maxX, this.utc);\n        var daysWidthOnXAxis = w.globals.gridWidth / daysDiff;\n        var hoursWidthOnXAxis = daysWidthOnXAxis / 24;\n        var minutesWidthOnXAxis = hoursWidthOnXAxis / 60;\n        var secondsWidthOnXAxis = minutesWidthOnXAxis / 60;\n        var numberOfHours = Math.floor(daysDiff * 24);\n        var numberOfMinutes = Math.floor(daysDiff * MINUTES_IN_DAY);\n        var numberOfSeconds = Math.floor(daysDiff * SECONDS_IN_DAY);\n        var numberOfDays = Math.floor(daysDiff);\n        var numberOfMonths = Math.floor(daysDiff / 30);\n        var numberOfYears = Math.floor(daysDiff / 365);\n        var firstVal = {\n          minMillisecond: timeIntervals.minMillisecond,\n          minSecond: timeIntervals.minSecond,\n          minMinute: timeIntervals.minMinute,\n          minHour: timeIntervals.minHour,\n          minDate: timeIntervals.minDate,\n          minMonth: timeIntervals.minMonth,\n          minYear: timeIntervals.minYear\n        };\n        var currentMillisecond = firstVal.minMillisecond;\n        var currentSecond = firstVal.minSecond;\n        var currentMinute = firstVal.minMinute;\n        var currentHour = firstVal.minHour;\n        var currentMonthDate = firstVal.minDate;\n        var currentDate = firstVal.minDate;\n        var currentMonth = firstVal.minMonth;\n        var currentYear = firstVal.minYear;\n        var params = {\n          firstVal: firstVal,\n          currentMillisecond: currentMillisecond,\n          currentSecond: currentSecond,\n          currentMinute: currentMinute,\n          currentHour: currentHour,\n          currentMonthDate: currentMonthDate,\n          currentDate: currentDate,\n          currentMonth: currentMonth,\n          currentYear: currentYear,\n          daysWidthOnXAxis: daysWidthOnXAxis,\n          hoursWidthOnXAxis: hoursWidthOnXAxis,\n          minutesWidthOnXAxis: minutesWidthOnXAxis,\n          secondsWidthOnXAxis: secondsWidthOnXAxis,\n          numberOfSeconds: numberOfSeconds,\n          numberOfMinutes: numberOfMinutes,\n          numberOfHours: numberOfHours,\n          numberOfDays: numberOfDays,\n          numberOfMonths: numberOfMonths,\n          numberOfYears: numberOfYears\n        };\n\n        switch (this.tickInterval) {\n          case 'years':\n            {\n              this.generateYearScale(params);\n              break;\n            }\n\n          case 'months':\n          case 'half_year':\n            {\n              this.generateMonthScale(params);\n              break;\n            }\n\n          case 'months_days':\n          case 'months_fortnight':\n          case 'days':\n          case 'week_days':\n            {\n              this.generateDayScale(params);\n              break;\n            }\n\n          case 'hours':\n            {\n              this.generateHourScale(params);\n              break;\n            }\n\n          case 'minutes_fives':\n          case 'minutes':\n            this.generateMinuteScale(params);\n            break;\n\n          case 'seconds_tens':\n          case 'seconds_fives':\n          case 'seconds':\n            this.generateSecondScale(params);\n            break;\n        } // first, we will adjust the month values index\n        // as in the upper function, it is starting from 0\n        // we will start them from 1\n\n\n        var adjustedMonthInTimeScaleArray = this.timeScaleArray.map(function (ts) {\n          var defaultReturn = {\n            position: ts.position,\n            unit: ts.unit,\n            year: ts.year,\n            day: ts.day ? ts.day : 1,\n            hour: ts.hour ? ts.hour : 0,\n            month: ts.month + 1\n          };\n\n          if (ts.unit === 'month') {\n            return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n              day: 1,\n              value: ts.value + 1\n            });\n          } else if (ts.unit === 'day' || ts.unit === 'hour') {\n            return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n              value: ts.value\n            });\n          } else if (ts.unit === 'minute') {\n            return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n              value: ts.value,\n              minute: ts.value\n            });\n          } else if (ts.unit === 'second') {\n            return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n              value: ts.value,\n              minute: ts.minute,\n              second: ts.second\n            });\n          }\n\n          return ts;\n        });\n        var filteredTimeScale = adjustedMonthInTimeScaleArray.filter(function (ts) {\n          var modulo = 1;\n          var ticks = Math.ceil(w.globals.gridWidth / 120);\n          var value = ts.value;\n\n          if (w.config.xaxis.tickAmount !== undefined) {\n            ticks = w.config.xaxis.tickAmount;\n          }\n\n          if (adjustedMonthInTimeScaleArray.length > ticks) {\n            modulo = Math.floor(adjustedMonthInTimeScaleArray.length / ticks);\n          }\n\n          var shouldNotSkipUnit = false; // there is a big change in unit i.e days to months\n\n          var shouldNotPrint = false; // should skip these values\n\n          switch (_this.tickInterval) {\n            case 'years':\n              // make years label denser\n              if (ts.unit === 'year') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'half_year':\n              modulo = 7;\n\n              if (ts.unit === 'year') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'months':\n              modulo = 1;\n\n              if (ts.unit === 'year') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'months_fortnight':\n              modulo = 15;\n\n              if (ts.unit === 'year' || ts.unit === 'month') {\n                shouldNotSkipUnit = true;\n              }\n\n              if (value === 30) {\n                shouldNotPrint = true;\n              }\n\n              break;\n\n            case 'months_days':\n              modulo = 10;\n\n              if (ts.unit === 'month') {\n                shouldNotSkipUnit = true;\n              }\n\n              if (value === 30) {\n                shouldNotPrint = true;\n              }\n\n              break;\n\n            case 'week_days':\n              modulo = 8;\n\n              if (ts.unit === 'month') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'days':\n              modulo = 1;\n\n              if (ts.unit === 'month') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'hours':\n              if (ts.unit === 'day') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'minutes_fives':\n              if (value % 5 !== 0) {\n                shouldNotPrint = true;\n              }\n\n              break;\n\n            case 'seconds_tens':\n              if (value % 10 !== 0) {\n                shouldNotPrint = true;\n              }\n\n              break;\n\n            case 'seconds_fives':\n              if (value % 5 !== 0) {\n                shouldNotPrint = true;\n              }\n\n              break;\n          }\n\n          if (_this.tickInterval === 'hours' || _this.tickInterval === 'minutes_fives' || _this.tickInterval === 'seconds_tens' || _this.tickInterval === 'seconds_fives') {\n            if (!shouldNotPrint) {\n              return true;\n            }\n          } else {\n            if ((value % modulo === 0 || shouldNotSkipUnit) && !shouldNotPrint) {\n              return true;\n            }\n          }\n        });\n        return filteredTimeScale;\n      }\n    }, {\n      key: \"recalcDimensionsBasedOnFormat\",\n      value: function recalcDimensionsBasedOnFormat(filteredTimeScale, inverted) {\n        var w = this.w;\n        var reformattedTimescaleArray = this.formatDates(filteredTimeScale);\n        var removedOverlappingTS = this.removeOverlappingTS(reformattedTimescaleArray);\n        w.globals.timescaleLabels = removedOverlappingTS.slice(); // at this stage, we need to re-calculate coords of the grid as timeline labels may have altered the xaxis labels coords\n        // The reason we can't do this prior to this stage is because timeline labels depends on gridWidth, and as the ticks are calculated based on available gridWidth, there can be unknown number of ticks generated for different minX and maxX\n        // Dependency on Dimensions(), need to refactor correctly\n        // TODO - find an alternate way to avoid calling this Heavy method twice\n\n        var dimensions = new Dimensions(this.ctx);\n        dimensions.plotCoords();\n      }\n    }, {\n      key: \"determineInterval\",\n      value: function determineInterval(daysDiff) {\n        var yearsDiff = daysDiff / 365;\n        var hoursDiff = daysDiff * 24;\n        var minutesDiff = hoursDiff * 60;\n        var secondsDiff = minutesDiff * 60;\n\n        switch (true) {\n          case yearsDiff > 5:\n            this.tickInterval = 'years';\n            break;\n\n          case daysDiff > 800:\n            this.tickInterval = 'half_year';\n            break;\n\n          case daysDiff > 180:\n            this.tickInterval = 'months';\n            break;\n\n          case daysDiff > 90:\n            this.tickInterval = 'months_fortnight';\n            break;\n\n          case daysDiff > 60:\n            this.tickInterval = 'months_days';\n            break;\n\n          case daysDiff > 30:\n            this.tickInterval = 'week_days';\n            break;\n\n          case daysDiff > 2:\n            this.tickInterval = 'days';\n            break;\n\n          case hoursDiff > 2.4:\n            this.tickInterval = 'hours';\n            break;\n\n          case minutesDiff > 15:\n            this.tickInterval = 'minutes_fives';\n            break;\n\n          case minutesDiff > 5:\n            this.tickInterval = 'minutes';\n            break;\n\n          case minutesDiff > 1:\n            this.tickInterval = 'seconds_tens';\n            break;\n\n          case secondsDiff > 20:\n            this.tickInterval = 'seconds_fives';\n            break;\n\n          default:\n            this.tickInterval = 'seconds';\n            break;\n        }\n      }\n    }, {\n      key: \"generateYearScale\",\n      value: function generateYearScale(_ref) {\n        var firstVal = _ref.firstVal,\n            currentMonth = _ref.currentMonth,\n            currentYear = _ref.currentYear,\n            daysWidthOnXAxis = _ref.daysWidthOnXAxis,\n            numberOfYears = _ref.numberOfYears;\n        var firstTickValue = firstVal.minYear;\n        var firstTickPosition = 0;\n        var dt = new DateTime(this.ctx);\n        var unit = 'year';\n\n        if (firstVal.minDate > 1 || firstVal.minMonth > 0) {\n          var remainingDays = dt.determineRemainingDaysOfYear(firstVal.minYear, firstVal.minMonth, firstVal.minDate); // remainingDaysofFirstMonth is used to reacht the 2nd tick position\n\n          var remainingDaysOfFirstYear = dt.determineDaysOfYear(firstVal.minYear) - remainingDays + 1; // calculate the first tick position\n\n          firstTickPosition = remainingDaysOfFirstYear * daysWidthOnXAxis;\n          firstTickValue = firstVal.minYear + 1; // push the first tick in the array\n\n          this.timeScaleArray.push({\n            position: firstTickPosition,\n            value: firstTickValue,\n            unit: unit,\n            year: firstTickValue,\n            month: Utils$1.monthMod(currentMonth + 1)\n          });\n        } else if (firstVal.minDate === 1 && firstVal.minMonth === 0) {\n          // push the first tick in the array\n          this.timeScaleArray.push({\n            position: firstTickPosition,\n            value: firstTickValue,\n            unit: unit,\n            year: currentYear,\n            month: Utils$1.monthMod(currentMonth + 1)\n          });\n        }\n\n        var year = firstTickValue;\n        var pos = firstTickPosition; // keep drawing rest of the ticks\n\n        for (var i = 0; i < numberOfYears; i++) {\n          year++;\n          pos = dt.determineDaysOfYear(year - 1) * daysWidthOnXAxis + pos;\n          this.timeScaleArray.push({\n            position: pos,\n            value: year,\n            unit: unit,\n            year: year,\n            month: 1\n          });\n        }\n      }\n    }, {\n      key: \"generateMonthScale\",\n      value: function generateMonthScale(_ref2) {\n        var firstVal = _ref2.firstVal,\n            currentMonthDate = _ref2.currentMonthDate,\n            currentMonth = _ref2.currentMonth,\n            currentYear = _ref2.currentYear,\n            daysWidthOnXAxis = _ref2.daysWidthOnXAxis,\n            numberOfMonths = _ref2.numberOfMonths;\n        var firstTickValue = currentMonth;\n        var firstTickPosition = 0;\n        var dt = new DateTime(this.ctx);\n        var unit = 'month';\n        var yrCounter = 0;\n\n        if (firstVal.minDate > 1) {\n          // remainingDaysofFirstMonth is used to reacht the 2nd tick position\n          var remainingDaysOfFirstMonth = dt.determineDaysOfMonths(currentMonth + 1, firstVal.minYear) - currentMonthDate + 1; // calculate the first tick position\n\n          firstTickPosition = remainingDaysOfFirstMonth * daysWidthOnXAxis;\n          firstTickValue = Utils$1.monthMod(currentMonth + 1);\n          var year = currentYear + yrCounter;\n\n          var _month = Utils$1.monthMod(firstTickValue);\n\n          var value = firstTickValue; // it's Jan, so update the year\n\n          if (firstTickValue === 0) {\n            unit = 'year';\n            value = year;\n            _month = 1;\n            yrCounter += 1;\n            year = year + yrCounter;\n          } // push the first tick in the array\n\n\n          this.timeScaleArray.push({\n            position: firstTickPosition,\n            value: value,\n            unit: unit,\n            year: year,\n            month: _month\n          });\n        } else {\n          // push the first tick in the array\n          this.timeScaleArray.push({\n            position: firstTickPosition,\n            value: firstTickValue,\n            unit: unit,\n            year: currentYear,\n            month: Utils$1.monthMod(currentMonth)\n          });\n        }\n\n        var month = firstTickValue + 1;\n        var pos = firstTickPosition; // keep drawing rest of the ticks\n\n        for (var i = 0, j = 1; i < numberOfMonths; i++, j++) {\n          month = Utils$1.monthMod(month);\n\n          if (month === 0) {\n            unit = 'year';\n            yrCounter += 1;\n          } else {\n            unit = 'month';\n          }\n\n          var _year = this._getYear(currentYear, month, yrCounter);\n\n          pos = dt.determineDaysOfMonths(month, _year) * daysWidthOnXAxis + pos;\n          var monthVal = month === 0 ? _year : month;\n          this.timeScaleArray.push({\n            position: pos,\n            value: monthVal,\n            unit: unit,\n            year: _year,\n            month: month === 0 ? 1 : month\n          });\n          month++;\n        }\n      }\n    }, {\n      key: \"generateDayScale\",\n      value: function generateDayScale(_ref3) {\n        var firstVal = _ref3.firstVal,\n            currentMonth = _ref3.currentMonth,\n            currentYear = _ref3.currentYear,\n            hoursWidthOnXAxis = _ref3.hoursWidthOnXAxis,\n            numberOfDays = _ref3.numberOfDays;\n        var dt = new DateTime(this.ctx);\n        var unit = 'day';\n        var firstTickValue = firstVal.minDate + 1;\n        var date = firstTickValue;\n\n        var changeMonth = function changeMonth(dateVal, month, year) {\n          var monthdays = dt.determineDaysOfMonths(month + 1, year);\n\n          if (dateVal > monthdays) {\n            month = month + 1;\n            date = 1;\n            unit = 'month';\n            val = month;\n            return month;\n          }\n\n          return month;\n        };\n\n        var remainingHours = 24 - firstVal.minHour;\n        var yrCounter = 0; // calculate the first tick position\n\n        var firstTickPosition = remainingHours * hoursWidthOnXAxis;\n        var val = firstTickValue;\n        var month = changeMonth(date, currentMonth, currentYear);\n\n        if (firstVal.minHour === 0 && firstVal.minDate === 1) {\n          // the first value is the first day of month\n          firstTickPosition = 0;\n          val = Utils$1.monthMod(firstVal.minMonth);\n          unit = 'month';\n          date = firstVal.minDate;\n          numberOfDays++;\n        } else if (firstVal.minDate !== 1 && firstVal.minHour === 0 && firstVal.minMinute === 0) {\n          // fixes apexcharts/apexcharts.js/issues/1730\n          firstTickPosition = 0;\n          firstTickValue = firstVal.minDate;\n          date = firstTickValue;\n          val = firstTickValue; // in case it's the last date of month, we need to check it\n\n          month = changeMonth(date, currentMonth, currentYear);\n        } // push the first tick in the array\n\n\n        this.timeScaleArray.push({\n          position: firstTickPosition,\n          value: val,\n          unit: unit,\n          year: this._getYear(currentYear, month, yrCounter),\n          month: Utils$1.monthMod(month),\n          day: date\n        });\n        var pos = firstTickPosition; // keep drawing rest of the ticks\n\n        for (var i = 0; i < numberOfDays; i++) {\n          date += 1;\n          unit = 'day';\n          month = changeMonth(date, month, this._getYear(currentYear, month, yrCounter));\n\n          var year = this._getYear(currentYear, month, yrCounter);\n\n          pos = 24 * hoursWidthOnXAxis + pos;\n          var value = date === 1 ? Utils$1.monthMod(month) : date;\n          this.timeScaleArray.push({\n            position: pos,\n            value: value,\n            unit: unit,\n            year: year,\n            month: Utils$1.monthMod(month),\n            day: value\n          });\n        }\n      }\n    }, {\n      key: \"generateHourScale\",\n      value: function generateHourScale(_ref4) {\n        var firstVal = _ref4.firstVal,\n            currentDate = _ref4.currentDate,\n            currentMonth = _ref4.currentMonth,\n            currentYear = _ref4.currentYear,\n            minutesWidthOnXAxis = _ref4.minutesWidthOnXAxis,\n            numberOfHours = _ref4.numberOfHours;\n        var dt = new DateTime(this.ctx);\n        var yrCounter = 0;\n        var unit = 'hour';\n\n        var changeDate = function changeDate(dateVal, month) {\n          var monthdays = dt.determineDaysOfMonths(month + 1, currentYear);\n\n          if (dateVal > monthdays) {\n            date = 1;\n            month = month + 1;\n          }\n\n          return {\n            month: month,\n            date: date\n          };\n        };\n\n        var changeMonth = function changeMonth(dateVal, month) {\n          var monthdays = dt.determineDaysOfMonths(month + 1, currentYear);\n\n          if (dateVal > monthdays) {\n            month = month + 1;\n            return month;\n          }\n\n          return month;\n        }; // factor in minSeconds as well\n\n\n        var remainingMins = 60 - (firstVal.minMinute + firstVal.minSecond / 60.0);\n        var firstTickPosition = remainingMins * minutesWidthOnXAxis;\n        var firstTickValue = firstVal.minHour + 1;\n        var hour = firstTickValue + 1;\n\n        if (remainingMins === 60) {\n          firstTickPosition = 0;\n          firstTickValue = firstVal.minHour;\n          hour = firstTickValue + 1;\n        }\n\n        var date = currentDate;\n        var month = changeMonth(date, currentMonth); // push the first tick in the array\n\n        this.timeScaleArray.push({\n          position: firstTickPosition,\n          value: firstTickValue,\n          unit: unit,\n          day: date,\n          hour: hour,\n          year: currentYear,\n          month: Utils$1.monthMod(month)\n        });\n        var pos = firstTickPosition; // keep drawing rest of the ticks\n\n        for (var i = 0; i < numberOfHours; i++) {\n          unit = 'hour';\n\n          if (hour >= 24) {\n            hour = 0;\n            date += 1;\n            unit = 'day';\n            var checkNextMonth = changeDate(date, month);\n            month = checkNextMonth.month;\n            month = changeMonth(date, month);\n          }\n\n          var year = this._getYear(currentYear, month, yrCounter);\n\n          pos = hour === 0 && i === 0 ? remainingMins * minutesWidthOnXAxis : 60 * minutesWidthOnXAxis + pos;\n          var val = hour === 0 ? date : hour;\n          this.timeScaleArray.push({\n            position: pos,\n            value: val,\n            unit: unit,\n            hour: hour,\n            day: date,\n            year: year,\n            month: Utils$1.monthMod(month)\n          });\n          hour++;\n        }\n      }\n    }, {\n      key: \"generateMinuteScale\",\n      value: function generateMinuteScale(_ref5) {\n        var currentMillisecond = _ref5.currentMillisecond,\n            currentSecond = _ref5.currentSecond,\n            currentMinute = _ref5.currentMinute,\n            currentHour = _ref5.currentHour,\n            currentDate = _ref5.currentDate,\n            currentMonth = _ref5.currentMonth,\n            currentYear = _ref5.currentYear,\n            minutesWidthOnXAxis = _ref5.minutesWidthOnXAxis,\n            secondsWidthOnXAxis = _ref5.secondsWidthOnXAxis,\n            numberOfMinutes = _ref5.numberOfMinutes;\n        var yrCounter = 0;\n        var unit = 'minute';\n        var remainingSecs = 60 - currentSecond;\n        var firstTickPosition = (remainingSecs - currentMillisecond / 1000) * secondsWidthOnXAxis;\n        var minute = currentMinute + 1;\n        var date = currentDate;\n        var month = currentMonth;\n        var year = currentYear;\n        var hour = currentHour;\n        var pos = firstTickPosition;\n\n        for (var i = 0; i < numberOfMinutes; i++) {\n          if (minute >= 60) {\n            minute = 0;\n            hour += 1;\n\n            if (hour === 24) {\n              hour = 0;\n            }\n          }\n\n          this.timeScaleArray.push({\n            position: pos,\n            value: minute,\n            unit: unit,\n            hour: hour,\n            minute: minute,\n            day: date,\n            year: this._getYear(year, month, yrCounter),\n            month: Utils$1.monthMod(month)\n          });\n          pos += minutesWidthOnXAxis;\n          minute++;\n        }\n      }\n    }, {\n      key: \"generateSecondScale\",\n      value: function generateSecondScale(_ref6) {\n        var currentMillisecond = _ref6.currentMillisecond,\n            currentSecond = _ref6.currentSecond,\n            currentMinute = _ref6.currentMinute,\n            currentHour = _ref6.currentHour,\n            currentDate = _ref6.currentDate,\n            currentMonth = _ref6.currentMonth,\n            currentYear = _ref6.currentYear,\n            secondsWidthOnXAxis = _ref6.secondsWidthOnXAxis,\n            numberOfSeconds = _ref6.numberOfSeconds;\n        var yrCounter = 0;\n        var unit = 'second';\n        var remainingMillisecs = 1000 - currentMillisecond;\n        var firstTickPosition = remainingMillisecs / 1000 * secondsWidthOnXAxis;\n        var second = currentSecond + 1;\n        var minute = currentMinute;\n        var date = currentDate;\n        var month = currentMonth;\n        var year = currentYear;\n        var hour = currentHour;\n        var pos = firstTickPosition;\n\n        for (var i = 0; i < numberOfSeconds; i++) {\n          if (second >= 60) {\n            minute++;\n            second = 0;\n\n            if (minute >= 60) {\n              hour++;\n              minute = 0;\n\n              if (hour === 24) {\n                hour = 0;\n              }\n            }\n          }\n\n          this.timeScaleArray.push({\n            position: pos,\n            value: second,\n            unit: unit,\n            hour: hour,\n            minute: minute,\n            second: second,\n            day: date,\n            year: this._getYear(year, month, yrCounter),\n            month: Utils$1.monthMod(month)\n          });\n          pos += secondsWidthOnXAxis;\n          second++;\n        }\n      }\n    }, {\n      key: \"createRawDateString\",\n      value: function createRawDateString(ts, value) {\n        var raw = ts.year;\n\n        if (ts.month === 0) {\n          // invalid month, correct it\n          ts.month = 1;\n        }\n\n        raw += '-' + ('0' + ts.month.toString()).slice(-2); // unit is day\n\n        if (ts.unit === 'day') {\n          raw += ts.unit === 'day' ? '-' + ('0' + value).slice(-2) : '-01';\n        } else {\n          raw += '-' + ('0' + (ts.day ? ts.day : '1')).slice(-2);\n        } // unit is hour\n\n\n        if (ts.unit === 'hour') {\n          raw += ts.unit === 'hour' ? 'T' + ('0' + value).slice(-2) : 'T00';\n        } else {\n          raw += 'T' + ('0' + (ts.hour ? ts.hour : '0')).slice(-2);\n        }\n\n        if (ts.unit === 'minute') {\n          raw += ':' + ('0' + value).slice(-2);\n        } else {\n          raw += ':' + (ts.minute ? ('0' + ts.minute).slice(-2) : '00');\n        }\n\n        if (ts.unit === 'second') {\n          raw += ':' + ('0' + value).slice(-2);\n        } else {\n          raw += ':00';\n        }\n\n        if (this.utc) {\n          raw += '.000Z';\n        }\n\n        return raw;\n      }\n    }, {\n      key: \"formatDates\",\n      value: function formatDates(filteredTimeScale) {\n        var _this2 = this;\n\n        var w = this.w;\n        var reformattedTimescaleArray = filteredTimeScale.map(function (ts) {\n          var value = ts.value.toString();\n          var dt = new DateTime(_this2.ctx);\n\n          var raw = _this2.createRawDateString(ts, value);\n\n          var dateToFormat = dt.getDate(dt.parseDate(raw));\n\n          if (!_this2.utc) {\n            // Fixes #1726, #1544, #1485, #1255\n            dateToFormat = dt.getDate(dt.parseDateWithTimezone(raw));\n          }\n\n          if (w.config.xaxis.labels.format === undefined) {\n            var customFormat = 'dd MMM';\n            var dtFormatter = w.config.xaxis.labels.datetimeFormatter;\n            if (ts.unit === 'year') customFormat = dtFormatter.year;\n            if (ts.unit === 'month') customFormat = dtFormatter.month;\n            if (ts.unit === 'day') customFormat = dtFormatter.day;\n            if (ts.unit === 'hour') customFormat = dtFormatter.hour;\n            if (ts.unit === 'minute') customFormat = dtFormatter.minute;\n            if (ts.unit === 'second') customFormat = dtFormatter.second;\n            value = dt.formatDate(dateToFormat, customFormat);\n          } else {\n            value = dt.formatDate(dateToFormat, w.config.xaxis.labels.format);\n          }\n\n          return {\n            dateString: raw,\n            position: ts.position,\n            value: value,\n            unit: ts.unit,\n            year: ts.year,\n            month: ts.month\n          };\n        });\n        return reformattedTimescaleArray;\n      }\n    }, {\n      key: \"removeOverlappingTS\",\n      value: function removeOverlappingTS(arr) {\n        var _this3 = this;\n\n        var graphics = new Graphics(this.ctx);\n        var equalLabelLengthFlag = false; // These labels got same length?\n\n        var constantLabelWidth; // If true, what is the constant length to use\n\n        if (arr.length > 0 && // check arr length\n        arr[0].value && // check arr[0] contains value\n        arr.every(function (lb) {\n          return lb.value.length === arr[0].value.length;\n        }) // check every arr label value is the same as the first one\n        ) {\n          equalLabelLengthFlag = true; // These labels got same length\n\n          constantLabelWidth = graphics.getTextRects(arr[0].value).width; // The constant label width to use\n        }\n\n        var lastDrawnIndex = 0;\n        var filteredArray = arr.map(function (item, index) {\n          if (index > 0 && _this3.w.config.xaxis.labels.hideOverlappingLabels) {\n            var prevLabelWidth = !equalLabelLengthFlag // if vary in label length\n            ? graphics.getTextRects(arr[lastDrawnIndex].value).width // get individual length\n            : constantLabelWidth; // else: use constant length\n\n            var prevPos = arr[lastDrawnIndex].position;\n            var pos = item.position;\n\n            if (pos > prevPos + prevLabelWidth + 10) {\n              lastDrawnIndex = index;\n              return item;\n            } else {\n              return null;\n            }\n          } else {\n            return item;\n          }\n        });\n        filteredArray = filteredArray.filter(function (f) {\n          return f !== null;\n        });\n        return filteredArray;\n      }\n    }, {\n      key: \"_getYear\",\n      value: function _getYear(currentYear, month, yrCounter) {\n        return currentYear + Math.floor(month / 12) + yrCounter;\n      }\n    }]);\n\n    return TimeScale;\n  }();\n\n  /**\n   * ApexCharts Core Class responsible for major calculations and creating elements.\n   *\n   * @module Core\n   **/\n\n  var Core = /*#__PURE__*/function () {\n    function Core(el, ctx) {\n      _classCallCheck(this, Core);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.el = el;\n    } // get data and store into appropriate vars\n\n\n    _createClass(Core, [{\n      key: \"setupElements\",\n      value: function setupElements() {\n        var gl = this.w.globals;\n        var cnf = this.w.config; // const graphics = new Graphics(this.ctx)\n\n        var ct = cnf.chart.type;\n        var axisChartsArrTypes = ['line', 'area', 'bar', 'rangeBar', 'candlestick', 'boxPlot', 'scatter', 'bubble', 'radar', 'heatmap', 'treemap'];\n        var xyChartsArrTypes = ['line', 'area', 'bar', 'rangeBar', 'candlestick', 'boxPlot', 'scatter', 'bubble'];\n        gl.axisCharts = axisChartsArrTypes.indexOf(ct) > -1;\n        gl.xyCharts = xyChartsArrTypes.indexOf(ct) > -1;\n        gl.isBarHorizontal = (cnf.chart.type === 'bar' || cnf.chart.type === 'rangeBar' || cnf.chart.type === 'boxPlot') && cnf.plotOptions.bar.horizontal;\n        gl.chartClass = '.apexcharts' + gl.chartID;\n        gl.dom.baseEl = this.el;\n        gl.dom.elWrap = document.createElement('div');\n        Graphics.setAttrs(gl.dom.elWrap, {\n          id: gl.chartClass.substring(1),\n          class: 'apexcharts-canvas ' + gl.chartClass.substring(1)\n        });\n        this.el.appendChild(gl.dom.elWrap);\n        gl.dom.Paper = new window.SVG.Doc(gl.dom.elWrap);\n        gl.dom.Paper.attr({\n          class: 'apexcharts-svg',\n          'xmlns:data': 'ApexChartsNS',\n          transform: \"translate(\".concat(cnf.chart.offsetX, \", \").concat(cnf.chart.offsetY, \")\")\n        });\n        gl.dom.Paper.node.style.background = cnf.chart.background;\n        this.setSVGDimensions();\n        gl.dom.elGraphical = gl.dom.Paper.group().attr({\n          class: 'apexcharts-inner apexcharts-graphical'\n        });\n        gl.dom.elAnnotations = gl.dom.Paper.group().attr({\n          class: 'apexcharts-annotations'\n        });\n        gl.dom.elDefs = gl.dom.Paper.defs();\n        gl.dom.elLegendWrap = document.createElement('div');\n        gl.dom.elLegendWrap.classList.add('apexcharts-legend');\n        gl.dom.elWrap.appendChild(gl.dom.elLegendWrap);\n        gl.dom.Paper.add(gl.dom.elGraphical);\n        gl.dom.elGraphical.add(gl.dom.elDefs);\n      }\n    }, {\n      key: \"plotChartType\",\n      value: function plotChartType(ser, xyRatios) {\n        var w = this.w;\n        var cnf = w.config;\n        var gl = w.globals;\n        var lineSeries = {\n          series: [],\n          i: []\n        };\n        var areaSeries = {\n          series: [],\n          i: []\n        };\n        var scatterSeries = {\n          series: [],\n          i: []\n        };\n        var bubbleSeries = {\n          series: [],\n          i: []\n        };\n        var columnSeries = {\n          series: [],\n          i: []\n        };\n        var candlestickSeries = {\n          series: [],\n          i: []\n        };\n        var boxplotSeries = {\n          series: [],\n          i: []\n        };\n        gl.series.map(function (series, st) {\n          var comboCount = 0; // if user has specified a particular type for particular series\n\n          if (typeof ser[st].type !== 'undefined') {\n            if (ser[st].type === 'column' || ser[st].type === 'bar') {\n              if (gl.series.length > 1 && cnf.plotOptions.bar.horizontal) {\n                // horizontal bars not supported in mixed charts, hence show a warning\n                console.warn('Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`');\n              }\n\n              columnSeries.series.push(series);\n              columnSeries.i.push(st);\n              comboCount++;\n              w.globals.columnSeries = columnSeries.series;\n            } else if (ser[st].type === 'area') {\n              areaSeries.series.push(series);\n              areaSeries.i.push(st);\n              comboCount++;\n            } else if (ser[st].type === 'line') {\n              lineSeries.series.push(series);\n              lineSeries.i.push(st);\n              comboCount++;\n            } else if (ser[st].type === 'scatter') {\n              scatterSeries.series.push(series);\n              scatterSeries.i.push(st);\n            } else if (ser[st].type === 'bubble') {\n              bubbleSeries.series.push(series);\n              bubbleSeries.i.push(st);\n              comboCount++;\n            } else if (ser[st].type === 'candlestick') {\n              candlestickSeries.series.push(series);\n              candlestickSeries.i.push(st);\n              comboCount++;\n            } else if (ser[st].type === 'boxPlot') {\n              boxplotSeries.series.push(series);\n              boxplotSeries.i.push(st);\n              comboCount++;\n            } else {\n              // user has specified type, but it is not valid (other than line/area/column)\n              console.warn('You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble');\n            }\n\n            if (comboCount > 1) {\n              gl.comboCharts = true;\n            }\n          } else {\n            lineSeries.series.push(series);\n            lineSeries.i.push(st);\n          }\n        });\n        var line = new Line(this.ctx, xyRatios);\n        var boxCandlestick = new BoxCandleStick(this.ctx, xyRatios);\n        this.ctx.pie = new Pie(this.ctx);\n        var radialBar = new Radial(this.ctx);\n        this.ctx.rangeBar = new RangeBar(this.ctx, xyRatios);\n        var radar = new Radar(this.ctx);\n        var elGraph = [];\n\n        if (gl.comboCharts) {\n          if (areaSeries.series.length > 0) {\n            elGraph.push(line.draw(areaSeries.series, 'area', areaSeries.i));\n          }\n\n          if (columnSeries.series.length > 0) {\n            if (w.config.chart.stacked) {\n              var barStacked = new BarStacked(this.ctx, xyRatios);\n              elGraph.push(barStacked.draw(columnSeries.series, columnSeries.i));\n            } else {\n              this.ctx.bar = new Bar(this.ctx, xyRatios);\n              elGraph.push(this.ctx.bar.draw(columnSeries.series, columnSeries.i));\n            }\n          }\n\n          if (lineSeries.series.length > 0) {\n            elGraph.push(line.draw(lineSeries.series, 'line', lineSeries.i));\n          }\n\n          if (candlestickSeries.series.length > 0) {\n            elGraph.push(boxCandlestick.draw(candlestickSeries.series, candlestickSeries.i));\n          }\n\n          if (boxplotSeries.series.length > 0) {\n            elGraph.push(boxCandlestick.draw(boxplotSeries.series, boxplotSeries.i));\n          }\n\n          if (scatterSeries.series.length > 0) {\n            var scatterLine = new Line(this.ctx, xyRatios, true);\n            elGraph.push(scatterLine.draw(scatterSeries.series, 'scatter', scatterSeries.i));\n          }\n\n          if (bubbleSeries.series.length > 0) {\n            var bubbleLine = new Line(this.ctx, xyRatios, true);\n            elGraph.push(bubbleLine.draw(bubbleSeries.series, 'bubble', bubbleSeries.i));\n          }\n        } else {\n          switch (cnf.chart.type) {\n            case 'line':\n              elGraph = line.draw(gl.series, 'line');\n              break;\n\n            case 'area':\n              elGraph = line.draw(gl.series, 'area');\n              break;\n\n            case 'bar':\n              if (cnf.chart.stacked) {\n                var _barStacked = new BarStacked(this.ctx, xyRatios);\n\n                elGraph = _barStacked.draw(gl.series);\n              } else {\n                this.ctx.bar = new Bar(this.ctx, xyRatios);\n                elGraph = this.ctx.bar.draw(gl.series);\n              }\n\n              break;\n\n            case 'candlestick':\n              var candleStick = new BoxCandleStick(this.ctx, xyRatios);\n              elGraph = candleStick.draw(gl.series);\n              break;\n\n            case 'boxPlot':\n              var boxPlot = new BoxCandleStick(this.ctx, xyRatios);\n              elGraph = boxPlot.draw(gl.series);\n              break;\n\n            case 'rangeBar':\n              elGraph = this.ctx.rangeBar.draw(gl.series);\n              break;\n\n            case 'heatmap':\n              var heatmap = new HeatMap(this.ctx, xyRatios);\n              elGraph = heatmap.draw(gl.series);\n              break;\n\n            case 'treemap':\n              var treemap = new TreemapChart(this.ctx, xyRatios);\n              elGraph = treemap.draw(gl.series);\n              break;\n\n            case 'pie':\n            case 'donut':\n            case 'polarArea':\n              elGraph = this.ctx.pie.draw(gl.series);\n              break;\n\n            case 'radialBar':\n              elGraph = radialBar.draw(gl.series);\n              break;\n\n            case 'radar':\n              elGraph = radar.draw(gl.series);\n              break;\n\n            default:\n              elGraph = line.draw(gl.series);\n          }\n        }\n\n        return elGraph;\n      }\n    }, {\n      key: \"setSVGDimensions\",\n      value: function setSVGDimensions() {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        gl.svgWidth = cnf.chart.width;\n        gl.svgHeight = cnf.chart.height;\n        var elDim = Utils$1.getDimensions(this.el);\n        var widthUnit = cnf.chart.width.toString().split(/[0-9]+/g).pop();\n\n        if (widthUnit === '%') {\n          if (Utils$1.isNumber(elDim[0])) {\n            if (elDim[0].width === 0) {\n              elDim = Utils$1.getDimensions(this.el.parentNode);\n            }\n\n            gl.svgWidth = elDim[0] * parseInt(cnf.chart.width, 10) / 100;\n          }\n        } else if (widthUnit === 'px' || widthUnit === '') {\n          gl.svgWidth = parseInt(cnf.chart.width, 10);\n        }\n\n        var heightUnit = cnf.chart.height.toString().split(/[0-9]+/g).pop();\n\n        if (gl.svgHeight !== 'auto' && gl.svgHeight !== '') {\n          if (heightUnit === '%') {\n            var elParentDim = Utils$1.getDimensions(this.el.parentNode);\n            gl.svgHeight = elParentDim[1] * parseInt(cnf.chart.height, 10) / 100;\n          } else {\n            gl.svgHeight = parseInt(cnf.chart.height, 10);\n          }\n        } else {\n          if (gl.axisCharts) {\n            gl.svgHeight = gl.svgWidth / 1.61;\n          } else {\n            gl.svgHeight = gl.svgWidth / 1.2;\n          }\n        }\n\n        if (gl.svgWidth < 0) gl.svgWidth = 0;\n        if (gl.svgHeight < 0) gl.svgHeight = 0;\n        Graphics.setAttrs(gl.dom.Paper.node, {\n          width: gl.svgWidth,\n          height: gl.svgHeight\n        });\n\n        if (heightUnit !== '%') {\n          // fixes https://github.com/apexcharts/apexcharts.js/issues/2059\n          var offsetY = cnf.chart.sparkline.enabled ? 0 : gl.axisCharts ? cnf.chart.parentHeightOffset : 0;\n          gl.dom.Paper.node.parentNode.parentNode.style.minHeight = gl.svgHeight + offsetY + 'px';\n        }\n\n        gl.dom.elWrap.style.width = gl.svgWidth + 'px';\n        gl.dom.elWrap.style.height = gl.svgHeight + 'px';\n      }\n    }, {\n      key: \"shiftGraphPosition\",\n      value: function shiftGraphPosition() {\n        var gl = this.w.globals;\n        var tY = gl.translateY;\n        var tX = gl.translateX;\n        var scalingAttrs = {\n          transform: 'translate(' + tX + ', ' + tY + ')'\n        };\n        Graphics.setAttrs(gl.dom.elGraphical.node, scalingAttrs);\n      } // To prevent extra spacings in the bottom of the chart, we need to recalculate the height for pie/donut/radialbar charts\n\n    }, {\n      key: \"resizeNonAxisCharts\",\n      value: function resizeNonAxisCharts() {\n        var w = this.w;\n        var gl = w.globals;\n        var legendHeight = 0;\n        var offY = w.config.chart.sparkline.enabled ? 1 : 15;\n        offY = offY + w.config.grid.padding.bottom;\n\n        if ((w.config.legend.position === 'top' || w.config.legend.position === 'bottom') && w.config.legend.show && !w.config.legend.floating) {\n          legendHeight = new Legend(this.ctx).legendHelpers.getLegendBBox().clwh + 10;\n        }\n\n        var el = w.globals.dom.baseEl.querySelector('.apexcharts-radialbar, .apexcharts-pie');\n        var chartInnerDimensions = w.globals.radialSize * 2.05;\n\n        if (el && !w.config.chart.sparkline.enabled && w.config.plotOptions.radialBar.startAngle !== 0) {\n          var elRadialRect = Utils$1.getBoundingClientRect(el);\n          chartInnerDimensions = elRadialRect.bottom;\n          var maxHeight = elRadialRect.bottom - elRadialRect.top;\n          chartInnerDimensions = Math.max(w.globals.radialSize * 2.05, maxHeight);\n        }\n\n        var newHeight = chartInnerDimensions + gl.translateY + legendHeight + offY;\n\n        if (gl.dom.elLegendForeign) {\n          gl.dom.elLegendForeign.setAttribute('height', newHeight);\n        }\n\n        gl.dom.elWrap.style.height = newHeight + 'px';\n        Graphics.setAttrs(gl.dom.Paper.node, {\n          height: newHeight\n        });\n        gl.dom.Paper.node.parentNode.parentNode.style.minHeight = newHeight + 'px';\n      }\n      /*\n       ** All the calculations for setting range in charts will be done here\n       */\n\n    }, {\n      key: \"coreCalculations\",\n      value: function coreCalculations() {\n        var range = new Range(this.ctx);\n        range.init();\n      }\n    }, {\n      key: \"resetGlobals\",\n      value: function resetGlobals() {\n        var _this = this;\n\n        var resetxyValues = function resetxyValues() {\n          return _this.w.config.series.map(function (s) {\n            return [];\n          });\n        };\n\n        var globalObj = new Globals();\n        var gl = this.w.globals;\n        globalObj.initGlobalVars(gl);\n        gl.seriesXvalues = resetxyValues();\n        gl.seriesYvalues = resetxyValues();\n      }\n    }, {\n      key: \"isMultipleY\",\n      value: function isMultipleY() {\n        // user has supplied an array in yaxis property. So, turn on multipleYAxis flag\n        if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1) {\n          this.w.globals.isMultipleYAxis = true;\n          return true;\n        }\n      }\n    }, {\n      key: \"xySettings\",\n      value: function xySettings() {\n        var xyRatios = null;\n        var w = this.w;\n\n        if (w.globals.axisCharts) {\n          if (w.config.xaxis.crosshairs.position === 'back') {\n            var crosshairs = new Crosshairs(this.ctx);\n            crosshairs.drawXCrosshairs();\n          }\n\n          if (w.config.yaxis[0].crosshairs.position === 'back') {\n            var _crosshairs = new Crosshairs(this.ctx);\n\n            _crosshairs.drawYCrosshairs();\n          }\n\n          if (w.config.xaxis.type === 'datetime' && w.config.xaxis.labels.formatter === undefined) {\n            this.ctx.timeScale = new TimeScale(this.ctx);\n            var formattedTimeScale = [];\n\n            if (isFinite(w.globals.minX) && isFinite(w.globals.maxX) && !w.globals.isBarHorizontal) {\n              formattedTimeScale = this.ctx.timeScale.calculateTimeScaleTicks(w.globals.minX, w.globals.maxX);\n            } else if (w.globals.isBarHorizontal) {\n              formattedTimeScale = this.ctx.timeScale.calculateTimeScaleTicks(w.globals.minY, w.globals.maxY);\n            }\n\n            this.ctx.timeScale.recalcDimensionsBasedOnFormat(formattedTimeScale);\n          }\n\n          var coreUtils = new CoreUtils(this.ctx);\n          xyRatios = coreUtils.getCalculatedRatios();\n        }\n\n        return xyRatios;\n      }\n    }, {\n      key: \"updateSourceChart\",\n      value: function updateSourceChart(targetChart) {\n        this.ctx.w.globals.selection = undefined;\n\n        this.ctx.updateHelpers._updateOptions({\n          chart: {\n            selection: {\n              xaxis: {\n                min: targetChart.w.globals.minX,\n                max: targetChart.w.globals.maxX\n              }\n            }\n          }\n        }, false, false);\n      }\n    }, {\n      key: \"setupBrushHandler\",\n      value: function setupBrushHandler() {\n        var _this2 = this;\n\n        var w = this.w; // only for brush charts\n\n        if (!w.config.chart.brush.enabled) {\n          return;\n        } // if user has not defined a custom function for selection - we handle the brush chart\n        // otherwise we leave it to the user to define the functionality for selection\n\n\n        if (typeof w.config.chart.events.selection !== 'function') {\n          var targets = w.config.chart.brush.targets || [w.config.chart.brush.target]; // retro compatibility with single target option\n\n          targets.forEach(function (target) {\n            var targetChart = ApexCharts.getChartByID(target);\n            targetChart.w.globals.brushSource = _this2.ctx;\n\n            if (typeof targetChart.w.config.chart.events.zoomed !== 'function') {\n              targetChart.w.config.chart.events.zoomed = function () {\n                _this2.updateSourceChart(targetChart);\n              };\n            }\n\n            if (typeof targetChart.w.config.chart.events.scrolled !== 'function') {\n              targetChart.w.config.chart.events.scrolled = function () {\n                _this2.updateSourceChart(targetChart);\n              };\n            }\n          });\n\n          w.config.chart.events.selection = function (chart, e) {\n            targets.forEach(function (target) {\n              var targetChart = ApexCharts.getChartByID(target);\n              var yaxis = Utils$1.clone(w.config.yaxis);\n\n              if (w.config.chart.brush.autoScaleYaxis && targetChart.w.globals.series.length === 1) {\n                var scale = new Range$1(targetChart);\n                yaxis = scale.autoScaleY(targetChart, yaxis, e);\n              }\n\n              var multipleYaxis = targetChart.w.config.yaxis.reduce(function (acc, curr, index) {\n                return [].concat(_toConsumableArray(acc), [_objectSpread2(_objectSpread2({}, targetChart.w.config.yaxis[index]), {}, {\n                  min: yaxis[0].min,\n                  max: yaxis[0].max\n                })]);\n              }, []);\n\n              targetChart.ctx.updateHelpers._updateOptions({\n                xaxis: {\n                  min: e.xaxis.min,\n                  max: e.xaxis.max\n                },\n                yaxis: multipleYaxis\n              }, false, false, false, false);\n            });\n          };\n        }\n      }\n    }]);\n\n    return Core;\n  }();\n\n  var UpdateHelpers = /*#__PURE__*/function () {\n    function UpdateHelpers(ctx) {\n      _classCallCheck(this, UpdateHelpers);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n    /**\n     * private method to update Options.\n     *\n     * @param {object} options - A new config object can be passed which will be merged with the existing config object\n     * @param {boolean} redraw - should redraw from beginning or should use existing paths and redraw from there\n     * @param {boolean} animate - should animate or not on updating Options\n     * @param {boolean} overwriteInitialConfig - should update the initial config or not\n     */\n\n\n    _createClass(UpdateHelpers, [{\n      key: \"_updateOptions\",\n      value: function _updateOptions(options) {\n        var _this = this;\n\n        var redraw = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var animate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var updateSyncedCharts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n        var overwriteInitialConfig = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        return new Promise(function (resolve) {\n          var charts = [_this.ctx];\n\n          if (updateSyncedCharts) {\n            charts = _this.ctx.getSyncedCharts();\n          }\n\n          if (_this.ctx.w.globals.isExecCalled) {\n            // If the user called exec method, we don't want to get grouped charts as user specifically provided a chartID to update\n            charts = [_this.ctx];\n            _this.ctx.w.globals.isExecCalled = false;\n          }\n\n          charts.forEach(function (ch, chartIndex) {\n            var w = ch.w;\n            w.globals.shouldAnimate = animate;\n\n            if (!redraw) {\n              w.globals.resized = true;\n              w.globals.dataChanged = true;\n\n              if (animate) {\n                ch.series.getPreviousPaths();\n              }\n            }\n\n            if (options && _typeof(options) === 'object') {\n              ch.config = new Config(options);\n              options = CoreUtils.extendArrayProps(ch.config, options, w); // fixes #914, #623\n\n              if (ch.w.globals.chartID !== _this.ctx.w.globals.chartID) {\n                // don't overwrite series of synchronized charts\n                delete options.series;\n              }\n\n              w.config = Utils$1.extend(w.config, options);\n\n              if (overwriteInitialConfig) {\n                // we need to forget the lastXAxis and lastYAxis as user forcefully overwriteInitialConfig. If we do not do this, and next time when user zooms the chart after setting yaxis.min/max or xaxis.min/max - the stored lastXAxis will never allow the chart to use the updated min/max by user.\n                w.globals.lastXAxis = options.xaxis ? Utils$1.clone(options.xaxis) : [];\n                w.globals.lastYAxis = options.yaxis ? Utils$1.clone(options.yaxis) : []; // After forgetting lastAxes, we need to restore the new config in initialConfig/initialSeries\n\n                w.globals.initialConfig = Utils$1.extend({}, w.config);\n                w.globals.initialSeries = Utils$1.clone(w.config.series);\n              }\n            }\n\n            return ch.update(options).then(function () {\n              if (chartIndex === charts.length - 1) {\n                resolve(ch);\n              }\n            });\n          });\n        });\n      }\n      /**\n       * Private method to update Series.\n       *\n       * @param {array} series - New series which will override the existing\n       */\n\n    }, {\n      key: \"_updateSeries\",\n      value: function _updateSeries(newSeries, animate) {\n        var _this2 = this;\n\n        var overwriteInitialSeries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        return new Promise(function (resolve) {\n          var w = _this2.w;\n          w.globals.shouldAnimate = animate;\n          w.globals.dataChanged = true;\n\n          if (animate) {\n            _this2.ctx.series.getPreviousPaths();\n          }\n\n          var existingSeries; // axis charts\n\n          if (w.globals.axisCharts) {\n            existingSeries = newSeries.map(function (s, i) {\n              return _this2._extendSeries(s, i);\n            });\n\n            if (existingSeries.length === 0) {\n              existingSeries = [{\n                data: []\n              }];\n            }\n\n            w.config.series = existingSeries;\n          } else {\n            // non-axis chart (pie/radialbar)\n            w.config.series = newSeries.slice();\n          }\n\n          if (overwriteInitialSeries) {\n            w.globals.initialSeries = Utils$1.clone(w.config.series);\n          }\n\n          return _this2.ctx.update().then(function () {\n            resolve(_this2.ctx);\n          });\n        });\n      }\n    }, {\n      key: \"_extendSeries\",\n      value: function _extendSeries(s, i) {\n        var w = this.w;\n        var ser = w.config.series[i];\n        return _objectSpread2(_objectSpread2({}, w.config.series[i]), {}, {\n          name: s.name ? s.name : ser && ser.name,\n          color: s.color ? s.color : ser && ser.color,\n          type: s.type ? s.type : ser && ser.type,\n          data: s.data ? s.data : ser && ser.data\n        });\n      }\n    }, {\n      key: \"toggleDataPointSelection\",\n      value: function toggleDataPointSelection(seriesIndex, dataPointIndex) {\n        var w = this.w;\n        var elPath = null;\n        var parent = \".apexcharts-series[data\\\\:realIndex='\".concat(seriesIndex, \"']\");\n\n        if (w.globals.axisCharts) {\n          elPath = w.globals.dom.Paper.select(\"\".concat(parent, \" path[j='\").concat(dataPointIndex, \"'], \").concat(parent, \" circle[j='\").concat(dataPointIndex, \"'], \").concat(parent, \" rect[j='\").concat(dataPointIndex, \"']\")).members[0];\n        } else {\n          // dataPointIndex will be undefined here, hence using seriesIndex\n          if (typeof dataPointIndex === 'undefined') {\n            elPath = w.globals.dom.Paper.select(\"\".concat(parent, \" path[j='\").concat(seriesIndex, \"']\")).members[0];\n\n            if (w.config.chart.type === 'pie' || w.config.chart.type === 'polarArea' || w.config.chart.type === 'donut') {\n              this.ctx.pie.pieClicked(seriesIndex);\n            }\n          }\n        }\n\n        if (elPath) {\n          var graphics = new Graphics(this.ctx);\n          graphics.pathMouseDown(elPath, null);\n        } else {\n          console.warn('toggleDataPointSelection: Element not found');\n          return null;\n        }\n\n        return elPath.node ? elPath.node : null;\n      }\n    }, {\n      key: \"forceXAxisUpdate\",\n      value: function forceXAxisUpdate(options) {\n        var w = this.w;\n        var minmax = ['min', 'max'];\n        minmax.forEach(function (a) {\n          if (typeof options.xaxis[a] !== 'undefined') {\n            w.config.xaxis[a] = options.xaxis[a];\n            w.globals.lastXAxis[a] = options.xaxis[a];\n          }\n        });\n\n        if (options.xaxis.categories && options.xaxis.categories.length) {\n          w.config.xaxis.categories = options.xaxis.categories;\n        }\n\n        if (w.config.xaxis.convertedCatToNumeric) {\n          var defaults = new Defaults(options);\n          options = defaults.convertCatToNumericXaxis(options, this.ctx);\n        }\n\n        return options;\n      }\n    }, {\n      key: \"forceYAxisUpdate\",\n      value: function forceYAxisUpdate(options) {\n        var w = this.w;\n\n        if (w.config.chart.stacked && w.config.chart.stackType === '100%') {\n          if (Array.isArray(options.yaxis)) {\n            options.yaxis.forEach(function (yaxe, index) {\n              options.yaxis[index].min = 0;\n              options.yaxis[index].max = 100;\n            });\n          } else {\n            options.yaxis.min = 0;\n            options.yaxis.max = 100;\n          }\n        }\n\n        return options;\n      }\n      /**\n       * This function reverts the yaxis and xaxis min/max values to what it was when the chart was defined.\n       * This function fixes an important bug where a user might load a new series after zooming in/out of previous series which resulted in wrong min/max\n       * Also, this should never be called internally on zoom/pan - the reset should only happen when user calls the updateSeries() function externally\n       * The function also accepts an object {xaxis, yaxis} which when present is set as the new xaxis/yaxis\n       */\n\n    }, {\n      key: \"revertDefaultAxisMinMax\",\n      value: function revertDefaultAxisMinMax(opts) {\n        var _this3 = this;\n\n        var w = this.w;\n        var xaxis = w.globals.lastXAxis;\n        var yaxis = w.globals.lastYAxis;\n\n        if (opts && opts.xaxis) {\n          xaxis = opts.xaxis;\n        }\n\n        if (opts && opts.yaxis) {\n          yaxis = opts.yaxis;\n        }\n\n        w.config.xaxis.min = xaxis.min;\n        w.config.xaxis.max = xaxis.max;\n\n        var getLastYAxis = function getLastYAxis(index) {\n          if (typeof yaxis[index] !== 'undefined') {\n            w.config.yaxis[index].min = yaxis[index].min;\n            w.config.yaxis[index].max = yaxis[index].max;\n          }\n        };\n\n        w.config.yaxis.map(function (yaxe, index) {\n          if (w.globals.zoomed) {\n            // user has zoomed, check the last yaxis\n            getLastYAxis(index);\n          } else {\n            // user hasn't zoomed, check the last yaxis first\n            if (typeof yaxis[index] !== 'undefined') {\n              getLastYAxis(index);\n            } else {\n              // if last y-axis don't exist, check the original yaxis\n              if (typeof _this3.ctx.opts.yaxis[index] !== 'undefined') {\n                yaxe.min = _this3.ctx.opts.yaxis[index].min;\n                yaxe.max = _this3.ctx.opts.yaxis[index].max;\n              }\n            }\n          }\n        });\n      }\n    }]);\n\n    return UpdateHelpers;\n  }();\n\n  (function (root, factory) {\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return factory(root, root.document);\n      });\n      /* below check fixes #412 */\n    } else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined') {\n      module.exports = root.document ? factory(root, root.document) : function (w) {\n        return factory(w, w.document);\n      };\n    } else {\n      root.SVG = factory(root, root.document);\n    }\n  })(typeof window !== 'undefined' ? window : undefined, function (window, document) {\n    // Find global reference - uses 'this' by default when available,\n    // falls back to 'window' otherwise (for bundlers like Webpack)\n    var globalRef = typeof this !== 'undefined' ? this : window; // The main wrapping element\n\n    var SVG = globalRef.SVG = function (element) {\n      if (SVG.supported) {\n        element = new SVG.Doc(element);\n\n        if (!SVG.parser.draw) {\n          SVG.prepare();\n        }\n\n        return element;\n      }\n    }; // Default namespaces\n\n\n    SVG.ns = 'http://www.w3.org/2000/svg';\n    SVG.xmlns = 'http://www.w3.org/2000/xmlns/';\n    SVG.xlink = 'http://www.w3.org/1999/xlink';\n    SVG.svgjs = 'http://svgjs.dev'; // Svg support test\n\n    SVG.supported = function () {\n      return true; // !!document.createElementNS &&\n      //     !! document.createElementNS(SVG.ns,'svg').createSVGRect\n    }(); // Don't bother to continue if SVG is not supported\n\n\n    if (!SVG.supported) return false; // Element id sequence\n\n    SVG.did = 1000; // Get next named element id\n\n    SVG.eid = function (name) {\n      return 'Svgjs' + capitalize(name) + SVG.did++;\n    }; // Method for element creation\n\n\n    SVG.create = function (name) {\n      // create element\n      var element = document.createElementNS(this.ns, name); // apply unique id\n\n      element.setAttribute('id', this.eid(name));\n      return element;\n    }; // Method for extending objects\n\n\n    SVG.extend = function () {\n      var modules, methods; // Get list of modules\n\n      modules = [].slice.call(arguments); // Get object with extensions\n\n      methods = modules.pop();\n\n      for (var i = modules.length - 1; i >= 0; i--) {\n        if (modules[i]) {\n          for (var key in methods) {\n            modules[i].prototype[key] = methods[key];\n          }\n        }\n      } // Make sure SVG.Set inherits any newly added methods\n\n\n      if (SVG.Set && SVG.Set.inherit) {\n        SVG.Set.inherit();\n      }\n    }; // Invent new element\n\n\n    SVG.invent = function (config) {\n      // Create element initializer\n      var initializer = typeof config.create === 'function' ? config.create : function () {\n        this.constructor.call(this, SVG.create(config.create));\n      }; // Inherit prototype\n\n      if (config.inherit) {\n        initializer.prototype = new config.inherit();\n      } // Extend with methods\n\n\n      if (config.extend) {\n        SVG.extend(initializer, config.extend);\n      } // Attach construct method to parent\n\n\n      if (config.construct) {\n        SVG.extend(config.parent || SVG.Container, config.construct);\n      }\n\n      return initializer;\n    }; // Adopt existing svg elements\n\n\n    SVG.adopt = function (node) {\n      // check for presence of node\n      if (!node) return null; // make sure a node isn't already adopted\n\n      if (node.instance) return node.instance; // initialize variables\n\n      var element; // adopt with element-specific settings\n\n      if (node.nodeName == 'svg') {\n        element = node.parentNode instanceof window.SVGElement ? new SVG.Nested() : new SVG.Doc();\n      } else if (node.nodeName == 'linearGradient') {\n        element = new SVG.Gradient('linear');\n      } else if (node.nodeName == 'radialGradient') {\n        element = new SVG.Gradient('radial');\n      } else if (SVG[capitalize(node.nodeName)]) {\n        element = new SVG[capitalize(node.nodeName)]();\n      } else {\n        element = new SVG.Element(node);\n      } // ensure references\n\n\n      element.type = node.nodeName;\n      element.node = node;\n      node.instance = element; // SVG.Class specific preparations\n\n      if (element instanceof SVG.Doc) {\n        element.namespace().defs();\n      } // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n\n\n      element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {});\n      return element;\n    }; // Initialize parsing element\n\n\n    SVG.prepare = function () {\n      // Select document body and create invisible svg element\n      var body = document.getElementsByTagName('body')[0],\n          draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0); // Create parser object\n\n      SVG.parser = {\n        body: body || document.documentElement,\n        draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node,\n        poly: draw.polyline().node,\n        path: draw.path().node,\n        native: SVG.create('svg')\n      };\n    };\n\n    SVG.parser = {\n      native: SVG.create('svg')\n    };\n    document.addEventListener('DOMContentLoaded', function () {\n      if (!SVG.parser.draw) {\n        SVG.prepare();\n      }\n    }, false); // Storage for regular expressions\n\n    SVG.regex = {\n      // Parse unit value\n      numberAndUnit: /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i,\n      // Parse hex value\n      hex: /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i,\n      // Parse rgb value\n      rgb: /rgb\\((\\d+),(\\d+),(\\d+)\\)/,\n      // Parse reference id\n      reference: /#([a-z0-9\\-_]+)/i,\n      // splits a transformation chain\n      transforms: /\\)\\s*,?\\s*/,\n      // Whitespace\n      whitespace: /\\s/g,\n      // Test hex value\n      isHex: /^#[a-f0-9]{3,6}$/i,\n      // Test rgb value\n      isRgb: /^rgb\\(/,\n      // Test css declaration\n      isCss: /[^:]+:[^;]+;?/,\n      // Test for blank string\n      isBlank: /^(\\s+)?$/,\n      // Test for numeric string\n      isNumber: /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\n      // Test for percent value\n      isPercent: /^-?[\\d\\.]+%$/,\n      // Test for image url\n      isImage: /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i,\n      // split at whitespace and comma\n      delimiter: /[\\s,]+/,\n      // The following regex are used to parse the d attribute of a path\n      // Matches all hyphens which are not after an exponent\n      hyphen: /([^e])\\-/gi,\n      // Replaces and tests for all path letters\n      pathLetters: /[MLHVCSQTAZ]/gi,\n      // yes we need this one, too\n      isPathLetter: /[MLHVCSQTAZ]/i,\n      // matches 0.154.23.45\n      numbersWithDots: /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi,\n      // matches .\n      dots: /\\./g\n    };\n    SVG.utils = {\n      // Map function\n      map: function map(array, block) {\n        var il = array.length,\n            result = [];\n\n        for (var i = 0; i < il; i++) {\n          result.push(block(array[i]));\n        }\n\n        return result;\n      },\n      // Filter function\n      filter: function filter(array, block) {\n        var il = array.length,\n            result = [];\n\n        for (var i = 0; i < il; i++) {\n          if (block(array[i])) {\n            result.push(array[i]);\n          }\n        }\n\n        return result;\n      },\n      filterSVGElements: function filterSVGElements(nodes) {\n        return this.filter(nodes, function (el) {\n          return el instanceof window.SVGElement;\n        });\n      }\n    };\n    SVG.defaults = {\n      // Default attribute values\n      attrs: {\n        // fill and stroke\n        'fill-opacity': 1,\n        'stroke-opacity': 1,\n        'stroke-width': 0,\n        'stroke-linejoin': 'miter',\n        'stroke-linecap': 'butt',\n        fill: '#000000',\n        stroke: '#000000',\n        opacity: 1,\n        // position\n        x: 0,\n        y: 0,\n        cx: 0,\n        cy: 0,\n        // size\n        width: 0,\n        height: 0,\n        // radius\n        r: 0,\n        rx: 0,\n        ry: 0,\n        // gradient\n        offset: 0,\n        'stop-opacity': 1,\n        'stop-color': '#000000',\n        // text\n        'font-size': 16,\n        'font-family': 'Helvetica, Arial, sans-serif',\n        'text-anchor': 'start'\n      }\n    }; // Module for color convertions\n\n    SVG.Color = function (color) {\n      var match; // initialize defaults\n\n      this.r = 0;\n      this.g = 0;\n      this.b = 0;\n      if (!color) return; // parse color\n\n      if (typeof color === 'string') {\n        if (SVG.regex.isRgb.test(color)) {\n          // get rgb values\n          match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace, '')); // parse numeric values\n\n          this.r = parseInt(match[1]);\n          this.g = parseInt(match[2]);\n          this.b = parseInt(match[3]);\n        } else if (SVG.regex.isHex.test(color)) {\n          // get hex values\n          match = SVG.regex.hex.exec(fullHex(color)); // parse numeric values\n\n          this.r = parseInt(match[1], 16);\n          this.g = parseInt(match[2], 16);\n          this.b = parseInt(match[3], 16);\n        }\n      } else if (_typeof(color) === 'object') {\n        this.r = color.r;\n        this.g = color.g;\n        this.b = color.b;\n      }\n    };\n\n    SVG.extend(SVG.Color, {\n      // Default to hex conversion\n      toString: function toString() {\n        return this.toHex();\n      },\n      // Build hex value\n      toHex: function toHex() {\n        return '#' + compToHex(this.r) + compToHex(this.g) + compToHex(this.b);\n      },\n      // Build rgb value\n      toRgb: function toRgb() {\n        return 'rgb(' + [this.r, this.g, this.b].join() + ')';\n      },\n      // Calculate true brightness\n      brightness: function brightness() {\n        return this.r / 255 * 0.30 + this.g / 255 * 0.59 + this.b / 255 * 0.11;\n      },\n      // Make color morphable\n      morph: function morph(color) {\n        this.destination = new SVG.Color(color);\n        return this;\n      },\n      // Get morphed color at given position\n      at: function at(pos) {\n        // make sure a destination is defined\n        if (!this.destination) return this; // normalise pos\n\n        pos = pos < 0 ? 0 : pos > 1 ? 1 : pos; // generate morphed color\n\n        return new SVG.Color({\n          r: ~~(this.r + (this.destination.r - this.r) * pos),\n          g: ~~(this.g + (this.destination.g - this.g) * pos),\n          b: ~~(this.b + (this.destination.b - this.b) * pos)\n        });\n      }\n    }); // Testers\n    // Test if given value is a color string\n\n    SVG.Color.test = function (color) {\n      color += '';\n      return SVG.regex.isHex.test(color) || SVG.regex.isRgb.test(color);\n    }; // Test if given value is a rgb object\n\n\n    SVG.Color.isRgb = function (color) {\n      return color && typeof color.r === 'number' && typeof color.g === 'number' && typeof color.b === 'number';\n    }; // Test if given value is a color\n\n\n    SVG.Color.isColor = function (color) {\n      return SVG.Color.isRgb(color) || SVG.Color.test(color);\n    }; // Module for array conversion\n\n\n    SVG.Array = function (array, fallback) {\n      array = (array || []).valueOf(); // if array is empty and fallback is provided, use fallback\n\n      if (array.length == 0 && fallback) {\n        array = fallback.valueOf();\n      } // parse array\n\n\n      this.value = this.parse(array);\n    };\n\n    SVG.extend(SVG.Array, {\n      // Convert array to string\n      toString: function toString() {\n        return this.value.join(' ');\n      },\n      // Real value\n      valueOf: function valueOf() {\n        return this.value;\n      },\n      // Parse whitespace separated string\n      parse: function parse(array) {\n        array = array.valueOf(); // if already is an array, no need to parse it\n\n        if (Array.isArray(array)) return array;\n        return this.split(array);\n      }\n    }); // Poly points array\n\n    SVG.PointArray = function (array, fallback) {\n      SVG.Array.call(this, array, fallback || [[0, 0]]);\n    }; // Inherit from SVG.Array\n\n\n    SVG.PointArray.prototype = new SVG.Array();\n    SVG.PointArray.prototype.constructor = SVG.PointArray;\n    var pathHandlers = {\n      M: function M(c, p, p0) {\n        p.x = p0.x = c[0];\n        p.y = p0.y = c[1];\n        return ['M', p.x, p.y];\n      },\n      L: function L(c, p) {\n        p.x = c[0];\n        p.y = c[1];\n        return ['L', c[0], c[1]];\n      },\n      H: function H(c, p) {\n        p.x = c[0];\n        return ['H', c[0]];\n      },\n      V: function V(c, p) {\n        p.y = c[0];\n        return ['V', c[0]];\n      },\n      C: function C(c, p) {\n        p.x = c[4];\n        p.y = c[5];\n        return ['C', c[0], c[1], c[2], c[3], c[4], c[5]];\n      },\n      Q: function Q(c, p) {\n        p.x = c[2];\n        p.y = c[3];\n        return ['Q', c[0], c[1], c[2], c[3]];\n      },\n      Z: function Z(c, p, p0) {\n        p.x = p0.x;\n        p.y = p0.y;\n        return ['Z'];\n      }\n    };\n    var mlhvqtcsa = 'mlhvqtcsaz'.split('');\n\n    for (var i = 0, il = mlhvqtcsa.length; i < il; ++i) {\n      pathHandlers[mlhvqtcsa[i]] = function (i) {\n        return function (c, p, p0) {\n          if (i == 'H') c[0] = c[0] + p.x;else if (i == 'V') c[0] = c[0] + p.y;else if (i == 'A') {\n            c[5] = c[5] + p.x, c[6] = c[6] + p.y;\n          } else {\n            for (var j = 0, jl = c.length; j < jl; ++j) {\n              c[j] = c[j] + (j % 2 ? p.y : p.x);\n            }\n          }\n\n          if (pathHandlers && typeof pathHandlers[i] === 'function') {\n            // this check fixes jest unit tests\n            return pathHandlers[i](c, p, p0);\n          }\n        };\n      }(mlhvqtcsa[i].toUpperCase());\n    } // Path points array\n\n\n    SVG.PathArray = function (array, fallback) {\n      SVG.Array.call(this, array, fallback || [['M', 0, 0]]);\n    }; // Inherit from SVG.Array\n\n\n    SVG.PathArray.prototype = new SVG.Array();\n    SVG.PathArray.prototype.constructor = SVG.PathArray;\n    SVG.extend(SVG.PathArray, {\n      // Convert array to string\n      toString: function toString() {\n        return arrayToString(this.value);\n      },\n      // Move path string\n      move: function move(x, y) {\n        // get bounding box of current situation\n        var box = this.bbox(); // get relative offset\n\n        x -= box.x;\n        y -= box.y;\n        return this;\n      },\n      // Get morphed path array at given position\n      at: function at(pos) {\n        // make sure a destination is defined\n        if (!this.destination) return this;\n        var sourceArray = this.value,\n            destinationArray = this.destination.value,\n            array = [],\n            pathArray = new SVG.PathArray(),\n            il,\n            jl; // Animate has specified in the SVG spec\n        // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\n\n        for (var i = 0, il = sourceArray.length; i < il; i++) {\n          array[i] = [sourceArray[i][0]];\n\n          for (var j = 1, jl = sourceArray[i].length; j < jl; j++) {\n            array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos;\n          } // For the two flags of the elliptical arc command, the SVG spec say:\n          // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\n          // Elliptical arc command as an array followed by corresponding indexes:\n          // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n          //   0    1   2        3                 4             5      6  7\n\n\n          if (array[i][0] === 'A') {\n            array[i][4] = +(array[i][4] != 0);\n            array[i][5] = +(array[i][5] != 0);\n          }\n        } // Directly modify the value of a path array, this is done this way for performance\n\n\n        pathArray.value = array;\n        return pathArray;\n      },\n      // Absolutize and parse path to array\n      parse: function parse(array) {\n        // if it's already a patharray, no need to parse it\n        if (array instanceof SVG.PathArray) return array.valueOf(); // prepare for parsing\n\n        var s,\n            arr,\n            paramCnt = {\n          'M': 2,\n          'L': 2,\n          'H': 1,\n          'V': 1,\n          'C': 6,\n          'S': 4,\n          'Q': 4,\n          'T': 2,\n          'A': 7,\n          'Z': 0\n        };\n\n        if (typeof array === 'string') {\n          array = array.replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\n          .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\n          .replace(SVG.regex.hyphen, '$1 -') // add space before hyphen\n          .trim() // trim\n          .split(SVG.regex.delimiter); // split into array\n        } else {\n          array = array.reduce(function (prev, curr) {\n            return [].concat.call(prev, curr);\n          }, []);\n        } // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\n\n\n        var arr = [],\n            p = new SVG.Point(),\n            p0 = new SVG.Point(),\n            index = 0,\n            len = array.length;\n\n        do {\n          // Test if we have a path letter\n          if (SVG.regex.isPathLetter.test(array[index])) {\n            s = array[index];\n            ++index; // If last letter was a move command and we got no new, it defaults to [L]ine\n          } else if (s == 'M') {\n            s = 'L';\n          } else if (s == 'm') {\n            s = 'l';\n          }\n\n          arr.push(pathHandlers[s].call(null, array.slice(index, index = index + paramCnt[s.toUpperCase()]).map(parseFloat), p, p0));\n        } while (len > index);\n\n        return arr;\n      },\n      // Get bounding box of path\n      bbox: function bbox() {\n        if (!SVG.parser.draw) {\n          SVG.prepare();\n        }\n\n        SVG.parser.path.setAttribute('d', this.toString());\n        return SVG.parser.path.getBBox();\n      }\n    }); // Module for unit convertions\n\n    SVG.Number = SVG.invent({\n      // Initialize\n      create: function create(value, unit) {\n        // initialize defaults\n        this.value = 0;\n        this.unit = unit || ''; // parse value\n\n        if (typeof value === 'number') {\n          // ensure a valid numeric value\n          this.value = isNaN(value) ? 0 : !isFinite(value) ? value < 0 ? -3.4e+38 : +3.4e+38 : value;\n        } else if (typeof value === 'string') {\n          unit = value.match(SVG.regex.numberAndUnit);\n\n          if (unit) {\n            // make value numeric\n            this.value = parseFloat(unit[1]); // normalize\n\n            if (unit[5] == '%') {\n              this.value /= 100;\n            } else if (unit[5] == 's') {\n              this.value *= 1000;\n            } // store unit\n\n\n            this.unit = unit[5];\n          }\n        } else {\n          if (value instanceof SVG.Number) {\n            this.value = value.valueOf();\n            this.unit = value.unit;\n          }\n        }\n      },\n      // Add methods\n      extend: {\n        // Stringalize\n        toString: function toString() {\n          return (this.unit == '%' ? ~~(this.value * 1e8) / 1e6 : this.unit == 's' ? this.value / 1e3 : this.value) + this.unit;\n        },\n        toJSON: function toJSON() {\n          return this.toString();\n        },\n        // Convert to primitive\n        valueOf: function valueOf() {\n          return this.value;\n        },\n        // Add number\n        plus: function plus(number) {\n          number = new SVG.Number(number);\n          return new SVG.Number(this + number, this.unit || number.unit);\n        },\n        // Subtract number\n        minus: function minus(number) {\n          number = new SVG.Number(number);\n          return new SVG.Number(this - number, this.unit || number.unit);\n        },\n        // Multiply number\n        times: function times(number) {\n          number = new SVG.Number(number);\n          return new SVG.Number(this * number, this.unit || number.unit);\n        },\n        // Divide number\n        divide: function divide(number) {\n          number = new SVG.Number(number);\n          return new SVG.Number(this / number, this.unit || number.unit);\n        },\n        // Convert to different unit\n        to: function to(unit) {\n          var number = new SVG.Number(this);\n\n          if (typeof unit === 'string') {\n            number.unit = unit;\n          }\n\n          return number;\n        },\n        // Make number morphable\n        morph: function morph(number) {\n          this.destination = new SVG.Number(number);\n\n          if (number.relative) {\n            this.destination.value += this.value;\n          }\n\n          return this;\n        },\n        // Get morphed number at given position\n        at: function at(pos) {\n          // Make sure a destination is defined\n          if (!this.destination) return this; // Generate new morphed number\n\n          return new SVG.Number(this.destination).minus(this).times(pos).plus(this);\n        }\n      }\n    });\n    SVG.Element = SVG.invent({\n      // Initialize node\n      create: function create(node) {\n        // make stroke value accessible dynamically\n        this._stroke = SVG.defaults.attrs.stroke;\n        this._event = null; // initialize data object\n\n        this.dom = {}; // create circular reference\n\n        if (this.node = node) {\n          this.type = node.nodeName;\n          this.node.instance = this; // store current attribute value\n\n          this._stroke = node.getAttribute('stroke') || this._stroke;\n        }\n      },\n      // Add class methods\n      extend: {\n        // Move over x-axis\n        x: function x(_x) {\n          return this.attr('x', _x);\n        },\n        // Move over y-axis\n        y: function y(_y) {\n          return this.attr('y', _y);\n        },\n        // Move by center over x-axis\n        cx: function cx(x) {\n          return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2);\n        },\n        // Move by center over y-axis\n        cy: function cy(y) {\n          return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2);\n        },\n        // Move element to given x and y values\n        move: function move(x, y) {\n          return this.x(x).y(y);\n        },\n        // Move element by its center\n        center: function center(x, y) {\n          return this.cx(x).cy(y);\n        },\n        // Set width of element\n        width: function width(_width) {\n          return this.attr('width', _width);\n        },\n        // Set height of element\n        height: function height(_height) {\n          return this.attr('height', _height);\n        },\n        // Set element size to given width and height\n        size: function size(width, height) {\n          var p = proportionalSize(this, width, height);\n          return this.width(new SVG.Number(p.width)).height(new SVG.Number(p.height));\n        },\n        // Clone element\n        clone: function clone(parent) {\n          // write dom data to the dom so the clone can pickup the data\n          this.writeDataToDom(); // clone element and assign new id\n\n          var clone = assignNewId(this.node.cloneNode(true)); // insert the clone in the given parent or after myself\n\n          if (parent) parent.add(clone);else this.after(clone);\n          return clone;\n        },\n        // Remove element\n        remove: function remove() {\n          if (this.parent()) {\n            this.parent().removeElement(this);\n          }\n\n          return this;\n        },\n        // Replace element\n        replace: function replace(element) {\n          this.after(element).remove();\n          return element;\n        },\n        // Add element to given container and return self\n        addTo: function addTo(parent) {\n          return parent.put(this);\n        },\n        // Add element to given container and return container\n        putIn: function putIn(parent) {\n          return parent.add(this);\n        },\n        // Get / set id\n        id: function id(_id) {\n          return this.attr('id', _id);\n        },\n        // Show element\n        show: function show() {\n          return this.style('display', '');\n        },\n        // Hide element\n        hide: function hide() {\n          return this.style('display', 'none');\n        },\n        // Is element visible?\n        visible: function visible() {\n          return this.style('display') != 'none';\n        },\n        // Return id on string conversion\n        toString: function toString() {\n          return this.attr('id');\n        },\n        // Return array of classes on the node\n        classes: function classes() {\n          var attr = this.attr('class');\n          return attr == null ? [] : attr.trim().split(SVG.regex.delimiter);\n        },\n        // Return true if class exists on the node, false otherwise\n        hasClass: function hasClass(name) {\n          return this.classes().indexOf(name) != -1;\n        },\n        // Add class to the node\n        addClass: function addClass(name) {\n          if (!this.hasClass(name)) {\n            var array = this.classes();\n            array.push(name);\n            this.attr('class', array.join(' '));\n          }\n\n          return this;\n        },\n        // Remove class from the node\n        removeClass: function removeClass(name) {\n          if (this.hasClass(name)) {\n            this.attr('class', this.classes().filter(function (c) {\n              return c != name;\n            }).join(' '));\n          }\n\n          return this;\n        },\n        // Toggle the presence of a class on the node\n        toggleClass: function toggleClass(name) {\n          return this.hasClass(name) ? this.removeClass(name) : this.addClass(name);\n        },\n        // Get referenced element form attribute value\n        reference: function reference(attr) {\n          return SVG.get(this.attr(attr));\n        },\n        // Returns the parent element instance\n        parent: function parent(type) {\n          var parent = this; // check for parent\n\n          if (!parent.node.parentNode) return null; // get parent element\n\n          parent = SVG.adopt(parent.node.parentNode);\n          if (!type) return parent; // loop trough ancestors if type is given\n\n          while (parent && parent.node instanceof window.SVGElement) {\n            if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent;\n            if (!parent.node.parentNode || parent.node.parentNode.nodeName == '#document') return null; // #759, #720\n\n            parent = SVG.adopt(parent.node.parentNode);\n          }\n        },\n        // Get parent document\n        doc: function doc() {\n          return this instanceof SVG.Doc ? this : this.parent(SVG.Doc);\n        },\n        // return array of all ancestors of given type up to the root svg\n        parents: function parents(type) {\n          var parents = [],\n              parent = this;\n\n          do {\n            parent = parent.parent(type);\n            if (!parent || !parent.node) break;\n            parents.push(parent);\n          } while (parent.parent);\n\n          return parents;\n        },\n        // matches the element vs a css selector\n        matches: function matches(selector) {\n          return _matches(this.node, selector);\n        },\n        // Returns the svg node to call native svg methods on it\n        native: function native() {\n          return this.node;\n        },\n        // Import raw svg\n        svg: function svg(_svg) {\n          // create temporary holder\n          var well = document.createElement('svg'); // act as a setter if svg is given\n\n          if (_svg && this instanceof SVG.Parent) {\n            // dump raw svg\n            well.innerHTML = '<svg>' + _svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'; // transplant nodes\n\n            for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++) {\n              this.node.appendChild(well.firstChild.firstChild);\n            } // otherwise act as a getter\n\n          } else {\n            // create a wrapping svg element in case of partial content\n            well.appendChild(_svg = document.createElement('svg')); // write svgjs data to the dom\n\n            this.writeDataToDom(); // insert a copy of this node\n\n            _svg.appendChild(this.node.cloneNode(true)); // return target element\n\n\n            return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '');\n          }\n\n          return this;\n        },\n        // write svgjs data to the dom\n        writeDataToDom: function writeDataToDom() {\n          // dump variables recursively\n          if (this.each || this.lines) {\n            var fn = this.each ? this : this.lines();\n            fn.each(function () {\n              this.writeDataToDom();\n            });\n          } // remove previously set data\n\n\n          this.node.removeAttribute('svgjs:data');\n\n          if (Object.keys(this.dom).length) {\n            this.node.setAttribute('svgjs:data', JSON.stringify(this.dom));\n          } // see #428\n\n\n          return this;\n        },\n        // set given data to the elements data property\n        setData: function setData(o) {\n          this.dom = o;\n          return this;\n        },\n        is: function is(obj) {\n          return _is(this, obj);\n        }\n      }\n    });\n    SVG.easing = {\n      '-': function _(pos) {\n        return pos;\n      },\n      '<>': function _(pos) {\n        return -Math.cos(pos * Math.PI) / 2 + 0.5;\n      },\n      '>': function _(pos) {\n        return Math.sin(pos * Math.PI / 2);\n      },\n      '<': function _(pos) {\n        return -Math.cos(pos * Math.PI / 2) + 1;\n      }\n    };\n\n    SVG.morph = function (pos) {\n      return function (from, to) {\n        return new SVG.MorphObj(from, to).at(pos);\n      };\n    };\n\n    SVG.Situation = SVG.invent({\n      create: function create(o) {\n        this.init = false;\n        this.reversed = false;\n        this.reversing = false;\n        this.duration = new SVG.Number(o.duration).valueOf();\n        this.delay = new SVG.Number(o.delay).valueOf();\n        this.start = +new Date() + this.delay;\n        this.finish = this.start + this.duration;\n        this.ease = o.ease; // this.loop is incremented from 0 to this.loops\n        // it is also incremented when in an infinite loop (when this.loops is true)\n\n        this.loop = 0;\n        this.loops = false;\n        this.animations = {// functionToCall: [list of morphable objects]\n          // e.g. move: [SVG.Number, SVG.Number]\n        };\n        this.attrs = {// holds all attributes which are not represented from a function svg.js provides\n          // e.g. someAttr: SVG.Number\n        };\n        this.styles = {// holds all styles which should be animated\n          // e.g. fill-color: SVG.Color\n        };\n        this.transforms = [// holds all transformations as transformation objects\n          // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\n        ];\n        this.once = {// functions to fire at a specific position\n          // e.g. \"0.5\": function foo(){}\n        };\n      }\n    });\n    SVG.FX = SVG.invent({\n      create: function create(element) {\n        this._target = element;\n        this.situations = [];\n        this.active = false;\n        this.situation = null;\n        this.paused = false;\n        this.lastPos = 0;\n        this.pos = 0; // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\n        // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\n\n        this.absPos = 0;\n        this._speed = 1;\n      },\n      extend: {\n        /**\n         * sets or returns the target of this animation\n         * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\n         * @param ease function || string Function which should be used for easing or easing keyword\n         * @param delay Number indicating the delay before the animation starts\n         * @return target || this\n         */\n        animate: function animate(o, ease, delay) {\n          if (_typeof(o) === 'object') {\n            ease = o.ease;\n            delay = o.delay;\n            o = o.duration;\n          }\n\n          var situation = new SVG.Situation({\n            duration: o || 1000,\n            delay: delay || 0,\n            ease: SVG.easing[ease || '-'] || ease\n          });\n          this.queue(situation);\n          return this;\n        },\n\n        /**\n        * sets a delay before the next element of the queue is called\n        * @param delay Duration of delay in milliseconds\n        * @return this.target()\n        */\n\n        /**\n        * sets or returns the target of this animation\n        * @param null || target SVG.Element which should be set as new target\n        * @return target || this\n        */\n        target: function target(_target) {\n          if (_target && _target instanceof SVG.Element) {\n            this._target = _target;\n            return this;\n          }\n\n          return this._target;\n        },\n        // returns the absolute position at a given time\n        timeToAbsPos: function timeToAbsPos(timestamp) {\n          return (timestamp - this.situation.start) / (this.situation.duration / this._speed);\n        },\n        // returns the timestamp from a given absolute positon\n        absPosToTime: function absPosToTime(absPos) {\n          return this.situation.duration / this._speed * absPos + this.situation.start;\n        },\n        // starts the animationloop\n        startAnimFrame: function startAnimFrame() {\n          this.stopAnimFrame();\n          this.animationFrame = window.requestAnimationFrame(function () {\n            this.step();\n          }.bind(this));\n        },\n        // cancels the animationframe\n        stopAnimFrame: function stopAnimFrame() {\n          window.cancelAnimationFrame(this.animationFrame);\n        },\n        // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\n        start: function start() {\n          // dont start if already started\n          if (!this.active && this.situation) {\n            this.active = true;\n            this.startCurrent();\n          }\n\n          return this;\n        },\n        // start the current situation\n        startCurrent: function startCurrent() {\n          this.situation.start = +new Date() + this.situation.delay / this._speed;\n          this.situation.finish = this.situation.start + this.situation.duration / this._speed;\n          return this.initAnimations().step();\n        },\n\n        /**\n        * adds a function / Situation to the animation queue\n        * @param fn function / situation to add\n        * @return this\n        */\n        queue: function queue(fn) {\n          if (typeof fn === 'function' || fn instanceof SVG.Situation) {\n            this.situations.push(fn);\n          }\n\n          if (!this.situation) this.situation = this.situations.shift();\n          return this;\n        },\n\n        /**\n        * pulls next element from the queue and execute it\n        * @return this\n        */\n        dequeue: function dequeue() {\n          // stop current animation\n          this.stop(); // get next animation from queue\n\n          this.situation = this.situations.shift();\n\n          if (this.situation) {\n            if (this.situation instanceof SVG.Situation) {\n              this.start();\n            } else {\n              // If it is not a SVG.Situation, then it is a function, we execute it\n              this.situation.call(this);\n            }\n          }\n\n          return this;\n        },\n        // updates all animations to the current state of the element\n        // this is important when one property could be changed from another property\n        initAnimations: function initAnimations() {\n          var source;\n          var s = this.situation;\n          if (s.init) return this;\n\n          for (var i in s.animations) {\n            source = this.target()[i]();\n\n            if (!Array.isArray(source)) {\n              source = [source];\n            }\n\n            if (!Array.isArray(s.animations[i])) {\n              s.animations[i] = [s.animations[i]];\n            } // if(s.animations[i].length > source.length) {\n            //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\n            // }\n\n\n            for (var j = source.length; j--;) {\n              // The condition is because some methods return a normal number instead\n              // of a SVG.Number\n              if (s.animations[i][j] instanceof SVG.Number) {\n                source[j] = new SVG.Number(source[j]);\n              }\n\n              s.animations[i][j] = source[j].morph(s.animations[i][j]);\n            }\n          }\n\n          for (var i in s.attrs) {\n            s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i]);\n          }\n\n          for (var i in s.styles) {\n            s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i]);\n          }\n\n          s.initialTransformation = this.target().matrixify();\n          s.init = true;\n          return this;\n        },\n        clearQueue: function clearQueue() {\n          this.situations = [];\n          return this;\n        },\n        clearCurrent: function clearCurrent() {\n          this.situation = null;\n          return this;\n        },\n\n        /** stops the animation immediately\n        * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\n        * @param clearQueue A Boolean indicating whether to remove queued animation as well.\n        * @return this\n        */\n        stop: function stop(jumpToEnd, clearQueue) {\n          var active = this.active;\n          this.active = false;\n\n          if (clearQueue) {\n            this.clearQueue();\n          }\n\n          if (jumpToEnd && this.situation) {\n            // initialize the situation if it was not\n            !active && this.startCurrent();\n            this.atEnd();\n          }\n\n          this.stopAnimFrame();\n          return this.clearCurrent();\n        },\n        after: function after(fn) {\n          var c = this.last(),\n              wrapper = function wrapper(e) {\n            if (e.detail.situation == c) {\n              fn.call(this, c);\n              this.off('finished.fx', wrapper); // prevent memory leak\n            }\n          };\n\n          this.target().on('finished.fx', wrapper);\n          return this._callStart();\n        },\n        // adds a callback which is called whenever one animation step is performed\n        during: function during(fn) {\n          var c = this.last(),\n              wrapper = function wrapper(e) {\n            if (e.detail.situation == c) {\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c);\n            }\n          }; // see above\n\n\n          this.target().off('during.fx', wrapper).on('during.fx', wrapper);\n          this.after(function () {\n            this.off('during.fx', wrapper);\n          });\n          return this._callStart();\n        },\n        // calls after ALL animations in the queue are finished\n        afterAll: function afterAll(fn) {\n          var wrapper = function wrapper(e) {\n            fn.call(this);\n            this.off('allfinished.fx', wrapper);\n          }; // see above\n\n\n          this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper);\n          return this._callStart();\n        },\n        last: function last() {\n          return this.situations.length ? this.situations[this.situations.length - 1] : this.situation;\n        },\n        // adds one property to the animations\n        add: function add(method, args, type) {\n          this.last()[type || 'animations'][method] = args;\n          return this._callStart();\n        },\n\n        /** perform one step of the animation\n        *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\n        *  @return this\n        */\n        step: function step(ignoreTime) {\n          // convert current time to an absolute position\n          if (!ignoreTime) this.absPos = this.timeToAbsPos(+new Date()); // This part convert an absolute position to a position\n\n          if (this.situation.loops !== false) {\n            var absPos, absPosInt, lastLoop; // If the absolute position is below 0, we just treat it as if it was 0\n\n            absPos = Math.max(this.absPos, 0);\n            absPosInt = Math.floor(absPos);\n\n            if (this.situation.loops === true || absPosInt < this.situation.loops) {\n              this.pos = absPos - absPosInt;\n              lastLoop = this.situation.loop;\n              this.situation.loop = absPosInt;\n            } else {\n              this.absPos = this.situation.loops;\n              this.pos = 1; // The -1 here is because we don't want to toggle reversed when all the loops have been completed\n\n              lastLoop = this.situation.loop - 1;\n              this.situation.loop = this.situation.loops;\n            }\n\n            if (this.situation.reversing) {\n              // Toggle reversed if an odd number of loops as occured since the last call of step\n              this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2);\n            }\n          } else {\n            // If there are no loop, the absolute position must not be above 1\n            this.absPos = Math.min(this.absPos, 1);\n            this.pos = this.absPos;\n          } // while the absolute position can be below 0, the position must not be below 0\n\n\n          if (this.pos < 0) this.pos = 0;\n          if (this.situation.reversed) this.pos = 1 - this.pos; // apply easing\n\n          var eased = this.situation.ease(this.pos); // call once-callbacks\n\n          for (var i in this.situation.once) {\n            if (i > this.lastPos && i <= eased) {\n              this.situation.once[i].call(this.target(), this.pos, eased);\n              delete this.situation.once[i];\n            }\n          } // fire during callback with position, eased position and current situation as parameter\n\n\n          if (this.active) this.target().fire('during', {\n            pos: this.pos,\n            eased: eased,\n            fx: this,\n            situation: this.situation\n          }); // the user may call stop or finish in the during callback\n          // so make sure that we still have a valid situation\n\n          if (!this.situation) {\n            return this;\n          } // apply the actual animation to every property\n\n\n          this.eachAt(); // do final code when situation is finished\n\n          if (this.pos == 1 && !this.situation.reversed || this.situation.reversed && this.pos == 0) {\n            // stop animation callback\n            this.stopAnimFrame(); // fire finished callback with current situation as parameter\n\n            this.target().fire('finished', {\n              fx: this,\n              situation: this.situation\n            });\n\n            if (!this.situations.length) {\n              this.target().fire('allfinished'); // Recheck the length since the user may call animate in the afterAll callback\n\n              if (!this.situations.length) {\n                this.target().off('.fx'); // there shouldnt be any binding left, but to make sure...\n\n                this.active = false;\n              }\n            } // start next animation\n\n\n            if (this.active) this.dequeue();else this.clearCurrent();\n          } else if (!this.paused && this.active) {\n            // we continue animating when we are not at the end\n            this.startAnimFrame();\n          } // save last eased position for once callback triggering\n\n\n          this.lastPos = eased;\n          return this;\n        },\n        // calculates the step for every property and calls block with it\n        eachAt: function eachAt() {\n          var len,\n              at,\n              self = this,\n              target = this.target(),\n              s = this.situation; // apply animations which can be called trough a method\n\n          for (var i in s.animations) {\n            at = [].concat(s.animations[i]).map(function (el) {\n              return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n            });\n            target[i].apply(target, at);\n          } // apply animation which has to be applied with attr()\n\n\n          for (var i in s.attrs) {\n            at = [i].concat(s.attrs[i]).map(function (el) {\n              return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n            });\n            target.attr.apply(target, at);\n          } // apply animation which has to be applied with style()\n\n\n          for (var i in s.styles) {\n            at = [i].concat(s.styles[i]).map(function (el) {\n              return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n            });\n            target.style.apply(target, at);\n          } // animate initialTransformation which has to be chained\n\n\n          if (s.transforms.length) {\n            // get initial initialTransformation\n            at = s.initialTransformation;\n\n            for (var i = 0, len = s.transforms.length; i < len; i++) {\n              // get next transformation in chain\n              var a = s.transforms[i]; // multiply matrix directly\n\n              if (a instanceof SVG.Matrix) {\n                if (a.relative) {\n                  at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)));\n                } else {\n                  at = at.morph(a).at(s.ease(this.pos));\n                }\n\n                continue;\n              } // when transformation is absolute we have to reset the needed transformation first\n\n\n              if (!a.relative) {\n                a.undo(at.extract());\n              } // and reapply it after\n\n\n              at = at.multiply(a.at(s.ease(this.pos)));\n            } // set new matrix on element\n\n\n            target.matrix(at);\n          }\n\n          return this;\n        },\n        // adds an once-callback which is called at a specific position and never again\n        once: function once(pos, fn, isEased) {\n          var c = this.last();\n          if (!isEased) pos = c.ease(pos);\n          c.once[pos] = fn;\n          return this;\n        },\n        _callStart: function _callStart() {\n          setTimeout(function () {\n            this.start();\n          }.bind(this), 0);\n          return this;\n        }\n      },\n      parent: SVG.Element,\n      // Add method to parent elements\n      construct: {\n        // Get fx module or create a new one, then animate with given duration and ease\n        animate: function animate(o, ease, delay) {\n          return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay);\n        },\n        delay: function delay(_delay) {\n          return (this.fx || (this.fx = new SVG.FX(this))).delay(_delay);\n        },\n        stop: function stop(jumpToEnd, clearQueue) {\n          if (this.fx) {\n            this.fx.stop(jumpToEnd, clearQueue);\n          }\n\n          return this;\n        },\n        finish: function finish() {\n          if (this.fx) {\n            this.fx.finish();\n          }\n\n          return this;\n        }\n      }\n    }); // MorphObj is used whenever no morphable object is given\n\n    SVG.MorphObj = SVG.invent({\n      create: function create(from, to) {\n        // prepare color for morphing\n        if (SVG.Color.isColor(to)) return new SVG.Color(from).morph(to); // check if we have a list of values\n\n        if (SVG.regex.delimiter.test(from)) {\n          // prepare path for morphing\n          if (SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to); // prepare value list for morphing\n          else return new SVG.Array(from).morph(to);\n        } // prepare number for morphing\n\n\n        if (SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to); // prepare for plain morphing\n\n        this.value = from;\n        this.destination = to;\n      },\n      extend: {\n        at: function at(pos, real) {\n          return real < 1 ? this.value : this.destination;\n        },\n        valueOf: function valueOf() {\n          return this.value;\n        }\n      }\n    });\n    SVG.extend(SVG.FX, {\n      // Add animatable attributes\n      attr: function attr(a, v, relative) {\n        // apply attributes individually\n        if (_typeof(a) === 'object') {\n          for (var key in a) {\n            this.attr(key, a[key]);\n          }\n        } else {\n          this.add(a, v, 'attrs');\n        }\n\n        return this;\n      },\n      // Add animatable plot\n      plot: function plot(a, b, c, d) {\n        // Lines can be plotted with 4 arguments\n        if (arguments.length == 4) {\n          return this.plot([a, b, c, d]);\n        }\n\n        return this.add('plot', new (this.target().morphArray)(a));\n      }\n    });\n    SVG.Box = SVG.invent({\n      create: function create(x, y, width, height) {\n        if (_typeof(x) === 'object' && !(x instanceof SVG.Element)) {\n          // chromes getBoundingClientRect has no x and y property\n          return SVG.Box.call(this, x.left != null ? x.left : x.x, x.top != null ? x.top : x.y, x.width, x.height);\n        } else if (arguments.length == 4) {\n          this.x = x;\n          this.y = y;\n          this.width = width;\n          this.height = height;\n        } // add center, right, bottom...\n\n\n        fullBox(this);\n      }\n    });\n    SVG.BBox = SVG.invent({\n      // Initialize\n      create: function create(element) {\n        SVG.Box.apply(this, [].slice.call(arguments)); // get values if element is given\n\n        if (element instanceof SVG.Element) {\n          var box; // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\n\n          try {\n            if (!document.documentElement.contains) {\n              // This is IE - it does not support contains() for top-level SVGs\n              var topParent = element.node;\n\n              while (topParent.parentNode) {\n                topParent = topParent.parentNode;\n              }\n\n              if (topParent != document) throw new Error('Element not in the dom');\n            } else {// the element is NOT in the dom, throw error\n              // disabling the check below which fixes issue #76\n              // if (!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\n            } // find native bbox\n\n\n            box = element.node.getBBox();\n          } catch (e) {\n            if (element instanceof SVG.Shape) {\n              if (!SVG.parser.draw) {\n                // fixes apexcharts/vue-apexcharts #14\n                SVG.prepare();\n              }\n\n              var clone = element.clone(SVG.parser.draw.instance).show();\n\n              if (clone && clone.node && typeof clone.node.getBBox === 'function') {\n                // this check fixes jest unit tests\n                box = clone.node.getBBox();\n              }\n\n              if (clone && typeof clone.remove === 'function') {\n                clone.remove();\n              }\n            } else {\n              box = {\n                x: element.node.clientLeft,\n                y: element.node.clientTop,\n                width: element.node.clientWidth,\n                height: element.node.clientHeight\n              };\n            }\n          }\n\n          SVG.Box.call(this, box);\n        }\n      },\n      // Define ancestor\n      inherit: SVG.Box,\n      // Define Parent\n      parent: SVG.Element,\n      // Constructor\n      construct: {\n        // Get bounding box\n        bbox: function bbox() {\n          return new SVG.BBox(this);\n        }\n      }\n    });\n    SVG.BBox.prototype.constructor = SVG.BBox;\n    SVG.Matrix = SVG.invent({\n      // Initialize\n      create: function create(source) {\n        var base = arrayToMatrix([1, 0, 0, 1, 0, 0]); // ensure source as object\n\n        source = source === null ? base : source instanceof SVG.Element ? source.matrixify() : typeof source === 'string' ? arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) : arguments.length == 6 ? arrayToMatrix([].slice.call(arguments)) : Array.isArray(source) ? arrayToMatrix(source) : source && _typeof(source) === 'object' ? source : base; // merge source\n\n        for (var i = abcdef.length - 1; i >= 0; --i) {\n          this[abcdef[i]] = source[abcdef[i]] != null ? source[abcdef[i]] : base[abcdef[i]];\n        }\n      },\n      // Add methods\n      extend: {\n        // Extract individual transformations\n        extract: function extract() {\n          // find delta transform points\n          var px = deltaTransformPoint(this, 0, 1);\n              deltaTransformPoint(this, 1, 0);\n              var skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90;\n          return {\n            // translation\n            x: this.e,\n            y: this.f,\n            transformedX: (this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),\n            transformedY: (this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),\n            // rotation\n            rotation: skewX,\n            a: this.a,\n            b: this.b,\n            c: this.c,\n            d: this.d,\n            e: this.e,\n            f: this.f,\n            matrix: new SVG.Matrix(this)\n          };\n        },\n        // Clone matrix\n        clone: function clone() {\n          return new SVG.Matrix(this);\n        },\n        // Morph one matrix into another\n        morph: function morph(matrix) {\n          // store new destination\n          this.destination = new SVG.Matrix(matrix);\n          return this;\n        },\n        // Multiplies by given matrix\n        multiply: function multiply(matrix) {\n          return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()));\n        },\n        // Inverses matrix\n        inverse: function inverse() {\n          return new SVG.Matrix(this.native().inverse());\n        },\n        // Translate matrix\n        translate: function translate(x, y) {\n          return new SVG.Matrix(this.native().translate(x || 0, y || 0));\n        },\n        // Convert to native SVGMatrix\n        native: function native() {\n          // create new matrix\n          var matrix = SVG.parser.native.createSVGMatrix(); // update with current values\n\n          for (var i = abcdef.length - 1; i >= 0; i--) {\n            matrix[abcdef[i]] = this[abcdef[i]];\n          }\n\n          return matrix;\n        },\n        // Convert matrix to string\n        toString: function toString() {\n          // Construct the matrix directly, avoid values that are too small\n          return 'matrix(' + float32String(this.a) + ',' + float32String(this.b) + ',' + float32String(this.c) + ',' + float32String(this.d) + ',' + float32String(this.e) + ',' + float32String(this.f) + ')';\n        }\n      },\n      // Define parent\n      parent: SVG.Element,\n      // Add parent method\n      construct: {\n        // Get current matrix\n        ctm: function ctm() {\n          return new SVG.Matrix(this.node.getCTM());\n        },\n        // Get current screen matrix\n        screenCTM: function screenCTM() {\n          /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\n             This is needed because FF does not return the transformation matrix\n             for the inner coordinate system when getScreenCTM() is called on nested svgs.\n             However all other Browsers do that */\n          if (this instanceof SVG.Nested) {\n            var rect = this.rect(1, 1);\n            var m = rect.node.getScreenCTM();\n            rect.remove();\n            return new SVG.Matrix(m);\n          }\n\n          return new SVG.Matrix(this.node.getScreenCTM());\n        }\n      }\n    });\n    SVG.Point = SVG.invent({\n      // Initialize\n      create: function create(x, y) {\n        var source,\n            base = {\n          x: 0,\n          y: 0\n        }; // ensure source as object\n\n        source = Array.isArray(x) ? {\n          x: x[0],\n          y: x[1]\n        } : _typeof(x) === 'object' ? {\n          x: x.x,\n          y: x.y\n        } : x != null ? {\n          x: x,\n          y: y != null ? y : x\n        } : base; // If y has no value, then x is used has its value\n        // merge source\n\n        this.x = source.x;\n        this.y = source.y;\n      },\n      // Add methods\n      extend: {\n        // Clone point\n        clone: function clone() {\n          return new SVG.Point(this);\n        },\n        // Morph one point into another\n        morph: function morph(x, y) {\n          // store new destination\n          this.destination = new SVG.Point(x, y);\n          return this;\n        }\n      }\n    });\n    SVG.extend(SVG.Element, {\n      // Get point\n      point: function point(x, y) {\n        return new SVG.Point(x, y).transform(this.screenCTM().inverse());\n      }\n    });\n    SVG.extend(SVG.Element, {\n      // Set svg element attribute\n      attr: function attr(a, v, n) {\n        // act as full getter\n        if (a == null) {\n          // get an object of attributes\n          a = {};\n          v = this.node.attributes;\n\n          for (var n = v.length - 1; n >= 0; n--) {\n            a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue;\n          }\n\n          return a;\n        } else if (_typeof(a) === 'object') {\n          // apply every attribute individually if an object is passed\n          for (var v_ in a) {\n            this.attr(v_, a[v_]);\n          }\n        } else if (v === null) {\n          // remove value\n          this.node.removeAttribute(a);\n        } else if (v == null) {\n          // act as a getter if the first and only argument is not an object\n          v = this.node.getAttribute(a);\n          return v == null ? SVG.defaults.attrs[a] : SVG.regex.isNumber.test(v) ? parseFloat(v) : v;\n        } else {\n          // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\n          if (a == 'stroke-width') {\n            this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null);\n          } else if (a == 'stroke') {\n            this._stroke = v;\n          } // convert image fill and stroke to patterns\n\n\n          if (a == 'fill' || a == 'stroke') {\n            if (SVG.regex.isImage.test(v)) {\n              v = this.doc().defs().image(v, 0, 0);\n            }\n\n            if (v instanceof SVG.Image) {\n              v = this.doc().defs().pattern(0, 0, function () {\n                this.add(v);\n              });\n            }\n          } // ensure correct numeric values (also accepts NaN and Infinity)\n\n\n          if (typeof v === 'number') {\n            v = new SVG.Number(v);\n          } // ensure full hex color\n          else if (SVG.Color.isColor(v)) {\n            v = new SVG.Color(v);\n          } // parse array values\n          else if (Array.isArray(v)) {\n            v = new SVG.Array(v);\n          } // if the passed attribute is leading...\n\n\n          if (a == 'leading') {\n            // ... call the leading method instead\n            if (this.leading) {\n              this.leading(v);\n            }\n          } else {\n            // set given attribute on node\n            typeof n === 'string' ? this.node.setAttributeNS(n, a, v.toString()) : this.node.setAttribute(a, v.toString());\n          } // rebuild if required\n\n\n          if (this.rebuild && (a == 'font-size' || a == 'x')) {\n            this.rebuild(a, v);\n          }\n        }\n\n        return this;\n      }\n    });\n    SVG.extend(SVG.Element, {\n      // Add transformations\n      transform: function transform(o, relative) {\n        // get target in case of the fx module, otherwise reference this\n        var target = this,\n            matrix;\n   // act as a getter\n\n        if (_typeof(o) !== 'object') {\n          // get current matrix\n          matrix = new SVG.Matrix(target).extract();\n          return typeof o === 'string' ? matrix[o] : matrix;\n        } // get current matrix\n\n\n        matrix = new SVG.Matrix(target); // ensure relative flag\n\n        relative = !!relative || !!o.relative; // act on matrix\n\n        if (o.a != null) {\n          matrix = relative // relative\n          ? matrix.multiply(new SVG.Matrix(o)) // absolute\n          : new SVG.Matrix(o);\n        }\n\n        return this.attr('transform', matrix);\n      }\n    });\n    SVG.extend(SVG.Element, {\n      // Reset all transformations\n      untransform: function untransform() {\n        return this.attr('transform', null);\n      },\n      // merge the whole transformation chain into one matrix and returns it\n      matrixify: function matrixify() {\n        var matrix = (this.attr('transform') || '').split(SVG.regex.transforms).slice(0, -1).map(function (str) {\n          // generate key => value pairs\n          var kv = str.trim().split('(');\n          return [kv[0], kv[1].split(SVG.regex.delimiter).map(function (str) {\n            return parseFloat(str);\n          })];\n        }) // merge every transformation into one matrix\n        .reduce(function (matrix, transform) {\n          if (transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]));\n          return matrix[transform[0]].apply(matrix, transform[1]);\n        }, new SVG.Matrix());\n        return matrix;\n      },\n      // add an element to another parent without changing the visual representation on the screen\n      toParent: function toParent(parent) {\n        if (this == parent) return this;\n        var ctm = this.screenCTM();\n        var pCtm = parent.screenCTM().inverse();\n        this.addTo(parent).untransform().transform(pCtm.multiply(ctm));\n        return this;\n      },\n      // same as above with parent equals root-svg\n      toDoc: function toDoc() {\n        return this.toParent(this.doc());\n      }\n    });\n    SVG.Transformation = SVG.invent({\n      create: function create(source, inversed) {\n        if (arguments.length > 1 && typeof inversed !== 'boolean') {\n          return this.constructor.call(this, [].slice.call(arguments));\n        }\n\n        if (Array.isArray(source)) {\n          for (var i = 0, len = this.arguments.length; i < len; ++i) {\n            this[this.arguments[i]] = source[i];\n          }\n        } else if (source && _typeof(source) === 'object') {\n          for (var i = 0, len = this.arguments.length; i < len; ++i) {\n            this[this.arguments[i]] = source[this.arguments[i]];\n          }\n        }\n\n        this.inversed = false;\n\n        if (inversed === true) {\n          this.inversed = true;\n        }\n      }\n    });\n    SVG.Translate = SVG.invent({\n      parent: SVG.Matrix,\n      inherit: SVG.Transformation,\n      create: function create(source, inversed) {\n        this.constructor.apply(this, [].slice.call(arguments));\n      },\n      extend: {\n        arguments: ['transformedX', 'transformedY'],\n        method: 'translate'\n      }\n    });\n    SVG.extend(SVG.Element, {\n      // Dynamic style generator\n      style: function style(s, v) {\n        if (arguments.length == 0) {\n          // get full style\n          return this.node.style.cssText || '';\n        } else if (arguments.length < 2) {\n          // apply every style individually if an object is passed\n          if (_typeof(s) === 'object') {\n            for (var v_ in s) {\n              this.style(v_, s[v_]);\n            }\n          } else if (SVG.regex.isCss.test(s)) {\n            // parse css string\n            s = s.split(/\\s*;\\s*/) // filter out suffix ; and stuff like ;;\n            .filter(function (e) {\n              return !!e;\n            }).map(function (e) {\n              return e.split(/\\s*:\\s*/);\n            }); // apply every definition individually\n\n            while (v = s.pop()) {\n              this.style(v[0], v[1]);\n            }\n          } else {\n            // act as a getter if the first and only argument is not an object\n            return this.node.style[camelCase(s)];\n          }\n        } else {\n          this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v;\n        }\n\n        return this;\n      }\n    });\n    SVG.Parent = SVG.invent({\n      // Initialize node\n      create: function create(element) {\n        this.constructor.call(this, element);\n      },\n      // Inherit from\n      inherit: SVG.Element,\n      // Add class methods\n      extend: {\n        // Returns all child elements\n        children: function children() {\n          return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function (node) {\n            return SVG.adopt(node);\n          });\n        },\n        // Add given element at a position\n        add: function add(element, i) {\n          if (i == null) {\n            this.node.appendChild(element.node);\n          } else if (element.node != this.node.childNodes[i]) {\n            this.node.insertBefore(element.node, this.node.childNodes[i]);\n          }\n\n          return this;\n        },\n        // Basically does the same as `add()` but returns the added element instead\n        put: function put(element, i) {\n          this.add(element, i);\n          return element;\n        },\n        // Checks if the given element is a child\n        has: function has(element) {\n          return this.index(element) >= 0;\n        },\n        // Gets index of given element\n        index: function index(element) {\n          return [].slice.call(this.node.childNodes).indexOf(element.node);\n        },\n        // Get a element at the given index\n        get: function get(i) {\n          return SVG.adopt(this.node.childNodes[i]);\n        },\n        // Get first child\n        first: function first() {\n          return this.get(0);\n        },\n        // Get the last child\n        last: function last() {\n          return this.get(this.node.childNodes.length - 1);\n        },\n        // Iterates over all children and invokes a given block\n        each: function each(block, deep) {\n          var il,\n              children = this.children();\n\n          for (var i = 0, il = children.length; i < il; i++) {\n            if (children[i] instanceof SVG.Element) {\n              block.apply(children[i], [i, children]);\n            }\n\n            if (deep && children[i] instanceof SVG.Container) {\n              children[i].each(block, deep);\n            }\n          }\n\n          return this;\n        },\n        // Remove a given child\n        removeElement: function removeElement(element) {\n          this.node.removeChild(element.node);\n          return this;\n        },\n        // Remove all elements in this container\n        clear: function clear() {\n          // remove children\n          while (this.node.hasChildNodes()) {\n            this.node.removeChild(this.node.lastChild);\n          } // remove defs reference\n\n\n          delete this._defs;\n          return this;\n        },\n        // Get defs\n        defs: function defs() {\n          return this.doc().defs();\n        }\n      }\n    });\n    SVG.extend(SVG.Parent, {\n      ungroup: function ungroup(parent, depth) {\n        if (depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this;\n        parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent));\n        depth = depth || Infinity;\n        this.each(function () {\n          if (this instanceof SVG.Defs) return this;\n          if (this instanceof SVG.Parent) return this.ungroup(parent, depth - 1);\n          return this.toParent(parent);\n        });\n        this.node.firstChild || this.remove();\n        return this;\n      },\n      flatten: function flatten(parent, depth) {\n        return this.ungroup(parent, depth);\n      }\n    });\n    SVG.Container = SVG.invent({\n      // Initialize node\n      create: function create(element) {\n        this.constructor.call(this, element);\n      },\n      // Inherit from\n      inherit: SVG.Parent\n    });\n    SVG.ViewBox = SVG.invent({\n      // Define parent\n      parent: SVG.Container,\n      // Add parent method\n      construct: {}\n    }) // Add events to elements\n    ;\n    ['click', 'dblclick', 'mousedown', 'mouseup', 'mouseover', 'mouseout', 'mousemove', // , 'mouseenter' -> not supported by IE\n    // , 'mouseleave' -> not supported by IE\n    'touchstart', 'touchmove', 'touchleave', 'touchend', 'touchcancel'].forEach(function (event) {\n      // add event to SVG.Element\n      SVG.Element.prototype[event] = function (f) {\n        // bind event to element rather than element node\n        SVG.on(this.node, event, f);\n        return this;\n      };\n    }); // Initialize listeners stack\n\n    SVG.listeners = [];\n    SVG.handlerMap = [];\n    SVG.listenerId = 0; // Add event binder in the SVG namespace\n\n    SVG.on = function (node, event, listener, binding, options) {\n      // create listener, get object-index\n      var l = listener.bind(binding || node.instance || node),\n          index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1,\n          ev = event.split('.')[0],\n          ns = event.split('.')[1] || '*'; // ensure valid object\n\n      SVG.listeners[index] = SVG.listeners[index] || {};\n      SVG.listeners[index][ev] = SVG.listeners[index][ev] || {};\n      SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {};\n\n      if (!listener._svgjsListenerId) {\n        listener._svgjsListenerId = ++SVG.listenerId;\n      } // reference listener\n\n\n      SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l; // add listener\n\n      node.addEventListener(ev, l, options || {\n        passive: true\n      });\n    }; // Add event unbinder in the SVG namespace\n\n\n    SVG.off = function (node, event, listener) {\n      var index = SVG.handlerMap.indexOf(node),\n          ev = event && event.split('.')[0],\n          ns = event && event.split('.')[1],\n          namespace = '';\n      if (index == -1) return;\n\n      if (listener) {\n        if (typeof listener === 'function') listener = listener._svgjsListenerId;\n        if (!listener) return; // remove listener reference\n\n        if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\n          // remove listener\n          node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false);\n          delete SVG.listeners[index][ev][ns || '*'][listener];\n        }\n      } else if (ns && ev) {\n        // remove all listeners for a namespaced event\n        if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\n          for (var listener_ in SVG.listeners[index][ev][ns]) {\n            SVG.off(node, [ev, ns].join('.'), listener_);\n          }\n\n          delete SVG.listeners[index][ev][ns];\n        }\n      } else if (ns) {\n        // remove all listeners for a specific namespace\n        for (var event_ in SVG.listeners[index]) {\n          for (var namespace in SVG.listeners[index][event_]) {\n            if (ns === namespace) {\n              SVG.off(node, [event_, ns].join('.'));\n            }\n          }\n        }\n      } else if (ev) {\n        // remove all listeners for the event\n        if (SVG.listeners[index][ev]) {\n          for (var namespace in SVG.listeners[index][ev]) {\n            SVG.off(node, [ev, namespace].join('.'));\n          }\n\n          delete SVG.listeners[index][ev];\n        }\n      } else {\n        // remove all listeners on a given node\n        for (var event_ in SVG.listeners[index]) {\n          SVG.off(node, event_);\n        }\n\n        delete SVG.listeners[index];\n        delete SVG.handlerMap[index];\n      }\n    }; //\n\n\n    SVG.extend(SVG.Element, {\n      // Bind given event to listener\n      on: function on(event, listener, binding, options) {\n        SVG.on(this.node, event, listener, binding, options);\n        return this;\n      },\n      // Unbind event from listener\n      off: function off(event, listener) {\n        SVG.off(this.node, event, listener);\n        return this;\n      },\n      // Fire given event\n      fire: function fire(event, data) {\n        // Dispatch event\n        if (event instanceof window.Event) {\n          this.node.dispatchEvent(event);\n        } else {\n          this.node.dispatchEvent(event = new SVG.CustomEvent(event, {\n            detail: data,\n            cancelable: true\n          }));\n        }\n\n        this._event = event;\n        return this;\n      },\n      event: function event() {\n        return this._event;\n      }\n    });\n    SVG.Defs = SVG.invent({\n      // Initialize node\n      create: 'defs',\n      // Inherit from\n      inherit: SVG.Container\n    });\n    SVG.G = SVG.invent({\n      // Initialize node\n      create: 'g',\n      // Inherit from\n      inherit: SVG.Container,\n      // Add class methods\n      extend: {\n        // Move over x-axis\n        x: function x(_x2) {\n          return _x2 == null ? this.transform('x') : this.transform({\n            x: _x2 - this.x()\n          }, true);\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create a group element\n        group: function group() {\n          return this.put(new SVG.G());\n        }\n      }\n    });\n    SVG.Doc = SVG.invent({\n      // Initialize node\n      create: function create(element) {\n        if (element) {\n          // ensure the presence of a dom element\n          element = typeof element === 'string' ? document.getElementById(element) : element; // If the target is an svg element, use that element as the main wrapper.\n          // This allows svg.js to work with svg documents as well.\n\n          if (element.nodeName == 'svg') {\n            this.constructor.call(this, element);\n          } else {\n            this.constructor.call(this, SVG.create('svg'));\n            element.appendChild(this.node);\n            this.size('100%', '100%');\n          } // set svg element attributes and ensure defs node\n\n\n          this.namespace().defs();\n        }\n      },\n      // Inherit from\n      inherit: SVG.Container,\n      // Add class methods\n      extend: {\n        // Add namespaces\n        namespace: function namespace() {\n          return this.attr({\n            xmlns: SVG.ns,\n            version: '1.1'\n          }).attr('xmlns:xlink', SVG.xlink, SVG.xmlns).attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns);\n        },\n        // Creates and returns defs element\n        defs: function defs() {\n          if (!this._defs) {\n            var defs; // Find or create a defs element in this instance\n\n            if (defs = this.node.getElementsByTagName('defs')[0]) {\n              this._defs = SVG.adopt(defs);\n            } else {\n              this._defs = new SVG.Defs();\n            } // Make sure the defs node is at the end of the stack\n\n\n            this.node.appendChild(this._defs.node);\n          }\n\n          return this._defs;\n        },\n        // custom parent method\n        parent: function parent() {\n          if (!this.node.parentNode || this.node.parentNode.nodeName == '#document') return null;\n          return this.node.parentNode;\n        },\n        // Removes the doc from the DOM\n        remove: function remove() {\n          if (this.parent()) {\n            this.parent().removeChild(this.node);\n          }\n\n          return this;\n        },\n        clear: function clear() {\n          // remove children\n          while (this.node.hasChildNodes()) {\n            this.node.removeChild(this.node.lastChild);\n          } // remove defs reference\n\n\n          delete this._defs; // add back parser\n\n          if (SVG.parser.draw && !SVG.parser.draw.parentNode) {\n            this.node.appendChild(SVG.parser.draw);\n          }\n\n          return this;\n        },\n        clone: function clone(parent) {\n          // write dom data to the dom so the clone can pickup the data\n          this.writeDataToDom(); // get reference to node\n\n          var node = this.node; // clone element and assign new id\n\n          var clone = assignNewId(node.cloneNode(true)); // insert the clone in the given parent or after myself\n\n          if (parent) {\n            (parent.node || parent).appendChild(clone.node);\n          } else {\n            node.parentNode.insertBefore(clone.node, node.nextSibling);\n          }\n\n          return clone;\n        }\n      }\n    }); // ### This module adds backward / forward functionality to elements.\n    //\n\n    SVG.extend(SVG.Element, {// Get all siblings, including myself\n    });\n    SVG.Gradient = SVG.invent({\n      // Initialize node\n      create: function create(type) {\n        this.constructor.call(this, SVG.create(type + 'Gradient')); // store type\n\n        this.type = type;\n      },\n      // Inherit from\n      inherit: SVG.Container,\n      // Add class methods\n      extend: {\n        // Add a color stop\n        at: function at(offset, color, opacity) {\n          return this.put(new SVG.Stop()).update(offset, color, opacity);\n        },\n        // Update gradient\n        update: function update(block) {\n          // remove all stops\n          this.clear(); // invoke passed block\n\n          if (typeof block === 'function') {\n            block.call(this, this);\n          }\n\n          return this;\n        },\n        // Return the fill id\n        fill: function fill() {\n          return 'url(#' + this.id() + ')';\n        },\n        // Alias string convertion to fill\n        toString: function toString() {\n          return this.fill();\n        },\n        // custom attr to handle transform\n        attr: function attr(a, b, c) {\n          if (a == 'transform') a = 'gradientTransform';\n          return SVG.Container.prototype.attr.call(this, a, b, c);\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create gradient element in defs\n        gradient: function gradient(type, block) {\n          return this.defs().gradient(type, block);\n        }\n      }\n    }); // Add animatable methods to both gradient and fx module\n\n    SVG.extend(SVG.Gradient, SVG.FX, {\n      // From position\n      from: function from(x, y) {\n        return (this._target || this).type == 'radial' ? this.attr({\n          fx: new SVG.Number(x),\n          fy: new SVG.Number(y)\n        }) : this.attr({\n          x1: new SVG.Number(x),\n          y1: new SVG.Number(y)\n        });\n      },\n      // To position\n      to: function to(x, y) {\n        return (this._target || this).type == 'radial' ? this.attr({\n          cx: new SVG.Number(x),\n          cy: new SVG.Number(y)\n        }) : this.attr({\n          x2: new SVG.Number(x),\n          y2: new SVG.Number(y)\n        });\n      }\n    }); // Base gradient generation\n\n    SVG.extend(SVG.Defs, {\n      // define gradient\n      gradient: function gradient(type, block) {\n        return this.put(new SVG.Gradient(type)).update(block);\n      }\n    });\n    SVG.Stop = SVG.invent({\n      // Initialize node\n      create: 'stop',\n      // Inherit from\n      inherit: SVG.Element,\n      // Add class methods\n      extend: {\n        // add color stops\n        update: function update(o) {\n          if (typeof o === 'number' || o instanceof SVG.Number) {\n            o = {\n              offset: arguments[0],\n              color: arguments[1],\n              opacity: arguments[2]\n            };\n          } // set attributes\n\n\n          if (o.opacity != null) this.attr('stop-opacity', o.opacity);\n          if (o.color != null) this.attr('stop-color', o.color);\n          if (o.offset != null) this.attr('offset', new SVG.Number(o.offset));\n          return this;\n        }\n      }\n    });\n    SVG.Pattern = SVG.invent({\n      // Initialize node\n      create: 'pattern',\n      // Inherit from\n      inherit: SVG.Container,\n      // Add class methods\n      extend: {\n        // Return the fill id\n        fill: function fill() {\n          return 'url(#' + this.id() + ')';\n        },\n        // Update pattern by rebuilding\n        update: function update(block) {\n          // remove content\n          this.clear(); // invoke passed block\n\n          if (typeof block === 'function') {\n            block.call(this, this);\n          }\n\n          return this;\n        },\n        // Alias string convertion to fill\n        toString: function toString() {\n          return this.fill();\n        },\n        // custom attr to handle transform\n        attr: function attr(a, b, c) {\n          if (a == 'transform') a = 'patternTransform';\n          return SVG.Container.prototype.attr.call(this, a, b, c);\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create pattern element in defs\n        pattern: function pattern(width, height, block) {\n          return this.defs().pattern(width, height, block);\n        }\n      }\n    });\n    SVG.extend(SVG.Defs, {\n      // Define gradient\n      pattern: function pattern(width, height, block) {\n        return this.put(new SVG.Pattern()).update(block).attr({\n          x: 0,\n          y: 0,\n          width: width,\n          height: height,\n          patternUnits: 'userSpaceOnUse'\n        });\n      }\n    });\n    SVG.Shape = SVG.invent({\n      // Initialize node\n      create: function create(element) {\n        this.constructor.call(this, element);\n      },\n      // Inherit from\n      inherit: SVG.Element\n    });\n    SVG.Symbol = SVG.invent({\n      // Initialize node\n      create: 'symbol',\n      // Inherit from\n      inherit: SVG.Container,\n      construct: {\n        // create symbol\n        symbol: function symbol() {\n          return this.put(new SVG.Symbol());\n        }\n      }\n    });\n    SVG.Use = SVG.invent({\n      // Initialize node\n      create: 'use',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // Use element as a reference\n        element: function element(_element, file) {\n          // Set lined element\n          return this.attr('href', (file || '') + '#' + _element, SVG.xlink);\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create a use element\n        use: function use(element, file) {\n          return this.put(new SVG.Use()).element(element, file);\n        }\n      }\n    });\n    SVG.Rect = SVG.invent({\n      // Initialize node\n      create: 'rect',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add parent method\n      construct: {\n        // Create a rect element\n        rect: function rect(width, height) {\n          return this.put(new SVG.Rect()).size(width, height);\n        }\n      }\n    });\n    SVG.Circle = SVG.invent({\n      // Initialize node\n      create: 'circle',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add parent method\n      construct: {\n        // Create circle element, based on ellipse\n        circle: function circle(size) {\n          return this.put(new SVG.Circle()).rx(new SVG.Number(size).divide(2)).move(0, 0);\n        }\n      }\n    });\n    SVG.extend(SVG.Circle, SVG.FX, {\n      // Radius x value\n      rx: function rx(_rx) {\n        return this.attr('r', _rx);\n      },\n      // Alias radius x value\n      ry: function ry(_ry) {\n        return this.rx(_ry);\n      }\n    });\n    SVG.Ellipse = SVG.invent({\n      // Initialize node\n      create: 'ellipse',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add parent method\n      construct: {\n        // Create an ellipse\n        ellipse: function ellipse(width, height) {\n          return this.put(new SVG.Ellipse()).size(width, height).move(0, 0);\n        }\n      }\n    });\n    SVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\n      // Radius x value\n      rx: function rx(_rx2) {\n        return this.attr('rx', _rx2);\n      },\n      // Radius y value\n      ry: function ry(_ry2) {\n        return this.attr('ry', _ry2);\n      }\n    }); // Add common method\n\n    SVG.extend(SVG.Circle, SVG.Ellipse, {\n      // Move over x-axis\n      x: function x(_x3) {\n        return _x3 == null ? this.cx() - this.rx() : this.cx(_x3 + this.rx());\n      },\n      // Move over y-axis\n      y: function y(_y2) {\n        return _y2 == null ? this.cy() - this.ry() : this.cy(_y2 + this.ry());\n      },\n      // Move by center over x-axis\n      cx: function cx(x) {\n        return x == null ? this.attr('cx') : this.attr('cx', x);\n      },\n      // Move by center over y-axis\n      cy: function cy(y) {\n        return y == null ? this.attr('cy') : this.attr('cy', y);\n      },\n      // Set width of element\n      width: function width(_width2) {\n        return _width2 == null ? this.rx() * 2 : this.rx(new SVG.Number(_width2).divide(2));\n      },\n      // Set height of element\n      height: function height(_height2) {\n        return _height2 == null ? this.ry() * 2 : this.ry(new SVG.Number(_height2).divide(2));\n      },\n      // Custom size function\n      size: function size(width, height) {\n        var p = proportionalSize(this, width, height);\n        return this.rx(new SVG.Number(p.width).divide(2)).ry(new SVG.Number(p.height).divide(2));\n      }\n    });\n    SVG.Line = SVG.invent({\n      // Initialize node\n      create: 'line',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // Get array\n        array: function array() {\n          return new SVG.PointArray([[this.attr('x1'), this.attr('y1')], [this.attr('x2'), this.attr('y2')]]);\n        },\n        // Overwrite native plot() method\n        plot: function plot(x1, y1, x2, y2) {\n          if (x1 == null) {\n            return this.array();\n          } else if (typeof y1 !== 'undefined') {\n            x1 = {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2\n            };\n          } else {\n            x1 = new SVG.PointArray(x1).toLine();\n          }\n\n          return this.attr(x1);\n        },\n        // Move by left top corner\n        move: function move(x, y) {\n          return this.attr(this.array().move(x, y).toLine());\n        },\n        // Set element size to given width and height\n        size: function size(width, height) {\n          var p = proportionalSize(this, width, height);\n          return this.attr(this.array().size(p.width, p.height).toLine());\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create a line element\n        line: function line(x1, y1, x2, y2) {\n          // make sure plot is called as a setter\n          // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\n          return SVG.Line.prototype.plot.apply(this.put(new SVG.Line()), x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]);\n        }\n      }\n    });\n    SVG.Polyline = SVG.invent({\n      // Initialize node\n      create: 'polyline',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add parent method\n      construct: {\n        // Create a wrapped polyline element\n        polyline: function polyline(p) {\n          // make sure plot is called as a setter\n          return this.put(new SVG.Polyline()).plot(p || new SVG.PointArray());\n        }\n      }\n    });\n    SVG.Polygon = SVG.invent({\n      // Initialize node\n      create: 'polygon',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add parent method\n      construct: {\n        // Create a wrapped polygon element\n        polygon: function polygon(p) {\n          // make sure plot is called as a setter\n          return this.put(new SVG.Polygon()).plot(p || new SVG.PointArray());\n        }\n      }\n    }); // Add polygon-specific functions\n\n    SVG.extend(SVG.Polyline, SVG.Polygon, {\n      // Get array\n      array: function array() {\n        return this._array || (this._array = new SVG.PointArray(this.attr('points')));\n      },\n      // Plot new path\n      plot: function plot(p) {\n        return p == null ? this.array() : this.clear().attr('points', typeof p === 'string' ? p : this._array = new SVG.PointArray(p));\n      },\n      // Clear array cache\n      clear: function clear() {\n        delete this._array;\n        return this;\n      },\n      // Move by left top corner\n      move: function move(x, y) {\n        return this.attr('points', this.array().move(x, y));\n      },\n      // Set element size to given width and height\n      size: function size(width, height) {\n        var p = proportionalSize(this, width, height);\n        return this.attr('points', this.array().size(p.width, p.height));\n      }\n    }); // unify all point to point elements\n\n    SVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\n      // Define morphable array\n      morphArray: SVG.PointArray,\n      // Move by left top corner over x-axis\n      x: function x(_x4) {\n        return _x4 == null ? this.bbox().x : this.move(_x4, this.bbox().y);\n      },\n      // Move by left top corner over y-axis\n      y: function y(_y3) {\n        return _y3 == null ? this.bbox().y : this.move(this.bbox().x, _y3);\n      },\n      // Set width of element\n      width: function width(_width3) {\n        var b = this.bbox();\n        return _width3 == null ? b.width : this.size(_width3, b.height);\n      },\n      // Set height of element\n      height: function height(_height3) {\n        var b = this.bbox();\n        return _height3 == null ? b.height : this.size(b.width, _height3);\n      }\n    });\n    SVG.Path = SVG.invent({\n      // Initialize node\n      create: 'path',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // Define morphable array\n        morphArray: SVG.PathArray,\n        // Get array\n        array: function array() {\n          return this._array || (this._array = new SVG.PathArray(this.attr('d')));\n        },\n        // Plot new path\n        plot: function plot(d) {\n          return d == null ? this.array() : this.clear().attr('d', typeof d === 'string' ? d : this._array = new SVG.PathArray(d));\n        },\n        // Clear array cache\n        clear: function clear() {\n          delete this._array;\n          return this;\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create a wrapped path element\n        path: function path(d) {\n          // make sure plot is called as a setter\n          return this.put(new SVG.Path()).plot(d || new SVG.PathArray());\n        }\n      }\n    });\n    SVG.Image = SVG.invent({\n      // Initialize node\n      create: 'image',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // (re)load image\t\n        load: function load(url) {\n          if (!url) return this;\n          var self = this,\n              img = new window.Image(); // preload image\t\n\n          SVG.on(img, 'load', function () {\n            SVG.off(img);\n            var p = self.parent(SVG.Pattern);\n            if (p === null) return; // ensure image size\t\n\n            if (self.width() == 0 && self.height() == 0) {\n              self.size(img.width, img.height);\n            } // ensure pattern size if not set\t\n\n\n            if (p && p.width() == 0 && p.height() == 0) {\n              p.size(self.width(), self.height());\n            } // callback\t\n\n\n            if (typeof self._loaded === 'function') {\n              self._loaded.call(self, {\n                width: img.width,\n                height: img.height,\n                ratio: img.width / img.height,\n                url: url\n              });\n            }\n          });\n          SVG.on(img, 'error', function (e) {\n            SVG.off(img);\n\n            if (typeof self._error === 'function') {\n              self._error.call(self, e);\n            }\n          });\n          return this.attr('href', img.src = this.src = url, SVG.xlink);\n        },\n        // Add loaded callback\t\n        loaded: function loaded(_loaded) {\n          this._loaded = _loaded;\n          return this;\n        },\n        error: function error(_error) {\n          this._error = _error;\n          return this;\n        }\n      },\n      // Add parent method\n      construct: {\n        // create image element, load image and set its size\t\n        image: function image(source, width, height) {\n          return this.put(new SVG.Image()).load(source).size(width || 0, height || width || 0);\n        }\n      }\n    });\n    SVG.Text = SVG.invent({\n      // Initialize node\n      create: function create() {\n        this.constructor.call(this, SVG.create('text'));\n        this.dom.leading = new SVG.Number(1.3); // store leading value for rebuilding\n\n        this._rebuild = true; // enable automatic updating of dy values\n\n        this._build = false; // disable build mode for adding multiple lines\n        // set default font\n\n        this.attr('font-family', SVG.defaults.attrs['font-family']);\n      },\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // Move over x-axis\n        x: function x(_x5) {\n          // act as getter\n          if (_x5 == null) {\n            return this.attr('x');\n          }\n\n          return this.attr('x', _x5);\n        },\n        // Set the text content\n        text: function text(_text) {\n          // act as getter\n          if (typeof _text === 'undefined') {\n            var _text = '';\n            var children = this.node.childNodes;\n\n            for (var i = 0, len = children.length; i < len; ++i) {\n              // add newline if its not the first child and newLined is set to true\n              if (i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true) {\n                _text += '\\n';\n              } // add content of this node\n\n\n              _text += children[i].textContent;\n            }\n\n            return _text;\n          } // remove existing content\n\n\n          this.clear().build(true);\n\n          if (typeof _text === 'function') {\n            // call block\n            _text.call(this, this);\n          } else {\n            // store text and make sure text is not blank\n            _text = _text.split('\\n'); // build new lines\n\n            for (var i = 0, il = _text.length; i < il; i++) {\n              this.tspan(_text[i]).newLine();\n            }\n          } // disable build mode and rebuild lines\n\n\n          return this.build(false).rebuild();\n        },\n        // Set font size\n        size: function size(_size) {\n          return this.attr('font-size', _size).rebuild();\n        },\n        // Set / get leading\n        leading: function leading(value) {\n          // act as getter\n          if (value == null) {\n            return this.dom.leading;\n          } // act as setter\n\n\n          this.dom.leading = new SVG.Number(value);\n          return this.rebuild();\n        },\n        // Get all the first level lines\n        lines: function lines() {\n          var node = (this.textPath && this.textPath() || this).node; // filter tspans and map them to SVG.js instances\n\n          var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function (el) {\n            return SVG.adopt(el);\n          }); // return an instance of SVG.set\n\n          return new SVG.Set(lines);\n        },\n        // Rebuild appearance type\n        rebuild: function rebuild(_rebuild) {\n          // store new rebuild flag if given\n          if (typeof _rebuild === 'boolean') {\n            this._rebuild = _rebuild;\n          } // define position of all lines\n\n\n          if (this._rebuild) {\n            var self = this,\n                blankLineOffset = 0,\n                dy = this.dom.leading * new SVG.Number(this.attr('font-size'));\n            this.lines().each(function () {\n              if (this.dom.newLined) {\n                if (!self.textPath()) {\n                  this.attr('x', self.attr('x'));\n                }\n\n                if (this.text() == '\\n') {\n                  blankLineOffset += dy;\n                } else {\n                  this.attr('dy', dy + blankLineOffset);\n                  blankLineOffset = 0;\n                }\n              }\n            });\n            this.fire('rebuild');\n          }\n\n          return this;\n        },\n        // Enable / disable build mode\n        build: function build(_build) {\n          this._build = !!_build;\n          return this;\n        },\n        // overwrite method from parent to set data properly\n        setData: function setData(o) {\n          this.dom = o;\n          this.dom.leading = new SVG.Number(o.leading || 1.3);\n          return this;\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create text element\n        text: function text(_text2) {\n          return this.put(new SVG.Text()).text(_text2);\n        },\n        // Create plain text element\n        plain: function plain(text) {\n          return this.put(new SVG.Text()).plain(text);\n        }\n      }\n    });\n    SVG.Tspan = SVG.invent({\n      // Initialize node\n      create: 'tspan',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // Set text content\n        text: function text(_text3) {\n          if (_text3 == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '');\n          typeof _text3 === 'function' ? _text3.call(this, this) : this.plain(_text3);\n          return this;\n        },\n        // Shortcut dx\n        dx: function dx(_dx) {\n          return this.attr('dx', _dx);\n        },\n        // Shortcut dy\n        dy: function dy(_dy) {\n          return this.attr('dy', _dy);\n        },\n        // Create new line\n        newLine: function newLine() {\n          // fetch text parent\n          var t = this.parent(SVG.Text); // mark new line\n\n          this.dom.newLined = true; // apply new hy¡n\n\n          return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x());\n        }\n      }\n    });\n    SVG.extend(SVG.Text, SVG.Tspan, {\n      // Create plain text node\n      plain: function plain(text) {\n        // clear if build mode is disabled\n        if (this._build === false) {\n          this.clear();\n        } // create text node\n\n\n        this.node.appendChild(document.createTextNode(text));\n        return this;\n      },\n      // Create a tspan\n      tspan: function tspan(text) {\n        var node = (this.textPath && this.textPath() || this).node,\n            tspan = new SVG.Tspan(); // clear if build mode is disabled\n\n        if (this._build === false) {\n          this.clear();\n        } // add new tspan\n\n\n        node.appendChild(tspan.node);\n        return tspan.text(text);\n      },\n      // Clear all lines\n      clear: function clear() {\n        var node = (this.textPath && this.textPath() || this).node; // remove existing child nodes\n\n        while (node.hasChildNodes()) {\n          node.removeChild(node.lastChild);\n        }\n\n        return this;\n      },\n      // Get length of text element\n      length: function length() {\n        return this.node.getComputedTextLength();\n      }\n    });\n    SVG.TextPath = SVG.invent({\n      // Initialize node\n      create: 'textPath',\n      // Inherit from\n      inherit: SVG.Parent,\n      // Define parent class\n      parent: SVG.Text,\n      // Add parent method\n      construct: {\n        morphArray: SVG.PathArray,\n        // return the array of the path track element\n        array: function array() {\n          var track = this.track();\n          return track ? track.array() : null;\n        },\n        // Plot path if any\n        plot: function plot(d) {\n          var track = this.track(),\n              pathArray = null;\n\n          if (track) {\n            pathArray = track.plot(d);\n          }\n\n          return d == null ? pathArray : this;\n        },\n        // Get the path track element\n        track: function track() {\n          var path = this.textPath();\n\n          if (path) {\n            return path.reference('href');\n          }\n        },\n        // Get the textPath child\n        textPath: function textPath() {\n          if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath') {\n            return SVG.adopt(this.node.firstChild);\n          }\n        }\n      }\n    });\n    SVG.Nested = SVG.invent({\n      // Initialize node\n      create: function create() {\n        this.constructor.call(this, SVG.create('svg'));\n        this.style('overflow', 'visible');\n      },\n      // Inherit from\n      inherit: SVG.Container,\n      // Add parent method\n      construct: {\n        // Create nested svg document\n        nested: function nested() {\n          return this.put(new SVG.Nested());\n        }\n      }\n    }); // Define list of available attributes for stroke and fill\n\n    var sugar = {\n      stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset'],\n      fill: ['color', 'opacity', 'rule'],\n      prefix: function prefix(t, a) {\n        return a == 'color' ? t : t + '-' + a;\n      }\n    } // Add sugar for fill and stroke\n    ;\n    ['fill', 'stroke'].forEach(function (m) {\n      var extension = {};\n\n      extension[m] = function (o) {\n        if (typeof o === 'undefined') {\n          return this;\n        }\n\n        if (typeof o === 'string' || SVG.Color.isRgb(o) || o && typeof o.fill === 'function') {\n          this.attr(m, o);\n        } else // set all attributes from sugar.fill and sugar.stroke list\n          {\n            for (var i = sugar[m].length - 1; i >= 0; i--) {\n              if (o[sugar[m][i]] != null) {\n                this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]]);\n              }\n            }\n          }\n\n        return this;\n      };\n\n      SVG.extend(SVG.Element, SVG.FX, extension);\n    });\n    SVG.extend(SVG.Element, SVG.FX, {\n      // Map translate to transform\n      translate: function translate(x, y) {\n        return this.transform({\n          x: x,\n          y: y\n        });\n      },\n      // Map matrix to transform\n      matrix: function matrix(m) {\n        return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m));\n      },\n      // Opacity\n      opacity: function opacity(value) {\n        return this.attr('opacity', value);\n      },\n      // Relative move over x axis\n      dx: function dx(x) {\n        return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true);\n      },\n      // Relative move over y axis\n      dy: function dy(y) {\n        return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true);\n      }\n    });\n    SVG.extend(SVG.Path, {\n      // Get path length\n      length: function length() {\n        return this.node.getTotalLength();\n      },\n      // Get point at length\n      pointAt: function pointAt(length) {\n        return this.node.getPointAtLength(length);\n      }\n    });\n    SVG.Set = SVG.invent({\n      // Initialize\n      create: function create(members) {\n        // Set initial state\n        Array.isArray(members) ? this.members = members : this.clear();\n      },\n      // Add class methods\n      extend: {\n        // Add element to set\n        add: function add() {\n          var il,\n              elements = [].slice.call(arguments);\n\n          for (var i = 0, il = elements.length; i < il; i++) {\n            this.members.push(elements[i]);\n          }\n\n          return this;\n        },\n        // Remove element from set\n        remove: function remove(element) {\n          var i = this.index(element); // remove given child\n\n          if (i > -1) {\n            this.members.splice(i, 1);\n          }\n\n          return this;\n        },\n        // Iterate over all members\n        each: function each(block) {\n          for (var i = 0, il = this.members.length; i < il; i++) {\n            block.apply(this.members[i], [i, this.members]);\n          }\n\n          return this;\n        },\n        // Restore to defaults\n        clear: function clear() {\n          // initialize store\n          this.members = [];\n          return this;\n        },\n        // Get the length of a set\n        length: function length() {\n          return this.members.length;\n        },\n        // Checks if a given element is present in set\n        has: function has(element) {\n          return this.index(element) >= 0;\n        },\n        // retuns index of given element in set\n        index: function index(element) {\n          return this.members.indexOf(element);\n        },\n        // Get member at given index\n        get: function get(i) {\n          return this.members[i];\n        },\n        // Get first member\n        first: function first() {\n          return this.get(0);\n        },\n        // Get last member\n        last: function last() {\n          return this.get(this.members.length - 1);\n        },\n        // Default value\n        valueOf: function valueOf() {\n          return this.members;\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create a new set\n        set: function set(members) {\n          return new SVG.Set(members);\n        }\n      }\n    });\n    SVG.FX.Set = SVG.invent({\n      // Initialize node\n      create: function create(set) {\n        // store reference to set\n        this.set = set;\n      }\n    }); // Alias methods\n\n    SVG.Set.inherit = function () {\n      var methods = []; // gather shape methods\n\n      for (var m in SVG.Shape.prototype) {\n        if (typeof SVG.Shape.prototype[m] === 'function' && typeof SVG.Set.prototype[m] !== 'function') {\n          methods.push(m);\n        }\n      } // apply shape aliasses\n\n\n      methods.forEach(function (method) {\n        SVG.Set.prototype[method] = function () {\n          for (var i = 0, il = this.members.length; i < il; i++) {\n            if (this.members[i] && typeof this.members[i][method] === 'function') {\n              this.members[i][method].apply(this.members[i], arguments);\n            }\n          }\n\n          return method == 'animate' ? this.fx || (this.fx = new SVG.FX.Set(this)) : this;\n        };\n      }); // clear methods for the next round\n\n      methods = []; // gather fx methods\n\n      for (var m in SVG.FX.prototype) {\n        if (typeof SVG.FX.prototype[m] === 'function' && typeof SVG.FX.Set.prototype[m] !== 'function') {\n          methods.push(m);\n        }\n      } // apply fx aliasses\n\n\n      methods.forEach(function (method) {\n        SVG.FX.Set.prototype[method] = function () {\n          for (var i = 0, il = this.set.members.length; i < il; i++) {\n            this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments);\n          }\n\n          return this;\n        };\n      });\n    };\n\n    SVG.extend(SVG.Element, {});\n    SVG.extend(SVG.Element, {\n      // Remember arbitrary data\n      remember: function remember(k, v) {\n        // remember every item in an object individually\n        if (_typeof(arguments[0]) === 'object') {\n          for (var v_ in k) {\n            this.remember(v_, k[v_]);\n          }\n        } // retrieve memory\n        else if (arguments.length == 1) {\n          return this.memory()[k];\n        } // store memory\n        else {\n          this.memory()[k] = v;\n        }\n\n        return this;\n      },\n      // Erase a given memory\n      forget: function forget() {\n        if (arguments.length == 0) {\n          this._memory = {};\n        } else {\n          for (var i = arguments.length - 1; i >= 0; i--) {\n            delete this.memory()[arguments[i]];\n          }\n        }\n\n        return this;\n      },\n      // Initialize or return local memory object\n      memory: function memory() {\n        return this._memory || (this._memory = {});\n      }\n    }); // Method for getting an element by id\n\n    SVG.get = function (id) {\n      var node = document.getElementById(idFromReference(id) || id);\n      return SVG.adopt(node);\n    }; // Select elements by query string\n\n\n    SVG.select = function (query, parent) {\n      return new SVG.Set(SVG.utils.map((parent || document).querySelectorAll(query), function (node) {\n        return SVG.adopt(node);\n      }));\n    };\n\n    SVG.extend(SVG.Parent, {\n      // Scoped select method\n      select: function select(query) {\n        return SVG.select(query, this.node);\n      }\n    });\n\n    function pathRegReplace(a, b, c, d) {\n      return c + d.replace(SVG.regex.dots, ' .');\n    } // creates deep clone of array\n\n\n    function _is(el, obj) {\n      return el instanceof obj;\n    } // tests if a given selector matches an element\n\n\n    function _matches(el, selector) {\n      return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\n    } // Convert dash-separated-string to camelCase\n\n\n    function camelCase(s) {\n      return s.toLowerCase().replace(/-(.)/g, function (m, g) {\n        return g.toUpperCase();\n      });\n    } // Capitalize first letter of a string\n\n\n    function capitalize(s) {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    } // Ensure to six-based hex\n\n\n    function fullHex(hex) {\n      return hex.length == 4 ? ['#', hex.substring(1, 2), hex.substring(1, 2), hex.substring(2, 3), hex.substring(2, 3), hex.substring(3, 4), hex.substring(3, 4)].join('') : hex;\n    } // Component to hex value\n\n\n    function compToHex(comp) {\n      var hex = comp.toString(16);\n      return hex.length == 1 ? '0' + hex : hex;\n    } // Calculate proportional width and height values when necessary\n\n\n    function proportionalSize(element, width, height) {\n      if (width == null || height == null) {\n        var box = element.bbox();\n\n        if (width == null) {\n          width = box.width / box.height * height;\n        } else if (height == null) {\n          height = box.height / box.width * width;\n        }\n      }\n\n      return {\n        width: width,\n        height: height\n      };\n    } // Delta transform point\n\n\n    function deltaTransformPoint(matrix, x, y) {\n      return {\n        x: x * matrix.a + y * matrix.c + 0,\n        y: x * matrix.b + y * matrix.d + 0\n      };\n    } // Map matrix array to object\n\n\n    function arrayToMatrix(a) {\n      return {\n        a: a[0],\n        b: a[1],\n        c: a[2],\n        d: a[3],\n        e: a[4],\n        f: a[5]\n      };\n    } // Parse matrix if required\n\n\n    function parseMatrix(matrix) {\n      if (!(matrix instanceof SVG.Matrix)) {\n        matrix = new SVG.Matrix(matrix);\n      }\n\n      return matrix;\n    } // Add centre point to transform object\n\n\n    function arrayToString(a) {\n      for (var i = 0, il = a.length, s = ''; i < il; i++) {\n        s += a[i][0];\n\n        if (a[i][1] != null) {\n          s += a[i][1];\n\n          if (a[i][2] != null) {\n            s += ' ';\n            s += a[i][2];\n\n            if (a[i][3] != null) {\n              s += ' ';\n              s += a[i][3];\n              s += ' ';\n              s += a[i][4];\n\n              if (a[i][5] != null) {\n                s += ' ';\n                s += a[i][5];\n                s += ' ';\n                s += a[i][6];\n\n                if (a[i][7] != null) {\n                  s += ' ';\n                  s += a[i][7];\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s + ' ';\n    } // Deep new id assignment\n\n\n    function assignNewId(node) {\n      // do the same for SVG child nodes as well\n      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n        if (node.childNodes[i] instanceof window.SVGElement) {\n          assignNewId(node.childNodes[i]);\n        }\n      }\n\n      return SVG.adopt(node).id(SVG.eid(node.nodeName));\n    } // Add more bounding box properties\n\n\n    function fullBox(b) {\n      if (b.x == null) {\n        b.x = 0;\n        b.y = 0;\n        b.width = 0;\n        b.height = 0;\n      }\n\n      b.w = b.width;\n      b.h = b.height;\n      b.x2 = b.x + b.width;\n      b.y2 = b.y + b.height;\n      b.cx = b.x + b.width / 2;\n      b.cy = b.y + b.height / 2;\n      return b;\n    } // Get id from reference string\n\n\n    function idFromReference(url) {\n      var m = (url || '').toString().match(SVG.regex.reference);\n      if (m) return m[1];\n    } // If values like 1e-88 are passed, this is not a valid 32 bit float,\n    // but in those cases, we are so close to 0 that 0 works well!\n\n\n    function float32String(v) {\n      return Math.abs(v) > 1e-37 ? v : 0;\n    } // Create matrix array for looping\n\n\n    var abcdef = 'abcdef'.split(''); // Add CustomEvent to IE9 and IE10\t\n\n    if (typeof window.CustomEvent !== 'function') {\n      // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\t\n      var CustomEventPoly = function CustomEventPoly(event, options) {\n        options = options || {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        };\n        var e = document.createEvent('CustomEvent');\n        e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail);\n        return e;\n      };\n\n      CustomEventPoly.prototype = window.Event.prototype;\n      SVG.CustomEvent = CustomEventPoly;\n    } else {\n      SVG.CustomEvent = window.CustomEvent;\n    }\n\n    return SVG;\n  });\n\n  /*! svg.filter.js - v2.0.2 - 2016-02-24\n  * https://github.com/wout/svg.filter.js\n  * Copyright (c) 2016 Wout Fierens; Licensed MIT */\n  (function() {\n\n    // Main filter class\n    SVG.Filter = SVG.invent({\n      create: 'filter',\n      inherit: SVG.Parent,\n      extend: {\n        // Static strings\n        source:           'SourceGraphic',\n        sourceAlpha:      'SourceAlpha',\n        background:       'BackgroundImage',\n        backgroundAlpha:  'BackgroundAlpha',\n        fill:             'FillPaint',\n        stroke:           'StrokePaint',\n\n        autoSetIn: true,\n        // Custom put method for leaner code\n        put: function(element, i) {\n          this.add(element, i);\n\n          if(!element.attr('in') && this.autoSetIn){\n            element.attr('in',this.source);\n          }\n          if(!element.attr('result')){\n            element.attr('result',element);\n          }\n\n          return element\n        },\n        // Blend effect\n        blend: function(in1, in2, mode) {\n          return this.put(new SVG.BlendEffect(in1, in2, mode))\n        },\n        // ColorMatrix effect\n        colorMatrix: function(type, values) {\n          return this.put(new SVG.ColorMatrixEffect(type, values))\n        },\n        // ConvolveMatrix effect\n        convolveMatrix: function(matrix) {\n          return this.put(new SVG.ConvolveMatrixEffect(matrix))\n        },\n        // ComponentTransfer effect\n        componentTransfer: function(components) {\n          return this.put(new SVG.ComponentTransferEffect(components))\n        },\n        // Composite effect\n        composite: function(in1, in2, operator) {\n          return this.put(new SVG.CompositeEffect(in1, in2, operator))\n        },\n        // Flood effect\n        flood: function(color, opacity) {\n          return this.put(new SVG.FloodEffect(color, opacity))\n        },\n        // Offset effect\n        offset: function(x, y) {\n          return this.put(new SVG.OffsetEffect(x,y))\n        },\n        // Image effect\n        image: function(src) {\n          return this.put(new SVG.ImageEffect(src))\n        },\n        // Merge effect\n        merge: function() {\n          //pass the array of arguments to the constructor because we dont know if the user gave us an array as the first arguemnt or wether they listed the effects in the arguments\n          var args = [undefined];\n          for(var i in arguments) args.push(arguments[i]);\n          return this.put(new (SVG.MergeEffect.bind.apply(SVG.MergeEffect,args)))\n        },\n        // Gaussian Blur effect\n        gaussianBlur: function(x,y) {\n          return this.put(new SVG.GaussianBlurEffect(x,y))\n        },\n        // Morphology effect\n        morphology: function(operator,radius){\n          return this.put(new SVG.MorphologyEffect(operator,radius))\n        },\n        // DiffuseLighting effect\n        diffuseLighting: function(surfaceScale,diffuseConstant,kernelUnitLength){\n          return this.put(new SVG.DiffuseLightingEffect(surfaceScale,diffuseConstant,kernelUnitLength))\n        },\n        // DisplacementMap effect\n        displacementMap: function(in1,in2,scale,xChannelSelector,yChannelSelector){\n          return this.put(new SVG.DisplacementMapEffect(in1,in2,scale,xChannelSelector,yChannelSelector))\n        },\n        // SpecularLighting effect\n        specularLighting: function(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){\n          return this.put(new SVG.SpecularLightingEffect(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength))\n        },\n        // Tile effect\n        tile: function(){\n          return this.put(new SVG.TileEffect());\n        },\n        // Turbulence effect\n        turbulence: function(baseFrequency,numOctaves,seed,stitchTiles,type){\n          return this.put(new SVG.TurbulenceEffect(baseFrequency,numOctaves,seed,stitchTiles,type))\n        },\n        // Default string value\n        toString: function() {\n          return 'url(#' + this.attr('id') + ')'\n        }\n      }\n    });\n\n    //add .filter function\n    SVG.extend(SVG.Defs, {\n      // Define filter\n      filter: function(block) {\n        var filter = this.put(new SVG.Filter);\n\n        /* invoke passed block */\n        if (typeof block === 'function')\n          block.call(filter, filter);\n\n        return filter\n      }\n    });\n    SVG.extend(SVG.Container, {\n      // Define filter on defs\n      filter: function(block) {\n        return this.defs().filter(block)\n      }\n    });\n    SVG.extend(SVG.Element, SVG.G, SVG.Nested, {\n      // Create filter element in defs and store reference\n      filter: function(block) {\n        this.filterer = block instanceof SVG.Element ?\n          block : this.doc().filter(block);\n\n        if(this.doc() && this.filterer.doc() !== this.doc()){\n          this.doc().defs().add(this.filterer);\n        }\n\n        this.attr('filter', this.filterer);\n\n        return this.filterer\n      },\n      // Remove filter\n      unfilter: function(remove) {\n        /* also remove the filter node */\n        if (this.filterer && remove === true)\n          this.filterer.remove();\n\n        /* delete reference to filterer */\n        delete this.filterer;\n\n        /* remove filter attribute */\n        return this.attr('filter', null)\n      }\n    });\n\n    // Create SVG.Effect class\n    SVG.Effect = SVG.invent({\n      create: function(){\n        this.constructor.call(this);\n      },\n      inherit: SVG.Element,\n      extend: {\n        // Set in attribute\n        in: function(effect) {\n          return effect == null? this.parent() && this.parent().select('[result=\"'+this.attr('in')+'\"]').get(0) || this.attr('in') : this.attr('in', effect)\n        },\n        // Named result\n        result: function(result) {\n          return result == null? this.attr('result') : this.attr('result',result)\n        },\n        // Stringification\n        toString: function() {\n          return this.result()\n        }\n      }\n    });\n\n    // create class for parent effects like merge\n    // Inherit from SVG.Parent\n    SVG.ParentEffect = SVG.invent({\n      create: function(){\n        this.constructor.call(this);\n      },\n      inherit: SVG.Parent,\n      extend: {\n        // Set in attribute\n        in: function(effect) {\n          return effect == null? this.parent() && this.parent().select('[result=\"'+this.attr('in')+'\"]').get(0) || this.attr('in') : this.attr('in', effect)\n        },\n        // Named result\n        result: function(result) {\n          return result == null? this.attr('result') : this.attr('result',result)\n        },\n        // Stringification\n        toString: function() {\n          return this.result()\n        }\n      }\n    });\n\n    //chaining\n    var chainingEffects = {\n      // Blend effect\n      blend: function(in2, mode) {\n        return this.parent() && this.parent().blend(this, in2, mode) //pass this as the first input\n      },\n      // ColorMatrix effect\n      colorMatrix: function(type, values) {\n        return this.parent() && this.parent().colorMatrix(type, values).in(this)\n      },\n      // ConvolveMatrix effect\n      convolveMatrix: function(matrix) {\n        return this.parent() && this.parent().convolveMatrix(matrix).in(this)\n      },\n      // ComponentTransfer effect\n      componentTransfer: function(components) {\n        return this.parent() && this.parent().componentTransfer(components).in(this)\n      },\n      // Composite effect\n      composite: function(in2, operator) {\n        return this.parent() && this.parent().composite(this, in2, operator) //pass this as the first input\n      },\n      // Flood effect\n      flood: function(color, opacity) {\n        return this.parent() && this.parent().flood(color, opacity) //this effect dont have inputs\n      },\n      // Offset effect\n      offset: function(x, y) {\n        return this.parent() && this.parent().offset(x,y).in(this)\n      },\n      // Image effect\n      image: function(src) {\n        return this.parent() && this.parent().image(src) //this effect dont have inputs\n      },\n      // Merge effect\n      merge: function() {\n        return this.parent() && this.parent().merge.apply(this.parent(),[this].concat(arguments)) //pass this as the first argument\n      },\n      // Gaussian Blur effect\n      gaussianBlur: function(x,y) {\n        return this.parent() && this.parent().gaussianBlur(x,y).in(this)\n      },\n      // Morphology effect\n      morphology: function(operator,radius){\n        return this.parent() && this.parent().morphology(operator,radius).in(this)\n      },\n      // DiffuseLighting effect\n      diffuseLighting: function(surfaceScale,diffuseConstant,kernelUnitLength){\n        return this.parent() && this.parent().diffuseLighting(surfaceScale,diffuseConstant,kernelUnitLength).in(this)\n      },\n      // DisplacementMap effect\n      displacementMap: function(in2,scale,xChannelSelector,yChannelSelector){\n        return this.parent() && this.parent().displacementMap(this,in2,scale,xChannelSelector,yChannelSelector) //pass this as the first input\n      },\n      // SpecularLighting effect\n      specularLighting: function(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){\n        return this.parent() && this.parent().specularLighting(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength).in(this)\n      },\n      // Tile effect\n      tile: function(){\n        return this.parent() && this.parent().tile().in(this)\n      },\n      // Turbulence effect\n      turbulence: function(baseFrequency,numOctaves,seed,stitchTiles,type){\n        return this.parent() && this.parent().turbulence(baseFrequency,numOctaves,seed,stitchTiles,type).in(this)\n      }\n    };\n    SVG.extend(SVG.Effect,chainingEffects);\n    SVG.extend(SVG.ParentEffect,chainingEffects);\n\n    //crea class for child effects, like MergeNode, FuncR and lights\n    SVG.ChildEffect = SVG.invent({\n      create: function(){\n        this.constructor.call(this);\n      },\n      inherit: SVG.Element,\n      extend: {\n      in: function(effect){\n        this.attr('in',effect);\n      }\n      //dont include any \"result\" functions because these types of nodes dont have them\n      }\n    });\n\n    // Create all different effects\n    var effects = {\n      blend: function(in1,in2,mode){\n        this.attr({\n          in: in1,\n          in2: in2,\n          mode: mode || 'normal'\n        });\n      },\n      colorMatrix: function(type,values){\n        if (type == 'matrix')\n          values = normaliseMatrix(values);\n\n        this.attr({\n          type:   type\n        , values: typeof values == 'undefined' ? null : values\n        });\n      },\n      convolveMatrix: function(matrix){\n        matrix = normaliseMatrix(matrix);\n\n        this.attr({\n          order:        Math.sqrt(matrix.split(' ').length)\n        , kernelMatrix: matrix\n        });\n      },\n      composite: function(in1, in2, operator){\n        this.attr({\n          in: in1,\n          in2: in2,\n          operator: operator\n        });\n      },\n      flood: function(color,opacity){\n        this.attr('flood-color',color);\n        if(opacity != null) this.attr('flood-opacity',opacity);\n      },\n      offset: function(x,y){\n        this.attr({\n          dx: x,\n          dy: y\n        });\n      },\n      image: function(src){\n        this.attr('href', src, SVG.xlink);\n      },\n      displacementMap: function(in1,in2,scale,xChannelSelector,yChannelSelector){\n        this.attr({\n          in: in1,\n          in2: in2,\n          scale: scale,\n          xChannelSelector: xChannelSelector,\n          yChannelSelector: yChannelSelector\n        });\n      },\n      gaussianBlur: function(x,y){\n        if(x != null || y != null)\n          this.attr('stdDeviation', listString(Array.prototype.slice.call(arguments)));\n        else\n          this.attr('stdDeviation', '0 0');\n      },\n      morphology: function(operator,radius){\n        this.attr({\n          operator: operator,\n          radius: radius\n        });\n      },\n      tile: function(){\n\n      },\n      turbulence: function(baseFrequency,numOctaves,seed,stitchTiles,type){\n        this.attr({\n          numOctaves: numOctaves,\n          seed: seed,\n          stitchTiles: stitchTiles,\n          baseFrequency: baseFrequency,\n          type: type\n        });\n      }\n    };\n\n    // Create all parent effects\n    var parentEffects = {\n      merge: function(){\n        var children;\n\n        //test to see if we have a set\n        if(arguments[0] instanceof SVG.Set){\n          var that = this;\n          arguments[0].each(function(i){\n            if(this instanceof SVG.MergeNode)\n              that.put(this);\n            else if(this instanceof SVG.Effect || this instanceof SVG.ParentEffect)\n              that.put(new SVG.MergeNode(this));\n          });\n        }\n        else {\n          //if the first argument is an array use it\n          if(Array.isArray(arguments[0]))\n            children = arguments[0];\n          else\n            children = arguments;\n\n          for(var i = 0; i < children.length; i++){\n            if(children[i] instanceof SVG.MergeNode){\n              this.put(children[i]);\n            }\n            else this.put(new SVG.MergeNode(children[i]));\n          }\n        }\n      },\n      componentTransfer: function(compontents){\n        /* create rgb set */\n        this.rgb = new SVG.Set\n\n        /* create components */\n        ;(['r', 'g', 'b', 'a']).forEach(function(c) {\n          /* create component */\n          this[c] = new SVG['Func' + c.toUpperCase()]('identity');\n\n          /* store component in set */\n          this.rgb.add(this[c]);\n\n          /* add component node */\n          this.node.appendChild(this[c].node);\n        }.bind(this)); //lost context in foreach\n\n        /* set components */\n        if (compontents) {\n          if (compontents.rgb) {\n  (['r', 'g', 'b']).forEach(function(c) {\n              this[c].attr(compontents.rgb);\n            }.bind(this));\n\n            delete compontents.rgb;\n          }\n\n          /* set individual components */\n          for (var c in compontents)\n            this[c].attr(compontents[c]);\n        }\n      },\n      diffuseLighting: function(surfaceScale,diffuseConstant,kernelUnitLength){\n        this.attr({\n          surfaceScale: surfaceScale,\n          diffuseConstant: diffuseConstant,\n          kernelUnitLength: kernelUnitLength\n        });\n      },\n      specularLighting: function(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){\n        this.attr({\n          surfaceScale: surfaceScale,\n          diffuseConstant: diffuseConstant,\n          specularExponent: specularExponent,\n          kernelUnitLength: kernelUnitLength\n        });\n      },\n    };\n\n    // Create child effects like PointLight and MergeNode\n    var childEffects = {\n      distantLight: function(azimuth, elevation){\n        this.attr({\n          azimuth: azimuth,\n          elevation: elevation\n        });\n      },\n      pointLight: function(x,y,z){\n        this.attr({\n          x: x,\n          y: y,\n          z: z\n        });\n      },\n      spotLight: function(x,y,z,pointsAtX,pointsAtY,pointsAtZ){\n        this.attr({\n          x: x,\n          y: y,\n          z: z,\n          pointsAtX: pointsAtX,\n          pointsAtY: pointsAtY,\n          pointsAtZ: pointsAtZ\n        });\n      },\n      mergeNode: function(in1){\n        this.attr('in',in1);\n      }\n    }\n\n    // Create compontent functions\n    ;(['r', 'g', 'b', 'a']).forEach(function(c) {\n      /* create class */\n      childEffects['Func' + c.toUpperCase()] = function(type) {\n        this.attr('type',type);\n\n        // take diffent arguments based on the type\n        switch(type){\n          case 'table':\n            this.attr('tableValues',arguments[1]);\n            break\n          case 'linear':\n            this.attr('slope',arguments[1]);\n            this.attr('intercept',arguments[2]);\n            break\n          case 'gamma':\n            this.attr('amplitude',arguments[1]);\n            this.attr('exponent',arguments[2]);\n            this.attr('offset',arguments[2]);\n            break\n        }\n      };\n    });\n\n    //create effects\n    foreach(effects,function(effect,i){\n\n      /* capitalize name */\n      var name = i.charAt(0).toUpperCase() + i.slice(1);\n      var proto = {};\n\n      /* create class */\n      SVG[name + 'Effect'] = SVG.invent({\n        create: function() {\n          //call super\n          this.constructor.call(this, SVG.create('fe' + name));\n\n          //call constructor for this effect\n          effect.apply(this,arguments);\n\n          //set the result\n          this.result(this.attr('id') + 'Out');\n        },\n        inherit: SVG.Effect,\n        extend: proto\n      });\n    });\n\n    //create parent effects\n    foreach(parentEffects,function(effect,i){\n\n      /* capitalize name */\n      var name = i.charAt(0).toUpperCase() + i.slice(1);\n      var proto = {};\n\n      /* create class */\n      SVG[name + 'Effect'] = SVG.invent({\n        create: function() {\n          //call super\n          this.constructor.call(this, SVG.create('fe' + name));\n\n          //call constructor for this effect\n          effect.apply(this,arguments);\n\n          //set the result\n          this.result(this.attr('id') + 'Out');\n        },\n        inherit: SVG.ParentEffect,\n        extend: proto\n      });\n    });\n\n    //create child effects\n    foreach(childEffects,function(effect,i){\n\n      /* capitalize name */\n      var name = i.charAt(0).toUpperCase() + i.slice(1);\n      var proto = {};\n\n      /* create class */\n      SVG[name] = SVG.invent({\n        create: function() {\n          //call super\n          this.constructor.call(this, SVG.create('fe' + name));\n\n          //call constructor for this effect\n          effect.apply(this,arguments);\n        },\n        inherit: SVG.ChildEffect,\n        extend: proto\n      });\n    });\n\n    // Effect-specific extensions\n    SVG.extend(SVG.MergeEffect,{\n      in: function(effect){\n        if(effect instanceof SVG.MergeNode)\n          this.add(effect,0);\n        else\n          this.add(new SVG.MergeNode(effect),0);\n\n        return this\n      }\n    });\n    SVG.extend(SVG.CompositeEffect,SVG.BlendEffect,SVG.DisplacementMapEffect,{\n      in2: function(effect){\n          return effect == null? this.parent() && this.parent().select('[result=\"'+this.attr('in2')+'\"]').get(0) || this.attr('in2') : this.attr('in2', effect)\n      }\n    });\n\n    // Presets\n    SVG.filter = {\n      sepiatone:  [ .343, .669, .119, 0, 0\n                  , .249, .626, .130, 0, 0\n                  , .172, .334, .111, 0, 0\n                  , .000, .000, .000, 1, 0 ]\n    };\n\n    // Helpers\n    function normaliseMatrix(matrix) {\n      /* convert possible array value to string */\n      if (Array.isArray(matrix))\n        matrix = new SVG.Array(matrix);\n\n      /* ensure there are no leading, tailing or double spaces */\n      return matrix.toString().replace(/^\\s+/, '').replace(/\\s+$/, '').replace(/\\s+/g, ' ')\n    }\n\n    function listString(list) {\n      if (!Array.isArray(list))\n        return list\n\n      for (var i = 0, l = list.length, s = []; i < l; i++)\n        s.push(list[i]);\n\n      return s.join(' ')\n    }\n\n    function foreach(){ //loops through mutiple objects\n      var fn = function(){};\n      if(typeof arguments[arguments.length-1] == 'function'){\n        fn = arguments[arguments.length-1];\n        Array.prototype.splice.call(arguments,arguments.length-1,1);\n      }\n      for(var k in arguments){\n        for(var i in arguments[k]){\n          fn(arguments[k][i],i,arguments[k]);\n        }\n      }\n    }\n\n  }).call(undefined);\n\n  (function() {\n\n  SVG.extend(SVG.PathArray, {\n    morph: function(array) {\n\n      var startArr = this.value\n        ,  destArr = this.parse(array);\n\n      var startOffsetM = 0\n        ,  destOffsetM = 0;\n\n      var startOffsetNextM = false\n        ,  destOffsetNextM = false;\n\n      while(true){\n        // stop if there is no M anymore\n        if(startOffsetM === false && destOffsetM === false) break\n\n        // find the next M in path array\n        startOffsetNextM = findNextM(startArr, startOffsetM === false ? false : startOffsetM+1);\n         destOffsetNextM = findNextM( destArr,  destOffsetM === false ? false :  destOffsetM+1);\n\n        // We have to add one M to the startArray\n        if(startOffsetM === false){\n          var bbox = new SVG.PathArray(result.start).bbox();\n\n          // when the last block had no bounding box we simply take the first M we got\n          if(bbox.height == 0 || bbox.width == 0){\n            startOffsetM =  startArr.push(startArr[0]) - 1;\n          }else {\n            // we take the middle of the bbox instead when we got one\n            startOffsetM = startArr.push( ['M', bbox.x + bbox.width/2, bbox.y + bbox.height/2 ] ) - 1;\n          }\n        }\n\n        // We have to add one M to the destArray\n        if( destOffsetM === false){\n          var bbox = new SVG.PathArray(result.dest).bbox();\n\n          if(bbox.height == 0 || bbox.width == 0){\n            destOffsetM =  destArr.push(destArr[0]) - 1;\n          }else {\n            destOffsetM =  destArr.push( ['M', bbox.x + bbox.width/2, bbox.y + bbox.height/2 ] ) - 1;\n          }\n        }\n\n        // handle block from M to next M\n        var result = handleBlock(startArr, startOffsetM, startOffsetNextM, destArr, destOffsetM, destOffsetNextM);\n\n        // update the arrays to their new values\n        startArr = startArr.slice(0, startOffsetM).concat(result.start, startOffsetNextM === false ? [] : startArr.slice(startOffsetNextM));\n         destArr =  destArr.slice(0,  destOffsetM).concat(result.dest ,  destOffsetNextM === false ? [] :  destArr.slice( destOffsetNextM));\n\n        // update offsets\n        startOffsetM = startOffsetNextM === false ? false : startOffsetM + result.start.length;\n         destOffsetM =  destOffsetNextM === false ? false :  destOffsetM + result.dest.length;\n\n      }\n\n      // copy back arrays\n      this.value = startArr;\n      this.destination = new SVG.PathArray();\n      this.destination.value = destArr;\n\n      return this\n    }\n  });\n\n\n\n  // sorry for the long declaration\n  // slices out one block (from M to M) and syncronize it so the types and length match\n  function handleBlock(startArr, startOffsetM, startOffsetNextM, destArr, destOffsetM, destOffsetNextM, undefined$1){\n\n    // slice out the block we need\n    var startArrTemp = startArr.slice(startOffsetM, startOffsetNextM || undefined$1)\n      ,  destArrTemp =  destArr.slice( destOffsetM,  destOffsetNextM || undefined$1);\n\n    var i = 0\n      , posStart = {pos:[0,0], start:[0,0]}\n      , posDest  = {pos:[0,0], start:[0,0]};\n\n    do{\n\n      // convert shorthand types to long form\n      startArrTemp[i] = simplyfy.call(posStart, startArrTemp[i]);\n       destArrTemp[i] = simplyfy.call(posDest ,  destArrTemp[i]);\n\n      // check if both shape types match\n      // 2 elliptical arc curve commands ('A'), are considered different if the\n      // flags (large-arc-flag, sweep-flag) don't match\n      if(startArrTemp[i][0] != destArrTemp[i][0] || startArrTemp[i][0] == 'M' ||\n          (startArrTemp[i][0] == 'A' &&\n            (startArrTemp[i][4] != destArrTemp[i][4] || startArrTemp[i][5] != destArrTemp[i][5])\n          )\n        ) {\n\n        // if not, convert shapes to beziere\n        Array.prototype.splice.apply(startArrTemp, [i, 1].concat(toBeziere.call(posStart, startArrTemp[i])));\n         Array.prototype.splice.apply(destArrTemp, [i, 1].concat(toBeziere.call(posDest, destArrTemp[i])));\n\n      } else {\n\n        // only update positions otherwise\n        startArrTemp[i] = setPosAndReflection.call(posStart, startArrTemp[i]);\n         destArrTemp[i] = setPosAndReflection.call(posDest ,  destArrTemp[i]);\n\n      }\n\n      // we are at the end at both arrays. stop here\n      if(++i == startArrTemp.length && i == destArrTemp.length) break\n\n      // destArray is longer. Add one element\n      if(i == startArrTemp.length){\n        startArrTemp.push([\n          'C',\n          posStart.pos[0],\n          posStart.pos[1],\n          posStart.pos[0],\n          posStart.pos[1],\n          posStart.pos[0],\n          posStart.pos[1],\n        ]);\n      }\n\n      // startArr is longer. Add one element\n      if(i == destArrTemp.length){\n        destArrTemp.push([\n          'C',\n          posDest.pos[0],\n          posDest.pos[1],\n          posDest.pos[0],\n          posDest.pos[1],\n          posDest.pos[0],\n          posDest.pos[1]\n        ]);\n      }\n\n\n    }while(true)\n\n    // return the updated block\n    return {start:startArrTemp, dest:destArrTemp}\n  }\n\n  // converts shorthand types to long form\n  function simplyfy(val){\n\n    switch(val[0]){\n      case 'z': // shorthand line to start\n      case 'Z':\n        val[0] = 'L';\n        val[1] = this.start[0];\n        val[2] = this.start[1];\n        break\n      case 'H': // shorthand horizontal line\n        val[0] = 'L';\n        val[2] = this.pos[1];\n        break\n      case 'V': // shorthand vertical line\n        val[0] = 'L';\n        val[2] = val[1];\n        val[1] = this.pos[0];\n        break\n      case 'T': // shorthand quadratic beziere\n        val[0] = 'Q';\n        val[3] = val[1];\n        val[4] = val[2];\n        val[1] = this.reflection[1];\n        val[2] = this.reflection[0];\n        break\n      case 'S': // shorthand cubic beziere\n        val[0] = 'C';\n        val[6] = val[4];\n        val[5] = val[3];\n        val[4] = val[2];\n        val[3] = val[1];\n        val[2] = this.reflection[1];\n        val[1] = this.reflection[0];\n        break\n    }\n\n    return val\n\n  }\n\n  // updates reflection point and current position\n  function setPosAndReflection(val){\n\n    var len = val.length;\n\n    this.pos = [ val[len-2], val[len-1] ];\n\n    if('SCQT'.indexOf(val[0]) != -1)\n      this.reflection = [ 2 * this.pos[0] - val[len-4], 2 * this.pos[1] - val[len-3] ];\n\n    return val\n  }\n\n  // converts all types to cubic beziere\n  function toBeziere(val){\n    var retVal = [val];\n\n    switch(val[0]){\n      case 'M': // special handling for M\n        this.pos = this.start = [val[1], val[2]];\n        return retVal\n      case 'L':\n        val[5] = val[3] = val[1];\n        val[6] = val[4] = val[2];\n        val[1] = this.pos[0];\n        val[2] = this.pos[1];\n        break\n      case 'Q':\n        val[6] = val[4];\n        val[5] = val[3];\n        val[4] = val[4] * 1/3 + val[2] * 2/3;\n        val[3] = val[3] * 1/3 + val[1] * 2/3;\n        val[2] = this.pos[1] * 1/3 + val[2] * 2/3;\n        val[1] = this.pos[0] * 1/3 + val[1] * 2/3;\n        break\n      case 'A':\n        retVal = arcToBeziere(this.pos, val);\n        val = retVal[0];\n        break\n    }\n\n    val[0] = 'C';\n    this.pos = [val[5], val[6]];\n    this.reflection = [2 * val[5] - val[3], 2 * val[6] - val[4]];\n\n    return retVal\n\n  }\n\n  // finds the next position of type M\n  function findNextM(arr, offset){\n\n    if(offset === false) return false\n\n    for(var i = offset, len = arr.length;i < len;++i){\n\n      if(arr[i][0] == 'M') return i\n\n    }\n\n    return false\n  }\n\n\n\n  // Convert an arc segment into equivalent cubic Bezier curves\n  // Depending on the arc, up to 4 curves might be used to represent it since a\n  // curve gives a good approximation for only a quarter of an ellipse\n  // The curves are returned as an array of SVG curve commands:\n  // [ ['C', x1, y1, x2, y2, x, y] ... ]\n  function arcToBeziere(pos, val) {\n      // Parameters extraction, handle out-of-range parameters as specified in the SVG spec\n      // See: https://www.w3.org/TR/SVG11/implnote.html#ArcOutOfRangeParameters\n      var rx = Math.abs(val[1]), ry = Math.abs(val[2]), xAxisRotation = val[3] % 360\n        , largeArcFlag = val[4], sweepFlag = val[5], x = val[6], y = val[7]\n        , A = new SVG.Point(pos), B = new SVG.Point(x, y)\n        , primedCoord, lambda, mat, k, c, cSquare, t, O, OA, OB, tetaStart, tetaEnd\n        , deltaTeta, nbSectors, f, arcSegPoints, angle, sinAngle, cosAngle, pt, i, il\n        , retVal = [], x1, y1, x2, y2;\n\n      // Ensure radii are non-zero\n      if(rx === 0 || ry === 0 || (A.x === B.x && A.y === B.y)) {\n        // treat this arc as a straight line segment\n        return [['C', A.x, A.y, B.x, B.y, B.x, B.y]]\n      }\n\n      // Ensure radii are large enough using the algorithm provided in the SVG spec\n      // See: https://www.w3.org/TR/SVG11/implnote.html#ArcCorrectionOutOfRangeRadii\n      primedCoord = new SVG.Point((A.x-B.x)/2, (A.y-B.y)/2).transform(new SVG.Matrix().rotate(xAxisRotation));\n      lambda = (primedCoord.x * primedCoord.x) / (rx * rx) + (primedCoord.y * primedCoord.y) / (ry * ry);\n      if(lambda > 1) {\n        lambda = Math.sqrt(lambda);\n        rx = lambda*rx;\n        ry = lambda*ry;\n      }\n\n      // To simplify calculations, we make the arc part of a unit circle (rayon is 1) instead of an ellipse\n      mat = new SVG.Matrix().rotate(xAxisRotation).scale(1/rx, 1/ry).rotate(-xAxisRotation);\n      A = A.transform(mat);\n      B = B.transform(mat);\n\n      // Calculate the horizontal and vertical distance between the initial and final point of the arc\n      k = [B.x-A.x, B.y-A.y];\n\n      // Find the length of the chord formed by A and B\n      cSquare = k[0]*k[0] + k[1]*k[1];\n      c = Math.sqrt(cSquare);\n\n      // Calculate the ratios of the horizontal and vertical distance on the length of the chord\n      k[0] /= c;\n      k[1] /= c;\n\n      // Calculate the distance between the circle center and the chord midpoint\n      // using this formula: t = sqrt(r^2 - c^2 / 4)\n      // where t is the distance between the cirle center and the chord midpoint,\n      //       r is the rayon of the circle and c is the chord length\n      // From: http://www.ajdesigner.com/phpcircle/circle_segment_chord_t.php\n      // Because of the imprecision of floating point numbers, cSquare might end\n      // up being slightly above 4 which would result in a negative radicand\n      // To prevent that, a test is made before computing the square root\n      t = (cSquare < 4) ? Math.sqrt(1 - cSquare/4) : 0;\n\n      // For most situations, there are actually two different ellipses that\n      // satisfy the constraints imposed by the points A and B, the radii rx and ry,\n      // and the xAxisRotation\n      // When the flags largeArcFlag and sweepFlag are equal, it means that the\n      // second ellipse is used as a solution\n      // See: https://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\n      if(largeArcFlag === sweepFlag) {\n          t *= -1;\n      }\n\n      // Calculate the coordinates of the center of the circle from the midpoint of the chord\n      // This is done by multiplying the ratios calculated previously by the distance between\n      // the circle center and the chord midpoint and using these values to go from the midpoint\n      // to the center of the circle\n      // The negative of the vertical distance ratio is used to modify the x coordinate while\n      // the horizontal distance ratio is used to modify the y coordinate\n      // That is because the center of the circle is perpendicular to the chord and perpendicular\n      // lines are negative reciprocals\n      O = new SVG.Point((B.x+A.x)/2 + t*-k[1], (B.y+A.y)/2 + t*k[0]);\n      // Move the center of the circle at the origin\n      OA = new SVG.Point(A.x-O.x, A.y-O.y);\n      OB = new SVG.Point(B.x-O.x, B.y-O.y);\n\n      // Calculate the start and end angle\n      tetaStart = Math.acos(OA.x/Math.sqrt(OA.x*OA.x + OA.y*OA.y));\n      if (OA.y < 0) {\n        tetaStart *= -1;\n      }\n      tetaEnd = Math.acos(OB.x/Math.sqrt(OB.x*OB.x + OB.y*OB.y));\n      if (OB.y < 0) {\n        tetaEnd *= -1;\n      }\n\n      // If sweep-flag is '1', then the arc will be drawn in a \"positive-angle\" direction,\n      // make sure that the end angle is above the start angle\n      if (sweepFlag && tetaStart > tetaEnd) {\n        tetaEnd += 2*Math.PI;\n      }\n      // If sweep-flag is '0', then the arc will be drawn in a \"negative-angle\" direction,\n      // make sure that the end angle is below the start angle\n      if (!sweepFlag && tetaStart < tetaEnd) {\n        tetaEnd -= 2*Math.PI;\n      }\n\n      // Find the number of Bezier curves that are required to represent the arc\n      // A cubic Bezier curve gives a good enough approximation when representing at most a quarter of a circle\n      nbSectors = Math.ceil(Math.abs(tetaStart-tetaEnd) * 2/Math.PI);\n\n      // Calculate the coordinates of the points of all the Bezier curves required to represent the arc\n      // For an in-depth explanation of this part see: http://pomax.github.io/bezierinfo/#circles_cubic\n      arcSegPoints = [];\n      angle = tetaStart;\n      deltaTeta = (tetaEnd-tetaStart)/nbSectors;\n      f = 4*Math.tan(deltaTeta/4)/3;\n      for (i = 0; i <= nbSectors; i++) { // The <= is because a Bezier curve have a start and a endpoint\n        cosAngle = Math.cos(angle);\n        sinAngle = Math.sin(angle);\n\n        pt = new SVG.Point(O.x+cosAngle, O.y+sinAngle);\n        arcSegPoints[i] = [new SVG.Point(pt.x+f*sinAngle, pt.y-f*cosAngle), pt, new SVG.Point(pt.x-f*sinAngle, pt.y+f*cosAngle)];\n\n        angle += deltaTeta;\n      }\n\n      // Remove the first control point of the first segment point and remove the second control point of the last segment point\n      // These two control points are not used in the approximation of the arc, that is why they are removed\n      arcSegPoints[0][0] = arcSegPoints[0][1].clone();\n      arcSegPoints[arcSegPoints.length-1][2] = arcSegPoints[arcSegPoints.length-1][1].clone();\n\n      // Revert the transformation that was applied to make the arc part of a unit circle instead of an ellipse\n      mat = new SVG.Matrix().rotate(xAxisRotation).scale(rx, ry).rotate(-xAxisRotation);\n      for (i = 0, il = arcSegPoints.length; i < il; i++) {\n        arcSegPoints[i][0] = arcSegPoints[i][0].transform(mat);\n        arcSegPoints[i][1] = arcSegPoints[i][1].transform(mat);\n        arcSegPoints[i][2] = arcSegPoints[i][2].transform(mat);\n      }\n\n\n      // Convert the segments points to SVG curve commands\n      for (i = 1, il = arcSegPoints.length; i < il; i++) {\n        pt = arcSegPoints[i-1][2];\n        x1 = pt.x;\n        y1 = pt.y;\n\n        pt = arcSegPoints[i][0];\n        x2 = pt.x;\n        y2 = pt.y;\n\n        pt = arcSegPoints[i][1];\n        x = pt.x;\n        y = pt.y;\n\n        retVal.push(['C', x1, y1, x2, y2, x, y]);\n      }\n\n      return retVal\n  }\n  }());\n\n  /*! svg.draggable.js - v2.2.2 - 2019-01-08\n  * https://github.com/svgdotjs/svg.draggable.js\n  * Copyright (c) 2019 Wout Fierens; Licensed MIT */\n  (function() {\n\n    // creates handler, saves it\n    function DragHandler(el){\n      el.remember('_draggable', this);\n      this.el = el;\n    }\n\n\n    // Sets new parameter, starts dragging\n    DragHandler.prototype.init = function(constraint, val){\n      var _this = this;\n      this.constraint = constraint;\n      this.value = val;\n      this.el.on('mousedown.drag', function(e){ _this.start(e); });\n      this.el.on('touchstart.drag', function(e){ _this.start(e); });\n    };\n\n    // transforms one point from screen to user coords\n    DragHandler.prototype.transformPoint = function(event, offset){\n        event = event || window.event;\n        var touches = event.changedTouches && event.changedTouches[0] || event;\n        this.p.x = touches.clientX - (offset || 0);\n        this.p.y = touches.clientY;\n        return this.p.matrixTransform(this.m)\n    };\n\n    // gets elements bounding box with special handling of groups, nested and use\n    DragHandler.prototype.getBBox = function(){\n\n      var box = this.el.bbox();\n\n      if(this.el instanceof SVG.Nested) box = this.el.rbox();\n\n      if (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) {\n        box.x = this.el.x();\n        box.y = this.el.y();\n      }\n\n      return box\n    };\n\n    // start dragging\n    DragHandler.prototype.start = function(e){\n\n      // check for left button\n      if(e.type == 'click'|| e.type == 'mousedown' || e.type == 'mousemove'){\n        if((e.which || e.buttons) != 1){\n            return\n        }\n      }\n\n      var _this = this;\n\n      // fire beforedrag event\n      this.el.fire('beforedrag', { event: e, handler: this });\n      if(this.el.event().defaultPrevented) return;\n\n      // prevent browser drag behavior as soon as possible\n      e.preventDefault();\n\n      // prevent propagation to a parent that might also have dragging enabled\n      e.stopPropagation();\n\n      // search for parent on the fly to make sure we can call\n      // draggable() even when element is not in the dom currently\n      this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc);\n      this.p = this.parent.node.createSVGPoint();\n\n      // save current transformation matrix\n      this.m = this.el.node.getScreenCTM().inverse();\n\n      var box = this.getBBox();\n\n      var anchorOffset;\n\n      // fix text-anchor in text-element (#37)\n      if(this.el instanceof SVG.Text){\n        anchorOffset = this.el.node.getComputedTextLength();\n\n        switch(this.el.attr('text-anchor')){\n          case 'middle':\n            anchorOffset /= 2;\n            break\n          case 'start':\n            anchorOffset = 0;\n            break;\n        }\n      }\n\n      this.startPoints = {\n        // We take absolute coordinates since we are just using a delta here\n        point: this.transformPoint(e, anchorOffset),\n        box:   box,\n        transform: this.el.transform()\n      };\n\n      // add drag and end events to window\n      SVG.on(window, 'mousemove.drag', function(e){ _this.drag(e); });\n      SVG.on(window, 'touchmove.drag', function(e){ _this.drag(e); });\n      SVG.on(window, 'mouseup.drag', function(e){ _this.end(e); });\n      SVG.on(window, 'touchend.drag', function(e){ _this.end(e); });\n\n      // fire dragstart event\n      this.el.fire('dragstart', {event: e, p: this.startPoints.point, m: this.m, handler: this});\n    };\n\n    // while dragging\n    DragHandler.prototype.drag = function(e){\n\n      var box = this.getBBox()\n        , p   = this.transformPoint(e)\n        , x   = this.startPoints.box.x + p.x - this.startPoints.point.x\n        , y   = this.startPoints.box.y + p.y - this.startPoints.point.y\n        , c   = this.constraint\n        , gx  = p.x - this.startPoints.point.x\n        , gy  = p.y - this.startPoints.point.y;\n\n      this.el.fire('dragmove', {\n          event: e\n        , p: p\n        , m: this.m\n        , handler: this\n      });\n\n      if(this.el.event().defaultPrevented) return p\n\n      // move the element to its new position, if possible by constraint\n      if (typeof c == 'function') {\n\n        var coord = c.call(this.el, x, y, this.m);\n\n        // bool, just show us if movement is allowed or not\n        if (typeof coord == 'boolean') {\n          coord = {\n            x: coord,\n            y: coord\n          };\n        }\n\n        // if true, we just move. If !false its a number and we move it there\n        if (coord.x === true) {\n          this.el.x(x);\n        } else if (coord.x !== false) {\n          this.el.x(coord.x);\n        }\n\n        if (coord.y === true) {\n          this.el.y(y);\n        } else if (coord.y !== false) {\n          this.el.y(coord.y);\n        }\n\n      } else if (typeof c == 'object') {\n\n        // keep element within constrained box\n        if (c.minX != null && x < c.minX) {\n          x = c.minX;\n          gx = x - this.startPoints.box.x;\n        } else if (c.maxX != null && x > c.maxX - box.width) {\n          x = c.maxX - box.width;\n          gx = x - this.startPoints.box.x;\n        } if (c.minY != null && y < c.minY) {\n          y = c.minY;\n          gy = y - this.startPoints.box.y;\n        } else if (c.maxY != null && y > c.maxY - box.height) {\n          y = c.maxY - box.height;\n          gy = y - this.startPoints.box.y;\n        }\n\n        if (c.snapToGrid != null) {\n          x = x - (x % c.snapToGrid);\n          y = y - (y % c.snapToGrid);\n          gx = gx - (gx % c.snapToGrid);\n          gy = gy - (gy % c.snapToGrid);\n        }\n\n        if(this.el instanceof SVG.G)\n          this.el.matrix(this.startPoints.transform).transform({x:gx, y: gy}, true);\n        else\n          this.el.move(x, y);\n      }\n\n      // so we can use it in the end-method, too\n      return p\n    };\n\n    DragHandler.prototype.end = function(e){\n\n      // final drag\n      var p = this.drag(e);\n\n      // fire dragend event\n      this.el.fire('dragend', { event: e, p: p, m: this.m, handler: this });\n\n      // unbind events\n      SVG.off(window, 'mousemove.drag');\n      SVG.off(window, 'touchmove.drag');\n      SVG.off(window, 'mouseup.drag');\n      SVG.off(window, 'touchend.drag');\n\n    };\n\n    SVG.extend(SVG.Element, {\n      // Make element draggable\n      // Constraint might be an object (as described in readme.md) or a function in the form \"function (x, y)\" that gets called before every move.\n      // The function can return a boolean or an object of the form {x, y}, to which the element will be moved. \"False\" skips moving, true moves to raw x, y.\n      draggable: function(value, constraint) {\n\n        // Check the parameters and reassign if needed\n        if (typeof value == 'function' || typeof value == 'object') {\n          constraint = value;\n          value = true;\n        }\n\n        var dragHandler = this.remember('_draggable') || new DragHandler(this);\n\n        // When no parameter is given, value is true\n        value = typeof value === 'undefined' ? true : value;\n\n        if(value) dragHandler.init(constraint || {}, value);\n        else {\n          this.off('mousedown.drag');\n          this.off('touchstart.drag');\n        }\n\n        return this\n      }\n\n    });\n\n  }).call(undefined);\n\n  (function() {\n\n  function SelectHandler(el) {\n\n      this.el = el;\n      el.remember('_selectHandler', this);\n      this.pointSelection = {isSelected: false};\n      this.rectSelection = {isSelected: false};\n\n      // helper list with position settings of each type of point\n      this.pointsList = {\n        lt: [ 0, 0 ],\n        rt: [ 'width', 0 ],\n        rb: [ 'width', 'height' ],\n        lb: [ 0, 'height' ],\n        t: [ 'width', 0 ],\n        r: [ 'width', 'height' ],\n        b: [ 'width', 'height' ],\n        l: [ 0, 'height' ]\n      };\n\n      // helper function to get point coordinates based on settings above and an object (bbox in our case)\n      this.pointCoord = function (setting, object, isPointCentered) {\n        var coord = typeof setting !== 'string' ? setting : object[setting];\n        // Top, bottom, right and left points are placed in the center of element width/height\n        return isPointCentered ? coord / 2 : coord\n      };\n\n      this.pointCoords = function (point, object) {\n        var settings = this.pointsList[point];\n\n        return {\n          x: this.pointCoord(settings[0], object, (point === 't' || point === 'b')),\n          y: this.pointCoord(settings[1], object, (point === 'r' || point === 'l'))\n        }\n      };\n  }\n\n  SelectHandler.prototype.init = function (value, options) {\n\n      var bbox = this.el.bbox();\n      this.options = {};\n\n      // store defaults list of points in order to verify users config\n      var points = this.el.selectize.defaults.points;\n\n      // Merging the defaults and the options-object together\n      for (var i in this.el.selectize.defaults) {\n          this.options[i] = this.el.selectize.defaults[i];\n          if (options[i] !== undefined) {\n              this.options[i] = options[i];\n          }\n      }\n\n      // prepare & validate list of points to be added (or excluded)\n      var pointsLists = ['points', 'pointsExclude'];\n\n      for (var i in pointsLists) {\n        var option = this.options[pointsLists[i]];\n\n        if (typeof option === 'string') {\n          if (option.length > 0) {\n            // if set as comma separated string list => convert it into an array\n            option = option.split(/\\s*,\\s*/i);\n          } else {\n            option = [];\n          }\n        } else if (typeof option === 'boolean' && pointsLists[i] === 'points') {\n          // this is not needed, but let's have it for legacy support\n          option = option ? points : [];\n        }\n\n        this.options[pointsLists[i]] = option;\n      }\n\n      // intersect correct all points options with users config (exclude unwanted points)\n      // ES5 -> NO arrow functions nor Array.includes()\n      this.options.points = [ points, this.options.points ].reduce(\n        function (a, b) {\n          return a.filter(\n            function (c) {\n              return b.indexOf(c) > -1;\n            }\n          )\n        }\n      );\n\n      // exclude pointsExclude, if wanted\n      this.options.points = [ this.options.points, this.options.pointsExclude ].reduce(\n        function (a, b) {\n          return a.filter(\n            function (c) {\n              return b.indexOf(c) < 0;\n            }\n          )\n        }\n      );\n\n      this.parent = this.el.parent();\n      this.nested = (this.nested || this.parent.group());\n      this.nested.matrix(new SVG.Matrix(this.el).translate(bbox.x, bbox.y));\n\n      // When deepSelect is enabled and the element is a line/polyline/polygon, draw only points for moving\n      if (this.options.deepSelect && ['line', 'polyline', 'polygon'].indexOf(this.el.type) !== -1) {\n          this.selectPoints(value);\n      } else {\n          this.selectRect(value);\n      }\n\n      this.observe();\n      this.cleanup();\n\n  };\n\n  SelectHandler.prototype.selectPoints = function (value) {\n\n      this.pointSelection.isSelected = value;\n\n      // When set is already there we dont have to create one\n      if (this.pointSelection.set) {\n          return this;\n      }\n\n      // Create our set of elements\n      this.pointSelection.set = this.parent.set();\n      // draw the points and mark the element as selected\n      this.drawPoints();\n\n      return this;\n\n  };\n\n  // create the point-array which contains the 2 points of a line or simply the points-array of polyline/polygon\n  SelectHandler.prototype.getPointArray = function () {\n      var bbox = this.el.bbox();\n\n      return this.el.array().valueOf().map(function (el) {\n          return [el[0] - bbox.x, el[1] - bbox.y];\n      });\n  };\n\n  // Draws a points\n  SelectHandler.prototype.drawPoints = function () {\n\n      var _this = this, array = this.getPointArray();\n\n      // go through the array of points\n      for (var i = 0, len = array.length; i < len; ++i) {\n\n          var curriedEvent = (function (k) {\n              return function (ev) {\n                  ev = ev || window.event;\n                  ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\n                  ev.stopPropagation();\n\n                  var x = ev.pageX || ev.touches[0].pageX;\n                  var y = ev.pageY || ev.touches[0].pageY;\n                  _this.el.fire('point', {x: x, y: y, i: k, event: ev});\n              };\n          })(i);\n\n          // add every point to the set\n          // add css-classes and a touchstart-event which fires our event for moving points\n          var point = this.drawPoint(array[i][0], array[i][1])\n                          .addClass(this.options.classPoints)\n                          .addClass(this.options.classPoints + '_point')\n                          .on('touchstart', curriedEvent)\n                          .on('mousedown', curriedEvent);\n          this.pointSelection.set.add(point);\n      }\n  };\n\n  // The function to draw single point\n  SelectHandler.prototype.drawPoint = function (cx, cy) {\n      var pointType = this.options.pointType;\n\n      switch (pointType) {\n          case 'circle':\n              return this.drawCircle(cx, cy);\n          case 'rect':\n              return this.drawRect(cx, cy);\n          default:\n              if (typeof pointType === 'function') {\n                  return pointType.call(this, cx, cy);\n              }\n\n              throw new Error('Unknown ' + pointType + ' point type!');\n      }\n  };\n\n  // The function to draw the circle point\n  SelectHandler.prototype.drawCircle = function (cx, cy) {\n      return this.nested.circle(this.options.pointSize)\n                        .center(cx, cy);\n  };\n\n  // The function to draw the rect point\n  SelectHandler.prototype.drawRect = function (cx, cy) {\n      return this.nested.rect(this.options.pointSize, this.options.pointSize)\n                        .center(cx, cy);\n  };\n\n  // every time a point is moved, we have to update the positions of our point\n  SelectHandler.prototype.updatePointSelection = function () {\n      var array = this.getPointArray();\n\n      this.pointSelection.set.each(function (i) {\n          if (this.cx() === array[i][0] && this.cy() === array[i][1]) {\n              return;\n          }\n          this.center(array[i][0], array[i][1]);\n      });\n  };\n\n  SelectHandler.prototype.updateRectSelection = function () {\n      var _this = this, bbox = this.el.bbox();\n\n      this.rectSelection.set.get(0).attr({\n          width: bbox.width,\n          height: bbox.height\n      });\n\n      // set.get(1) is always in the upper left corner. no need to move it\n      if (this.options.points.length) {\n        this.options.points.map(function (point, index) {\n          var coords = _this.pointCoords(point, bbox);\n\n          _this.rectSelection.set.get(index + 1).center(coords.x, coords.y);\n        });\n      }\n\n      if (this.options.rotationPoint) {\n          var length = this.rectSelection.set.length();\n\n          this.rectSelection.set.get(length - 1).center(bbox.width / 2, 20);\n      }\n  };\n\n  SelectHandler.prototype.selectRect = function (value) {\n\n      var _this = this, bbox = this.el.bbox();\n\n      this.rectSelection.isSelected = value;\n\n      // when set is already p\n      this.rectSelection.set = this.rectSelection.set || this.parent.set();\n\n      // helperFunction to create a mouse-down function which triggers the event specified in `eventName`\n      function getMoseDownFunc(eventName) {\n          return function (ev) {\n              ev = ev || window.event;\n              ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\n              ev.stopPropagation();\n\n              var x = ev.pageX || ev.touches[0].pageX;\n              var y = ev.pageY || ev.touches[0].pageY;\n              _this.el.fire(eventName, {x: x, y: y, event: ev});\n          };\n      }\n\n      // create the selection-rectangle and add the css-class\n      if (!this.rectSelection.set.get(0)) {\n          this.rectSelection.set.add(this.nested.rect(bbox.width, bbox.height).addClass(this.options.classRect));\n      }\n\n      // Draw Points at the edges, if enabled\n      if (this.options.points.length && this.rectSelection.set.length() < 2) {\n          var ename =\"touchstart\", mname = \"mousedown\";\n\n          this.options.points.map(function (point, index) {\n              var coords = _this.pointCoords(point, bbox);\n\n              var pointElement = _this.drawPoint(coords.x, coords.y)\n                                      .attr('class', _this.options.classPoints + '_' + point)\n                                      .on(mname, getMoseDownFunc(point))\n                                      .on(ename, getMoseDownFunc(point));\n              _this.rectSelection.set.add(pointElement);\n          });\n\n          this.rectSelection.set.each(function () {\n              this.addClass(_this.options.classPoints);\n          });\n      }\n\n      // draw rotationPint, if enabled\n      if (this.options.rotationPoint && ((this.options.points && !this.rectSelection.set.get(9)) || (!this.options.points && !this.rectSelection.set.get(1)))) {\n\n          var curriedEvent = function (ev) {\n              ev = ev || window.event;\n              ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\n              ev.stopPropagation();\n\n              var x = ev.pageX || ev.touches[0].pageX;\n              var y = ev.pageY || ev.touches[0].pageY;\n              _this.el.fire('rot', {x: x, y: y, event: ev});\n          };\n\n          var pointElement = this.drawPoint(bbox.width / 2, 20)\n                                .attr('class', this.options.classPoints + '_rot')\n                                .on(\"touchstart\", curriedEvent)\n                                .on(\"mousedown\", curriedEvent);\n          this.rectSelection.set.add(pointElement);\n      }\n\n  };\n\n  SelectHandler.prototype.handler = function () {\n\n      var bbox = this.el.bbox();\n      this.nested.matrix(new SVG.Matrix(this.el).translate(bbox.x, bbox.y));\n\n      if (this.rectSelection.isSelected) {\n          this.updateRectSelection();\n      }\n\n      if (this.pointSelection.isSelected) {\n          this.updatePointSelection();\n      }\n\n  };\n\n  SelectHandler.prototype.observe = function () {\n      var _this = this;\n\n      if (MutationObserver) {\n          if (this.rectSelection.isSelected || this.pointSelection.isSelected) {\n              this.observerInst = this.observerInst || new MutationObserver(function () {\n                  _this.handler();\n              });\n              this.observerInst.observe(this.el.node, {attributes: true});\n          } else {\n              try {\n                  this.observerInst.disconnect();\n                  delete this.observerInst;\n              } catch (e) {\n              }\n          }\n      } else {\n          this.el.off('DOMAttrModified.select');\n\n          if (this.rectSelection.isSelected || this.pointSelection.isSelected) {\n              this.el.on('DOMAttrModified.select', function () {\n                  _this.handler();\n              });\n          }\n      }\n  };\n\n  SelectHandler.prototype.cleanup = function () {\n\n      //var _this = this;\n\n      if (!this.rectSelection.isSelected && this.rectSelection.set) {\n          // stop watching the element, remove the selection\n          this.rectSelection.set.each(function () {\n              this.remove();\n          });\n\n          this.rectSelection.set.clear();\n          delete this.rectSelection.set;\n      }\n\n      if (!this.pointSelection.isSelected && this.pointSelection.set) {\n          // Remove all points, clear the set, stop watching the element\n          this.pointSelection.set.each(function () {\n              this.remove();\n          });\n\n          this.pointSelection.set.clear();\n          delete this.pointSelection.set;\n      }\n\n      if (!this.pointSelection.isSelected && !this.rectSelection.isSelected) {\n          this.nested.remove();\n          delete this.nested;\n\n      }\n  };\n\n\n  SVG.extend(SVG.Element, {\n      // Select element with mouse\n      selectize: function (value, options) {\n\n          // Check the parameters and reassign if needed\n          if (typeof value === 'object') {\n              options = value;\n              value = true;\n          }\n\n          var selectHandler = this.remember('_selectHandler') || new SelectHandler(this);\n\n          selectHandler.init(value === undefined ? true : value, options || {});\n\n          return this;\n\n      }\n  });\n\n  SVG.Element.prototype.selectize.defaults = {\n      points: ['lt', 'rt', 'rb', 'lb', 't', 'r', 'b', 'l'],    // which points to draw, default all\n      pointsExclude: [],                       // easier option if to exclude few than rewrite all\n      classRect: 'svg_select_boundingRect',    // Css-class added to the rect\n      classPoints: 'svg_select_points',        // Css-class added to the points\n      pointSize: 7,                            // size of point\n      rotationPoint: true,                     // If true, rotation point is drawn. Needed for rotation!\n      deepSelect: false,                       // If true, moving of single points is possible (only line, polyline, polyon)\n      pointType: 'circle'                      // Point type: circle or rect, default circle\n  };\n  }());\n\n  (function() {\n  (function () {\n\n      function ResizeHandler(el) {\n\n          el.remember('_resizeHandler', this);\n\n          this.el = el;\n          this.parameters = {};\n          this.lastUpdateCall = null;\n          this.p = el.doc().node.createSVGPoint();\n      }\n\n      ResizeHandler.prototype.transformPoint = function(x, y, m){\n\n          this.p.x = x - (this.offset.x - window.pageXOffset);\n          this.p.y = y - (this.offset.y - window.pageYOffset);\n\n          return this.p.matrixTransform(m || this.m);\n\n      };\n\n      ResizeHandler.prototype._extractPosition = function(event) {\n          // Extract a position from a mouse/touch event.\n          // Returns { x: .., y: .. }\n          return {\n              x: event.clientX != null ? event.clientX : event.touches[0].clientX,\n              y: event.clientY != null ? event.clientY : event.touches[0].clientY\n          }\n      };\n\n      ResizeHandler.prototype.init = function (options) {\n\n          var _this = this;\n\n          this.stop();\n\n          if (options === 'stop') {\n              return;\n          }\n\n          this.options = {};\n\n          // Merge options and defaults\n          for (var i in this.el.resize.defaults) {\n              this.options[i] = this.el.resize.defaults[i];\n              if (typeof options[i] !== 'undefined') {\n                  this.options[i] = options[i];\n              }\n          }\n\n          // We listen to all these events which are specifying different edges\n          this.el.on('lt.resize', function(e){ _this.resize(e || window.event); });  // Left-Top\n          this.el.on('rt.resize', function(e){ _this.resize(e || window.event); });  // Right-Top\n          this.el.on('rb.resize', function(e){ _this.resize(e || window.event); });  // Right-Bottom\n          this.el.on('lb.resize', function(e){ _this.resize(e || window.event); });  // Left-Bottom\n\n          this.el.on('t.resize', function(e){ _this.resize(e || window.event); });   // Top\n          this.el.on('r.resize', function(e){ _this.resize(e || window.event); });   // Right\n          this.el.on('b.resize', function(e){ _this.resize(e || window.event); });   // Bottom\n          this.el.on('l.resize', function(e){ _this.resize(e || window.event); });   // Left\n\n          this.el.on('rot.resize', function(e){ _this.resize(e || window.event); }); // Rotation\n\n          this.el.on('point.resize', function(e){ _this.resize(e || window.event); }); // Point-Moving\n\n          // This call ensures, that the plugin reacts to a change of snapToGrid immediately\n          this.update();\n\n      };\n\n      ResizeHandler.prototype.stop = function(){\n          this.el.off('lt.resize');\n          this.el.off('rt.resize');\n          this.el.off('rb.resize');\n          this.el.off('lb.resize');\n\n          this.el.off('t.resize');\n          this.el.off('r.resize');\n          this.el.off('b.resize');\n          this.el.off('l.resize');\n\n          this.el.off('rot.resize');\n\n          this.el.off('point.resize');\n\n          return this;\n      };\n\n      ResizeHandler.prototype.resize = function (event) {\n\n          var _this = this;\n\n          this.m = this.el.node.getScreenCTM().inverse();\n          this.offset = { x: window.pageXOffset, y: window.pageYOffset };\n\n          var txPt = this._extractPosition(event.detail.event);\n          this.parameters = {\n              type: this.el.type, // the type of element\n              p: this.transformPoint(txPt.x, txPt.y),\n              x: event.detail.x,      // x-position of the mouse when resizing started\n              y: event.detail.y,      // y-position of the mouse when resizing started\n              box: this.el.bbox(),    // The bounding-box of the element\n              rotation: this.el.transform().rotation  // The current rotation of the element\n          };\n\n          // Add font-size parameter if the element type is text\n          if (this.el.type === \"text\") {\n              this.parameters.fontSize = this.el.attr()[\"font-size\"];\n          }\n\n          // the i-param in the event holds the index of the point which is moved, when using `deepSelect`\n          if (event.detail.i !== undefined) {\n\n              // get the point array\n              var array = this.el.array().valueOf();\n\n              // Save the index and the point which is moved\n              this.parameters.i = event.detail.i;\n              this.parameters.pointCoords = [array[event.detail.i][0], array[event.detail.i][1]];\n          }\n\n          // Lets check which edge of the bounding-box was clicked and resize the this.el according to this\n          switch (event.type) {\n\n              // Left-Top-Edge\n              case 'lt':\n                  // We build a calculating function for every case which gives us the new position of the this.el\n                  this.calc = function (diffX, diffY) {\n                      // The procedure is always the same\n                      // First we snap the edge to the given grid (snapping to 1px grid is normal resizing)\n                      var snap = this.snapToGrid(diffX, diffY);\n\n                      // Now we check if the new height and width still valid (> 0)\n                      if (this.parameters.box.width - snap[0] > 0 && this.parameters.box.height - snap[1] > 0) {\n                          // ...if valid, we resize the this.el (which can include moving because the coord-system starts at the left-top and this edge is moving sometimes when resized)\n\n                          /*\n                           * but first check if the element is text box, so we can change the font size instead of\n                           * the width and height\n                           */\n\n                          if (this.parameters.type === \"text\") {\n                              this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y);\n                              this.el.attr(\"font-size\", this.parameters.fontSize - snap[0]);\n                              return;\n                          }\n\n                          snap = this.checkAspectRatio(snap);\n\n                          this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y + snap[1]).size(this.parameters.box.width - snap[0], this.parameters.box.height - snap[1]);\n                      }\n                  };\n                  break;\n\n              // Right-Top\n              case 'rt':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 1 << 1);\n                      if (this.parameters.box.width + snap[0] > 0 && this.parameters.box.height - snap[1] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              this.el.move(this.parameters.box.x - snap[0], this.parameters.box.y);\n                              this.el.attr(\"font-size\", this.parameters.fontSize + snap[0]);\n                              return;\n                          }\n\n                          snap = this.checkAspectRatio(snap, true);\n\n                          this.el.move(this.parameters.box.x, this.parameters.box.y + snap[1]).size(this.parameters.box.width + snap[0], this.parameters.box.height - snap[1]);\n                      }\n                  };\n                  break;\n\n              // Right-Bottom\n              case 'rb':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 0);\n                      if (this.parameters.box.width + snap[0] > 0 && this.parameters.box.height + snap[1] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              this.el.move(this.parameters.box.x - snap[0], this.parameters.box.y);\n                              this.el.attr(\"font-size\", this.parameters.fontSize + snap[0]);\n                              return;\n                          }\n\n                          snap = this.checkAspectRatio(snap);\n\n                          this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + snap[0], this.parameters.box.height + snap[1]);\n                      }\n                  };\n                  break;\n\n              // Left-Bottom\n              case 'lb':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 1);\n                      if (this.parameters.box.width - snap[0] > 0 && this.parameters.box.height + snap[1] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y);\n                              this.el.attr(\"font-size\", this.parameters.fontSize - snap[0]);\n                              return;\n                          }\n\n                          snap = this.checkAspectRatio(snap, true);\n\n                          this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y).size(this.parameters.box.width - snap[0], this.parameters.box.height + snap[1]);\n                      }\n                  };\n                  break;\n\n              // Top\n              case 't':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 1 << 1);\n                      if (this.parameters.box.height - snap[1] > 0) {\n                          // Disable the font-resizing if it is not from the corner of bounding-box\n                          if (this.parameters.type === \"text\") {\n                              return;\n                          }\n\n                          this.el.move(this.parameters.box.x, this.parameters.box.y + snap[1]).height(this.parameters.box.height - snap[1]);\n                      }\n                  };\n                  break;\n\n              // Right\n              case 'r':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 0);\n                      if (this.parameters.box.width + snap[0] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              return;\n                          }\n\n                          this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + snap[0]);\n                      }\n                  };\n                  break;\n\n              // Bottom\n              case 'b':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 0);\n                      if (this.parameters.box.height + snap[1] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              return;\n                          }\n\n                          this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + snap[1]);\n                      }\n                  };\n                  break;\n\n              // Left\n              case 'l':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 1);\n                      if (this.parameters.box.width - snap[0] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              return;\n                          }\n\n                          this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y).width(this.parameters.box.width - snap[0]);\n                      }\n                  };\n                  break;\n\n              // Rotation\n              case 'rot':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n\n                      // yes this is kinda stupid but we need the mouse coords back...\n                      var current = {x: diffX + this.parameters.p.x, y: diffY + this.parameters.p.y};\n\n                      // start minus middle\n                      var sAngle = Math.atan2((this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2), (this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2));\n\n                      // end minus middle\n                      var pAngle = Math.atan2((current.y - this.parameters.box.y - this.parameters.box.height / 2), (current.x - this.parameters.box.x - this.parameters.box.width / 2));\n\n                      var angle = this.parameters.rotation + (pAngle - sAngle) * 180 / Math.PI + this.options.snapToAngle / 2;\n\n                      // We have to move the element to the center of the box first and change the rotation afterwards\n                      // because rotation always works around a rotation-center, which is changed when moving the element\n                      // We also set the new rotation center to the center of the box.\n                      this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(angle - (angle % this.options.snapToAngle), this.parameters.box.cx, this.parameters.box.cy);\n                  };\n                  break;\n\n              // Moving one single Point (needed when an element is deepSelected which means you can move every single point of the object)\n              case 'point':\n                  this.calc = function (diffX, diffY) {\n\n                      // Snapping the point to the grid\n                      var snap = this.snapToGrid(diffX, diffY, this.parameters.pointCoords[0], this.parameters.pointCoords[1]);\n\n                      // Get the point array\n                      var array = this.el.array().valueOf();\n\n                      // Changing the moved point in the array\n                      array[this.parameters.i][0] = this.parameters.pointCoords[0] + snap[0];\n                      array[this.parameters.i][1] = this.parameters.pointCoords[1] + snap[1];\n\n                      // And plot the new this.el\n                      this.el.plot(array);\n                  };\n          }\n\n          this.el.fire('resizestart', {dx: this.parameters.x, dy: this.parameters.y, event: event});\n          // When resizing started, we have to register events for...\n          // Touches.\n          SVG.on(window, 'touchmove.resize', function(e) {\n              _this.update(e || window.event);\n          });\n          SVG.on(window, 'touchend.resize', function() {\n              _this.done();\n          });\n          // Mouse.\n          SVG.on(window, 'mousemove.resize', function (e) {\n              _this.update(e || window.event);\n          });\n          SVG.on(window, 'mouseup.resize', function () {\n              _this.done();\n          });\n\n      };\n\n      // The update-function redraws the element every time the mouse is moving\n      ResizeHandler.prototype.update = function (event) {\n\n          if (!event) {\n              if (this.lastUpdateCall) {\n                  this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);\n              }\n              return;\n          }\n\n          // Calculate the difference between the mouseposition at start and now\n          var txPt = this._extractPosition(event);\n          var p = this.transformPoint(txPt.x, txPt.y);\n\n          var diffX = p.x - this.parameters.p.x,\n              diffY = p.y - this.parameters.p.y;\n\n          this.lastUpdateCall = [diffX, diffY];\n\n          // Calculate the new position and height / width of the element\n          this.calc(diffX, diffY);\n\n         // Emit an event to say we have changed.\n          this.el.fire('resizing', {dx: diffX, dy: diffY, event: event});\n      };\n\n      // Is called on mouseup.\n      // Removes the update-function from the mousemove event\n      ResizeHandler.prototype.done = function () {\n          this.lastUpdateCall = null;\n          SVG.off(window, 'mousemove.resize');\n          SVG.off(window, 'mouseup.resize');\n          SVG.off(window, 'touchmove.resize');\n          SVG.off(window, 'touchend.resize');\n          this.el.fire('resizedone');\n      };\n\n      // The flag is used to determine whether the resizing is used with a left-Point (first bit) and top-point (second bit)\n      // In this cases the temp-values are calculated differently\n      ResizeHandler.prototype.snapToGrid = function (diffX, diffY, flag, pointCoordsY) {\n\n          var temp;\n\n          // If `pointCoordsY` is given, a single Point has to be snapped (deepSelect). That's why we need a different temp-value\n          if (typeof pointCoordsY !== 'undefined') {\n              // Note that flag = pointCoordsX in this case\n              temp = [(flag + diffX) % this.options.snapToGrid, (pointCoordsY + diffY) % this.options.snapToGrid];\n          } else {\n              // We check if the flag is set and if not we set a default-value (both bits set - which means upper-left-edge)\n              flag = flag == null ? 1 | 1 << 1 : flag;\n              temp = [(this.parameters.box.x + diffX + (flag & 1 ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + diffY + (flag & (1 << 1) ? 0 : this.parameters.box.height)) % this.options.snapToGrid];\n          }\n\n          if(diffX < 0) {\n              temp[0] -= this.options.snapToGrid;\n          }\n          if(diffY < 0) {\n              temp[1] -= this.options.snapToGrid;\n          }\n\n          diffX -= (Math.abs(temp[0]) < this.options.snapToGrid / 2 ?\n                    temp[0] :\n                    temp[0] - (diffX < 0 ? -this.options.snapToGrid : this.options.snapToGrid));\n          diffY -= (Math.abs(temp[1]) < this.options.snapToGrid / 2 ?\n                    temp[1] :\n                    temp[1] - (diffY < 0 ? -this.options.snapToGrid : this.options.snapToGrid));\n\n          return this.constraintToBox(diffX, diffY, flag, pointCoordsY);\n\n      };\n\n      // keep element within constrained box\n      ResizeHandler.prototype.constraintToBox = function (diffX, diffY, flag, pointCoordsY) {\n          //return [diffX, diffY]\n          var c = this.options.constraint || {};\n          var orgX, orgY;\n\n          if (typeof pointCoordsY !== 'undefined') {\n            orgX = flag;\n            orgY = pointCoordsY;\n          } else {\n            orgX = this.parameters.box.x + (flag & 1 ? 0 : this.parameters.box.width);\n            orgY = this.parameters.box.y + (flag & (1<<1) ? 0 : this.parameters.box.height);\n          }\n\n          if (typeof c.minX !== 'undefined' && orgX + diffX < c.minX) {\n            diffX = c.minX - orgX;\n          }\n\n          if (typeof c.maxX !== 'undefined' && orgX + diffX > c.maxX) {\n            diffX = c.maxX - orgX;\n          }\n\n          if (typeof c.minY !== 'undefined' && orgY + diffY < c.minY) {\n            diffY = c.minY - orgY;\n          }\n\n          if (typeof c.maxY !== 'undefined' && orgY + diffY > c.maxY) {\n            diffY = c.maxY - orgY;\n          }\n\n          return [diffX, diffY];\n      };\n\n      ResizeHandler.prototype.checkAspectRatio = function (snap, isReverse) {\n          if (!this.options.saveAspectRatio) {\n              return snap;\n          }\n\n          var updatedSnap = snap.slice();\n          var aspectRatio = this.parameters.box.width / this.parameters.box.height;\n          var newW = this.parameters.box.width + snap[0];\n          var newH = this.parameters.box.height - snap[1];\n          var newAspectRatio = newW / newH;\n\n          if (newAspectRatio < aspectRatio) {\n              // Height is too big. Adapt it\n              updatedSnap[1] = newW / aspectRatio - this.parameters.box.height;\n              isReverse && (updatedSnap[1] = -updatedSnap[1]);\n          } else if (newAspectRatio > aspectRatio) {\n              // Width is too big. Adapt it\n              updatedSnap[0] = this.parameters.box.width - newH * aspectRatio;\n              isReverse && (updatedSnap[0] = -updatedSnap[0]);\n          }\n\n          return updatedSnap;\n      };\n\n      SVG.extend(SVG.Element, {\n          // Resize element with mouse\n          resize: function (options) {\n\n              (this.remember('_resizeHandler') || new ResizeHandler(this)).init(options || {});\n\n              return this;\n\n          }\n\n      });\n\n      SVG.Element.prototype.resize.defaults = {\n          snapToAngle: 0.1,       // Specifies the speed the rotation is happening when moving the mouse\n          snapToGrid: 1,          // Snaps to a grid of `snapToGrid` Pixels\n          constraint: {},         // keep element within constrained box\n          saveAspectRatio: false  // Save aspect ratio when resizing using lt, rt, rb or lb points\n      };\n\n  }).call(this);\n  }());\n\n  if (typeof window.Apex === 'undefined') {\n    window.Apex = {};\n  }\n\n  var InitCtxVariables = /*#__PURE__*/function () {\n    function InitCtxVariables(ctx) {\n      _classCallCheck(this, InitCtxVariables);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(InitCtxVariables, [{\n      key: \"initModules\",\n      value: function initModules() {\n        this.ctx.publicMethods = ['updateOptions', 'updateSeries', 'appendData', 'appendSeries', 'toggleSeries', 'showSeries', 'hideSeries', 'setLocale', 'resetSeries', 'zoomX', 'toggleDataPointSelection', 'dataURI', 'addXaxisAnnotation', 'addYaxisAnnotation', 'addPointAnnotation', 'clearAnnotations', 'removeAnnotation', 'paper', 'destroy'];\n        this.ctx.eventList = ['click', 'mousedown', 'mousemove', 'mouseleave', 'touchstart', 'touchmove', 'touchleave', 'mouseup', 'touchend'];\n        this.ctx.animations = new Animations(this.ctx);\n        this.ctx.axes = new Axes(this.ctx);\n        this.ctx.core = new Core(this.ctx.el, this.ctx);\n        this.ctx.config = new Config({});\n        this.ctx.data = new Data(this.ctx);\n        this.ctx.grid = new Grid(this.ctx);\n        this.ctx.graphics = new Graphics(this.ctx);\n        this.ctx.coreUtils = new CoreUtils(this.ctx);\n        this.ctx.crosshairs = new Crosshairs(this.ctx);\n        this.ctx.events = new Events(this.ctx);\n        this.ctx.exports = new Exports(this.ctx);\n        this.ctx.localization = new Localization(this.ctx);\n        this.ctx.options = new Options();\n        this.ctx.responsive = new Responsive(this.ctx);\n        this.ctx.series = new Series(this.ctx);\n        this.ctx.theme = new Theme(this.ctx);\n        this.ctx.formatters = new Formatters(this.ctx);\n        this.ctx.titleSubtitle = new TitleSubtitle(this.ctx);\n        this.ctx.legend = new Legend(this.ctx);\n        this.ctx.toolbar = new Toolbar(this.ctx);\n        this.ctx.dimensions = new Dimensions(this.ctx);\n        this.ctx.updateHelpers = new UpdateHelpers(this.ctx);\n        this.ctx.zoomPanSelection = new ZoomPanSelection(this.ctx);\n        this.ctx.w.globals.tooltip = new Tooltip(this.ctx);\n      }\n    }]);\n\n    return InitCtxVariables;\n  }();\n\n  var Destroy = /*#__PURE__*/function () {\n    function Destroy(ctx) {\n      _classCallCheck(this, Destroy);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Destroy, [{\n      key: \"clear\",\n      value: function clear(_ref) {\n        var isUpdating = _ref.isUpdating;\n\n        if (this.ctx.zoomPanSelection) {\n          this.ctx.zoomPanSelection.destroy();\n        }\n\n        if (this.ctx.toolbar) {\n          this.ctx.toolbar.destroy();\n        }\n\n        this.ctx.animations = null;\n        this.ctx.axes = null;\n        this.ctx.annotations = null;\n        this.ctx.core = null;\n        this.ctx.data = null;\n        this.ctx.grid = null;\n        this.ctx.series = null;\n        this.ctx.responsive = null;\n        this.ctx.theme = null;\n        this.ctx.formatters = null;\n        this.ctx.titleSubtitle = null;\n        this.ctx.legend = null;\n        this.ctx.dimensions = null;\n        this.ctx.options = null;\n        this.ctx.crosshairs = null;\n        this.ctx.zoomPanSelection = null;\n        this.ctx.updateHelpers = null;\n        this.ctx.toolbar = null;\n        this.ctx.localization = null;\n        this.ctx.w.globals.tooltip = null;\n        this.clearDomElements({\n          isUpdating: isUpdating\n        });\n      }\n    }, {\n      key: \"killSVG\",\n      value: function killSVG(draw) {\n        draw.each(function (i, children) {\n          this.removeClass('*');\n          this.off();\n          this.stop();\n        }, true);\n        draw.ungroup();\n        draw.clear();\n      }\n    }, {\n      key: \"clearDomElements\",\n      value: function clearDomElements(_ref2) {\n        var _this = this;\n\n        var isUpdating = _ref2.isUpdating;\n        var elSVG = this.w.globals.dom.Paper.node; // fixes apexcharts.js#1654 & vue-apexcharts#256\n\n        if (elSVG.parentNode && elSVG.parentNode.parentNode && !isUpdating) {\n          elSVG.parentNode.parentNode.style.minHeight = 'unset';\n        } // detach root event\n\n\n        var baseEl = this.w.globals.dom.baseEl;\n\n        if (baseEl) {\n          // see https://github.com/apexcharts/vue-apexcharts/issues/275\n          this.ctx.eventList.forEach(function (event) {\n            baseEl.removeEventListener(event, _this.ctx.events.documentEvent);\n          });\n        }\n\n        var domEls = this.w.globals.dom;\n\n        if (this.ctx.el !== null) {\n          // remove all child elements - resetting the whole chart\n          while (this.ctx.el.firstChild) {\n            this.ctx.el.removeChild(this.ctx.el.firstChild);\n          }\n        }\n\n        this.killSVG(domEls.Paper);\n        domEls.Paper.remove();\n        domEls.elWrap = null;\n        domEls.elGraphical = null;\n        domEls.elAnnotations = null;\n        domEls.elLegendWrap = null;\n        domEls.baseEl = null;\n        domEls.elGridRect = null;\n        domEls.elGridRectMask = null;\n        domEls.elGridRectMarkerMask = null;\n        domEls.elForecastMask = null;\n        domEls.elNonForecastMask = null;\n        domEls.elDefs = null;\n      }\n    }]);\n\n    return Destroy;\n  }();\n\n  // Helpers to react to element resizes, regardless of what caused them\n  // TODO Currently this creates a new ResizeObserver every time we want to observe an element for resizes\n  // Ideally, we should be able to use a single observer for all elements\n  var ros = new WeakMap(); // Map callbacks to ResizeObserver instances for easy removal\n\n  function addResizeListener(el, fn) {\n    var called = false;\n    var ro = new ResizeObserver(function (r) {\n      // ROs fire immediately after being created,\n      // per spec: https://drafts.csswg.org/resize-observer/#ref-for-element%E2%91%A3\n      // we don't want that so we just discard the first run\n      if (called) {\n        fn.call(el, r);\n      }\n\n      called = true;\n    });\n\n    if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      // Document fragment, observe children instead (needed for Shadow DOM, see #1332)\n      Array.from(el.children).forEach(function (c) {\n        return ro.observe(c);\n      });\n    } else {\n      ro.observe(el);\n    }\n\n    ros.set(fn, ro);\n  }\n  function removeResizeListener(el, fn) {\n    var ro = ros.get(fn);\n\n    if (ro) {\n      ro.disconnect();\n      ros.delete(fn);\n    }\n  }\n\n  var css_248z = \".apexcharts-canvas {\\n  position: relative;\\n  user-select: none;\\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\\n}\\n\\n\\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\\n.apexcharts-canvas ::-webkit-scrollbar {\\n  -webkit-appearance: none;\\n  width: 6px;\\n}\\n\\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\\n  border-radius: 4px;\\n  background-color: rgba(0, 0, 0, .5);\\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n}\\n\\n\\n.apexcharts-inner {\\n  position: relative;\\n}\\n\\n.apexcharts-text tspan {\\n  font-family: inherit;\\n}\\n\\n.legend-mouseover-inactive {\\n  transition: 0.15s ease all;\\n  opacity: 0.20;\\n}\\n\\n.apexcharts-series-collapsed {\\n  opacity: 0;\\n}\\n\\n.apexcharts-tooltip {\\n  border-radius: 5px;\\n  box-shadow: 2px 2px 6px -4px #999;\\n  cursor: default;\\n  font-size: 14px;\\n  left: 62px;\\n  opacity: 0;\\n  pointer-events: none;\\n  position: absolute;\\n  top: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  z-index: 12;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-tooltip.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-light {\\n  border: 1px solid #e3e3e3;\\n  background: rgba(255, 255, 255, 0.96);\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-dark {\\n  color: #fff;\\n  background: rgba(30, 30, 30, 0.8);\\n}\\n\\n.apexcharts-tooltip * {\\n  font-family: inherit;\\n}\\n\\n\\n.apexcharts-tooltip-title {\\n  padding: 6px;\\n  font-size: 15px;\\n  margin-bottom: 4px;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\\n  background: #ECEFF1;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\\n  background: rgba(0, 0, 0, 0.7);\\n  border-bottom: 1px solid #333;\\n}\\n\\n.apexcharts-tooltip-text-y-value,\\n.apexcharts-tooltip-text-goals-value,\\n.apexcharts-tooltip-text-z-value {\\n  display: inline-block;\\n  font-weight: 600;\\n  margin-left: 5px;\\n}\\n\\n.apexcharts-tooltip-text-y-label:empty,\\n.apexcharts-tooltip-text-y-value:empty,\\n.apexcharts-tooltip-text-goals-label:empty,\\n.apexcharts-tooltip-text-goals-value:empty,\\n.apexcharts-tooltip-text-z-value:empty {\\n  display: none;\\n}\\n\\n.apexcharts-tooltip-text-y-value,\\n.apexcharts-tooltip-text-goals-value,\\n.apexcharts-tooltip-text-z-value {\\n  font-weight: 600;\\n}\\n\\n.apexcharts-tooltip-text-goals-label, \\n.apexcharts-tooltip-text-goals-value {\\n  padding: 6px 0 5px;\\n}\\n\\n.apexcharts-tooltip-goals-group, \\n.apexcharts-tooltip-text-goals-label, \\n.apexcharts-tooltip-text-goals-value {\\n  display: flex;\\n}\\n.apexcharts-tooltip-text-goals-label:not(:empty),\\n.apexcharts-tooltip-text-goals-value:not(:empty) {\\n  margin-top: -6px;\\n}\\n\\n.apexcharts-tooltip-marker {\\n  width: 12px;\\n  height: 12px;\\n  position: relative;\\n  top: 0px;\\n  margin-right: 10px;\\n  border-radius: 50%;\\n}\\n\\n.apexcharts-tooltip-series-group {\\n  padding: 0 10px;\\n  display: none;\\n  text-align: left;\\n  justify-content: left;\\n  align-items: center;\\n}\\n\\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\\n  opacity: 1;\\n}\\n\\n.apexcharts-tooltip-series-group.apexcharts-active,\\n.apexcharts-tooltip-series-group:last-child {\\n  padding-bottom: 4px;\\n}\\n\\n.apexcharts-tooltip-series-group-hidden {\\n  opacity: 0;\\n  height: 0;\\n  line-height: 0;\\n  padding: 0 !important;\\n}\\n\\n.apexcharts-tooltip-y-group {\\n  padding: 6px 0 5px;\\n}\\n\\n.apexcharts-tooltip-box, .apexcharts-custom-tooltip {\\n  padding: 4px 8px;\\n}\\n\\n.apexcharts-tooltip-boxPlot {\\n  display: flex;\\n  flex-direction: column-reverse;\\n}\\n\\n.apexcharts-tooltip-box>div {\\n  margin: 4px 0;\\n}\\n\\n.apexcharts-tooltip-box span.value {\\n  font-weight: bold;\\n}\\n\\n.apexcharts-tooltip-rangebar {\\n  padding: 5px 8px;\\n}\\n\\n.apexcharts-tooltip-rangebar .category {\\n  font-weight: 600;\\n  color: #777;\\n}\\n\\n.apexcharts-tooltip-rangebar .series-name {\\n  font-weight: bold;\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\n.apexcharts-xaxistooltip {\\n  opacity: 0;\\n  padding: 9px 10px;\\n  pointer-events: none;\\n  color: #373d3f;\\n  font-size: 13px;\\n  text-align: center;\\n  border-radius: 2px;\\n  position: absolute;\\n  z-index: 10;\\n  background: #ECEFF1;\\n  border: 1px solid #90A4AE;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\\n  background: rgba(0, 0, 0, 0.7);\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n  color: #fff;\\n}\\n\\n.apexcharts-xaxistooltip:after,\\n.apexcharts-xaxistooltip:before {\\n  left: 50%;\\n  border: solid transparent;\\n  content: \\\" \\\";\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-xaxistooltip:after {\\n  border-color: rgba(236, 239, 241, 0);\\n  border-width: 6px;\\n  margin-left: -6px;\\n}\\n\\n.apexcharts-xaxistooltip:before {\\n  border-color: rgba(144, 164, 174, 0);\\n  border-width: 7px;\\n  margin-left: -7px;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:after,\\n.apexcharts-xaxistooltip-bottom:before {\\n  bottom: 100%;\\n}\\n\\n.apexcharts-xaxistooltip-top:after,\\n.apexcharts-xaxistooltip-top:before {\\n  top: 100%;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:after {\\n  border-bottom-color: #ECEFF1;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:before {\\n  border-bottom-color: #90A4AE;\\n}\\n\\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\\n  border-bottom-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\\n  border-bottom-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-top:after {\\n  border-top-color: #ECEFF1\\n}\\n\\n.apexcharts-xaxistooltip-top:before {\\n  border-top-color: #90A4AE;\\n}\\n\\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\\n  border-top-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\\n  border-top-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-yaxistooltip {\\n  opacity: 0;\\n  padding: 4px 10px;\\n  pointer-events: none;\\n  color: #373d3f;\\n  font-size: 13px;\\n  text-align: center;\\n  border-radius: 2px;\\n  position: absolute;\\n  z-index: 10;\\n  background: #ECEFF1;\\n  border: 1px solid #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\\n  background: rgba(0, 0, 0, 0.7);\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n  color: #fff;\\n}\\n\\n.apexcharts-yaxistooltip:after,\\n.apexcharts-yaxistooltip:before {\\n  top: 50%;\\n  border: solid transparent;\\n  content: \\\" \\\";\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-yaxistooltip:after {\\n  border-color: rgba(236, 239, 241, 0);\\n  border-width: 6px;\\n  margin-top: -6px;\\n}\\n\\n.apexcharts-yaxistooltip:before {\\n  border-color: rgba(144, 164, 174, 0);\\n  border-width: 7px;\\n  margin-top: -7px;\\n}\\n\\n.apexcharts-yaxistooltip-left:after,\\n.apexcharts-yaxistooltip-left:before {\\n  left: 100%;\\n}\\n\\n.apexcharts-yaxistooltip-right:after,\\n.apexcharts-yaxistooltip-right:before {\\n  right: 100%;\\n}\\n\\n.apexcharts-yaxistooltip-left:after {\\n  border-left-color: #ECEFF1;\\n}\\n\\n.apexcharts-yaxistooltip-left:before {\\n  border-left-color: #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\\n  border-left-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\\n  border-left-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-right:after {\\n  border-right-color: #ECEFF1;\\n}\\n\\n.apexcharts-yaxistooltip-right:before {\\n  border-right-color: #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\\n  border-right-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\\n  border-right-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip.apexcharts-active {\\n  opacity: 1;\\n}\\n\\n.apexcharts-yaxistooltip-hidden {\\n  display: none;\\n}\\n\\n.apexcharts-xcrosshairs,\\n.apexcharts-ycrosshairs {\\n  pointer-events: none;\\n  opacity: 0;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-xcrosshairs.apexcharts-active,\\n.apexcharts-ycrosshairs.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-ycrosshairs-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-selection-rect {\\n  cursor: move;\\n}\\n\\n.svg_select_boundingRect, .svg_select_points_rot {\\n  pointer-events: none;\\n  opacity: 0;\\n  visibility: hidden;\\n}\\n.apexcharts-selection-rect + g .svg_select_boundingRect,\\n.apexcharts-selection-rect + g .svg_select_points_rot {\\n  opacity: 0;\\n  visibility: hidden;\\n}\\n\\n.apexcharts-selection-rect + g .svg_select_points_l,\\n.apexcharts-selection-rect + g .svg_select_points_r {\\n  cursor: ew-resize;\\n  opacity: 1;\\n  visibility: visible;\\n}\\n\\n.svg_select_points {\\n  fill: #efefef;\\n  stroke: #333;\\n  rx: 2;\\n}\\n\\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\\n  cursor: crosshair\\n}\\n\\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\\n  cursor: move\\n}\\n\\n.apexcharts-zoom-icon,\\n.apexcharts-zoomin-icon,\\n.apexcharts-zoomout-icon,\\n.apexcharts-reset-icon,\\n.apexcharts-pan-icon,\\n.apexcharts-selection-icon,\\n.apexcharts-menu-icon,\\n.apexcharts-toolbar-custom-icon {\\n  cursor: pointer;\\n  width: 20px;\\n  height: 20px;\\n  line-height: 24px;\\n  color: #6E8192;\\n  text-align: center;\\n}\\n\\n.apexcharts-zoom-icon svg,\\n.apexcharts-zoomin-icon svg,\\n.apexcharts-zoomout-icon svg,\\n.apexcharts-reset-icon svg,\\n.apexcharts-menu-icon svg {\\n  fill: #6E8192;\\n}\\n\\n.apexcharts-selection-icon svg {\\n  fill: #444;\\n  transform: scale(0.76)\\n}\\n\\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\\n  fill: #f3f4f5;\\n}\\n\\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\\n  fill: #008FFB;\\n}\\n\\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\\n  fill: #333;\\n}\\n\\n.apexcharts-selection-icon,\\n.apexcharts-menu-icon {\\n  position: relative;\\n}\\n\\n.apexcharts-reset-icon {\\n  margin-left: 5px;\\n}\\n\\n.apexcharts-zoom-icon,\\n.apexcharts-reset-icon,\\n.apexcharts-menu-icon {\\n  transform: scale(0.85);\\n}\\n\\n.apexcharts-zoomin-icon,\\n.apexcharts-zoomout-icon {\\n  transform: scale(0.7)\\n}\\n\\n.apexcharts-zoomout-icon {\\n  margin-right: 3px;\\n}\\n\\n.apexcharts-pan-icon {\\n  transform: scale(0.62);\\n  position: relative;\\n  left: 1px;\\n  top: 0px;\\n}\\n\\n.apexcharts-pan-icon svg {\\n  fill: #fff;\\n  stroke: #6E8192;\\n  stroke-width: 2;\\n}\\n\\n.apexcharts-pan-icon.apexcharts-selected svg {\\n  stroke: #008FFB;\\n}\\n\\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\\n  stroke: #333;\\n}\\n\\n.apexcharts-toolbar {\\n  position: absolute;\\n  z-index: 11;\\n  max-width: 176px;\\n  text-align: right;\\n  border-radius: 3px;\\n  padding: 0px 6px 2px 6px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.apexcharts-menu {\\n  background: #fff;\\n  position: absolute;\\n  top: 100%;\\n  border: 1px solid #ddd;\\n  border-radius: 3px;\\n  padding: 3px;\\n  right: 10px;\\n  opacity: 0;\\n  min-width: 110px;\\n  transition: 0.15s ease all;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-menu.apexcharts-menu-open {\\n  opacity: 1;\\n  pointer-events: all;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-menu-item {\\n  padding: 6px 7px;\\n  font-size: 12px;\\n  cursor: pointer;\\n}\\n\\n.apexcharts-theme-light .apexcharts-menu-item:hover {\\n  background: #eee;\\n}\\n\\n.apexcharts-theme-dark .apexcharts-menu {\\n  background: rgba(0, 0, 0, 0.7);\\n  color: #fff;\\n}\\n\\n@media screen and (min-width: 768px) {\\n  .apexcharts-canvas:hover .apexcharts-toolbar {\\n    opacity: 1;\\n  }\\n}\\n\\n.apexcharts-datalabel.apexcharts-element-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-pie-label,\\n.apexcharts-datalabels,\\n.apexcharts-datalabel,\\n.apexcharts-datalabel-label,\\n.apexcharts-datalabel-value {\\n  cursor: default;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-pie-label-delay {\\n  opacity: 0;\\n  animation-name: opaque;\\n  animation-duration: 0.3s;\\n  animation-fill-mode: forwards;\\n  animation-timing-function: ease;\\n}\\n\\n.apexcharts-canvas .apexcharts-element-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-hide .apexcharts-series-points {\\n  opacity: 0;\\n}\\n\\n.apexcharts-gridline,\\n.apexcharts-annotation-rect,\\n.apexcharts-tooltip .apexcharts-marker,\\n.apexcharts-area-series .apexcharts-area,\\n.apexcharts-line,\\n.apexcharts-zoom-rect,\\n.apexcharts-toolbar svg,\\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\\n.apexcharts-radar-series path,\\n.apexcharts-radar-series polygon {\\n  pointer-events: none;\\n}\\n\\n\\n/* markers */\\n\\n.apexcharts-marker {\\n  transition: 0.15s ease all;\\n}\\n\\n@keyframes opaque {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n\\n/* Resize generated styles */\\n\\n@keyframes resizeanim {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n.resize-triggers {\\n  animation: 1ms resizeanim;\\n  visibility: hidden;\\n  opacity: 0;\\n}\\n\\n.resize-triggers,\\n.resize-triggers>div,\\n.contract-trigger:before {\\n  content: \\\" \\\";\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n  overflow: hidden;\\n}\\n\\n.resize-triggers>div {\\n  background: #eee;\\n  overflow: auto;\\n}\\n\\n.contract-trigger:before {\\n  width: 200%;\\n  height: 200%;\\n}\";\n\n  /**\n   *\n   * @module ApexCharts\n   **/\n\n  var ApexCharts$1 = /*#__PURE__*/function () {\n    function ApexCharts(el, opts) {\n      _classCallCheck(this, ApexCharts);\n\n      this.opts = opts;\n      this.ctx = this; // Pass the user supplied options to the Base Class where these options will be extended with defaults. The returned object from Base Class will become the config object in the entire codebase.\n\n      this.w = new Base(opts).init();\n      this.el = el;\n      this.w.globals.cuid = Utils$1.randomId();\n      this.w.globals.chartID = this.w.config.chart.id ? Utils$1.escapeString(this.w.config.chart.id) : this.w.globals.cuid;\n      var initCtx = new InitCtxVariables(this);\n      initCtx.initModules();\n      this.create = Utils$1.bind(this.create, this);\n      this.windowResizeHandler = this._windowResizeHandler.bind(this);\n      this.parentResizeHandler = this._parentResizeCallback.bind(this);\n    }\n    /**\n     * The primary method user will call to render the chart.\n     */\n\n\n    _createClass(ApexCharts, [{\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n\n        // main method\n        return new Promise(function (resolve, reject) {\n          // only draw chart, if element found\n          if (_this.el !== null) {\n            if (typeof Apex._chartInstances === 'undefined') {\n              Apex._chartInstances = [];\n            }\n\n            if (_this.w.config.chart.id) {\n              Apex._chartInstances.push({\n                id: _this.w.globals.chartID,\n                group: _this.w.config.chart.group,\n                chart: _this\n              });\n            } // set the locale here\n\n\n            _this.setLocale(_this.w.config.chart.defaultLocale);\n\n            var beforeMount = _this.w.config.chart.events.beforeMount;\n\n            if (typeof beforeMount === 'function') {\n              beforeMount(_this, _this.w);\n            }\n\n            _this.events.fireEvent('beforeMount', [_this, _this.w]);\n\n            window.addEventListener('resize', _this.windowResizeHandler);\n            addResizeListener(_this.el.parentNode, _this.parentResizeHandler); // Add CSS if not already added\n\n            if (!_this.css) {\n              var rootNode = _this.el.getRootNode && _this.el.getRootNode();\n\n              var inShadowRoot = Utils$1.is('ShadowRoot', rootNode);\n              var doc = _this.el.ownerDocument;\n              var globalCSS = doc.getElementById('apexcharts-css');\n\n              if (inShadowRoot || !globalCSS) {\n                _this.css = document.createElement('style');\n                _this.css.id = 'apexcharts-css';\n                _this.css.textContent = css_248z;\n\n                if (inShadowRoot) {\n                  // We are in Shadow DOM, add to shadow root\n                  rootNode.prepend(_this.css);\n                } else {\n                  // Add to <head> of element's document\n                  doc.head.appendChild(_this.css);\n                }\n              }\n            }\n\n            var graphData = _this.create(_this.w.config.series, {});\n\n            if (!graphData) return resolve(_this);\n\n            _this.mount(graphData).then(function () {\n              if (typeof _this.w.config.chart.events.mounted === 'function') {\n                _this.w.config.chart.events.mounted(_this, _this.w);\n              }\n\n              _this.events.fireEvent('mounted', [_this, _this.w]);\n\n              resolve(graphData);\n            }).catch(function (e) {\n              reject(e); // handle error in case no data or element not found\n            });\n          } else {\n            reject(new Error('Element not found'));\n          }\n        });\n      }\n    }, {\n      key: \"create\",\n      value: function create(ser, opts) {\n        var w = this.w;\n        var initCtx = new InitCtxVariables(this);\n        initCtx.initModules();\n        var gl = this.w.globals;\n        gl.noData = false;\n        gl.animationEnded = false;\n        this.responsive.checkResponsiveConfig(opts);\n\n        if (w.config.xaxis.convertedCatToNumeric) {\n          var defaults = new Defaults(w.config);\n          defaults.convertCatToNumericXaxis(w.config, this.ctx);\n        }\n\n        if (this.el === null) {\n          gl.animationEnded = true;\n          return null;\n        }\n\n        this.core.setupElements();\n\n        if (w.config.chart.type === 'treemap') {\n          w.config.grid.show = false;\n          w.config.yaxis[0].show = false;\n        }\n\n        if (gl.svgWidth === 0) {\n          // if the element is hidden, skip drawing\n          gl.animationEnded = true;\n          return null;\n        }\n\n        var combo = CoreUtils.checkComboSeries(ser);\n        gl.comboCharts = combo.comboCharts;\n        gl.comboBarCount = combo.comboBarCount;\n        var allSeriesAreEmpty = ser.every(function (s) {\n          return s.data && s.data.length === 0;\n        });\n\n        if (ser.length === 0 || allSeriesAreEmpty) {\n          this.series.handleNoData();\n        }\n\n        this.events.setupEventHandlers(); // Handle the data inputted by user and set some of the global variables (for eg, if data is datetime / numeric / category). Don't calculate the range / min / max at this time\n\n        this.data.parseData(ser); // this is a good time to set theme colors first\n\n        this.theme.init(); // as markers accepts array, we need to setup global markers for easier access\n\n        var markers = new Markers(this);\n        markers.setGlobalMarkerSize(); // labelFormatters should be called before dimensions as in dimensions we need text labels width\n\n        this.formatters.setLabelFormatters();\n        this.titleSubtitle.draw(); // legend is calculated here before coreCalculations because it affects the plottable area\n        // if there is some data to show or user collapsed all series, then proceed drawing legend\n\n        if (!gl.noData || gl.collapsedSeries.length === gl.series.length || w.config.legend.showForSingleSeries) {\n          this.legend.init();\n        } // check whether in multiple series, all series share the same X\n\n\n        this.series.hasAllSeriesEqualX(); // coreCalculations will give the min/max range and yaxis/axis values. It should be called here to set series variable from config to globals\n\n        if (gl.axisCharts) {\n          this.core.coreCalculations();\n\n          if (w.config.xaxis.type !== 'category') {\n            // as we have minX and maxX values, determine the default DateTimeFormat for time series\n            this.formatters.setLabelFormatters();\n          }\n\n          this.ctx.toolbar.minX = w.globals.minX;\n          this.ctx.toolbar.maxX = w.globals.maxX;\n        } // we need to generate yaxis for heatmap separately as we are not showing numerics there, but seriesNames. There are some tweaks which are required for heatmap to align labels correctly which are done in below function\n        // Also we need to do this before calculating Dimensions plotCoords() method of Dimensions\n\n\n        this.formatters.heatmapLabelFormatters(); // We got plottable area here, next task would be to calculate axis areas\n\n        this.dimensions.plotCoords();\n        var xyRatios = this.core.xySettings();\n        this.grid.createGridMask();\n        var elGraph = this.core.plotChartType(ser, xyRatios);\n        var dataLabels = new DataLabels(this);\n        dataLabels.bringForward();\n\n        if (w.config.dataLabels.background.enabled) {\n          dataLabels.dataLabelsBackground();\n        } // after all the drawing calculations, shift the graphical area (actual charts/bars) excluding legends\n\n\n        this.core.shiftGraphPosition();\n        var dim = {\n          plot: {\n            left: w.globals.translateX,\n            top: w.globals.translateY,\n            width: w.globals.gridWidth,\n            height: w.globals.gridHeight\n          }\n        };\n        return {\n          elGraph: elGraph,\n          xyRatios: xyRatios,\n          elInner: w.globals.dom.elGraphical,\n          dimensions: dim\n        };\n      }\n    }, {\n      key: \"mount\",\n      value: function mount() {\n        var _this2 = this;\n\n        var graphData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var me = this;\n        var w = me.w;\n        return new Promise(function (resolve, reject) {\n          // no data to display\n          if (me.el === null) {\n            return reject(new Error('Not enough data to display or target element not found'));\n          } else if (graphData === null || w.globals.allSeriesCollapsed) {\n            me.series.handleNoData();\n          }\n\n          if (w.config.chart.type !== 'treemap') {\n            me.axes.drawAxis(w.config.chart.type, graphData.xyRatios);\n          }\n\n          me.grid = new Grid(me);\n          var elgrid = me.grid.drawGrid();\n          me.annotations = new Annotations(me);\n          me.annotations.drawImageAnnos();\n          me.annotations.drawTextAnnos();\n\n          if (w.config.grid.position === 'back' && elgrid) {\n            w.globals.dom.elGraphical.add(elgrid.el);\n          }\n\n          var xAxis = new XAxis(_this2.ctx);\n          var yaxis = new YAxis(_this2.ctx);\n\n          if (elgrid !== null) {\n            xAxis.xAxisLabelCorrections(elgrid.xAxisTickWidth);\n            yaxis.setYAxisTextAlignments();\n            w.config.yaxis.map(function (yaxe, index) {\n              if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1) {\n                yaxis.yAxisTitleRotate(index, yaxe.opposite);\n              }\n            });\n          }\n\n          if (w.config.annotations.position === 'back') {\n            w.globals.dom.Paper.add(w.globals.dom.elAnnotations);\n            me.annotations.drawAxesAnnotations();\n          }\n\n          if (Array.isArray(graphData.elGraph)) {\n            for (var g = 0; g < graphData.elGraph.length; g++) {\n              w.globals.dom.elGraphical.add(graphData.elGraph[g]);\n            }\n          } else {\n            w.globals.dom.elGraphical.add(graphData.elGraph);\n          }\n\n          if (w.config.grid.position === 'front' && elgrid) {\n            w.globals.dom.elGraphical.add(elgrid.el);\n          }\n\n          if (w.config.xaxis.crosshairs.position === 'front') {\n            me.crosshairs.drawXCrosshairs();\n          }\n\n          if (w.config.yaxis[0].crosshairs.position === 'front') {\n            me.crosshairs.drawYCrosshairs();\n          }\n\n          if (w.config.annotations.position === 'front') {\n            w.globals.dom.Paper.add(w.globals.dom.elAnnotations);\n            me.annotations.drawAxesAnnotations();\n          }\n\n          if (!w.globals.noData) {\n            // draw tooltips at the end\n            if (w.config.tooltip.enabled && !w.globals.noData) {\n              me.w.globals.tooltip.drawTooltip(graphData.xyRatios);\n            }\n\n            if (w.globals.axisCharts && (w.globals.isXNumeric || w.config.xaxis.convertedCatToNumeric || w.globals.isRangeBar)) {\n              if (w.config.chart.zoom.enabled || w.config.chart.selection && w.config.chart.selection.enabled || w.config.chart.pan && w.config.chart.pan.enabled) {\n                me.zoomPanSelection.init({\n                  xyRatios: graphData.xyRatios\n                });\n              }\n            } else {\n              var tools = w.config.chart.toolbar.tools;\n              var toolsArr = ['zoom', 'zoomin', 'zoomout', 'selection', 'pan', 'reset'];\n              toolsArr.forEach(function (t) {\n                tools[t] = false;\n              });\n            }\n\n            if (w.config.chart.toolbar.show && !w.globals.allSeriesCollapsed) {\n              me.toolbar.createToolbar();\n            }\n          }\n\n          if (w.globals.memory.methodsToExec.length > 0) {\n            w.globals.memory.methodsToExec.forEach(function (fn) {\n              fn.method(fn.params, false, fn.context);\n            });\n          }\n\n          if (!w.globals.axisCharts && !w.globals.noData) {\n            me.core.resizeNonAxisCharts();\n          }\n\n          resolve(me);\n        });\n      }\n      /**\n       * Destroy the chart instance by removing all elements which also clean up event listeners on those elements.\n       */\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        window.removeEventListener('resize', this.windowResizeHandler);\n        removeResizeListener(this.el.parentNode, this.parentResizeHandler); // remove the chart's instance from the global Apex._chartInstances\n\n        var chartID = this.w.config.chart.id;\n\n        if (chartID) {\n          Apex._chartInstances.forEach(function (c, i) {\n            if (c.id === Utils$1.escapeString(chartID)) {\n              Apex._chartInstances.splice(i, 1);\n            }\n          });\n        }\n\n        new Destroy(this.ctx).clear({\n          isUpdating: false\n        });\n      }\n      /**\n       * Allows users to update Options after the chart has rendered.\n       *\n       * @param {object} options - A new config object can be passed which will be merged with the existing config object\n       * @param {boolean} redraw - should redraw from beginning or should use existing paths and redraw from there\n       * @param {boolean} animate - should animate or not on updating Options\n       */\n\n    }, {\n      key: \"updateOptions\",\n      value: function updateOptions(options) {\n        var _this3 = this;\n\n        var redraw = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var animate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var updateSyncedCharts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n        var overwriteInitialConfig = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n        var w = this.w; // when called externally, clear some global variables\n        // fixes apexcharts.js#1488\n\n        w.globals.selection = undefined;\n\n        if (options.series) {\n          this.series.resetSeries(false, true, false);\n\n          if (options.series.length && options.series[0].data) {\n            options.series = options.series.map(function (s, i) {\n              return _this3.updateHelpers._extendSeries(s, i);\n            });\n          } // user updated the series via updateOptions() function.\n          // Hence, we need to reset axis min/max to avoid zooming issues\n\n\n          this.updateHelpers.revertDefaultAxisMinMax();\n        } // user has set x-axis min/max externally - hence we need to forcefully set the xaxis min/max\n\n\n        if (options.xaxis) {\n          options = this.updateHelpers.forceXAxisUpdate(options);\n        }\n\n        if (options.yaxis) {\n          options = this.updateHelpers.forceYAxisUpdate(options);\n        }\n\n        if (w.globals.collapsedSeriesIndices.length > 0) {\n          this.series.clearPreviousPaths();\n        }\n        /* update theme mode#459 */\n\n\n        if (options.theme) {\n          options = this.theme.updateThemeOptions(options);\n        }\n\n        return this.updateHelpers._updateOptions(options, redraw, animate, updateSyncedCharts, overwriteInitialConfig);\n      }\n      /**\n       * Allows users to update Series after the chart has rendered.\n       *\n       * @param {array} series - New series which will override the existing\n       */\n\n    }, {\n      key: \"updateSeries\",\n      value: function updateSeries() {\n        var newSeries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var animate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var overwriteInitialSeries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        this.series.resetSeries(false);\n        this.updateHelpers.revertDefaultAxisMinMax();\n        return this.updateHelpers._updateSeries(newSeries, animate, overwriteInitialSeries);\n      }\n      /**\n       * Allows users to append a new series after the chart has rendered.\n       *\n       * @param {array} newSerie - New serie which will be appended to the existing series\n       */\n\n    }, {\n      key: \"appendSeries\",\n      value: function appendSeries(newSerie) {\n        var animate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var overwriteInitialSeries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var newSeries = this.w.config.series.slice();\n        newSeries.push(newSerie);\n        this.series.resetSeries(false);\n        this.updateHelpers.revertDefaultAxisMinMax();\n        return this.updateHelpers._updateSeries(newSeries, animate, overwriteInitialSeries);\n      }\n      /**\n       * Allows users to append Data to series.\n       *\n       * @param {array} newData - New data in the same format as series\n       */\n\n    }, {\n      key: \"appendData\",\n      value: function appendData(newData) {\n        var overwriteInitialSeries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var me = this;\n        me.w.globals.dataChanged = true;\n        me.series.getPreviousPaths();\n        var newSeries = me.w.config.series.slice();\n\n        for (var i = 0; i < newSeries.length; i++) {\n          if (newData[i] !== null && typeof newData[i] !== 'undefined') {\n            for (var j = 0; j < newData[i].data.length; j++) {\n              newSeries[i].data.push(newData[i].data[j]);\n            }\n          }\n        }\n\n        me.w.config.series = newSeries;\n\n        if (overwriteInitialSeries) {\n          me.w.globals.initialSeries = Utils$1.clone(me.w.config.series);\n        }\n\n        return this.update();\n      }\n    }, {\n      key: \"update\",\n      value: function update(options) {\n        var _this4 = this;\n\n        return new Promise(function (resolve, reject) {\n          new Destroy(_this4.ctx).clear({\n            isUpdating: true\n          });\n\n          var graphData = _this4.create(_this4.w.config.series, options);\n\n          if (!graphData) return resolve(_this4);\n\n          _this4.mount(graphData).then(function () {\n            if (typeof _this4.w.config.chart.events.updated === 'function') {\n              _this4.w.config.chart.events.updated(_this4, _this4.w);\n            }\n\n            _this4.events.fireEvent('updated', [_this4, _this4.w]);\n\n            _this4.w.globals.isDirty = true;\n            resolve(_this4);\n          }).catch(function (e) {\n            reject(e);\n          });\n        });\n      }\n      /**\n       * Get all charts in the same \"group\" (including the instance which is called upon) to sync them when user zooms in/out or pan.\n       */\n\n    }, {\n      key: \"getSyncedCharts\",\n      value: function getSyncedCharts() {\n        var chartGroups = this.getGroupedCharts();\n        var allCharts = [this];\n\n        if (chartGroups.length) {\n          allCharts = [];\n          chartGroups.forEach(function (ch) {\n            allCharts.push(ch);\n          });\n        }\n\n        return allCharts;\n      }\n      /**\n       * Get charts in the same \"group\" (excluding the instance which is called upon) to perform operations on the other charts of the same group (eg., tooltip hovering)\n       */\n\n    }, {\n      key: \"getGroupedCharts\",\n      value: function getGroupedCharts() {\n        var _this5 = this;\n\n        return Apex._chartInstances.filter(function (ch) {\n          if (ch.group) {\n            return true;\n          }\n        }).map(function (ch) {\n          return _this5.w.config.chart.group === ch.group ? ch.chart : _this5;\n        });\n      }\n    }, {\n      key: \"toggleSeries\",\n      value: function toggleSeries(seriesName) {\n        return this.series.toggleSeries(seriesName);\n      }\n    }, {\n      key: \"highlightSeriesOnLegendHover\",\n      value: function highlightSeriesOnLegendHover(e, targetElement) {\n        return this.series.toggleSeriesOnHover(e, targetElement);\n      }\n    }, {\n      key: \"showSeries\",\n      value: function showSeries(seriesName) {\n        this.series.showSeries(seriesName);\n      }\n    }, {\n      key: \"hideSeries\",\n      value: function hideSeries(seriesName) {\n        this.series.hideSeries(seriesName);\n      }\n    }, {\n      key: \"resetSeries\",\n      value: function resetSeries() {\n        var shouldUpdateChart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var shouldResetZoom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        this.series.resetSeries(shouldUpdateChart, shouldResetZoom);\n      } // Public method to add event listener on chart context\n\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(name, handler) {\n        this.events.addEventListener(name, handler);\n      } // Public method to remove event listener on chart context\n\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(name, handler) {\n        this.events.removeEventListener(name, handler);\n      }\n    }, {\n      key: \"addXaxisAnnotation\",\n      value: function addXaxisAnnotation(opts) {\n        var pushToMemory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n        var me = this;\n\n        if (context) {\n          me = context;\n        }\n\n        me.annotations.addXaxisAnnotationExternal(opts, pushToMemory, me);\n      }\n    }, {\n      key: \"addYaxisAnnotation\",\n      value: function addYaxisAnnotation(opts) {\n        var pushToMemory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n        var me = this;\n\n        if (context) {\n          me = context;\n        }\n\n        me.annotations.addYaxisAnnotationExternal(opts, pushToMemory, me);\n      }\n    }, {\n      key: \"addPointAnnotation\",\n      value: function addPointAnnotation(opts) {\n        var pushToMemory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n        var me = this;\n\n        if (context) {\n          me = context;\n        }\n\n        me.annotations.addPointAnnotationExternal(opts, pushToMemory, me);\n      }\n    }, {\n      key: \"clearAnnotations\",\n      value: function clearAnnotations() {\n        var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n        var me = this;\n\n        if (context) {\n          me = context;\n        }\n\n        me.annotations.clearAnnotations(me);\n      }\n    }, {\n      key: \"removeAnnotation\",\n      value: function removeAnnotation(id) {\n        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n        var me = this;\n\n        if (context) {\n          me = context;\n        }\n\n        me.annotations.removeAnnotation(me, id);\n      }\n    }, {\n      key: \"getChartArea\",\n      value: function getChartArea() {\n        var el = this.w.globals.dom.baseEl.querySelector('.apexcharts-inner');\n        return el;\n      }\n    }, {\n      key: \"getSeriesTotalXRange\",\n      value: function getSeriesTotalXRange(minX, maxX) {\n        return this.coreUtils.getSeriesTotalsXRange(minX, maxX);\n      }\n    }, {\n      key: \"getHighestValueInSeries\",\n      value: function getHighestValueInSeries() {\n        var seriesIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var range = new Range(this.ctx);\n        return range.getMinYMaxY(seriesIndex).highestY;\n      }\n    }, {\n      key: \"getLowestValueInSeries\",\n      value: function getLowestValueInSeries() {\n        var seriesIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var range = new Range(this.ctx);\n        return range.getMinYMaxY(seriesIndex).lowestY;\n      }\n    }, {\n      key: \"getSeriesTotal\",\n      value: function getSeriesTotal() {\n        return this.w.globals.seriesTotals;\n      }\n    }, {\n      key: \"toggleDataPointSelection\",\n      value: function toggleDataPointSelection(seriesIndex, dataPointIndex) {\n        return this.updateHelpers.toggleDataPointSelection(seriesIndex, dataPointIndex);\n      }\n    }, {\n      key: \"zoomX\",\n      value: function zoomX(min, max) {\n        this.ctx.toolbar.zoomUpdateOptions(min, max);\n      }\n    }, {\n      key: \"setLocale\",\n      value: function setLocale(localeName) {\n        this.localization.setCurrentLocaleValues(localeName);\n      }\n    }, {\n      key: \"dataURI\",\n      value: function dataURI(options) {\n        var exp = new Exports(this.ctx);\n        return exp.dataURI(options);\n      }\n    }, {\n      key: \"paper\",\n      value: function paper() {\n        return this.w.globals.dom.Paper;\n      }\n    }, {\n      key: \"_parentResizeCallback\",\n      value: function _parentResizeCallback() {\n        if (this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize) {\n          this._windowResize();\n        }\n      }\n      /**\n       * Handle window resize and re-draw the whole chart.\n       */\n\n    }, {\n      key: \"_windowResize\",\n      value: function _windowResize() {\n        var _this6 = this;\n\n        clearTimeout(this.w.globals.resizeTimer);\n        this.w.globals.resizeTimer = window.setTimeout(function () {\n          _this6.w.globals.resized = true;\n          _this6.w.globals.dataChanged = false; // we need to redraw the whole chart on window resize (with a small delay).\n\n          _this6.ctx.update();\n        }, 150);\n      }\n    }, {\n      key: \"_windowResizeHandler\",\n      value: function _windowResizeHandler() {\n        var redraw = this.w.config.chart.redrawOnWindowResize;\n\n        if (typeof redraw === 'function') {\n          redraw = redraw();\n        }\n\n        redraw && this._windowResize();\n      }\n    }], [{\n      key: \"getChartByID\",\n      value: function getChartByID(id) {\n        var chartId = Utils$1.escapeString(id);\n\n        var c = Apex._chartInstances.filter(function (ch) {\n          return ch.id === chartId;\n        })[0];\n\n        return c && c.chart;\n      }\n      /**\n       * Allows the user to provide data attrs in the element and the chart will render automatically when this method is called by searching for the elements containing 'data-apexcharts' attribute\n       */\n\n    }, {\n      key: \"initOnLoad\",\n      value: function initOnLoad() {\n        var els = document.querySelectorAll('[data-apexcharts]');\n\n        for (var i = 0; i < els.length; i++) {\n          var el = els[i];\n          var options = JSON.parse(els[i].getAttribute('data-options'));\n          var apexChart = new ApexCharts(el, options);\n          apexChart.render();\n        }\n      }\n      /**\n       * This static method allows users to call chart methods without necessarily from the\n       * instance of the chart in case user has assigned chartID to the targeted chart.\n       * The chartID is used for mapping the instance stored in Apex._chartInstances global variable\n       *\n       * This is helpful in cases when you don't have reference of the chart instance\n       * easily and need to call the method from anywhere.\n       * For eg, in React/Vue applications when you have many parent/child components,\n       * and need easy reference to other charts for performing dynamic operations\n       *\n       * @param {string} chartID - The unique identifier which will be used to call methods\n       * on that chart instance\n       * @param {function} fn - The method name to call\n       * @param {object} opts - The parameters which are accepted in the original method will be passed here in the same order.\n       */\n\n    }, {\n      key: \"exec\",\n      value: function exec(chartID, fn) {\n        var chart = this.getChartByID(chartID);\n        if (!chart) return; // turn on the global exec flag to indicate this method was called\n\n        chart.w.globals.isExecCalled = true;\n        var ret = null;\n\n        if (chart.publicMethods.indexOf(fn) !== -1) {\n          for (var _len = arguments.length, opts = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n            opts[_key - 2] = arguments[_key];\n          }\n\n          ret = chart[fn].apply(chart, opts);\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"merge\",\n      value: function merge(target, source) {\n        return Utils$1.extend(target, source);\n      }\n    }]);\n\n    return ApexCharts;\n  }();\n\n  return ApexCharts$1;\n\n})));\n</script>\n",
        "output": "str",
        "x": 1000,
        "y": 880,
        "wires": [
            [
                "024222d619f069a9"
            ]
        ]
    },
    {
        "id": "81e868e2dc43d637",
        "type": "function",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "",
        "func": "/* Declaración de datos \nAPI         = 30;   \nPy          = 3000; //psi \nPb          = 1200;  //psi\nPcrit       = 1050; // psi\nPwf_P       = 750;  //psi \nQ_p         = 2300; //BPD\nBSW         = 98;   //%\nT_fluido    = 160;  // °F\nDens_Agua   = 8.33; //ppg \nProf_Intake = 4000; //ft  Profundidad de la bomba \nProf_Sensor = 4030; //ft  Profundidad del sensor de fondo\nPMP         = 4500; //FT\nPIP_Sensor  = 750; //psi\nPCasing     = 0;   //psi\n*/\nvar Analog = global.get(\"DownHoleData\",\"memoryOnly\")||[];\n\n// ESTADO MECANICO\nvar PMP             = global.get(\"IWOC.ESTADO_MECANICO.PMP\")||4500; //Presión del tubo \nvar Prof_Discharge  = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_descarga\")||0;\nvar Prof_Sensor     = global.get(\"IWOC.ESTADO_MECANICO.Prof_Sensor\")||4030;\nvar Prof_Intake     = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_entrada\")||4000;\n\n// PROPIEDADES DE FLUIDO\nvar API             = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.API\")||30;\nvar T_fluido        = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Temperatura_de_fondo\")||160;\nvar Dens_Agua       = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Densidad_del_agua\")||8.33;\n\n// PRUEBA DE PRODUCCION\nvar Pwf_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.PWF_Prueba\")||750;\nvar BSW             = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.BSW_Prueba\")||98; //Relación Agua-Petroleo\nvar Q_p             = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Q_Prueba\")||2300;\nvar Vel_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Velociad_de_prueba\")||0;\n\n// DATOS PARA IPR\nvar Py              = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_yacimiento\")||2500;\nvar Pcrit           = global.get(\"IWOC.DATOS_PARA_IPR.PWF_Critica\")||1050;\nvar Pb              = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_burbuja\")||1200;\n\n//var PIP_Sensor      = Analog.DHS[\"Presión de entrada\"]||Analog.AI[\"Presión de entrada\"];\nvar PIP_Sensor = 750; //psi / Presión de la entrada de la bomba \nvar PCasing         = 0;\n\nvar AxisX = [];\nvar AxisY = [];\n/*\n    Paso No. 1: Se halla Gradiente de Presión corregido por \n    temperatura y %BSW a partir de la Gravedad Específica (GE)\n    del crudo usando gravedad API del crudo.\n*/\n\nvar GE = 141.5/(131.5 + API); //Corrección de la Gravedad Especifica del crudo\n\n/*\n    Paso No. 2: Hallar valores de alfa y beta según la gravedad \n    específica (GE) siguiendo lo que indica la tabla abajo:\n*/\n\nif(GE<0.63){\n    var Alfa = 0.00097;\n    var Beta = -0.0000004;\n}\nelse if((GE<0.78) && (GE>=0.63)){\n    var Alfa = (0.00097+(GE-0.63))*((0.00075-0.00097)/(0.78-0.63));\n    var Beta = (0.0000004 + (GE-0.63))*(0.0000004/(0.78-0.63));\n}\nelse if((GE<0.85)&&(GE>=0.78)){\n    var Alfa = (0.00075+(GE-0.75))*((0.00068-0.00075)/(0.85-0.78));\n    var Beta = (0 + (GE-0.75))*(0.0000001/(0.85-0.78));\n}   \nelse if((GE<0.95)&&(GE>=0.85)){\n    var Alfa = (0.00068+(GE-0.85))*((0.00066-0.00068)/(0.95-0.85));\n    var Beta = (0.0000001 + (GE-0.85))*((0.0000001-0.0000003)/(0.95-0.85));\n}   \nelse if(GE>=0.95){\n    var Alfa = 0.00066;\n    var Beta = -0.0000003;\n}\n\n//GE_o  = Gravedad específica de aceite ajustada \nvar GE_o = GE - (Alfa*(T_fluido-60)) + (Beta*Math.pow((T_fluido-60), 2)); // Temperatura de fondo - Temperatura ambiente (60°) \n\n/*\n    Paso No. 3: Hallar el Gradiente de presión corregido\n*/\nvar Grv_TFondoBSW = (((100 - BSW) / 100) * GE_o) + ((BSW / 100) * (Dens_Agua / 8.345)) \nvar VP = 0.433 * Grv_TFondoBSW // Gradiente de presión\n\n\n/*\n    Paso No. 4: Cálculo de PIP en iWOC según tres escenarios\n    \n    •\tEscenario No. 1: Cálculo de Variables en Función del Sensor de Fondo\n\n        Cálculo de PIP, PWF y Sumergencia líquida cuando la Fuente de Medición es un sensor de fondo.\n*/\n\n    var PIP_real    = PIP_Sensor + ((Prof_Intake - Prof_Sensor)*VP);\n    var Pwf         = PIP_Sensor + ((PMP - Prof_Sensor)*VP);\n    var Sum_Liq     = (PIP_real- PCasing)/ VP;\n\n/*\n    Paso No. 5: Cálculo de Caudales\n*/    \n/* Yacimiento Subsaturado*/\nif(Py>Pb){\n    if(Pwf>Pb){\n        var IP = Q_p/(Py-Pwf_P);\n        //node.send()\n    }\n    else{\n        IP = Q_p/(Py - Pb + (Pb/1.8)*(1-(0.2*(Pwf/Pb))-0.8*(Math.pow((Pwf/Pb),2))))\n    }\n    \n    var Qb      = IP * (Py - Pb);\n    var Qmax    = Qb + (IP*Pb/1.8);\n    var N       = 80;\n    \n    for (var i = 80; i >= 0;i--){\n        var Pwf_G = (Py*i/N);\n        if(Pwf_G>Pb){\n            var Qg = IP *(Py- Pwf_G);\n        }\n        else{       \n            Qg = Qb + (Qmax - Qb) * (1 - (0.2 * (Pwf_G / Pb)) - (0.8 * ((Pwf_G / Pb) * (Pwf_G / Pb))));\n        }\n        AxisX.push(Qg);\n        AxisY.push(Pwf_G);\n    }\n    /*\n        Cálculo Caudal actual Qo\n    */\n    if(Pwf>Pb){\n        var Q0 = IP *(Py- Pwf);    \n    }\n    else{       \n        var Q0 = Qb + (Qmax - Qb) * (1 - (0.2 * (Pwf / Pb)) - (0.8 * ((Pwf / Pb) * (Pwf / Pb))));\n    }\n}\n\n\nmsg.payload = {\n    'AxisX' : AxisX,\n    'AxisY' : AxisY,\n    'Pcrit' : Pcrit,\n    'Q0'    : Q0,\n    'Pwf'   : Pwf\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 880,
        "wires": [
            [
                "fee026c23d97c1b7"
            ]
        ]
    },
    {
        "id": "fee026c23d97c1b7",
        "type": "template",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "IPR Chart",
        "field": "chart",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div id=\"chart\"></div>\n<script>\n    var options = {\n            series:[{\n                name: \"Presión de fondo fluyente (PWF)\",\n                data: [{{payload.AxisY}}]\n            }],\n            chart:{\n                height: 330,\n                width: 720,\n                type: 'line',\n                id: 'areachart-2',\n                toolbar:{\n                    show: false\n                },\n                animations:{\n                    enabled: false\n                }\n            },\n            annotations:{\n                yaxis:[\n                    {\n                        y: {{payload.Pcrit}},\n                        borderColor: '#c71e1e',\n                        label:{\n                            borderColor:'#c71e1e',\n                            position: 'left',\n                            position: 'top',\n                            offsetX: 90,\n                            offsetY: 0,                        \n                            style: {\n                                color:'#fff',\n                                background:'#000000',\n                                fontSize: '14px',\n                            },\n                            text:'Pc: ' + ({{payload.Pcrit}}).toFixed(2) + ' psi',\n                        }\n                    }, \n                    {\n                        y: {{payload.Pwf}},\n                        borderColor: '#c71e1e',\n                        label: {\n                            borderColor: '#c71e1e',\n                            offsetX: 0,\n                            offsetY: 15,\n                            style:{\n                                color: '#fff',\n                                background: '#000000',\n                                fontSize: '14px',\n                            },\n                            text: 'Pwf: ' + ({{payload.Pwf}}).toFixed(2) + ' psi',\n                        }\n                    }\n                ],\n                xaxis:[\n                    {\n                        x: {{payload.Q0}},\n                        strokeDashArray: 0,\n                        borderColor: '#775DD0',\n                        label:{\n                            borderColor: '#775DD0',\n                            style:{\n                                color: '#fff',\n                                background: '#775DD0',\n                                fontSize: '14px',\n                            },\n                            text: 'Caudal: ' + ({{payload.Q0}}).toFixed(0) + ' BPD' \n                        }\n                    }\n                ],\n                points:[{\n                    x: {{payload.Q0}},\n                    y: {{payload.Pwf}},\n                    marker: {\n                        size: 5,\n                        fillColor: '#32499d',\n                        strokeColor: '#2b2b2b',\n                        radius: 2,\n                        cssClass: 'apexcharts-custom-class'\n                    },\n                    label:{\n                        borderColor: '#2b2b2b',\n                        offsetX: -17,\n                        offsetY: 40,                        \n                        style:{\n                            color: '#fff',\n                            background: '#2b2b2b',\n                            fontSize: '14px',\n                        },\n                        text: 'Q'\n                    }\n                }]\n            },\n            tooltip:{\n                enabled: true\n            },\n            dataLabels:{\n                enabled: false\n            },\n            stroke:{\n                curve: 'straight',\n                width: [3]\n            },\n            grid:{\n                padding:{\n                    right: 30,\n                    left: 20\n                }\n            },\n            //title:{\n            //    text: 'Gráfica IPR',\n            //    align: 'center'\n            //},\n            colors: [\"#c71e1e\"],\n            xaxis:{\n                type: 'numeric',\n                show: true,\n                categories: [{{payload.AxisX}}],\n                title:{\n                    text:\"Caudal [BPD]\",\n                    style: {\n                        color: \"#000000\",\n                        fontSize: '14px',\n                        fontFamily: 'Helvetica, Arial, sans-serif',\n                        fontWeight: 600\n                    },\n                }\n            },\n            yaxis:{\n                title: {\n                    text: \"Presión [psi]\",\n                    style: {\n                        color: \"#000000\",\n                        fontSize: '14px',\n                        fontFamily: 'Helvetica, Arial, sans-serif',\n                        fontWeight: 600\n                    },\n                },\n            }            \n    };\n    \n    var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n    chart.render();\n</script>\n{{script}}\n",
        "output": "str",
        "x": 860,
        "y": 880,
        "wires": [
            [
                "e58bbd637487099d"
            ]
        ]
    },
    {
        "id": "13e56b225a4f7262",
        "type": "function",
        "z": "7af521b51c8e6a51",
        "g": "e9acf894c223c544",
        "name": "",
        "func": "/* Declaración de datos \nAPI         = 13.8;  \nBSW         = 96.29; \nPy          = 1110,14; //psi\nPb          = 130;  //psi\nPcrit       = 1050; // psi\nPwf_P       = 750;  //psi \nQ_p         = 2300; //BPD\nBSW         = 98;   //%\nT_fluido    = 150;  // °F\nDens_Agua   = 8.33; //ppg \nProf_Intake = 2586.73; //ft\nProf_Sensor = 4030; //ft\nPMP         = 4500; //FT\nPIP_Sensor  = 750; //psi\nPCasing     = 0;   //psi\n*/\n\n// ESTADO MECANICO\nvar PMP             = global.get(\"IWOC.ESTADO_MECANICO.PMP\") || 2842; //Punto medio de perforados \nvar Prof_Discharge  = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_descarga\")||0;\nvar Prof_Sensor     = global.get(\"IWOC.ESTADO_MECANICO.Prof_Sensor\")||2842;\nvar Prof_Intake     = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_entrada\")||2586.73;\n\n// PROPIEDADES DE FLUIDO\nvar API             = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.API\")||13.8;\nvar T_fluido        = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Temperatura_de_fondo\")||150;\nvar Dens_Agua       = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Densidad_del_agua\")||8.33;\n\n// PRUEBA DE PRODUCCION\nvar Pwf_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.PWF_Prueba\")||750;\nvar BSW             = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.BSW_Prueba\")||96.29;\nvar Q_p             = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Q_Prueba\")||2300;\nvar Vel_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Velociad_de_prueba\")||0;\n\n// DATOS PARA IPR\nvar Py              = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_yacimiento\")||1110.14;\nvar Pcrit           = global.get(\"IWOC.DATOS_PARA_IPR.PWF_Critica\")||1050;\nvar Pb              = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_burbuja\")||130;\n\n//DATOS PARA SENSORLESS\nvar qo          = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Aceite\") || 132;\nvar qw          = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Agua\") || 3422;\nvar GE_w        = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Gravedad_especifica_del_agua\") || 1;\nvar U_ref       = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Frecuencia_de_referencia\") || 60; //Frecuencia de referencia(Hz)\nvar N_etapas    = global.get(\"IWOC.DATOS_PARA_SENSORLESS.N_etapas\") || 400;\nvar diam        = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Diametro_de_tuberia\") || 0.25;\nvar THP         = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Presion_en_el_tubing\") || 175;\nvar l1          = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Longitud_del_tubing\") || 2556.73; //Longitud del tubing por encima de la bomba\nvar lcable      = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Longitud_cable\") || 2753.94;\nvar POT_Placa   = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Potencia_de_la_placa\") || 1776;\nvar N_sellos    = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Num_sellos\") || 2;\nvar GE_g        = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Gravedad_Especifica_Gas\") || 0;\n\nreturn [\n    MSG(PMP), \n    MSG(Prof_Discharge), \n    MSG(Prof_Sensor), \n    MSG(Prof_Intake), \n    MSG(API),\n    MSG(T_fluido),\n    MSG(Dens_Agua),\n    MSG(Pwf_P),\n    MSG(BSW),\n    MSG(Q_p),\n    MSG(Vel_P),\n    MSG(Py),\n    MSG(Pcrit),\n    MSG(Pb),\n    MSG(qo),\n    MSG(qw),\n    MSG(GE_w),\n    MSG(U_ref),\n    MSG(N_etapas),\n    MSG(diam),\n    MSG(THP),\n    MSG(l1),\n    MSG(lcable),\n    MSG(POT_Placa),\n    MSG(N_sellos)\n];\n\nfunction MSG(X){\n    return { payload: X, enabled: (global.get(\"UserStatus\",\"memoryOnly\")||0)>0?true:false }\n}",
        "outputs": 25,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 400,
        "wires": [
            [
                "9c3a14196b83240f"
            ],
            [
                "c07b8fbacd53c32d"
            ],
            [
                "8c563a0cfe8efb1f"
            ],
            [
                "ec35b7307e4c1490"
            ],
            [
                "7806a2e04be44a09"
            ],
            [
                "d5c2fdb13a35e0df"
            ],
            [
                "9042c080dc5671d1"
            ],
            [
                "14bcf7fb6dabf77e"
            ],
            [
                "b55f7f014ffe2d47"
            ],
            [
                "fc9581d79bb51d53"
            ],
            [
                "ffec73d93b66549c"
            ],
            [
                "87baf888d3cb86d4"
            ],
            [
                "17c98ce1d5f32e3c"
            ],
            [
                "abe91eb5b09be054"
            ],
            [
                "8e77e45481f2ce74"
            ],
            [
                "11282e89dc9749a9"
            ],
            [
                "a651d20b61d8eae1"
            ],
            [
                "bb0e848bf8df0746"
            ],
            [
                "477274a152d422ef"
            ],
            [
                "968e4e27382ad46b"
            ],
            [
                "73514f96913027d0"
            ],
            [
                "7ef0d7fd20e90152"
            ],
            [
                "a940c34393a3c21f"
            ],
            [
                "a615ab4f97d0df6c"
            ],
            [
                "e14265ab1a2c8731"
            ]
        ]
    },
    {
        "id": "e2cab74926656de7",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Diametro_de_tuberia",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "44e2d32a5618e21f",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Potencia_de_la_placa",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "71afc427dc4e32a5",
        "type": "function",
        "z": "7af521b51c8e6a51",
        "g": "bb085715e2738a9c",
        "name": "Calculos SensorLess",
        "func": "var Analog = global.get(\"DownHoleData\",\"memoryOnly\")||[];\nvar THPInstrument = global.get(\"Process_data.AI['Presión de cabeza THP']\", 'memoryOnly') || 0;\nvar PCasingInstrument = global.get(\"Process_data.AI['Presión de cabeza THP']\", 'memoryOnly') || 0;\nvar RelTX = global.get(\"C2S.RelTx\")||1;\n\n//Variables electricas \nvar frec            = global.get(\"C2S.Implicit.Output_Frequency\", \"memoryOnly\") || 0; // Frecuencia de trabajo\nvar V_motor         = (global.get(\"C2S.Implicit.Output_Voltage\", \"memoryOnly\")|| 0)*RelTX; // Voltaje de salida del variador\nvar A_motor         = (global.get(\"C2S.Implicit.Output_Current\", \"memoryOnly\") || 0)/RelTX; //Corriente de salida del variaador\nvar FP              = global.get(\"C2S.Implicit.Power_Factor\", \"memoryOnly\") || 0;// Factor de potencia\n\n// ESTADO MECANICO\nvar PMP             = global.get(\"IWOC.ESTADO_MECANICO.PMP\")||2842; //Punto medio de perforados \nvar Prof_Discharge  = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_descarga\")||0;\nvar Prof_Sensor     = global.get(\"IWOC.ESTADO_MECANICO.Prof_Sensor\")||2842;\nvar Prof_Intake     = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_entrada\")||2586.73;\n\n// PROPIEDADES DE FLUIDO\nvar API             = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.API\")||13.8;\nvar T_fluido        = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Temperatura_de_fondo\")||150;\nvar Dens_Agua       = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Densidad_del_agua\")||8.33;\n\n// PRUEBA DE PRODUCCION\nvar Pwf_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.PWF_Prueba\")||750;\nvar Q_p             = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Q_Prueba\")||2300;\nvar Vel_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Velociad_de_prueba\")||0;\n\n// DATOS PARA IPR\nvar Py = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_yacimiento\") || 1110.14;\nvar Pcrit           = global.get(\"IWOC.DATOS_PARA_IPR.PWF_Critica\")||1050;\nvar Pb              = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_burbuja\")||130;\n\n//DATOS PARA SENSORLESS\nvar qo              = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Aceite\") || 132;\nvar qw              = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Agua\") || 3422;\nvar GE_w            = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Gravedad_especifica_del_agua\") || 1;\n//var frec            = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Frecuencia_de_trabajo\") || 55; // Frecuencia de trabajo (Hz)\nvar U_ref           = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Frecuencia_de_referencia\") || 60; //Frecuencia de referencia(Hz)\nvar N_etapas        = global.get(\"IWOC.DATOS_PARA_SENSORLESS.N_etapas\") ||  400; \nvar diam            = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Diametro_de_tuberia\") || 0.25; \nvar THP             = THPInstrument>=10? THPInstrument: (global.get(\"IWOC.DATOS_PARA_SENSORLESS.Presion_en_el_tubing\") || 175); \nvar l1              = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Longitud_del_tubing\") || 2556.73; //Longitud del tubing por encima de la bomba\n//var V_motor         = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Voltaje_motor\") || 1303;\n//var A_motor         = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Corriente_motor\") || 42.8; \nvar lcable          = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Longitud_cable\") || 2753.94;\n//var FP              = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Factor_potencia\") || 0.95;\nvar POT_Placa       = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Potencia_de_la_placa\") || 1776;\nvar N_sellos        = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Num_sellos\") || 2;\nvar GE_g            = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Gravedad_Especifica_Gas\") || 0;\nvar Fac_compres     = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Factor_Compresibilidad\") || 0;\n\nvar PIP_Sensor      = 750; //psi / Presión de la entrada de la bomba \nvar PCasing         = PCasingInstrument>=8 ? PCasingInstrument : 0.1; //Presión en el Casing \n\n/*\n    Paso No. 1: Se halla Gradiente de Presión corregido por \n    temperatura y %BSW a partir de la Gravedad Específica (GE)\n    del crudo usando gravedad API del crudo.\n*/\n\nvar GE = (141.5) / (131.5 + (API)); //Corrección de la Gravedad Especifica del crudo\n\n/*\n    Paso No. 2: Hallar valores de alfa y beta según la gravedad \n    específica (GE) siguiendo lo que indica la tabla abajo:\n*/\n\nif(GE<0.63){\n    var Alfa = 0.00097;\n    var Beta = -0.0000004;\n}\nelse if((GE<0.78) && (GE>=0.63)){\n    var Alfa = 0.00097+(GE-0.63)*((0.00075-0.00097)/(0.78-0.63));\n    var Beta = 0.0000004 + (GE-0.63)*(0.0000004/(0.78-0.63));\n}\nelse if((GE<0.85)&&(GE>=0.78)){\n    var Alfa = 0.00075+(GE-0.75)*((0.00068-0.00075)/(0.85-0.78));\n    var Beta = 0 + (GE-0.75)*(0.0000001/(0.85-0.78));\n}   \nelse if((GE<0.95)&&(GE>=0.85)){\n    var Alfa = 0.00068 + (GE-0.85) * ((0.00066 - 0.00068)/(0.95-0.85));\n    var Beta = 0.0000001 + (GE-0.85)*((0.0000001-0.0000003)/(0.95-0.85));\n}   \nelse if(GE>=0.95){\n    var Alfa = 0.00066;\n    var Beta = -0.0000003;\n}\n\n//GE_o  = Gravedad específica de aceite ajustada \nvar GE_o = GE - (Alfa * (T_fluido - 60)) + (Beta * Math.pow((T_fluido - 60), 2)); // Temperatura de fondo - Temperatura ambiente (60°)\n\n/*\n    Paso No. 3: Hallar el Gradiente de presión corregido\n*/\n//var Grv_TFondoBSW = (((100 - BSW) / 100) * GE_o) + ((BSW / 100) * (Dens_Agua / 8.345)) \n//var VP = 0.433 * Grv_TFondoBSW // Gradiente de presión\n\n//---------------------------------------------------------------------------------------------------------------------\n//CALCULO DE GAS\n\n/*\n    Paso No. 4: Calculo de la Gravedad Especifica del gas \n*/\n\n\nGE_g = 0.00091 * (T_fluido + 460) - (0.0125 * API);\n\n/*\n    Paso No. 5: Se calcula el RS y GOR con la ecuación de Standing\n                GOR = Relación gas – aceite (SCF/STB)\n                RS =  Relación gas disuelto – aceite (SCF/STB)\n*/\n\nvar GOR = GE_g * Math.pow(((Py / 18) * ((Math.pow(10, (0.0125 * API)) / Math.pow(10, (0.00091 * T_fluido))))),1.2048);\nvar RS = GE_g * (Math.pow((Pb / (18 * (Math.pow(10, GE_g)))), 1.2048));\n\n/*\n    Paso No. 6: Se determinan los factores volumétricos.\n                Bo = Factor volumétrico de aceite (Bbl/STB)\n                Bg = Factor volumétrico de gas (ft3/SCF)\n                Fac_compres  = Factor de compresibilidad\n*/\nvar Bo = 0.972 + 0.000147 * (Math.pow((RS * (Math.pow((GE_g / GE_o), 0.5)) + 1.75 * (parseInt(T_fluido))), 1.175));\n\n\n    //Factor de comprensibilidad \nvar a = -0.000720704;\nvar b =  0.008654874;\nvar c = -0.009919065;\nvar d = -0.124590401;\nvar e =  1;\nvar P_pc = 677 + (15 * GE_g) - (37.5 * (Math.pow(GE_g,2))) // Presión pseudocrítica\n\nFac_compres = a * (Math.pow(((Py + 14.7) / (P_pc* GE_g)),4)) + b * (Math.pow(((Py + 14.7) / (P_pc * GE_g)), 3)) + c * (Math.pow(((Py + 14.7) / (P_pc * GE_g)), 2)) + d * ((Py + 14.7) / (P_pc * GE_g)) + e;\n\nvar Bg = 5.04 * Fac_compres * ((parseInt(T_fluido) + 460)/Py);\n\n/*\n    Paso No. 7: Se calculan los volúmenes de gas total, gas en solución y gas libre\n                V_Tg = Volumen de gas total\n                V_Sg = Volumen de gas en solución \n                V_Fg = Volumen de gas libre \n*/\nvar V_Tg = qo * (GOR/1000);\nvar V_Sg = qo * (RS / 1000);\nvar V_Fg = V_Tg - V_Sg ; \n\n/*\n    Paso No. 8: Se calculan los demás volúmenes(aceite, gas, agua y total)\n                Vo_int = Volumen de aceite en fondo (Bbl)\n                Vg = Volumen de gas libre en fondo (ft3)\n                Vw = Volumen de agua (Bbl)\n                Vt = Volumen total de fluidos (Bbl)\n                BSW = Relación Petroleo - Agua\n                qt = Caudal total\n*/\nvar Vo_int = qo * Bo;\nvar Vg = V_Fg * Bg;\nvar qt = (parseInt(qo) + parseInt(qw));\nvar BSW = (parseInt(qw) / qt) ;\nvar Vw = qt * BSW\nvar Vt = Vo_int + Vg + Vw; \n\n/*\n    Paso No. 9: Cálculo de la masa total de fluido, GE de la mezcla y densidad\n                TMPF = Masa total de los fluidos (lb)\n                GE_mix = Gravedad específica de la mezcla\n                dens_mix = Densidad de la mezcla (ppg)                \n*/\nvar TMPF = (qo * GE_o + qt * BSW * GE_w)* 62.4 * 5.6146 + (GOR * qo * GE_g * 0.0752); // GE_w gravedad especifica del agua\nvar GE_mix = TMPF / (Vt * 5.6146 * 62.44);\nvar dens_mix = GE_mix * 62.4 ; \n\n/*\n    Paso No. 10: Cálculo de la viscosidad. Se utilizan una de las tres correlaciones dependiendo del API del crudo\n                Egbogah-Ng\n                Beggs - Robinson\n                Kartoatmodjo - Schmidt\n*/\nif ((API >= 5) && (API < 16)) {\n    var z = 0;\n    var y = 2.06492 - (0.0179 * API) - (0.70226 * (Math.log10(T_fluido)));\n    var x = Math.pow(10, y);\n    var visc = (Math.pow(10, x)) - 1;\n} else if ((API >= 16) && (API < 40)) {\n    var z = 3.0324 - (0.02023 * API);\n    var y = Math.pow(10, z);\n    var x = y * Math.pow((T_fluido), (-1.163));\n    var visc = (Math.pow(10, x)) - 1;\n} else if ((API >= 40) && (API <= 59)) {\n    var z = 0;\n    var y = 0;\n    var x = (5.7526 * (Math.log10(T_fluido))) - 26.9718;\n    var visc = (16) * (Math.pow(10, 8)) * (Math.pow(T_fluido, -2.8177)) * (Math.pow((Math.log10(API)), x));\n}\n\n var visc1 = visc / 1000;\n\n/*\n    Paso No. 11: Corrección con viscosidad (la viscosidad debe ingresarse en cp/1000)\n*/\nvar Cq = 1 - 2.6266 * visc1 + 6.0032 * (Math.pow(visc1, 2)) - 6.8104 * (Math.pow(visc1, 3)) + 2.7944 * (Math.pow(visc1 , 4));\nvar Ch = 1 - 0.03 * visc1;\nvar Cp = 1 + 3.9042 * visc1 - 9.9306 * (Math.pow(visc1, 2)) + 11.091 * (Math.pow(visc1, 3)) - 4.4376 * (Math.pow(visc1 , 4));\n\n/*\n    Paso No. 12: Calculo de caudales. Para el cálculo se necesita hacer una corrección del caudal total a partir del Uqaj\n                qt = Caudal total\n                qo = Caudal de aceite (Bbl/d)\n                qw = Caudal de agua (Bbl/d)\n                qxo = Caudal total (m3/d)\n                frec = Frecuencia de trabajo (Hz)\n                U_ref = Frecuencia de referencia (Hz)\n                U_qaj = Frecuencia ajustada (Hz)\n                q_xxo = Caudal total ajustado (m3/d)\n                \n*/\nvar qxo = qt * 0.159;\nvar U_qaj = frec / U_ref;\nvar q_xxo = qxo * U_qaj; \n\n/*\n    Paso No. 13: Se calcula un HEADo EFFo y POWERo(curvas características de la bomba) \n                HEAD_o = Head inicial\n                EFF_o = Eficiencia inicial\n                POWER_o = Potencia inicial\n                HEAD = Head ajustado\n                POWER = Potencia ajustada\n                q_xx = Caudal total ajustado\n*/\nvar HEAD_o = -1 * (Math.pow(10, -8)) * (Math.pow(q_xxo, 3)) + 8 * (Math.pow(10, 6)) * (Math.pow(q_xxo, 2)) - 0.0059 * q_xxo + 13.481;\nvar EFF_o = -8 * (Math.pow(10, -8)) * (Math.pow(q_xxo, 3)) - 7 * (Math.pow(10, 6)) * (Math.pow(q_xxo, 2)) + 0.14 * q_xxo + 6.6216;\nvar POWER_o = 6 * (Math.pow(10, 13)) * (Math.pow(q_xxo, 4)) - 2 * (Math.pow(10, 9)) * (Math.pow(q_xxo, 3)) + 2 * (Math.pow(10, -6)) * (Math.pow(q_xxo, 2)) + 0.0004 * q_xxo + 0.9563;\n\nvar HEAD = HEAD_o * (Math.pow(U_qaj , 2)) * 3.28 * N_etapas;\nvar q_xx = q_xxo / (0.159);\nvar POWER = POWER_o * (Math.pow(U_qaj , 3)) * N_etapas;\n\n/*\n    Paso No. 14: Se calcula el caudal y la eficiencia de la bomba\n                q_xov = Caudal total ajustado con la viscosidad\n                EF_bomba = Eficiencia de la bomba corregida vicosidad\n*/\nvar q_xov = (qt / Cq) * U_qaj;\nvar EF_bomba = (Math.pow((frec / 60), 2)) * (((-5 * (Math.pow(10, -14)) * (Math.pow(q_xov, 4))) + (7 * (Math.pow(10, -10)) * (Math.pow(q_xov, 3))) - (5 * (Math.pow(10, -6)) * (Math.pow(q_xov, 2))) + ((0.23 * q_xov) - (0.1628)))/100);\n\n/*\n    Paso No. 15: Se calculan las áreas transversales de los tubos\n                Area = Área de la tubería por encima de la bomba\n                diam = Diametro de la tubería encima de la bomba\n*/\nvar Area = 3.1416 * ((Math.pow(diam , 2)) / 4);  \n\n/*\n    Paso No. 16: Se convierte la viscosidad a unidades del sistema inglés\n*/\nvar viscO = visc * (0.00067197); \n\n/*\n    Paso No. 17: Velocidad del fluido, caudal (m3/s) y velocidad (ft/sec)\n                Vf = Velocidad del fluido (m/s)\n                q_fm = Caudal total en m3/s\n                V_fm = Velocidad del fluido en ft/s\n*/\nvar vf = (5.615 / (3600 * 24)) * (qt / Area);\nvar q_fm = parseInt(qt) / 543439.6505;\nvar V_fm = q_xx * (5.615 / 86400) / Area; \n\n/*\n    Paso No. 18: Calculo del número de Reynols y factor de fricción\n                re = Número de Reynols\n                F_fric = Factor de fricción\n*/\nvar re = diam * V_fm * (dens_mix / viscO);\nvar F_fric = 64 / re;\n\n/*\n    Paso No. 19: Calculo del gradiente de presión\n*/\nvar VP = 0.433 * GE_mix;\n\n/*\n    Paso No. 20: Se convierte la presión en cabeza a ft con el gradiente y se estiman las pérdidas por fricción y gravitacional\n                 THP_ft = Equivalencia en ft de la presión del tubing\n                 p_fric = Pérdidas generadas por fricción\n                 p_grav = Pérdidas por gravedad\n                 l1 = Longitud del tubing por encima de la bomba\n                 TDHH = Levantamiento en ft ajustado fricción\n*/\nvar THP_ft = THP / VP;\nvar p_fric = (F_fric * dens_mix * ((Math.pow(V_fm, 2))/(2*32.2*diam))) / 144;\nvar p_grav = dens_mix / 144; \nvar Caida_presion = (p_fric + p_grav) * l1;\nvar TDHH = (THP + Caida_presion) / VP;\n\n/*\n    Paso No. 21: CALCULOS ELECTRICOS\n                POT_SUT = Potencia del SUT (Hp)\n                POT_Cable = Potencia del clable (Hp)\n                V_motor = Voltaje\n                A_motor\t= Corriente\n                FP = Factor de potencia\n                p_VoltCable = Pérdida en voltios en el cable\n                p_Cable = Pérdidas en el cable (Hp)\n*/\nvar POT_SUT = 1.73 * V_motor * A_motor * (FP / 745.6);\nvar POT_Cable = (V_motor - (15 / 1000) * (lcable)) * A_motor * 1.73 * (FP / 745.69);\nvar p_VoltCable = Prof_Sensor * 0.01;\nvar p_Cable = POT_SUT - POT_Cable;\n\n/*\n    Paso No. 22: CALCULOS ELECTRICOS. Se calcula el porcentaje de carga, caudal ajustado y la eficiencia\n                porc_car = Porcentaje de carga\n                EF = Eficiencia calculada \n*/\nvar porc_car = (POT_Cable / POT_Placa) * 100;\nvar EF = (-8 * (Math.pow(10, -8)) * (Math.pow(q_xxo, 3)) - 7 * (Math.pow(10, -6)) * (Math.pow(q_xxo, 2)) + 0.14  * (q_xxo) + 6.6216) / 100 ;\n//var EF = 0.3273; \n\n/*\n    Paso No. 23: CALCULOS ELECTRICOS.\n                EF_motor = Eficiencia del motor\n                POT_motor = Potencia del motor  \n                p_motor = Pérdida del motor\n                POT_sello = Potencia en el sello\n                N_sellos = Número de sellos\n                p_sello = Pérdida en el sello\n                POT_bomba = Potencia en la bomba\n                p_bomba = Pérdida en la bomba\n                POT_real = Potencia real a partir de las pérdidas\n                POT_realC = Potencia real calculada (Para graficar)\n                POT_RCaj = Potencia real calculada ajustada frecuencia\n*/\nvar EF_motor = (-2 * (Math.pow(10, -7)) * (Math.pow(porc_car, 4)) + 1 * (Math.pow(10, -4)) * (Math.pow(porc_car, 3)) - 0.0187 * (Math.pow(porc_car, 2)) + 1.4594 * (porc_car) + 38.618 ) / 100;\nvar POT_motor = POT_Cable * EF_motor;\nvar p_motor = POT_Cable - POT_motor;\nvar POT_sello = POT_motor - (4 * N_sellos);\nvar p_sello = POT_motor - POT_sello;\nvar POT_bomba = POT_sello * EF;\nvar p_bomba = POT_sello - POT_bomba;\nvar POT_real = POT_SUT - (p_Cable + p_motor + p_sello + p_bomba);\nvar POT_realC = 6 * (Math.pow(10, -13)) * (Math.pow(q_xxo, 4)) - 2 * (Math.pow(10, -9)) * (Math.pow(q_xxo, 3)) + 2 * (Math.pow(10, -6)) * (Math.pow(q_xxo, 2)) + 4 * (Math.pow(10, -4)) * (q_xxo) + 0.9563;\nvar POT_RCaj = POT_realC * (Math.pow(U_qaj, 3)) * N_etapas;\n\n/*\n    Paso No. 24: VARIABLES INFERIDAD POR POTENCIA\n                v_PIP = Levantamiento del fluido a partir de la potencia\n                v_PIPa = Levantamiento del fluido a partir de la potencia ajustado frecuencia\n                PIP_inf = Presión en la bomba inferida\n                PIP_infc = Presión en la bomba inferida calculada\n*/\nvar v_PIP = POT_real * (136000 / q_xx);\nvar v_PIPa = POT_RCaj * (136000 / q_xx);\nvar PIP_inf = (TDHH - v_PIP) * VP;\nvar PIP_infc = (HEAD - v_PIP) * VP;\n\n/*\n    Paso No. 25: VARIABLES INFERIDAD POR POTENCIA. Se calcula la sumergencia, nivel de fluido y la pwf inferidas y el error\n                S_inf = Sumergencia de la bomba inferida\n                NFD_inf = Nivel de fluido inferido\n                h_intk = Profundidad de la bomba\n                Pwf_inf = Presión de fondo fluyente inferida\n                Porc_PIP_IPR \n                Porc_PIP_POT\n*/\nvar S_inf = (PIP_inf - PCasing) / VP;\nvar NFD_inf = Prof_Intake - S_inf ;\nvar Pwf_inf = PIP_inf + (PMP - Prof_Intake) * VP;\n//var Porc_PIP_IPR = (PI)\n//var Porc_PIP_POT = \n\n/*\n    Paso No. 26: VARIABLES INFERIDAD POR POTENCIA. Levantamiento efectivo del yacimiento\n                He = Levantamiento efectivo del yacimiento\n*/\nvar He = Pwf_inf / VP ;\n\n/*\n    Paso No. 27: VARIABLES INFERIDAD POR POTENCIA. Nivel dinámico desde la superficie\n                Lneto = Nivel dinámico (levantamiento neto)\n                HD = Sumergencia de la bomba\n*/\nvar Lneto = PMP - He;\nvar HD = Prof_Intake - Lneto;\n\n/*\n    Paso No. 28: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM\n                Ct = 120 - constante para tuberías nuevas o 90 para viejas\n                ff = 0,0150\n                F = Factor Hazen William\n                FR = Fricción calculada\n                P_desc = Presión de descarga\n                TDH = Levantamiento neto total\n*/\nvar ct = 120; \nvar F = (2.083 * (Math.pow((100 / ct), 1.85)) * (Math.pow((q_xx / 34.5), 1.85))) / (Math.pow((diam * 12), 4.8655));\nvar FR = F * (l1 / 1000);\nvar P_desc = THP /VP ; \nvar TDH = Lneto + FR + P_desc\n\n/*\n    Paso No. 29: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM. \n                PIP con IPR          \n*/\n//var PIP_IPR = Pwf_P - (VP * (PMP - Prof_Intake));\n\n/*\n    Paso No. 30: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM.\n                PIP sin IPR\n*/\n//var PIP_sin_IPR = THP + (* hb + GE_g * 0.433 * (PMP - hb));\n\n/*\n    Paso No. 31: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM.\n                POT_pump = Potencia de la bomba calculada (kW)\n*/\nvar POT_pump = (V_motor * A_motor * EF_motor * 1.73 * FP) / 1000;\n\n/*\n    Paso No. 32: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM. \n                Curva de potencia\n*/\nvar POT_c = 2 * (Math.pow(10, -14)) * (Math.pow(qt, 4)) - 4 * (Math.pow(10, -10)) * (Math.pow(qt, 3)) + 2 * (Math.pow(10, -6)) * (Math.pow(qt, 2)) + 0.0018 * qt + 49.04;\n\n/*\n    Paso No. 33: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM.\n                Eficiencia, head dinamico y carga dinámica\n*/\nvar EFF = (Math.pow((frec / 60), 2)) * (-5 * (Math.pow(10, -14)) * (Math.pow(qt, 4)) + 7 * (Math.pow(10, -10)) * (Math.pow(qt, 3)) - 5 * (Math.pow(10, -6)) * (Math.pow(qt, 2)) + 0.023 * (qt) - 0.1628);\nvar Qt = qt * Bo;\nvar HEAD_din = (Math.pow((frec / 60), 2)) * (-7 * (Math.pow(10, -13)) * (Math.pow(Qt, 4)) + 8 * (Math.pow(10, -9)) * (Math.pow(Qt, 3)) - 3 * (Math.pow(10, -5)) * (Math.pow(Qt, 2)) - 0.0187 * Qt + 1792);\nvar Ho = (Math.pow((frec / 60), 2)) * (-7 * (Math.pow(10, -13)) * (Math.pow(q_xov, 4)) + 8 * (Math.pow(10, -9)) * (Math.pow(q_xov, 3)) - 3 * (Math.pow(10, -5)) * (Math.pow(q_xov, 2)) - 0.0187 * q_xov + 1792);\n\n\n//Data de los Resultados\nvar resultados = {\n    \"(V_motor)Voltaje de salida M\": V_motor,\n    \"(A_motor)Corriente de salida M\": A_motor,\n    \"(FP)Factor de epotencia de M\": FP,\n    \"(frec)Frecuencia de trabajo\": frec,\n    \"(GE_g)GE del Gas\": GE_g,\n    \"(T_fluido)Temperatura de Yacimiento\": T_fluido,\n    \"API\": API,\n    \"(GOR) Relación gas-aceite\": GOR,\n    \"(RS)Relación gasdisuelto-aceite\": RS,\n    \"(Pb)Presion de burbuja\": Pb,\n    \"(GE)Gravedad espeifica del aceite\": GE,\n    \"Alfa\": Alfa,\n    \"Beta\":Beta,\n    \"(GE_o)Gravedad específica de aceite ajustada\": GE_o,\n    \"(Bo)Factor volumétrico de aceite\": Bo,\n    \"(P_pc)Presión pseudocrítica\": P_pc,\n    \"(Fac_compres)Factor de compresibilidad\": Fac_compres,\n    \"(Bg)Factor volumétrico de gas\": Bg,\n    \"(qo)Caudal_de_Aceite\": qo,\n    \"(V_Tg)Volumen de gas total\": V_Tg,\n    \"(V_Sg)Volumen de gas en solución\": V_Sg,\n    \"(V_Fg) Volumen de gas libre\": V_Fg,\n    \"(Vo_int)Volumen de aceite en fondo\": Vo_int,\n    \"(Vg)Volumen de gas libre en fondo\": Vg,\n    \"(qt)Caudal total\": qt,\n    \"(BSW)Relación Petroleo - Agua\": BSW,\n    \"(Vw)Volumen de agua\": Vw,\n    \"(Vt)Volumen total de fluido\": Vt,\n    \"(TMPF)Masa total de los fluido\": TMPF,\n    \"(GE_mix)Gravedad específica de la mezcla\": GE_mix,\n    \"(dens_mix)Densidad de la mezcla\": dens_mix,\n    \"(GE_w)gravedad especifica del agua\": GE_w,\n    \"(x)\": x,\n    \"(y)\": y,\n    \"(z)\": z,\n    \"(visc)Viscosidad del crudo\": visc,\n    \"(Cq)\": Cq,\n    \"(Ch)\": Ch,\n    \"(Cp)\": Cp,\n    \"(qxo)Caudal total (m3/d)\": qxo,\n    \"(U_ref)Frecuencia de referencia\": U_ref,\n    \"(U_qaj)Frecuencia ajustada\": U_qaj,\n    \"(q_xxo)Caudal total ajustado (m3/d)\": q_xxo,\n    \"(HEAD_o)Head inicial\": HEAD_o,\n    \"(EFF_o)Eficiencia inicial\": EFF_o,\n    \"(POWER_o)Potencia inicial\": POWER_o,\n    \"(HEAD)Head ajustado\": HEAD,\n    \"(q_xx)Caudal total ajustado\": q_xx,\n    \"(POWER)Potencia ajustada\": POWER,\n    \"(q_xov)Caudal total ajustado con la viscosidad\": q_xov,\n    \"(EF_bomba)Eficiencia de la bomba corregida vicosidad\": EF_bomba,\n    \"(Area)Área de la tubería por encima de la bomba\": Area,\n    \"(viscO)Viscosidad del crudo (lbf/ft-s)\": viscO,\n    \"(vf)Velocidad del fluid\": vf,\n    \"(q_fm)Caudal total en m3/s\": q_fm,\n    \"(V_fm)Velocidad del fluido en ft/s\": V_fm,\n    \"(re)Número de Reynols\": re,\n    \"(F_fric)Factor de fricción\": F_fric,\n    \"(VP) Gradiente de Presión\": VP,\n    \"(THP_ft)Equivalencia en ft de la presión del tubing\": THP_ft,\n    \"(p_fric)Pérdidas generadas por fricción\": p_fric,\n    \"(p_grav)Pérdidas por gravedad\": p_grav,\n    \"(Caida_presion)\": Caida_presion,\n    \"(TDHH)Levantamiento en ft ajustado fricción\": TDHH,\n    \"(POT_SUT)Potencia del SUT\": POT_SUT,\n    \"(POT_Cable)Potencia del clable\": POT_Cable,\n    \"(p_VoltCable)\": p_VoltCable,\n    \"(p_Cable) Perdidas en el cable\": p_Cable,\n    \"(porc_car)\": porc_car,\n    \"(EF)Eficiencia calculada \": EF,\n    \"EF_motor(Eficiencia del motor)\": EF_motor, \n    \"(POT_motor)Potencia del motor\": POT_motor,\n    \"(p_motor)Pérdida del motor\": p_motor,\n    \"(POT_sello)Potencia en el sello\": POT_sello,\n    \"(p_sello)Pérdida en el sello\": p_sello,\n    \"(POT_bomba)Potencia en la bomba\": POT_bomba,\n    \"(p_bomba)Pérdida en la bomba\": p_bomba,\n    \"(POT_real)Potencia real a partir de las pérdidas\": POT_real,\n    \"(POT_realC)Potencia real calculada \": POT_realC,\n    \"(POT_RCaj)Potencia real calculada ajustada frecuencia\": POT_RCaj,\n    \"(v_PIP)Levantamiento del fluido a partir de la potencia \": v_PIP,\n    \"(v_PIPa)Levantamiento del fluido a partir de la potencia ajustado frecuencuencia\": v_PIPa,\n    \"(PIP_inf)Presión en la bomba inferida\": PIP_inf,\n    \"(PIP_infc)Presión en la bomba inferida calculada\": PIP_infc,\n    \"(S_inf)Sumergencia de la bomba inferida\": S_inf,\n    \"(NFD_inf)Nivel de fluido inferido\": NFD_inf,\n    \"(Pwf_inf)Presión de fondo fluyente inferida\": Pwf_inf,\n    \"(He)Levantamiento efectivo del yacimiento\": He,\n    \"(Lneto)Nivel dinámico (levantamiento neto)\": Lneto,\n    \"(HD)Sumergencia de la bomba\": HD,\n    \"(F)Factor Hazen William\": F,\n    \"(FR)Fricción calculada\": FR,\n    \"(P_desc)Presión de descarga\": P_desc,\n    \"(TDH)Levantamiento neto total\": TDH,\n    \"(POT_pump)Potencia de la bomba calculad\": POT_pump,\n    \"(POT_c)Curva de potencia\": POT_c,\n    \"(EFF)\": EFF,\n    \"(Qt)\": Qt,\n    \"(HEAD_din)head dinamico\": HEAD_din,\n    \"(Ho)carga dinámica\": Ho,\n    \"(EF_motor)Eficiencia del motor\": EF_motor,\n};\ncontext.set(\"resultados\", resultados, \"memoryOnly\");\ncontext.set(\"frec\", frec, \"memoryOnly\");\ncontext.set(\"V_motor\", V_motor, \"memoryOnly\");\ncontext.set(\"A_motor\", A_motor, \"memoryOnly\");\ncontext.set(\"FP\", FP, \"memoryOnly\");\n\nreturn [\n    MSG(PIP_inf),\n    MSG(NFD_inf),\n    MSG(S_inf),\n    MSG(q_xov)\n];\n\nfunction MSG(X) {\n    return { payload: !isNaN(X)? X:0 }\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1660,
        "wires": [
            [
                "7d0fb5e1b5d85914"
            ],
            [
                "9d7807bc3969807d"
            ],
            [
                "f4f95fc766314268"
            ],
            [
                "560d12e1fedae98e"
            ]
        ]
    },
    {
        "id": "7d0fb5e1b5d85914",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "bb085715e2738a9c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SENSORLESS.PIP_inferida",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "9d7807bc3969807d",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "bb085715e2738a9c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SENSORLESS.Nivel_de_fluido_inferido",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "f4f95fc766314268",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "bb085715e2738a9c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SENSORLESS.Sumergencia_inferida",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "560d12e1fedae98e",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "bb085715e2738a9c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SENSORLESS.Caudal_ajustado_con_la_viscosidad",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "8e77e45481f2ce74",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "Caudal de Aceite [BBL/d]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 4,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 150,
        "y": 1100,
        "wires": [
            [
                "1f5b91745cf74c06"
            ]
        ]
    },
    {
        "id": "1f5b91745cf74c06",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Aceite",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "11282e89dc9749a9",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "Caudal de Agua [BBL/d]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 5,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 150,
        "y": 1140,
        "wires": [
            [
                "a850b4c0d60fb314"
            ]
        ]
    },
    {
        "id": "a850b4c0d60fb314",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Agua",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "a651d20b61d8eae1",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "Gravedad especifica del agua",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 6,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "92af29b43d98cf42"
            ]
        ]
    },
    {
        "id": "92af29b43d98cf42",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Gravedad_especifica_del_agua",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "bb0e848bf8df0746",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "Frecuencia de referencia [Hz]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 7,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "57b0e7b8b4128b6d"
            ]
        ]
    },
    {
        "id": "57b0e7b8b4128b6d",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Frecuencia_de_referencia",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "477274a152d422ef",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "N° de etapas",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 8,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 110,
        "y": 1260,
        "wires": [
            [
                "60c53a5b248e3c83"
            ]
        ]
    },
    {
        "id": "60c53a5b248e3c83",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.N_etapas",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "968e4e27382ad46b",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "Diametro de tuberia [ft]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 9,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "e2cab74926656de7"
            ]
        ]
    },
    {
        "id": "73514f96913027d0",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "Presion en el tubing [psi]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 10,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 150,
        "y": 1340,
        "wires": [
            [
                "f4c2848e1a087910"
            ]
        ]
    },
    {
        "id": "7ef0d7fd20e90152",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "Longitud del tubing [ft]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 11,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 140,
        "y": 1380,
        "wires": [
            [
                "88efa1935790c033"
            ]
        ]
    },
    {
        "id": "f4c2848e1a087910",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Presion_en_el_tubing",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "88efa1935790c033",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Longitud_del_tubing",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "a940c34393a3c21f",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "Longitud del cable [ft]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 12,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 140,
        "y": 1420,
        "wires": [
            [
                "be0ea5dc9ccd2372"
            ]
        ]
    },
    {
        "id": "be0ea5dc9ccd2372",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Longitud_cable",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "a615ab4f97d0df6c",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "Potencia de la Placa [V]",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 13,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 150,
        "y": 1460,
        "wires": [
            [
                "44e2d32a5618e21f"
            ]
        ]
    },
    {
        "id": "e14265ab1a2c8731",
        "type": "ui_text_input",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "label": "N° Sellos",
        "tooltip": "",
        "group": "8c7f5396abbccd01",
        "order": 14,
        "width": "4",
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 100,
        "y": 1500,
        "wires": [
            [
                "b90c6c88f56765e9"
            ]
        ]
    },
    {
        "id": "b90c6c88f56765e9",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "de313b37d3ca86b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Num_sellos",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "54fca041998ebf96",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "name": "cambio de usuario",
        "links": [
            "65f9fd69cd644489"
        ],
        "x": 1685,
        "y": 700,
        "wires": []
    },
    {
        "id": "6092027b3ec84b2c",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 175,
        "y": 1900,
        "wires": [
            [
                "51f4057d56abcca9",
                "2cc0c1e13cc6bac2",
                "8afe9a4a74d1ad72"
            ]
        ]
    },
    {
        "id": "6808c817415805b5",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "Amperimetric",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"AVAS®_Nav_bar\",\t                \"AVAS®_Amperimetric\"\t                ],\t       \"hide\":[ \"AVAS®_Estado_mecánico\",\t                \"AVAS®_Propiedades_de_flujo\",\t                \"AVAS®_Pruebas_de_producción\",\t                \"AVAS®_Gráfica_IPR\",\t                \"AVAS®_Datos_de_instalación\"]\t   }\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegación.AVAS",
                "pt": "global",
                "to": "Amperimetric",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1980,
        "wires": [
            [
                "11fab97f0376f949"
            ]
        ]
    },
    {
        "id": "8afe9a4a74d1ad72",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "IPR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"AVAS®_Nav_bar\",\t                \"AVAS®_Gráfica_IPR\"],\t       \"hide\":[ \"AVAS®_Estado_mecánico\",\t                \"AVAS®_Propiedades_de_flujo\",\t                \"AVAS®_Pruebas_de_producción\",\t                \"AVAS®_Amperimetric\",\t                \"AVAS®_Datos_de_instalación\"]\t   }\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegación.AVAS",
                "pt": "global",
                "to": "IPR",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1940,
        "wires": [
            [
                "11fab97f0376f949"
            ]
        ]
    },
    {
        "id": "11fab97f0376f949",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "name": "",
        "links": [
            "805762db.d27b7"
        ],
        "x": 1115,
        "y": 2020,
        "wires": []
    },
    {
        "id": "406a7ba5773d9ccb",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "name": "refresh IPR chart",
        "links": [
            "e6fb7f8fce8d014a"
        ],
        "x": 1035,
        "y": 1880,
        "wires": []
    },
    {
        "id": "e6fb7f8fce8d014a",
        "type": "link in",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "",
        "links": [
            "406a7ba5773d9ccb"
        ],
        "x": 435,
        "y": 880,
        "wires": [
            [
                "81e868e2dc43d637"
            ]
        ]
    },
    {
        "id": "9a3fe8f4e8cd6366",
        "type": "link in",
        "z": "7af521b51c8e6a51",
        "g": "bb085715e2738a9c",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 55,
        "y": 1660,
        "wires": [
            [
                "71afc427dc4e32a5"
            ]
        ]
    },
    {
        "id": "ca39f80a814eaaa4",
        "type": "switch",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "select?",
        "property": "Process_data.DHS.Brand_DHS",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "Sensorless",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Sensorless",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2400,
        "y": 60,
        "wires": [
            [
                "db2c3fd1.d4b6a"
            ],
            [
                "3fd537023c8f14fd"
            ]
        ]
    },
    {
        "id": "3fd537023c8f14fd",
        "type": "change",
        "z": "38e901f121b52acb",
        "g": "9437db38.d604e",
        "name": "Sensorless",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Process_data.DHS[\"Presión de entrada\"]",
                "pt": "global",
                "to": "#:(memoryOnly)::SENSORLESS.PIP_inferida",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2b715f6c759a6b18",
        "type": "ui_text",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 11,
        "width": "0",
        "height": "0",
        "name": "TItulo Sensorless",
        "label": "",
        "format": "<font size =4px> Datos Sensorless®",
        "layout": "col-center",
        "className": "",
        "x": 2150,
        "y": 2060,
        "wires": []
    },
    {
        "id": "1d84d1358359ba1d",
        "type": "subflow:a52b5a046f4fd02f",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "- Dynamic Fluid Level -",
        "env": [
            {
                "name": "protection",
                "value": "DynamicFluidLevel",
                "type": "str"
            }
        ],
        "x": 2220,
        "y": 1000,
        "wires": [
            [
                "f0a7aa49a0a74635"
            ],
            [
                "5dea5f3a2e3fb369"
            ]
        ]
    },
    {
        "id": "8618be3dd8824ba7",
        "type": "switch",
        "z": "9941a439.4b17c8",
        "g": "dbdc491cb6e9eee5",
        "name": "!=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2050,
        "y": 1000,
        "wires": [
            [
                "1d84d1358359ba1d"
            ]
        ]
    },
    {
        "id": "c8c0bcb1ebd9fe87",
        "type": "ui_chart",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "",
        "group": "3eee573de2d0980e",
        "order": 5,
        "width": "14",
        "height": "5",
        "label": "Carta Amperimétrica (A)",
        "chartType": "radar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#390981",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2090,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "68a2367b68a2d36b",
        "type": "ui_dropdown",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "",
        "label": "Selecione Rango",
        "tooltip": "",
        "place": "Seleccione tiempo",
        "group": "3eee573de2d0980e",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Amperimetrica diaria",
                "value": "dataday",
                "type": "str"
            },
            {
                "label": "Amperimetrica semanal",
                "value": "dataweek",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 1650,
        "y": 220,
        "wires": [
            [
                "74b76e998626d493",
                "43cd392ac81ac6ca"
            ]
        ]
    },
    {
        "id": "74b76e998626d493",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "amperimetric.Type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "8b6c1f1de90514c9",
        "type": "function",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "Data show",
        "func": "var Output_Frequency    = global.get(\"C2S.Implicit.Output_Frequency\",'memoryOnly')||0;\nvar Output_Current = global.get(\"C2S.Implicit.Output_Current\", 'memoryOnly') || 0;\nvar Rtx = global.get(\"C2S.RelTx\") || 1;\nvar MtrCurrent = Output_Current / Rtx;\n\nreturn[\n    { payload: catcherror(Output_Frequency,3)+ \" \" + \"Hz\"},\n    { payload: catcherror(MtrCurrent,1) + \" \" + \"A\" },\n]\n\nfunction catcherror(variable,dec){\n    return parseFloat(variable.toFixed(dec));\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 160,
        "wires": [
            [
                "8ab99b43.236ef8"
            ],
            [
                "b506833eadd068ed"
            ]
        ],
        "outputLabels": [
            "Output_Frequency",
            "SpeedPercentage"
        ]
    },
    {
        "id": "3232c7cbd0e96a18",
        "type": "ui_level",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "group": "3eee573de2d0980e",
        "order": 2,
        "width": "4",
        "height": 2,
        "name": "Corriente de Motor",
        "label": "Corriente de Motor",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "A",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2550,
        "y": 180,
        "wires": []
    },
    {
        "id": "8f3bb3f83df36820",
        "type": "ui_level",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "group": "3eee573de2d0980e",
        "order": 3,
        "width": "4",
        "height": 2,
        "name": "Velocidad",
        "label": "Velocidad",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "Hz",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2520,
        "y": 120,
        "wires": []
    },
    {
        "id": "ef6f5dbe7f4cd2c4",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "group": "737fcab07a3aa4b4",
        "name": "Menu Otras Funciones de Control",
        "order": 1,
        "width": "16",
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link  active\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\" href=\"#nav-EntradasAnalogicas\" role=\"tab\"\n                aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\" ng-click=\"send({payload:IPR()})\">Gráfica IPR</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:cartaamp()})\">Carta Amperimétrica</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:settings()})\">Ajustes AVAS®</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.cartaamp = function() { return \"amp\"; };\n        this.scope.IPR = function() { return \"ipr\"; };\n        this.scope.settings = function() { return \"setting\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 2000,
        "wires": [
            [
                "e33c3c8fcee6b4e5",
                "d367510aebdb1da8"
            ]
        ]
    },
    {
        "id": "fa77251f4acf86e9",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:IPR()})\">Gráfica IPR</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:cartaamp()})\">Carta Amperimétrica</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:settings()})\">Ajustes AVAS®</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.cartaamp = function() { return \"amp\"; };\n        this.scope.IPR = function() { return \"ipr\"; };\n        this.scope.settings = function() { return \"setting\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 340,
        "y": 1960,
        "wires": [
            [
                "ef6f5dbe7f4cd2c4"
            ]
        ]
    },
    {
        "id": "2cc0c1e13cc6bac2",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:IPR()})\">Gráfica IPR</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:cartaamp()})\">Carta Amperimétrica</a>\n            <a class=\"nav-item nav-link\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:settings()})\">Ajustes AVAS®</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.cartaamp = function() { return \"amp\"; };\n        this.scope.IPR = function() { return \"ipr\"; };\n        this.scope.settings = function() { return \"setting\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 340,
        "y": 2000,
        "wires": [
            [
                "ef6f5dbe7f4cd2c4"
            ]
        ]
    },
    {
        "id": "70ced0f1e569b444",
        "type": "template",
        "z": "2e27dea6.c4c362",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasAnalogicas-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasAnalogicas\" role=\"tab\" aria-controls=\"nav-EntradasAnalogicas\" aria-selected=\"false\"\n                ng-click=\"send({payload:IPR()})\">Gráfica IPR</a>\n            <a class=\"nav-item nav-link\" id=\"nav-EntradasDigitales-tab\" data-toggle=\"tab\"\n                href=\"#nav-EntradasDigitales\" role=\"tab\" aria-controls=\"nav-EntradasDigitales\" aria-selected=\"true\"\n                ng-click=\"send({payload:cartaamp()})\">Carta Amperimétrica</a>\n            <a class=\"nav-item nav-link active\" id=\"nav-SalidasDigitales-tab\" data-toggle=\"tab\" href=\"#nav-SalidasDigitales\"\n                role=\"tab\" aria-controls=\"nav-SalidasDigitales\" aria-selected=\"false\"\n                ng-click=\"send({payload:settings()})\">Ajustes AVAS®</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.cartaamp = function() { return \"amp\"; };\n        this.scope.IPR = function() { return \"ipr\"; };\n        this.scope.settings = function() { return \"setting\"; };\n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "output": "str",
        "x": 340,
        "y": 2040,
        "wires": [
            [
                "ef6f5dbe7f4cd2c4"
            ]
        ]
    },
    {
        "id": "e33c3c8fcee6b4e5",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "amp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ipr",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 820,
        "y": 2000,
        "wires": [
            [
                "6808c817415805b5"
            ],
            [
                "406a7ba5773d9ccb",
                "8afe9a4a74d1ad72"
            ],
            [
                "0209ea53035b3ac1"
            ]
        ]
    },
    {
        "id": "0209ea53035b3ac1",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "Settings",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"AVAS®_Amperimetric\",\t                \"AVAS®_Gráfica_IPR\"],\t       \"show\":[ \"AVAS®_Nav_bar\",\t                \"AVAS®_Estado_mecánico\",\t                \"AVAS®_Propiedades_de_flujo\",\t                \"AVAS®_Pruebas_de_producción\",\t                \"AVAS®_Datos_de_instalación\"]\t   }\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegación.AVAS",
                "pt": "global",
                "to": "Settings",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 2040,
        "wires": [
            [
                "11fab97f0376f949"
            ]
        ]
    },
    {
        "id": "d367510aebdb1da8",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 130,
        "y": 1940,
        "wires": [
            [
                "03c975b20ec14562"
            ]
        ]
    },
    {
        "id": "03c975b20ec14562",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "amp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ipr",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 110,
        "y": 2000,
        "wires": [
            [
                "fa77251f4acf86e9"
            ],
            [
                "2cc0c1e13cc6bac2"
            ],
            [
                "70ced0f1e569b444"
            ]
        ]
    },
    {
        "id": "9760d6fc054dbb32",
        "type": "link in",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 1855,
        "y": 160,
        "wires": [
            [
                "2465266dce183982"
            ]
        ]
    },
    {
        "id": "cf63e264fc5ccf5c",
        "type": "function",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "getting data",
        "func": "var i;\nvar datad = flow.get(\"amperimetric.dataday.data\")||null;\nvar datadlabel = flow.get(\"amperimetric.dataday.label\") || null;\nvar datawlabel = flow.get(\"amperimetric.dataweek.label\") || null;\nvar dataw = flow.get(\"amperimetric.dataweek.data\") || null;\nvar Output_Current = global.get(\"C2S.Implicit.Output_Current\", 'memoryOnly') || 0;\nvar Rtx = global.get(\"C2S.RelTx\") || 1;\nvar MtrCurrent = parseFloat((Output_Current / Rtx).toFixed(1));\nvar pos;\nif(datad==null){\n    datad=[null];\n    datad [239] = null;\n    datadlabel = [null];\n    datadlabel[239] = null;\n    flow.set(\"amperimetric.dataday.data\",datad);\n    for(i=0;i<datadlabel.length;i++){\n        if((i==0)||(i % 10 ==0)){\n            datadlabel[i]= (i/10)<10?\"0\"+(i/10)+\":00\":(i/10)+\":00\";\n        }\n        else datadlabel[i]=\"\";\n    }\n    flow.set(\"amperimetric.dataday.label\", datadlabel);\n}\nelse{\n    pos = ampSetValue()\n    if(pos!=-1){\n        datad[pos] = MtrCurrent;\n        flow.set(\"amperimetric.dataday.data\", datad);\n    }\n    if (((pos % 7 == 0) || (pos == 0)) && (dataw == null)) { flow.set(\"amperimetric.dataweek.data\", [MtrCurrent]); flow.set(\"amperimetric.dataweek.label\", [\"-168 h\"])}\n    if (((pos % 7 == 0) || (pos == 0)) && (dataw != null)){\n        dataw.push(MtrCurrent);\n        if (datawlabel.length<240){\n            if (datawlabel.length % 30 == 0) datawlabel.push(\"-\" + (168 - ((datawlabel.length/30)*21))+\" h\");\n            else datawlabel.push(\"\");\n            flow.set(\"amperimetric.dataweek.label\", datawlabel)\n        }\n        if(dataw.length==241) dataw.shift();\n        if (datawlabel.length == 241) datawlabel.shift();\n        flow.set(\"amperimetric.dataweek.data\", dataw);\n    }\n}\nfunction ampSetValue(){\n    var aux;\n    var DT = new Date();\n    var h = DT.getHours();\n    var m = DT.getMinutes();\n    if(m==0 && h==0)aux=0;\n    m % 6 ==0 ? aux = ((h*60+m)/6):aux = -1;\n    return aux;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "da666b63953f842e",
        "type": "inject",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1390,
        "y": 100,
        "wires": [
            [
                "cf63e264fc5ccf5c",
                "9359569d1a0d28db"
            ]
        ]
    },
    {
        "id": "485f8467108ee0df",
        "type": "link in",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 1335,
        "y": 220,
        "wires": [
            [
                "b3903684adce0c4c",
                "b0156b916b41fd41"
            ]
        ]
    },
    {
        "id": "b3903684adce0c4c",
        "type": "function",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "to chart",
        "func": "var time = flow.get(\"amperimetric.Type\") ||\"dataday\";\nvar data = flow.get(\"amperimetric.\"+time+\".data\") || [];\nvar labels = flow.get(\"amperimetric.\" + time + \".label\") || [];\n\nvar radarchart = [{\n    \"labels\": labels,\n    \"series\": \"\",\n    \"data\": [data]\n}];\n\nmsg.payload = radarchart;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 80,
        "wires": [
            [
                "c8c0bcb1ebd9fe87"
            ]
        ]
    },
    {
        "id": "9359569d1a0d28db",
        "type": "switch",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "AVAS?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "AVAS®",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1510,
        "y": 80,
        "wires": [
            [
                "f2cbfa42b06d2425"
            ]
        ]
    },
    {
        "id": "f2cbfa42b06d2425",
        "type": "switch",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "AVAS?",
        "property": "#:(memoryOnly)::Navegación.AVAS",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "amp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 80,
        "wires": [
            [
                "b3903684adce0c4c"
            ]
        ]
    },
    {
        "id": "51f4057d56abcca9",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ipr",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 2120,
        "wires": [
            [
                "e33c3c8fcee6b4e5"
            ]
        ]
    },
    {
        "id": "43cd392ac81ac6ca",
        "type": "delay",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1750,
        "y": 140,
        "wires": [
            [
                "b3903684adce0c4c"
            ]
        ]
    },
    {
        "id": "5d1f6d0f9daa5340",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "links": [
            "e28cc76463d5d568",
            "c4e5b48a61ef3ffd"
        ],
        "x": 1335,
        "y": 2760,
        "wires": [
            [
                "3ccbaa0b.2db096"
            ]
        ]
    },
    {
        "id": "ad2ab3510ec88098",
        "type": "change",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IPRflag",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "d6e8102aa90a0542",
        "type": "link out",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "",
        "links": [
            "6bd8ddb759281ee8",
            "c229d2e282e960a3",
            "80f541eb1e99756e",
            "f5fb8b5d722e7269"
        ],
        "x": 875,
        "y": 980,
        "wires": []
    },
    {
        "id": "1fc5363114952530",
        "type": "switch",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "IPR fist time?",
        "property": "#:(memoryOnly)::IPRflag",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 920,
        "wires": [
            [],
            [
                "ad2ab3510ec88098"
            ]
        ]
    },
    {
        "id": "f5fb8b5d722e7269",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "name": "",
        "links": [
            "d6e8102aa90a0542"
        ],
        "x": 755,
        "y": 2100,
        "wires": [
            [
                "04842fb7f4bab642",
                "14371dccd63ead0c"
            ]
        ]
    },
    {
        "id": "04842fb7f4bab642",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "change",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 2100,
        "wires": [
            [
                "11fab97f0376f949"
            ]
        ]
    },
    {
        "id": "14371dccd63ead0c",
        "type": "delay",
        "z": "2e27dea6.c4c362",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 870,
        "y": 2140,
        "wires": [
            [
                "8a48a453ef327596"
            ]
        ]
    },
    {
        "id": "8a48a453ef327596",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "name": "AVAS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "4",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 2140,
        "wires": [
            [
                "11fab97f0376f949"
            ]
        ]
    },
    {
        "id": "adb1a0acdc299c85",
        "type": "link in",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "",
        "links": [
            "97407954.a004c8"
        ],
        "x": 425,
        "y": 920,
        "wires": [
            [
                "510cf13fa3e782ca"
            ]
        ]
    },
    {
        "id": "510cf13fa3e782ca",
        "type": "switch",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "Pantalla",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "AVAS®",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 920,
        "wires": [
            [
                "1fc5363114952530"
            ]
        ]
    },
    {
        "id": "82ab635315c76227",
        "type": "inject",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#:(memoryOnly)::IPRflag",
        "payloadType": "flow",
        "x": 510,
        "y": 980,
        "wires": [
            [
                "78e27382a15f4a9e"
            ]
        ]
    },
    {
        "id": "78e27382a15f4a9e",
        "type": "switch",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 980,
        "wires": [
            [
                "bb9476c101821117"
            ]
        ]
    },
    {
        "id": "bb9476c101821117",
        "type": "rbe",
        "z": "7af521b51c8e6a51",
        "g": "61a0e01d8198af31",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 980,
        "wires": [
            [
                "d6e8102aa90a0542"
            ]
        ]
    },
    {
        "id": "7a595adbeef4154f",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Comunication Fault",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Comunication Fault",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1490,
        "y": 3760,
        "wires": [
            [
                "6902084ea4b2cbde"
            ]
        ]
    },
    {
        "id": "6902084ea4b2cbde",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.data[0]",
        "x": 1650,
        "y": 3760,
        "wires": [
            [
                "091d586eb31e93bf",
                "744df9a18d278db4"
            ]
        ]
    },
    {
        "id": "091d586eb31e93bf",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Reset Fault",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IO.Functions.CommSts",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 3760,
        "wires": [
            [
                "772ec0a16fcfa09d"
            ]
        ]
    },
    {
        "id": "744df9a18d278db4",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1790,
        "y": 3800,
        "wires": [
            [
                "772ec0a16fcfa09d"
            ]
        ]
    },
    {
        "id": "772ec0a16fcfa09d",
        "type": "trigger",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "op1": "0",
        "op2": "Close",
        "op1type": "num",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1950,
        "y": 3760,
        "wires": [
            [
                "aae2d4b8cf582bf7",
                "5bbb1ce225da9237"
            ]
        ]
    },
    {
        "id": "aae2d4b8cf582bf7",
        "type": "switch",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Close",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2090,
        "y": 3760,
        "wires": [
            [
                "4b39b4da3180cdc0"
            ]
        ]
    },
    {
        "id": "5bbb1ce225da9237",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "tryConnection",
        "func": "var estado = global.get(\"IO.Functions.CommSts\",\"memoryOnly\")||false;\nmsg.payload = estado;\ncontext.set(\"estado\",estado,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2120,
        "y": 3800,
        "wires": [
            [
                "f339b976e17001e2"
            ]
        ]
    },
    {
        "id": "e7cea693752dde35",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "DI",
        "links": [
            "b0a6daf8cc767b13",
            "ced2df423e7eb2d8",
            "3b8d6f41c33605f7"
        ],
        "x": 2015,
        "y": 3900,
        "wires": [
            [
                "13ae2db66a6609f2"
            ]
        ]
    },
    {
        "id": "f339b976e17001e2",
        "type": "rbe",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 2270,
        "y": 3800,
        "wires": [
            [
                "13ae2db66a6609f2",
                "ba79778827ca94cb"
            ]
        ]
    },
    {
        "id": "4b39b4da3180cdc0",
        "type": "change",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Set Fault",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IO.Functions.CommSts",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 3760,
        "wires": [
            []
        ]
    },
    {
        "id": "13ae2db66a6609f2",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "NONA configurable",
        "func": "//var nona = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];//setaear todas las entradas como normalmente cerradas\nvar nona = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];//set como normalmente abiertas\n\nvar entradasDigitales = flow.get(\"ES.ED\")||0;\n\nfor (let i = 0; i <= 15 ; i++) {\n    // const element = array[i];\n    var query = \"Canal\" + (i + 8);\n    if (typeof entradasDigitales[query] != 'undefined'){//si esta definido el canal\n        if ((entradasDigitales[query].Tipo) == \"NO\") {//normalmente abierta\n            nona[i] = 1;//seteela como normalmente abierta\n        } else if ((entradasDigitales[query].Tipo) == \"NC\") {//normalmente cerrada\n            nona[i] = 0;//set como normalmente cerrada\n        }\n    }\n}\n\n\n\n//cambiando el orden del vector valor\n//var aux1 = nona.reverse();//Descomentar si el sentido concatenación es diferente\nvar aux2 = nona.join('');//unir los vectores sin espacio\nvar conversion = BinarioADecimal(aux2);//conversión de Binario a Decimal\n\n//registro D0 del mapa modbus para el cubloc\nmsg.payload = {\n    \"value\": conversion,\n    \"fc\": 6,\n    \"unitid\": 1,\n    \"address\": 0,\n    \"quantity\": 1\n};\n\n\n// visualizador de variables\ncontext.set(\"nona\", nona, \"memoryOnly\");\ncontext.set(\"aux2\", aux2, \"memoryOnly\");\ncontext.set(\"conversion\", conversion, \"memoryOnly\");\ncontext.set(\"entradasDigitales\", entradasDigitales,\"memoryOnly\");\n\nreturn msg;\n// función para conversión de binario a decimal\nfunction BinarioADecimal(num) {\n    let sum = 0;\n\n    for (let i = 0; i < num.length; i++) {\n        sum += +num[i] * 2 ** (num.length - 1 - i);\n    }\n    return sum;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2170,
        "y": 3900,
        "wires": [
            [
                "e17b61229da5159d"
            ]
        ]
    },
    {
        "id": "3f594a3dbdf92d76",
        "type": "inject",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "inicializar",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "",
        "payloadType": "date",
        "x": 1920,
        "y": 3980,
        "wires": [
            [
                "13ae2db66a6609f2",
                "633deaa1943f8055"
            ]
        ]
    },
    {
        "id": "633deaa1943f8055",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2110,
        "y": 3980,
        "wires": [
            [
                "ba79778827ca94cb"
            ]
        ]
    },
    {
        "id": "e6e775f93ad9b13e",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "DI/DO",
        "links": [
            "b0a6daf8cc767b13",
            "ced2df423e7eb2d8",
            "e06c7275b16258b0",
            "fb0badb9b78617c8",
            "54b354e7737802b3"
        ],
        "x": 2115,
        "y": 4040,
        "wires": [
            [
                "ba79778827ca94cb"
            ]
        ]
    },
    {
        "id": "ba79778827ca94cb",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "enrrutamiento",
        "func": "var outConfig = flow.get(\"ES.SD\")||0;//configuración de salidas digitales\nvar inConfig = flow.get(\"ES.ED\")||0;//configuración de entradas digitales\nvar Outbreaker = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];//setaear todas las entradas como normalmente cerradas\nif ((outConfig != 0) && (inConfig!=0) ){//ejecute si la configuración existe\n\n    for (let i = 0; i < 16; i++) {//las entradas Digitales\n        // const element = array[i];\n        var query = \"Canal\" + (i + 8);//definición del canal de las entradas cubloc\n        if (typeof inConfig[query] != 'undefined') {//si esta definido el canal de entrada\n            if (((inConfig[query].Funcion) == \"Stop ESD\")||\n                ((inConfig[query].Funcion) == \"Disparo alto nivel de aceite SUT\") ||\n                ((inConfig[query].Funcion) == \"Disparo alta temperatura SUT\") ||\n                ((inConfig[query].Funcion) == \"Disparo bajo bajo nivel de aceite SUT\") ||\n                ((inConfig[query].Funcion) == \"Disparo válvula sobre-presión SUT\") ||\n                ((inConfig[query].Funcion) == \"Disparo alta temperatura filtros\") ||\n                ((inConfig[query].Funcion) == \"Disparo alta presión THP\") ||\n                ((inConfig[query].Funcion) == \"Disparo sobre-tensión SUT\") ||\n                ((inConfig[query].Funcion) == \"Disparo puerta abierta\") ||\n                ((inConfig[query].Funcion) == \"Disparo shutdown SCC\") ||\n                ((inConfig[query].Funcion) == \"Disparo baja presión en la troncal\") ||\n                ((inConfig[query].Funcion) == \"Disparo SobreVoltaje\") ||\n                ((inConfig[query].Funcion) == \"ESD Remoto\")) {\n\n                for (let j = 32; j <= 39; j++) {//salidas digitales recorrerlas\n                    if (typeof outConfig[\"Canal\" + (j)] != 'undefined') {//si esta definido el canal\n                        if (outConfig[\"Canal\" + (j)].Funcion == \"Disparo breaker módulo ESD\") {\n                            Outbreaker[i] = j-31;//el cubloc empieza desde 1\n                            context.set(\"j\", j,\"memoryOnly\");\n                            node.status({ fill: \"green\", shape: \"dot\", text: \"Configuro\" });\n\n                        }\n\n                    }\n                }\n                // cierre del motorizado SDT lógica\n            } else if (((inConfig[query].Funcion) == \"Disparo bajo bajo nivel de aceite SDT\")\n                         || ((inConfig[query].Funcion) == \"Disparo alta temperatura SDT\") ||\n                          ((inConfig[query].Funcion) == \"Disparo Valvula sobrepresión SDT\")){\n                \n                for (let j = 32; j <= 39; j++) {//salidas digitales recorrerlas\n                    if (typeof outConfig[\"Canal\" + (j)] != 'undefined') {//si esta definido el canal\n                        if (outConfig[\"Canal\" + (j)].Funcion == \"Apertura motorizado SDT\") {\n                            Outbreaker[i] = j - 31;//el cubloc empieza desde 1\n                            context.set(\"j\", j, \"memoryOnly\");\n                            node.status({ fill: \"green\", shape: \"dot\", text: \"Configuro\" });\n\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n}else{\n    node.status({ fill: \"green\", shape: \"dot\", text: \"No tiene Configuración\" });\n}\ncontext.set(\"outConfig\", outConfig,\"memoryOnly\");\ncontext.set(\"inConfig\", inConfig,\"memoryOnly\");\ncontext.set(\"Outbreaker\", Outbreaker,\"memoryOnly\");\nglobal.set(\"Outbreaker\", Outbreaker);\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2300,
        "y": 3980,
        "wires": [
            [
                "72c298a02ef42417"
            ]
        ]
    },
    {
        "id": "72c298a02ef42417",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 2470,
        "y": 3980,
        "wires": [
            [
                "8d784be063f1d4db"
            ]
        ]
    },
    {
        "id": "8d784be063f1d4db",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "timmerOutConfig",
        "func": "var confTimer = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];//setaear todas las entradas como normalmente cerradas\n// var confTimer = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];//set como normalmente abiertas\n\nvar salidasDigitales = flow.get(\"ES.SD\")||0;\n\nfor (let i = 32; i <= 39 ; i++) {\n    // const element = array[i];\n    var query = \"Canal\" + (i);\n    if (typeof salidasDigitales[query] != 'undefined'){//si esta definido el canal\n        if ((salidasDigitales[query].Funcion) == \"Apertura motorizado SDT\") {\n            confTimer[i-32] = 1;//seteela como normalmente abierta\n        } else if ((salidasDigitales[query].Funcion) == \"Cierre motorizado SDT\") {//normalmente cerrada\n            confTimer[i-32] = 1;//set como normalmente cerrada\n        }else{\n            confTimer[i-32] = 0;//set como normalmente cerrada\n        }\n    }\n}\n\n\n\n//cambiando el orden del vector valor\n//var aux1 = confTimer.reverse();//Descomentar si el sentido concatenación es diferente\nvar aux2 = confTimer.join('');//unir los vectores sin espacio\nvar conversion = BinarioADecimal(aux2);//conversión de Binario a Decimal\n\n//registro D1 del mapa modbus para el cubloc\nmsg.payload = {\n    \"value\": conversion,\n    \"fc\": 6,\n    \"unitid\": 1,\n    \"address\": 1,\n    \"quantity\": 1\n};\n\n\n// visualizador de variables\ncontext.set(\"confTimer\", confTimer, \"memoryOnly\");\ncontext.set(\"aux2\", aux2, \"memoryOnly\");\ncontext.set(\"conversion\", conversion, \"memoryOnly\");\ncontext.set(\"salidasDigitales\", salidasDigitales,\"memoryOnly\");\n\nreturn msg;\n// función para conversión de binario a decimal\nfunction BinarioADecimal(num) {\n    let sum = 0;\n\n    for (let i = 0; i < num.length; i++) {\n        sum += +num[i] * 2 ** (num.length - 1 - i);\n    }\n    return sum;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 3980,
        "wires": [
            [
                "e17b61229da5159d"
            ]
        ]
    },
    {
        "id": "b80d3fafa1137e22",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "Config. disparos",
        "func": "// var Outbreaker = [8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];\nvar Outbreaker = global.get(\"Outbreaker\") || 0;                              \n\n    // Configuración del Cubloc                               \n\ncontext.set(\"Outbreaker\", Outbreaker,\"memoryOnly\");\n// Escribir Mapa\nmsg.payload = { \n    value: Outbreaker,\n    'fc': 16,\n    'unitid': 1, \n    'address': 28672 + 20 + 100,\n    'quantity': Outbreaker.length\n}\nif (Outbreaker.length==16) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 4120,
        "wires": [
            [
                "26144798845bf323"
            ]
        ]
    },
    {
        "id": "de3e9eaee7d8ac1e",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770,
        "y": 4120,
        "wires": [
            [
                "b80d3fafa1137e22"
            ]
        ]
    },
    {
        "id": "c1aa521337e30c76",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "3b8d6f41c33605f7"
            ]
        ]
    },
    {
        "id": "3b8d6f41c33605f7",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "76d03353.299b94",
        "name": "",
        "links": [
            "e7cea693752dde35"
        ],
        "x": 675,
        "y": 1040,
        "wires": []
    },
    {
        "id": "290e6a8105e84287",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 570,
        "y": 3320,
        "wires": [
            [
                "54b354e7737802b3"
            ]
        ]
    },
    {
        "id": "54b354e7737802b3",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "742e267a.cbc27",
        "name": "",
        "links": [
            "e6e775f93ad9b13e"
        ],
        "x": 685,
        "y": 3320,
        "wires": []
    },
    {
        "id": "2465266dce183982",
        "type": "switch",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "AVAS?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "AVAS®",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1950,
        "y": 160,
        "wires": [
            [
                "cf278cc310a75f2a"
            ]
        ]
    },
    {
        "id": "cf278cc310a75f2a",
        "type": "switch",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "AVAS?",
        "property": "#:(memoryOnly)::Navegación.AVAS",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "amp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2070,
        "y": 160,
        "wires": [
            [
                "8b6c1f1de90514c9"
            ]
        ]
    },
    {
        "id": "8ab99b43.236ef8",
        "type": "function",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"C2S.Speed_Control.MaxLimit\") || 0;\nvar min = global.get(\"C2S.Speed_Control.MinLimit\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? (maxopc/0.8):max};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 120,
        "wires": [
            [
                "8f3bb3f83df36820"
            ]
        ]
    },
    {
        "id": "b0156b916b41fd41",
        "type": "function",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "select?",
        "func": "msg.payload = flow.get(\"amperimetric.Type\") ||\"dataday\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 220,
        "wires": [
            [
                "68a2367b68a2d36b"
            ]
        ]
    },
    {
        "id": "e17b61229da5159d",
        "type": "link out",
        "z": "7a89175c.90f6a8",
        "g": "0382d006bf3e8547",
        "name": "",
        "links": [
            "8c018f4ed6c2ed47",
            "b4c6291bf307f204"
        ],
        "x": 2335,
        "y": 3900,
        "wires": []
    },
    {
        "id": "b4c6291bf307f204",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "name": "",
        "links": [
            "e17b61229da5159d"
        ],
        "x": 1175,
        "y": 3860,
        "wires": [
            [
                "26144798845bf323"
            ]
        ]
    },
    {
        "id": "b506833eadd068ed",
        "type": "function",
        "z": "7af521b51c8e6a51",
        "g": "5dc71a84bf12ae23",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.MotorLoad.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.MotorLoad.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? (maxopc/0.8):max};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 180,
        "wires": [
            [
                "3232c7cbd0e96a18"
            ]
        ]
    },
    {
        "id": "8f00cd8e28191886",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 1,
        "width": "4",
        "height": 2,
        "name": "Frecuencia Salida",
        "label": "Frecuencia Salida",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "Hz",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1230,
        "y": 1440,
        "wires": []
    },
    {
        "id": "def0c8ddae21bc33",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"C2S.Speed_Control.MaxLimit\") || 0;\nvar min = global.get(\"C2S.Speed_Control.MinLimit\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? (maxopc/0.8):max};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1440,
        "wires": [
            [
                "8f00cd8e28191886"
            ]
        ]
    },
    {
        "id": "fd7d8e466c89b924",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 2,
        "width": "4",
        "height": 2,
        "name": "Porcentaje Velocidad",
        "label": "Porcentaje Velocidad",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "100",
        "segWarn": "",
        "segHigh": "",
        "unit": "%",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1240,
        "y": 1500,
        "wires": []
    },
    {
        "id": "06ed38b7797ff80d",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 3,
        "width": "4",
        "height": 2,
        "name": "Factor Potencia",
        "label": "Factor de Potencia",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "1",
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1220,
        "y": 1560,
        "wires": []
    },
    {
        "id": "7f65b417a3a88e16",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 4,
        "width": "4",
        "height": 2,
        "name": "Corriente Salida",
        "label": "Corriente Salida",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "1",
        "segWarn": "",
        "segHigh": "",
        "unit": "A",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1220,
        "y": 1620,
        "wires": []
    },
    {
        "id": "9bd9b6cfa517c920",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "c41a251e.427c98",
        "name": "Current_Limit",
        "rules": [
            {
                "t": "set",
                "p": "Input.CurrentLimit",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "5fb8e65144bf6a74",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "1306de9a.9ba341",
        "name": "Current_Limit",
        "rules": [
            {
                "t": "set",
                "p": "Input.CurrentLimit",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "6955fc6ecc3d7c19",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 5,
        "width": "4",
        "height": 2,
        "name": "Bus DC",
        "label": "Bus DC",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "1",
        "segWarn": "",
        "segHigh": "",
        "unit": "V",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1200,
        "y": 1680,
        "wires": []
    },
    {
        "id": "80ed9b3f88067f5f",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.BusDC.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.BusDC.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1680,
        "wires": [
            [
                "6955fc6ecc3d7c19"
            ]
        ]
    },
    {
        "id": "f458467692584c33",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 6,
        "width": "4",
        "height": 2,
        "name": "Tensión Motor",
        "label": "Tensión Motor",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "1",
        "segWarn": "",
        "segHigh": "",
        "unit": "V",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1220,
        "y": 1740,
        "wires": []
    },
    {
        "id": "cca11fa308c0840d",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"C2S.Motor_Control.Nameplate.Voltage\") || 0;\nvar min = 0;\nvar Rtx = global.get(\"C2S.RelTx\") || 1;\n\nmax = max*Rtx;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1740,
        "wires": [
            [
                "f458467692584c33"
            ]
        ]
    },
    {
        "id": "4cdb6f97ddc0cb13",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 7,
        "width": "4",
        "height": 2,
        "name": "Potencia",
        "label": "Potencia",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "1",
        "segWarn": "",
        "segHigh": "",
        "unit": "Kw",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1200,
        "y": 1800,
        "wires": []
    },
    {
        "id": "fd10872c8ba7f129",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"C2S.Motor_Control.Nameplate.Power\") || 0;\nvar min = 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec((max/0.9)) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1800,
        "wires": [
            [
                "4cdb6f97ddc0cb13"
            ]
        ]
    },
    {
        "id": "d1bb75bd64fc58b1",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 8,
        "width": "4",
        "height": 2,
        "name": "Tensión Salida",
        "label": "Tensión Salida",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "1",
        "segWarn": "",
        "segHigh": "",
        "unit": "V",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1220,
        "y": 1860,
        "wires": []
    },
    {
        "id": "87f10cbd3a2d9eec",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"C2S.Motor_Control.Nameplate.Voltage\") || 0;\nvar min = 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1860,
        "wires": [
            [
                "d1bb75bd64fc58b1"
            ]
        ]
    },
    {
        "id": "68ba7be08a9049a1",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"C2S.Motor_Control.Nameplate.Amps\") || 0;\nvar min = 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max)};\n\nfunction decOneDec(num){\n    return parseFloat(num.toFixed(1));\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1620,
        "wires": [
            [
                "7f65b417a3a88e16"
            ]
        ]
    },
    {
        "id": "421f2b5fe1dbe6b3",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 9,
        "width": "4",
        "height": 2,
        "name": "Corriente Motor",
        "label": "Corriente Motor",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "1",
        "segWarn": "",
        "segHigh": "",
        "unit": "A",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1220,
        "y": 1920,
        "wires": []
    },
    {
        "id": "f4b06287d144da8b",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"C2S.Motor_Control.Nameplate.Amps\") || 0;\nvar min = 0;\nvar Rtx = global.get(\"C2S.RelTx\") || 1;\n\nmax = max/Rtx;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1920,
        "wires": [
            [
                "421f2b5fe1dbe6b3"
            ]
        ]
    },
    {
        "id": "cf15dfa9acf0c78c",
        "type": "link in",
        "z": "902fc438.e5d758",
        "g": "086b9d08c3b68939",
        "name": "",
        "links": [
            "39d670dcae0601f1"
        ],
        "x": 195,
        "y": 1080,
        "wires": [
            [
                "e3dba22f.3fd21"
            ]
        ]
    },
    {
        "id": "39d670dcae0601f1",
        "type": "link out",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "",
        "links": [
            "cf15dfa9acf0c78c"
        ],
        "x": 1395,
        "y": 3060,
        "wires": []
    },
    {
        "id": "db43fb238938f2fc",
        "type": "delay",
        "z": "43b51d90.0b47f4",
        "g": "6625e1db09743bc3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1300,
        "y": 3060,
        "wires": [
            [
                "39d670dcae0601f1"
            ]
        ]
    },
    {
        "id": "9708fb7ce60bdd70",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "b079c206d161b62c",
        "group": "1b027e16.1fc232",
        "order": 9,
        "width": "4",
        "height": 2,
        "name": "Temp. Drive",
        "label": "Temp. Drive",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "80",
        "segWarn": "",
        "segHigh": "",
        "unit": "ºC",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1210,
        "y": 1980,
        "wires": []
    },
    {
        "id": "fa84d5e02a827049",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 1,
        "width": "3",
        "height": 2,
        "name": "Presión Entrada",
        "label": "Presión Entrada",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "psi",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2240,
        "y": 1460,
        "wires": []
    },
    {
        "id": "e44a08d354c85928",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.IntakePressure.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.IntakePressure.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1460,
        "wires": [
            [
                "fa84d5e02a827049"
            ]
        ]
    },
    {
        "id": "cb8fca5aa01b3ab3",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 2,
        "width": "3",
        "height": 2,
        "name": "Presión Descarga",
        "label": "Presión Descarga",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "psi",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2250,
        "y": 1520,
        "wires": []
    },
    {
        "id": "440c76b3cb510964",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.DischargePressure.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.DischargePressure.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1520,
        "wires": [
            [
                "cb8fca5aa01b3ab3"
            ]
        ]
    },
    {
        "id": "2f0f2458b8e59e33",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 3,
        "width": "3",
        "height": 2,
        "name": "Temp. Entrada",
        "label": "Temp. Entrada",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "ºF",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2240,
        "y": 1580,
        "wires": []
    },
    {
        "id": "2fa030ef30608d2f",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.IntakeTemperature.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.IntakeTemperature.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1580,
        "wires": [
            [
                "2f0f2458b8e59e33"
            ]
        ]
    },
    {
        "id": "d33dde4544af2cd6",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 4,
        "width": "3",
        "height": 2,
        "name": "Temp. Descarga",
        "label": "Temp. Descarga",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "ºF",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2240,
        "y": 1640,
        "wires": []
    },
    {
        "id": "336430b48e86b80b",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.DischargeTemperature.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.DischargeTemperature.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1640,
        "wires": [
            [
                "d33dde4544af2cd6"
            ]
        ]
    },
    {
        "id": "6bf042012b32c37b",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 5,
        "width": "3",
        "height": 2,
        "name": "Temp. Motor",
        "label": "Temp. Motor",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "ºF",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2230,
        "y": 1700,
        "wires": []
    },
    {
        "id": "ccb71f7b12aba0c8",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.MotorTemperature.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.MotorTemperature.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1700,
        "wires": [
            [
                "6bf042012b32c37b"
            ]
        ]
    },
    {
        "id": "bbd59ab25e9049cc",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 6,
        "width": "3",
        "height": 2,
        "name": "Vibración X",
        "label": "Vibración X",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "G",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2230,
        "y": 1760,
        "wires": []
    },
    {
        "id": "b2f44a0d0b45c665",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibración Z",
        "label": "Vibración Z",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "G",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2230,
        "y": 1820,
        "wires": []
    },
    {
        "id": "b7f3094c080b162b",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.VibrationGeneral.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.VibrationGeneral.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1760,
        "wires": [
            [
                "bbd59ab25e9049cc"
            ]
        ]
    },
    {
        "id": "af7426950ecaa616",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.VibrationGeneral.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.VibrationGeneral.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1820,
        "wires": [
            [
                "b2f44a0d0b45c665"
            ]
        ]
    },
    {
        "id": "31cd12a81cc4ce35",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 8,
        "width": "3",
        "height": 2,
        "name": "Corriente Fuga",
        "label": "Corriente Fuga",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "mA",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2240,
        "y": 1880,
        "wires": []
    },
    {
        "id": "48830760252f1247",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.noExiste.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.noExiste.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1880,
        "wires": [
            [
                "31cd12a81cc4ce35"
            ]
        ]
    },
    {
        "id": "f1d4d62969cbc89b",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.THP.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.THP.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1940,
        "wires": [
            [
                "aa3ba9750fafce19"
            ]
        ]
    },
    {
        "id": "aa3ba9750fafce19",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 9,
        "width": "3",
        "height": 2,
        "name": "Presión THP",
        "label": "Presión THP",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "psi",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2230,
        "y": 1940,
        "wires": []
    },
    {
        "id": "75f247cd047b44cb",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 10,
        "width": "3",
        "height": 2,
        "name": "Temp. THT",
        "label": "Temp. THT",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "ºF",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2230,
        "y": 2000,
        "wires": []
    },
    {
        "id": "494c25dceeae9fd7",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.THT.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.THT.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 2000,
        "wires": [
            [
                "75f247cd047b44cb"
            ]
        ]
    },
    {
        "id": "97fab81ee49031d0",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 13,
        "width": "3",
        "height": 2,
        "name": "Presión entrada",
        "label": "Presión entrada",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "psi",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2240,
        "y": 2140,
        "wires": []
    },
    {
        "id": "404d3ee6268725b6",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.IntakePressure.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.IntakePressure.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 2140,
        "wires": [
            [
                "97fab81ee49031d0"
            ]
        ]
    },
    {
        "id": "2662ae1844428c50",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 14,
        "width": "3",
        "height": 2,
        "name": "Nivel Fluido Dinámico",
        "label": "Nivel Fluido Dinámico",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "ft",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2260,
        "y": 2200,
        "wires": []
    },
    {
        "id": "95acda615faab2e3",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.DynamicFluidLevel.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.DynamicFluidLevel.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 2200,
        "wires": [
            [
                "2662ae1844428c50"
            ]
        ]
    },
    {
        "id": "099520137e4ab863",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 15,
        "width": "3",
        "height": 2,
        "name": "Sumergencia",
        "label": "Sumergencia",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "ft",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2230,
        "y": 2260,
        "wires": []
    },
    {
        "id": "222bb80678f72aa6",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.noExiste.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.noExiste.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 2260,
        "wires": [
            [
                "099520137e4ab863"
            ]
        ]
    },
    {
        "id": "aabd8ae60349a4b0",
        "type": "ui_level",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "group": "26126cf5.7e87a4",
        "order": 16,
        "width": "3",
        "height": 2,
        "name": "Caudal",
        "label": "Caudal",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "500",
        "segWarn": "",
        "segHigh": "",
        "unit": "m^3/s",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "custom",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "0.8",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 2220,
        "y": 2320,
        "wires": []
    },
    {
        "id": "90fdc4810e9cd514",
        "type": "function",
        "z": "902fc438.e5d758",
        "g": "c483d44b5f6def10",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Protections.noExiste.HH.Setpoint\") || 0;\nvar min = global.get(\"Protections.noExiste.LL.Setpoint\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? decOneDec((maxopc / 0.8)) : decOneDec(max) };\n\nfunction decOneDec(num) {\n    return parseFloat(num.toFixed(1));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 2320,
        "wires": [
            [
                "aabd8ae60349a4b0"
            ]
        ]
    },
    {
        "id": "f88ee0328a8f5964",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "Lectura Holding Register",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 1,\n    'address' : 0,\n    'quantity': 32\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 4240,
        "wires": [
            [
                "c30c78cc60db84f8"
            ]
        ]
    },
    {
        "id": "138266be848cd64a",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "Salidas Digitales",
        "func": "var ES = flow.get('ES') || null;\n\n// Arreglo de Canales CUBLOC\n// var Data    = { \n//     32:false, 33:false, 34:false, 35:false, \n//     36:false, 37:false, 38:false, 39:false, \n//     40:false, 41:false, 42:false, 43:false\n// };\nvar Data    = { \n    32:false, 33:false, 34:false, 35:false, \n    36:false, 37:false, 38:false, 39:false\n};\n\n// Obtener llaves del objeto Data\nvar Canal = Object.keys(Data);\n// Declaración del string con \nvar canalmsg;\n\n//Objeto con las funciones del CILA2S\nvar FuncionC2S = {\n    \"CILA2S en marcha\": global.get(\"IO.Functions.DO['CILA2S en marcha']\", 'memoryOnly') || false,\n    \"Falla general\": global.get(\"IO.Functions.DO['Falla general']\", 'memoryOnly') || false,\n    \"Disparo breaker módulo ESD\": global.get(\"IO.Functions.DO['Disparo breaker módulo ESD']\", 'memoryOnly') || false,\n    \"Cierre motorizado SDT\": global.get(\"IO.Functions.DO['Cierre motorizado SDT']\", 'memoryOnly') || false,\n    \"Apertura motorizado SDT\": global.get(\"IO.Functions.DO['Apertura motorizado SDT']\", 'memoryOnly') || false,\n    \"Bypass filtro de armónicos\": global.get(\"IO.Functions.DO.HF.Status\", 'memoryOnly') || false,\n    \"Simulación\": false\n}\n\n// Llaves del vector FuncionesC2S\nvar Keys = Object.keys(FuncionC2S);\n\n// Para cada canal de salida\nfor(var i=0; i <Canal.length; i++){\n    canalmsg ='Canal'+ Canal[i];\n    // Si la configuración del canal está declarada\n    if(typeof ES.SD[canalmsg] != 'undefined'){\n        // Para cada llave del vector FuncionesC2S que coincida con la configuración del canal\n        for(var j=0; j<Keys.length; j++){\n            if(ES.SD[canalmsg].Funcion == Keys[j]){\n                // Asignar el valor contenido en el vector de funciones al canal de salida\n                Data[Canal[i]] = ES.SD[canalmsg].Tipo == \"NO\" ? FuncionC2S[Keys[j]]:!FuncionC2S[Keys[j]];\n                //Ternario para escribir datos al PLC, el acepta 1 o 0 no booleano\n                //Es un Holding Register \n                //Data[Canal[i]] == true ? 1 : 0;\n\n            } \n        }\n    }\n    Data[Canal[i]] = Data[Canal[i]] == true ? 1 : 0;\n}\n\n// Asignar variable con los valores a escribir  (Se puede eliminar al asignar directamente).\nvar values = Object.values(Data);\ncontext.set(\"values\", values,'memoryOnly');\ncontext.set(\"Data\", Data, 'memoryOnly');\ncontext.set(\"Functions\", FuncionC2S, 'memoryOnly');\n// Escribir datos en el Cubloc\nmsg.payload = {\n    value: values,\n    'fc': 16,\n    'unitid': 1,\n    'address': 8,\n    'quantity': 8\n}\n\n// Retorno del mensaje\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 4300,
        "wires": [
            [
                "bba3aa277bcf1444"
            ]
        ],
        "inputLabels": [
            "Activar función"
        ],
        "outputLabels": [
            "Canal32"
        ]
    },
    {
        "id": "6afa3775f2be0e4d",
        "type": "catch",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "Erroes escritura PLC",
        "scope": [
            "138266be848cd64a",
            "bba3aa277bcf1444"
        ],
        "uncaught": false,
        "x": 810,
        "y": 4560,
        "wires": [
            [
                "0ad7006f65f3d19b"
            ]
        ]
    },
    {
        "id": "3af54985e9349f2c",
        "type": "catch",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "Errores lectura PLC",
        "scope": [
            "c30c78cc60db84f8"
        ],
        "uncaught": false,
        "x": 810,
        "y": 4500,
        "wires": [
            [
                "8dc4ac2430aa44fc"
            ]
        ]
    },
    {
        "id": "8dc4ac2430aa44fc",
        "type": "debug",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 4500,
        "wires": []
    },
    {
        "id": "0ad7006f65f3d19b",
        "type": "debug",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 4560,
        "wires": []
    },
    {
        "id": "7397d1cb1a9a2fa0",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "testSalidaDigital",
        "func": "msg.payload = {\n    value: [1],\n    'fc': 16,\n    'unitid': 1,\n    'address': 8,\n    'quantity': 1\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 4460,
        "wires": [
            []
        ]
    },
    {
        "id": "c30c78cc60db84f8",
        "type": "modbus-flex-getter",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "Leer PLC",
        "showStatusActivities": true,
        "showErrors": false,
        "logIOActivities": false,
        "server": "df1da3d9e58a326e",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 1320,
        "y": 4240,
        "wires": [
            [],
            [
                "6b2ab85fc1f64252",
                "9adbbbd6b997667e"
            ]
        ]
    },
    {
        "id": "6b2ab85fc1f64252",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "Interpretar Entradas-Salidas PLC",
        "func": "\nvar Entradas_Digitales ={ \n    \"8\"  : msg.payload.data[0]  == 1 ? true : false, //alternario se utiliza porque el registro me envia un 1 o 0\n    \"9\"  : msg.payload.data[1]  == 1 ? true : false,\n    \"10\" : msg.payload.data[2]  == 1 ? true : false,\n    \"11\": msg.payload.data[3]   == 1 ? true : false,\n    \"12\": msg.payload.data[4]   == 1 ? true : false,\n    \"13\": msg.payload.data[5]   == 1 ? true : false,\n    \"14\": msg.payload.data[6]   == 1 ? true : false,\n    \"15\": msg.payload.data[7]   == 1 ? true : false,\n}\nglobal.set('IO.DI', Entradas_Digitales, 'memoryOnly');\n\nvar Salidas_Digitales ={\n  \"32\": msg.payload.data[8]  == 1 ? true : false,\n  \"33\": msg.payload.data[9]  == 1 ? true : false,\n  \"34\": msg.payload.data[10] == 1 ? true : false,\n  \"35\": msg.payload.data[11] == 1 ? true : false,\n  \"36\": msg.payload.data[12] == 1 ? true : false,\n  \"37\": msg.payload.data[13] == 1 ? true : false,\n  \"38\": msg.payload.data[14] == 1 ? true : false,\n  \"39\": msg.payload.data[15] == 1 ? true : false,\n\n}\nglobal.set('IO.DO', Salidas_Digitales, 'memoryOnly');\n\nvar Analoga1 = ((msg.payload.data[17] << 16) + msg.payload.data[18]); Analoga1 = Int2Float32(Analoga1);\nvar Analoga2 = ((msg.payload.data[19] << 16) + msg.payload.data[20]); Analoga2 = Int2Float32(Analoga2);\nvar Analoga3 = ((msg.payload.data[21] << 16) + msg.payload.data[22]); Analoga3 = Int2Float32(Analoga3);\nvar Analoga4 = ((msg.payload.data[23] << 16) + msg.payload.data[24]); Analoga4 = Int2Float32(Analoga4);\n\nvar Entradas_Analogas = {\n  \"0\": Analoga1,\n  \"1\": Analoga2,\n  \"2\": Analoga3,\n  \"3\": Analoga4,\n}\n\nglobal.set('IO.AI', Entradas_Analogas, 'memoryOnly');\ncontext.set(\"Entradas_Analogas\", Entradas_Analogas,\"memoryOnly\")\n\nfunction Int2Float32(bytes) {\n  var sign = (bytes & 0x80000000) ? -1 : 1;\n  var exponent = ((bytes >> 23) & 0xFF) - 127;\n  var significand = (bytes & ~(-1 << 23));\n\n  if (exponent == 128)\n    return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n  if (exponent == -127) {\n    if (significand === 0) return sign * 0.0;\n    exponent = -126;\n    significand /= (1 << 22);\n  } else significand = (significand | (1 << 23)) / (1 << 23);\n\n  return sign * significand * Math.pow(2, exponent);\n}\n//Créditos: https://flows.nodered.org/flow/359ead34237b7ab6ec0465ee85a34b62RelCT\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 4220,
        "wires": [
            []
        ]
    },
    {
        "id": "bba3aa277bcf1444",
        "type": "modbus-flex-write",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "Escribir PLC",
        "showStatusActivities": true,
        "showErrors": false,
        "server": "df1da3d9e58a326e",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 1310,
        "y": 4300,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e0ebb1532663774a",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "Leery Escribir PLC",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 715,
        "y": 4260,
        "wires": [
            [
                "eb02c5e2d4135d47"
            ]
        ]
    },
    {
        "id": "8be993bf3ba4ae30",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 830,
        "y": 4300,
        "wires": [
            [
                "138266be848cd64a"
            ]
        ]
    },
    {
        "id": "eb02c5e2d4135d47",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 830,
        "y": 4240,
        "wires": [
            [
                "f88ee0328a8f5964",
                "8be993bf3ba4ae30"
            ]
        ]
    },
    {
        "id": "f04f801e0bd8ff6a",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "RegistrosEspeciales",
        "func": "var ctr = context.get(\"ctr\",\"memoryOnly\")||1;\nctr = ctr + 1;\nif(ctr > 141){\n    ctr = 0;\n}\nmsg.payload = {\n    value: [1, 1,ctr],\n    'fc': 16,\n    'unitid': 1,\n    'address': 26,\n    'quantity': 3\n}\nnode.status({fill:\"yellow\",shape:\"dot\",text:ctr});\ncontext.set(\"ctr\",ctr,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 4420,
        "wires": [
            []
        ]
    },
    {
        "id": "9f6c8af864ad03c7",
        "type": "link in",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "refreshRegistrosEspeciales",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 875,
        "y": 4340,
        "wires": [
            [
                "d4216d9506b296f0",
                "5770bf05578643c0"
            ]
        ]
    },
    {
        "id": "9adbbbd6b997667e",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "Interpretar Dinagrama",
        "func": "context.set(\"mensaje\", msg.payload,\"memoryOnly\");\nvar pos = ((msg.payload.data[25] << 16) + msg.payload.data[26]); pos = Int2Float32(pos);\nvar carga = ((msg.payload.data[27] << 16) + msg.payload.data[28]); carga = Int2Float32(carga);\nvar Indice = msg.payload.data[28];\n\nvar Dinagrama ={ \n    \"pos\": pos,\n    \"carga\": carga,\n    \"Indice\": Indice,\n}\n// se setea uno a uno para poder guardar el dinagrama\nglobal.set('IO.Dinagrama.pos', Dinagrama.pos, 'memoryOnly');\nglobal.set('IO.Dinagrama.carga', Dinagrama.carga, 'memoryOnly');\nglobal.set('IO.Dinagrama.Indice', Dinagrama.Indice, 'memoryOnly');\ncontext.set(\"Dinagrama\", Dinagrama,\"memoryOnly\");\n\n\nfunction Int2Float32(bytes) {\n  var sign = (bytes & 0x80000000) ? -1 : 1;\n  var exponent = ((bytes >> 23) & 0xFF) - 127;\n  var significand = (bytes & ~(-1 << 23));\n\n  if (exponent == 128)\n    return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n  if (exponent == -127) {\n    if (significand === 0) return sign * 0.0;\n    exponent = -126;\n    significand /= (1 << 22);\n  } else significand = (significand | (1 << 23)) / (1 << 23);\n\n  return sign * significand * Math.pow(2, exponent);\n}\n//Créditos: https://flows.nodered.org/flow/359ead34237b7ab6ec0465ee85a34b62RelCT\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 4260,
        "wires": [
            []
        ]
    },
    {
        "id": "d4216d9506b296f0",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "indiceDinagrama",
        "func": "var ctr = context.get(\"ctr\",\"memoryOnly\")||0;\nctr = ctr + 1;\nif(ctr > 161){\n    ctr = 0;\n}\nmsg.payload = {\n    value: [ctr],\n    'fc': 6,\n    'unitid': 1,\n    'address': 28,\n    'quantity': 1\n}\nnode.status({fill:\"yellow\",shape:\"dot\",text:ctr});\ncontext.set(\"ctr\",ctr,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 4340,
        "wires": [
            [
                "bba3aa277bcf1444"
            ]
        ]
    },
    {
        "id": "58193979505252cc",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "",
        "func": "var vector = createArray(160);\ncontext.set(\"vector\",vector,\"memoryOnly\");\nfor (let i = 0; i < vector.length; i++) {\n    vector[i] = 0;\n}\n\nfunction createArray(length) {\n    var arr = new Array(length || 0),\n        i = length;\n\n    if (arguments.length > 1) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        while (i--) arr[length - 1 - i] = createArray.apply(this, args);\n    }\n\n    return arr;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4500,
        "wires": [
            []
        ]
    },
    {
        "id": "2800358056b8906c",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "Adquirir Dinagrama",
        "func": "var pos = global.get(\"IO.Dinagrama.pos\", \"memoryOnly\") || 0;\nvar carga = global.get(\"IO.Dinagrama.carga\", \"memoryOnly\") || 0;\nvar Indice = global.get(\"IO.Dinagrama.Indice\", \"memoryOnly\") || 0;\nvar Vcarga = context.get(\"Vcarga\",\"memoryOnly\");//se inicializa en On Start\nvar Vpos = context.get(\"Vpos\", \"memoryOnly\");//se inicializa en On Start\n\nif (Indice < Vpos.length-1){\n    Vcarga[Indice-1] = carga;\n    Vpos[Indice-1] = pos;\n}\n\n// guardar todo el vector\nif (Indice >= Vpos.length){\n    global.set('IO.Dinagrama.Vcarga', Vcarga, 'memoryOnly');\n    global.set('IO.Dinagrama.Vpos', Vpos, 'memoryOnly');\n}\n\nnode.status({fill:\"blue\",shape:\"ring\",text:Indice});\ncontext.set(\"Vcarga\", Vcarga, \"memoryOnly\");\ncontext.set(\"Vpos\", Vpos, \"memoryOnly\");\ncontext.set(\"Indice\", Indice, \"memoryOnly\");\ncontext.set(\"pos\", pos, \"memoryOnly\");\ncontext.set(\"tamano\", Vpos.length, \"memoryOnly\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nvar Vcarga = [0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nvar Vpos = [0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\ncontext.set(\"Vcarga\", Vcarga, \"memoryOnly\");\ncontext.set(\"Vpos\", Vpos, \"memoryOnly\");\n",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 4400,
        "wires": [
            []
        ]
    },
    {
        "id": "b2f03b978904c38e",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "SPM",
        "func": "var spm = global.get(\"C2S.Last_Reference.ValueSpm\");\nvar ctr = context.get(\"ctr\",\"memoryOnly\")||0;\nctr = ctr + 1;\nif(ctr > 161){\n    ctr = 0;\n}\nmsg.payload = {\n    value: [spm],\n    'fc': 6,\n    'unitid': 1,\n    'address': 28,\n    'quantity': 1\n}\nnode.status({fill:\"yellow\",shape:\"dot\",text:ctr});\ncontext.set(\"ctr\",ctr,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 4440,
        "wires": [
            []
        ]
    },
    {
        "id": "2c02e2ef212817a8",
        "type": "function",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "RefVSDDinagrama",
        "func": "var At_Setpt_Spd = global.get(\"C2S.Drive_Status.At_Setpt_Spd\", \"memoryOnly\") || 0;//llegó a referencia el VSD\nmsg.payload = {\n    value: [At_Setpt_Spd],\n    'fc': 6,\n    'unitid': 1,\n    'address': 29,\n    'quantity': 1\n}\nnode.status({fill:\"yellow\",shape:\"dot\",text:At_Setpt_Spd});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 4440,
        "wires": [
            [
                "bba3aa277bcf1444"
            ]
        ]
    },
    {
        "id": "5770bf05578643c0",
        "type": "delay",
        "z": "7a89175c.90f6a8",
        "g": "936eab7d97be78af",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 850,
        "y": 4400,
        "wires": [
            [
                "2c02e2ef212817a8"
            ]
        ]
    },
    {
        "id": "8c883beecb073f29",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "RGB",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.RGB",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "03837bc80d795dbf"
            ]
        ]
    },
    {
        "id": "f00d56fe45dfd7e6",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "RGB",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.RGB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 3300,
        "wires": [
            [
                "c2e616ae555eda40"
            ]
        ]
    },
    {
        "id": "eed8fecdae2e657d",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "",
        "label": "Diámetro Polea Grande",
        "tooltip": "",
        "group": "02cbe3fdab13693b",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 3220,
        "wires": [
            [
                "1531a70dc9391c98"
            ]
        ]
    },
    {
        "id": "32bc047cbfe5209f",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "",
        "label": "Diámetro Polea Pequeña",
        "tooltip": "",
        "group": "02cbe3fdab13693b",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 3260,
        "wires": [
            [
                "f35627cd1cfa7f47"
            ]
        ]
    },
    {
        "id": "f35627cd1cfa7f47",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "PoleaPequena",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.PoleaPequena",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 3260,
        "wires": [
            [
                "c2e616ae555eda40"
            ]
        ]
    },
    {
        "id": "b9f0543b020f09e6",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "PoleaGrande",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.PoleaGrande",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 3220,
        "wires": [
            [
                "eed8fecdae2e657d"
            ]
        ]
    },
    {
        "id": "7c41ad0f41e86a32",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "PoleaPequena",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Motor_Control.Nameplate.PoleaPequena",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 3260,
        "wires": [
            [
                "32bc047cbfe5209f"
            ]
        ]
    },
    {
        "id": "1531a70dc9391c98",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "PoleaGrande",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Motor_Control.Nameplate.PoleaGrande",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 3220,
        "wires": [
            [
                "c2e616ae555eda40"
            ]
        ]
    },
    {
        "id": "03837bc80d795dbf",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "",
        "label": "RGB[Relación Gear]",
        "tooltip": "",
        "group": "02cbe3fdab13693b",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 3300,
        "wires": [
            [
                "f00d56fe45dfd7e6"
            ]
        ]
    },
    {
        "id": "744ca6c9d01302bb",
        "type": "link in",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 95,
        "y": 3260,
        "wires": [
            [
                "8c883beecb073f29",
                "b9f0543b020f09e6",
                "7c41ad0f41e86a32"
            ]
        ]
    },
    {
        "id": "14c39db2aa8e8711",
        "type": "ui_text",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "group": "02cbe3fdab13693b",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Relación Total",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1020,
        "y": 3260,
        "wires": []
    },
    {
        "id": "c2e616ae555eda40",
        "type": "function",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "relaciónTotal",
        "func": "var PoleaGrande = global.get(\"C2S.Motor_Control.Nameplate.PoleaGrande\")||0;\nvar RGB = global.get(\"C2S.Motor_Control.Nameplate.RGB\")||0;//relación del gear box\nvar PoleaPequena = global.get(\"C2S.Motor_Control.Nameplate.PoleaPequena\")||0;\nif((PoleaGrande != 0) && (RGB != 0) && (PoleaPequena != 0) ){\n    var totalRelacion = PoleaGrande/(PoleaPequena/RGB);\n    totalRelacion = parseFloat(totalRelacion.toFixed(1));\n    context.set(\"totalRelacion\",totalRelacion,\"memoryOnly\");\n    msg.payload = totalRelacion;\n\n    // guarde la variable global de relación\n    global.set(\"C2S.Motor_Control.Nameplate.totalRelacion\",totalRelacion);\n    node.status({fill:\"green\",shape:\"dot\",text:\"Configurado\"});\n    return msg;\n}else{\n    node.status({fill:\"red\",shape:\"dot\",text:\"NoConfigurado\"});\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3260,
        "wires": [
            [
                "14c39db2aa8e8711"
            ]
        ]
    },
    {
        "id": "0a8b8a1414acb20f",
        "type": "inject",
        "z": "43b51d90.0b47f4",
        "g": "b41ee12005a32e8e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 840,
        "y": 3220,
        "wires": [
            [
                "c2e616ae555eda40"
            ]
        ]
    },
    {
        "id": "c1e4f00f3ccb67bc",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "d689e3de.7d569",
        "name": "CajaReductora",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Configuración_VSD_Rampas\",\t                \"Configuración_VSD_Placa_de_motor\",\t                \"Configuración_VSD_Límites\",\t                \"Configuración_VSD_Rampa_prolongada\",\t                \"Configuración_VSD_Control_de_motor\",\t                \"Configuración_VSD_Voltios_Hertz\",\t                \"Configuración_VSD_Relación_de_Transformación\",\t                \"Configuración_VSD_Nav-tab\"],\t       \"show\":[ \"Configuración_VSD_CajaReductora\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 600,
        "wires": [
            [
                "6b0e4d29.b19b14"
            ]
        ]
    },
    {
        "id": "8f7c11af44102a99",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "MaxLimitSpm",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.MaxLimitSPM",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 500,
        "wires": [
            [
                "d1c71cd5d571e814"
            ]
        ]
    },
    {
        "id": "636c56ef9f5b9334",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "MinLimitSPM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C2S.Speed_Control.MinLimitSPM",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 540,
        "wires": [
            [
                "f9bdb1cc101cae19"
            ]
        ]
    },
    {
        "id": "d1c71cd5d571e814",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "SPM Máximo",
        "label": "SPM Máximo",
        "tooltip": "",
        "group": "53f5e611.7d5b48",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "topicType": "str",
        "x": 590,
        "y": 500,
        "wires": [
            [
                "68be1d94a3423ce3"
            ]
        ]
    },
    {
        "id": "f9bdb1cc101cae19",
        "type": "ui_text_input",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "SPM Mínimo",
        "label": "SPM Mínimo",
        "tooltip": "",
        "group": "53f5e611.7d5b48",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "",
        "topicType": "str",
        "x": 590,
        "y": 540,
        "wires": [
            [
                "5e73365c7e46ff54"
            ]
        ]
    },
    {
        "id": "68be1d94a3423ce3",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "MaxLimitSPM",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Speed_Control.MaxLimitSPM",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "5e73365c7e46ff54",
        "type": "change",
        "z": "43b51d90.0b47f4",
        "g": "6cdd72bc.8124cc",
        "name": "MinLimitSPM",
        "rules": [
            {
                "t": "set",
                "p": "C2S.Speed_Control.MinLimitSPM",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "96a0db69365db42c",
        "type": "ui_dropdown",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "NumeroSarta",
        "label": "# Tapper",
        "tooltip": "",
        "place": "Select option",
        "group": "c4af1abf6fb99202",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": "0",
                "type": "str"
            },
            {
                "label": "2",
                "value": "1",
                "type": "str"
            },
            {
                "label": "3",
                "value": "2",
                "type": "str"
            },
            {
                "label": "4",
                "value": "3",
                "type": "str"
            },
            {
                "label": "5",
                "value": "4",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "989d5cfdc435febf"
            ]
        ]
    },
    {
        "id": "0a9c1250941292a9",
        "type": "ui_text_input",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "",
        "label": "Varilla l [ft]",
        "tooltip": "",
        "group": "c4af1abf6fb99202",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 160,
        "wires": [
            [
                "44c74582fd34edd0"
            ]
        ]
    },
    {
        "id": "036736e96b3cf5d5",
        "type": "ui_text_input",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "",
        "label": "Diametro de varilla [in]",
        "tooltip": "",
        "group": "c4af1abf6fb99202",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 320,
        "y": 220,
        "wires": [
            [
                "9f334e9689c6521d"
            ]
        ]
    },
    {
        "id": "9502af6540a09397",
        "type": "ui_text_input",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "",
        "label": "Taper L [ft]",
        "tooltip": "",
        "group": "c4af1abf6fb99202",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 310,
        "y": 280,
        "wires": [
            [
                "7ad7df9f83927007"
            ]
        ]
    },
    {
        "id": "f06113857db7c713",
        "type": "ui_text_input",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "",
        "label": "Elasticidad [10^6 psi]",
        "tooltip": "",
        "group": "c4af1abf6fb99202",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 340,
        "wires": [
            [
                "8f3c14c5cc07112c"
            ]
        ]
    },
    {
        "id": "b5d17c2c285bed8f",
        "type": "ui_text_input",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "",
        "label": "Peso de varilla [Lb/ft]",
        "tooltip": "",
        "group": "c4af1abf6fb99202",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 400,
        "wires": [
            [
                "4d7ffaf1b7b94f9c"
            ]
        ]
    },
    {
        "id": "d6dfa4c09d44edeb",
        "type": "ui_text_input",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "",
        "label": "Peso del Taper [lb]",
        "tooltip": "",
        "group": "c4af1abf6fb99202",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 460,
        "wires": [
            [
                "af548f8ab182c8a4"
            ]
        ]
    },
    {
        "id": "7247099ec1945e1e",
        "type": "ui_text_input",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "",
        "label": "Densidad de varilla [Lb/ft3]",
        "tooltip": "",
        "group": "c4af1abf6fb99202",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 520,
        "wires": [
            [
                "71dce0659dc33da9"
            ]
        ]
    },
    {
        "id": "6cab9abe97ffc657",
        "type": "ui_text_input",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "",
        "label": "Resistencia de varilla [Lb]",
        "tooltip": "",
        "group": "c4af1abf6fb99202",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 340,
        "y": 580,
        "wires": [
            [
                "941c42e964a7526d"
            ]
        ]
    },
    {
        "id": "989d5cfdc435febf",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "set # Sarta",
        "func": "if (msg.payload==0){flow.set(\"sarta.Position\",0);}\ncontext.set(\"pos\",parseInt(msg.payload));\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nflow.set(\"sarta.Position\",parseInt(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 100,
        "wires": [
            [
                "4c43476f.e5a758"
            ]
        ]
    },
    {
        "id": "44c74582fd34edd0",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "setRodI",
        "func": "node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nflow.set(\"sarta.RodL\",msg.payload)||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "9f334e9689c6521d",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "set sarta posicion",
        "func": "node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nflow.set(\"sarta.RodDiameter\",msg.payload)||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "7ad7df9f83927007",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "set sarta posicion",
        "func": "node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nflow.set(\"sarta.TaperL\",msg.payload)||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "8f3c14c5cc07112c",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "set sarta posicion",
        "func": "node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nflow.set(\"sarta.E\",msg.payload)||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "4d7ffaf1b7b94f9c",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "set sarta posicion",
        "func": "node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nflow.set(\"sarta.RodWeight\",msg.payload)||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "af548f8ab182c8a4",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "set sarta posicion",
        "func": "node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nflow.set(\"sarta.TaperWeigth\",msg.payload)||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "71dce0659dc33da9",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "set sarta posicion",
        "func": "node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nflow.set(\"sarta.RodDensity\",msg.payload)||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "941c42e964a7526d",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "set sarta posicion",
        "func": "node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nflow.set(\"sarta.RodResistence\",msg.payload)||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "4c43476f.e5a758",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "Leer",
        "func": "var parametroSarta = global.get(\"Dinagrama.parametroSarta\")||[];\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\n// RodL\ntry { var RodL = MSG(parametroSarta[msg.payload].RodL);}\ncatch (error) { RodL = MSG(0);}\n\n// RodDiameter\ntry { var RodDiameter = MSG(parametroSarta[msg.payload].RodDiameter);}\ncatch (error) { RodDiameter = MSG(\"\");}\n\n// TaperL\ntry { var TaperL = MSG(parametroSarta[msg.payload].TaperL);}\ncatch (error) { TaperL = MSG(0);}\n\n// E\ntry { var E = MSG(parametroSarta[msg.payload].E);}\ncatch (error) { E = MSG(0);}\n\n// RodWeight\ntry { var RodWeight = MSG(parametroSarta[msg.payload].RodWeight);}\ncatch (error) { RodWeight = MSG(0);}\n\n// TaperWeigth\ntry { var TaperWeigth = MSG(parametroSarta[msg.payload].TaperWeigth);}\ncatch (error) { TaperWeigth = MSG(0);}\n\n// RodDensity\ntry { var RodDensity = MSG(parametroSarta[msg.payload].RodDensity);}\ncatch (error) { RodDensity = MSG(0);}\n\n// RodResistence\ntry { var RodResistence = MSG(parametroSarta[msg.payload].RodResistence);}\ncatch (error) { RodResistence = MSG(0);}\n\n\n// Ajuste de la información leida para cargar en los cajetines\n\n\nreturn [RodL, RodDiameter, TaperL, E, RodWeight, TaperWeigth, RodDensity, RodResistence];\n\nfunction MSG(message){\n    return {payload: message}\n}\n\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 300,
        "wires": [
            [
                "0a9c1250941292a9"
            ],
            [
                "036736e96b3cf5d5"
            ],
            [
                "9502af6540a09397"
            ],
            [
                "f06113857db7c713"
            ],
            [
                "b5d17c2c285bed8f"
            ],
            [
                "d6dfa4c09d44edeb"
            ],
            [
                "7247099ec1945e1e"
            ],
            [
                "6cab9abe97ffc657"
            ]
        ]
    },
    {
        "id": "0f3bd1b3c0dba716",
        "type": "ui_button",
        "z": "f08f78f1e5892037",
        "g": "1112a5e0c336769a",
        "name": "",
        "group": "c4af1abf6fb99202",
        "order": 13,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "x": 790,
        "y": 160,
        "wires": [
            [
                "bea780155e3ae62b"
            ]
        ]
    },
    {
        "id": "f06b7450276d4474",
        "type": "ui_button",
        "z": "f08f78f1e5892037",
        "g": "1112a5e0c336769a",
        "name": "",
        "group": "c4af1abf6fb99202",
        "order": 14,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "white",
        "bgcolor": "gray",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "x": 790,
        "y": 200,
        "wires": [
            [
                "30dda140ac7f22a6"
            ]
        ]
    },
    {
        "id": "30dda140ac7f22a6",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "1112a5e0c336769a",
        "name": "Borrar Sarta",
        "func": "var sarta           = flow.get(\"sarta\")||[]\nvar parametroSarta = flow.get(\"parametroSarta\")||[];\nvar pos = sarta.Position;//posicion de la sarta\n// delete parametroSarta[pos] //crea un undefine no se usa\n// eliminar el elemento tomado\nparametroSarta.splice(pos, 1);//la posicion la toma desde cero\nflow.set(\"parametroSarta\", parametroSarta);\n//actualizar la parametro sarta utilizado en el calculo del dinagrama\nglobal.set(\"Dinagrama.parametroSarta\", parametroSarta);\ncontext.set(\"pos\", pos,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 200,
        "wires": [
            [
                "11c07b25881dd37c",
                "715a788e41e6b141"
            ]
        ]
    },
    {
        "id": "91bcd26b8c353463",
        "type": "ui_table",
        "z": "f08f78f1e5892037",
        "g": "1112a5e0c336769a",
        "group": "c4af1abf6fb99202",
        "name": "",
        "order": 17,
        "width": 12,
        "height": 5,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1290,
        "y": 200,
        "wires": []
    },
    {
        "id": "a765a6d464c4d688",
        "type": "change",
        "z": "f08f78f1e5892037",
        "g": "1112a5e0c336769a",
        "name": "Sarta",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "parametroSarta",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 240,
        "wires": [
            [
                "91bcd26b8c353463"
            ]
        ]
    },
    {
        "id": "11c07b25881dd37c",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "1112a5e0c336769a",
        "name": "Clear",
        "func": "msg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 200,
        "wires": [
            [
                "91bcd26b8c353463"
            ]
        ]
    },
    {
        "id": "715a788e41e6b141",
        "type": "delay",
        "z": "f08f78f1e5892037",
        "g": "1112a5e0c336769a",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1120,
        "y": 240,
        "wires": [
            [
                "a765a6d464c4d688"
            ]
        ]
    },
    {
        "id": "094cc2932f6a6569",
        "type": "link in",
        "z": "f08f78f1e5892037",
        "g": "1112a5e0c336769a",
        "name": "Inicializar Sarta Parametros",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 795,
        "y": 240,
        "wires": [
            [
                "ff83bad55c73ba02"
            ]
        ]
    },
    {
        "id": "ff83bad55c73ba02",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "6c6732761a2613b5",
        "name": "Inicializar",
        "func": "var parametroSarta = global.get(\"Dinagrama.parametroSarta\")||0;\nif (parametroSarta == 0){\n    parametroSarta = [{ \"Position\":1,\n                        \"RodL\":30,\n                        \"RodDiameter\":0.875,\n                        \"TaperL\":1200,\n                        \"E\":30.7,\n                        \"RodWeight\":2.2,\n                        \"TaperWeigth\":2654,\n                        \"RodDensity\":532.5,\n                        \"RodResistence\":115000},\n                        { \"Position\":2,\n                        \"RodL\":30,\n                        \"RodDiameter\":0.75,\n                        \"TaperL\":3875,\n                        \"E\":30.7,\n                        \"RodWeight\":2.2,\n                        \"TaperWeigth\":2654,\n                        \"RodDensity\":490,\n                        \"RodResistence\":115000}]\n    flow.set(\"parametroSarta\", parametroSarta);\n    // guardar la variable global para utilizar en los dinagramas\n    global.set(\"Dinagrama.parametroSarta\", parametroSarta);\n}\ncontext.set(\"parametroSarta\", parametroSarta,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 240,
        "wires": [
            [
                "715a788e41e6b141"
            ]
        ]
    },
    {
        "id": "bea780155e3ae62b",
        "type": "function",
        "z": "f08f78f1e5892037",
        "g": "1112a5e0c336769a",
        "name": "Configurar Sarta",
        "func": "// Leer datos del contexto\nvar Data        = flow.get(\"sarta\")||[];\nvar sarta        = {...Data}//clonar lo que hay\nvar parametroSarta = global.get(\"Dinagrama.parametroSarta\")||[];\n\n// Acomodar la información\nvar Pos         = sarta.Position;\n// asignando la Position correcta\nsarta.Position = sarta.Position +1;\nData = sarta;\n// Pozo.SCP        = Pozo.Position+1;\n// delete Pozo.Position;\n\n// Clonando la información a Sarta\nparametroSarta[Pos] = { ...sarta}//clona\n\n// parametroSarta.splice(Pos, 1, Data);\n// variables de contexto\ncontext.set(\"Data\", Data,\"memoryOnly\");\n\n// guardar la variable global para utilizar en los dinagramas\nglobal.set(\"Dinagrama.parametroSarta\", parametroSarta);\n\n// Retornar\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n// var parametroSarta = global.get(\"Dinagrama.parametroSarta\")||[null];\n// if (parametroSarta[0] == null ){\n//     for(var i=0; i<1; i+=1){\n//         parametroSarta[i] = {\n//             Posicion: i+1,\n//             RodL: 0,\n//             RodDiameter: 0,\n//             TaperL: 0,\n//             E: 0,\n//             RodWeight: 0,\n//             TapperWeigth: 0,\n//             RodDensity: 0,\n//             RodResistence: 0\n//         }\n//     }\n//     global.set(\"Dinagrama.parametroSarta\", parametroSarta);\n// }\n",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 160,
        "wires": [
            [
                "11c07b25881dd37c",
                "715a788e41e6b141"
            ]
        ]
    },
    {
        "id": "e25446d909349bd1",
        "type": "inject",
        "z": "f08f78f1e5892037",
        "g": "1112a5e0c336769a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 830,
        "y": 280,
        "wires": [
            [
                "ff83bad55c73ba02"
            ]
        ]
    },
    {
        "id": "7f58bafb234d04c9",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "56a92b2a688064b3",
        "group": "d063f13f9026fee1",
        "name": "Menu config",
        "order": 1,
        "width": 12,
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-Geometria-tab\" data-toggle=\"tab\" href=\"#nav-Geometria\" role=\"tab\"\n                aria-controls=\"nav-Geometria\" aria-selected=\"false\" ng-click=\"send({payload:Geometria()})\">API\n                Geometría de Bombeo</a>\n            <a class=\"nav-item nav-link \" id=\"nav-Sarta-tab\" data-toggle=\"tab\"\n                href=\"#nav-Sarta\" role=\"tab\" aria-controls=\"nav-Sarta\" aria-selected=\"true\"\n                ng-click=\"send({payload:Sarta()})\">Sarta</a>\n            <a class=\"nav-item nav-link\" id=\"nav-Instalacion-tab\" data-toggle=\"tab\" href=\"#nav-Instalacion\"\n                role=\"tab\" aria-controls=\"nav-Instalacion\" aria-selected=\"false\"\n                ng-click=\"send({payload:Instalacion()})\">Datos de Instalación</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Sarta = function() { return \"sartas\"; };\n        this.scope.Geometria = function() { return \"geometria\"; };\n        this.scope.Instalacion = function() { return \"instalacion\"; };\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 170,
        "y": 2300,
        "wires": [
            [
                "219b52896a3bc0c3"
            ]
        ]
    },
    {
        "id": "219b52896a3bc0c3",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "56a92b2a688064b3",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sartas",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "geometria",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "instalacion",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 2300,
        "wires": [
            [
                "571b4cb30ff6bd65"
            ],
            [
                "93908b95eb15daba"
            ],
            [
                "dc10ee8417e2d926"
            ]
        ]
    },
    {
        "id": "7b495ef4bbce99f7",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "56a92b2a688064b3",
        "name": "Menú Entradas/Salidas SWCPRO",
        "links": [
            "8a17d991.081178",
            "805762db.d27b7"
        ],
        "x": 615,
        "y": 2300,
        "wires": []
    },
    {
        "id": "571b4cb30ff6bd65",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "56a92b2a688064b3",
        "name": "sartas",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Settings_instala\",\t                \"Settings_geometria\"],\t       \"show\":[ \"Settings_Menu\",\t                \"Settings_ParametrosSarta\",\t                \"Settings_logos\",\t                \"Settings_Status_Bar\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 2260,
        "wires": [
            [
                "7b495ef4bbce99f7"
            ]
        ]
    },
    {
        "id": "93908b95eb15daba",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "56a92b2a688064b3",
        "name": "geometria",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Settings_instala\",\t                \"Settings_ParametrosSarta\"],\t       \"show\":[ \"Settings_Menu\",\t                \"Settings_geometria\",\t                \"Settings_logos\",\t                \"Settings_Status_Bar\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 2300,
        "wires": [
            [
                "7b495ef4bbce99f7"
            ]
        ]
    },
    {
        "id": "dc10ee8417e2d926",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "56a92b2a688064b3",
        "name": "instala",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Settings_geometria\",\t                \"Settings_ParametrosSarta\"],\t       \"show\":[ \"Settings_Menu\",\t                \"Settings_instala\",\t                \"Settings_logos\",\t                \"Settings_Status_Bar\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "7b495ef4bbce99f7"
            ]
        ]
    },
    {
        "id": "c2ab1be8f01b7d58",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "56a92b2a688064b3",
        "name": "Settings",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Settings",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 2240,
        "wires": [
            [
                "93908b95eb15daba"
            ]
        ]
    },
    {
        "id": "610f87e6c3ac9ed0",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "56a92b2a688064b3",
        "name": "Menú Entradas/Salidas SWCPRO",
        "links": [
            "97407954.a004c8",
            "4372d5a0.d338dc"
        ],
        "x": 215,
        "y": 2240,
        "wires": [
            [
                "c2ab1be8f01b7d58"
            ]
        ]
    },
    {
        "id": "32808ce842cb8f72",
        "type": "ui_template",
        "z": "2e27dea6.c4c362",
        "g": "69cbede8f851191a",
        "group": "91918b5f0ec9ab0d",
        "name": "Menu config",
        "order": 1,
        "width": 12,
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-Downhole-tab\" data-toggle=\"tab\" href=\"#nav-Downhole\" role=\"tab\"\n                aria-controls=\"nav-Downhole\" aria-selected=\"false\" ng-click=\"send({payload:Downhole()})\">Downhole</a>\n            <a class=\"nav-item nav-link\" id=\"nav-Surface-tab\" data-toggle=\"tab\"\n                href=\"#nav-Surface\" role=\"tab\" aria-controls=\"nav-Surface\" aria-selected=\"true\"\n                ng-click=\"send({payload:Surface()})\">Surface</a>\n            <a class=\"nav-item nav-link\" id=\"nav-DHSSensorLess-tab\" data-toggle=\"tab\" href=\"#nav-DHSSensorLess\"\n                role=\"tab\" aria-controls=\"nav-DHSSensorLess\" aria-selected=\"false\"\n                ng-click=\"send({payload:DHSSensorLess()})\">DHS SensorLess</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Surface = function() { return \"Surface\"; };\n        this.scope.Downhole = function() { return \"Downhole\"; };\n        this.scope.DHSSensorLess = function() { return \"DHSSensorLess\"; };\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 170,
        "y": 2500,
        "wires": [
            [
                "f258f142685365f9"
            ]
        ]
    },
    {
        "id": "f258f142685365f9",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "69cbede8f851191a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Downhole",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Surface",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DHSSensorLess",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 2500,
        "wires": [
            [
                "b3c56d84218b82e9"
            ],
            [
                "fe33e19e6f3ad930"
            ],
            [
                "97362283dcbb7395"
            ]
        ]
    },
    {
        "id": "10d0df396dc90c03",
        "type": "link out",
        "z": "2e27dea6.c4c362",
        "g": "69cbede8f851191a",
        "name": "Menú Entradas/Salidas SWCPRO",
        "links": [
            "8a17d991.081178",
            "805762db.d27b7"
        ],
        "x": 615,
        "y": 2500,
        "wires": []
    },
    {
        "id": "fe33e19e6f3ad930",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "69cbede8f851191a",
        "name": "Surface",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Downhole_SensorLess_Dynagram_Downhole\",\t                \"Downhole_SensorLess_Dynagram_DHSSensorLess\"],\t       \"show\":[ \"Downhole_SensorLess_Dynagram_Surface\",\t                \"Downhole_SensorLess_Dynagram_Status_Bar\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 2500,
        "wires": [
            [
                "10d0df396dc90c03"
            ]
        ]
    },
    {
        "id": "b3c56d84218b82e9",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "69cbede8f851191a",
        "name": "Downhole",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Downhole_SensorLess_Dynagram_Surface\",\t                \"Downhole_SensorLess_Dynagram_DHSSensorLess\"],\t       \"show\":[ \"Downhole_SensorLess_Dynagram_Downhole\",\t                \"Downhole_SensorLess_Dynagram_Status_Bar\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 2460,
        "wires": [
            [
                "10d0df396dc90c03"
            ]
        ]
    },
    {
        "id": "97362283dcbb7395",
        "type": "change",
        "z": "2e27dea6.c4c362",
        "g": "69cbede8f851191a",
        "name": "DHSSensorLess",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Downhole_SensorLess_Dynagram_Surface\",\t                \"Downhole_SensorLess_Dynagram_Downhole\"],\t       \"show\":[ \"Downhole_SensorLess_Dynagram_Status_Bar\",\t                \"Downhole_SensorLess_Dynagram_DHSSensorLess\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 2540,
        "wires": [
            [
                "10d0df396dc90c03"
            ]
        ]
    },
    {
        "id": "24cbb0c1657e1589",
        "type": "switch",
        "z": "2e27dea6.c4c362",
        "g": "69cbede8f851191a",
        "name": "DSL",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Downhole SensorLess Dynagram",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 2440,
        "wires": [
            [
                "b3c56d84218b82e9"
            ]
        ]
    },
    {
        "id": "a1c5e02a9d683eb4",
        "type": "link in",
        "z": "2e27dea6.c4c362",
        "g": "69cbede8f851191a",
        "name": "Menú Entradas/Salidas SWCPRO",
        "links": [
            "97407954.a004c8",
            "4372d5a0.d338dc"
        ],
        "x": 215,
        "y": 2440,
        "wires": [
            [
                "24cbb0c1657e1589"
            ]
        ]
    },
    {
        "id": "ec242348a51029a6",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "",
        "label": "Diametro del Casing [in]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "e695355b9e32b218"
            ]
        ]
    },
    {
        "id": "5f0bb9f1e0119991",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "",
        "label": "Diametro del tubing[in]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 460,
        "y": 200,
        "wires": [
            [
                "e2419e408c8a7668"
            ]
        ]
    },
    {
        "id": "8fa3259854a3cbcd",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "",
        "label": "Profundidad varilla[ft]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "str",
        "x": 460,
        "y": 260,
        "wires": [
            [
                "80e019ab8f8149e8"
            ]
        ]
    },
    {
        "id": "1078ae10a317774d",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "",
        "label": "Presión del Casing [psi]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 13,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 470,
        "y": 320,
        "wires": [
            [
                "f3108ce20db66c79"
            ]
        ]
    },
    {
        "id": "a2a4d12b5d11c700",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "",
        "label": "Presión de Tubing [psi]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 16,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 470,
        "y": 380,
        "wires": [
            [
                "adaae1b6a39a1d7e"
            ]
        ]
    },
    {
        "id": "3726e3fccd9462d5",
        "type": "ui_text",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "group": "bdb839607367176a",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "Datos de Instalación",
        "label": "",
        "format": "<font size=4px>Datos de Instalación ",
        "layout": "row-left",
        "x": 460,
        "y": 80,
        "wires": []
    },
    {
        "id": "d15c9873acaa7a5a",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "",
        "label": "Producción [bpd]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "str",
        "x": 1220,
        "y": 120,
        "wires": [
            [
                "76e92771251ba430"
            ]
        ]
    },
    {
        "id": "1a95f9772998f85b",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "",
        "label": "Diametro de bomba [in]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "str",
        "x": 1230,
        "y": 160,
        "wires": [
            [
                "3e15e467a40d88f7"
            ]
        ]
    },
    {
        "id": "e04df775f9112cfa",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "",
        "label": "Longitud de émbolo [in]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 12,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "str",
        "x": 1230,
        "y": 200,
        "wires": [
            [
                "951dd9076fa62aea"
            ]
        ]
    },
    {
        "id": "329b040ad0147b73",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "",
        "label": "API [°]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 23,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "a20e87743bb7a4fe"
            ]
        ]
    },
    {
        "id": "51b9fdba441d36b6",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "",
        "label": "Gravedad específica [gr/cm3]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "str",
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "dd4b874c564be096"
            ]
        ]
    },
    {
        "id": "d7d48cf3a4dde0e5",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "",
        "label": "Longitud de Stroke [in]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 20,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "str",
        "x": 1230,
        "y": 320,
        "wires": [
            [
                "9404675ff21528fd"
            ]
        ]
    },
    {
        "id": "4ce75a492476ae17",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "",
        "label": "Constante de Amortiguamiento [1/s]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 21,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "str",
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "3a3d15df3519e181"
            ]
        ]
    },
    {
        "id": "2789ad8eda712c18",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "",
        "label": "Nivel de fluido dinámico [ft]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 18,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "str",
        "x": 1240,
        "y": 280,
        "wires": [
            [
                "48399d05d546249b"
            ]
        ]
    },
    {
        "id": "e93fa5e49c25b892",
        "type": "ui_text",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "group": "bdb839607367176a",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "Datos de Producción",
        "label": "",
        "format": "<font size=4px>Datos de Producción",
        "layout": "row-left",
        "x": 1240,
        "y": 80,
        "wires": []
    },
    {
        "id": "36d47c1baf16eadc",
        "type": "ui_text",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "group": "bdb839607367176a",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "Datos de la Unidad de Bombeo",
        "label": "",
        "format": "<font size=4px>Datos unidad de Bombeo",
        "layout": "row-left",
        "x": 1250,
        "y": 520,
        "wires": []
    },
    {
        "id": "cde211deb28f6bed",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "",
        "label": "Máxima inclinación",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 1230,
        "y": 560,
        "wires": [
            [
                "48cb0fa85922cb7b"
            ]
        ]
    },
    {
        "id": "de3161fb18eb7d79",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "",
        "label": "Desplazamiento 0°",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 1230,
        "y": 600,
        "wires": [
            [
                "495dd699cb4052d8"
            ]
        ]
    },
    {
        "id": "1d725debadffb46d",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "",
        "label": "Min Inclinación",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 1220,
        "y": 640,
        "wires": [
            [
                "854ce32ea1b5afc8"
            ]
        ]
    },
    {
        "id": "5db66f5b60da77ea",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "",
        "label": "Max torque [Kin-Lb]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 14,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 1230,
        "y": 680,
        "wires": [
            [
                "1306ba5c4c7bcc52"
            ]
        ]
    },
    {
        "id": "fb7eab19ddad7e6e",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "",
        "label": "Balance de estructura[lbs]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 17,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 1250,
        "y": 720,
        "wires": [
            [
                "fa157a68217c39cd"
            ]
        ]
    },
    {
        "id": "9c9a324973206a61",
        "type": "ui_text_input",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "",
        "label": "Relación de Caja RGB[#]",
        "tooltip": "",
        "group": "bdb839607367176a",
        "order": 19,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 1250,
        "y": 760,
        "wires": [
            [
                "7ad17a6371ef812b"
            ]
        ]
    },
    {
        "id": "a8d022ed20b061f9",
        "type": "ui_button",
        "z": "6278f7e7f20ddc7d",
        "g": "a29dc858ae62d58f",
        "name": "Guardar",
        "group": "bdb839607367176a",
        "order": 26,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Guardar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": " Confirm configuration data?",
        "payloadType": "str",
        "topic": "topic",
        "x": 120,
        "y": 480,
        "wires": [
            [
                "91b2784f93f468b9"
            ]
        ]
    },
    {
        "id": "91b2784f93f468b9",
        "type": "ui_toast",
        "z": "6278f7e7f20ddc7d",
        "g": "a29dc858ae62d58f",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "Confirmar Configuración",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "f61acb3281458831"
            ]
        ]
    },
    {
        "id": "f61acb3281458831",
        "type": "switch",
        "z": "6278f7e7f20ddc7d",
        "g": "a29dc858ae62d58f",
        "name": "ValidarConfiguracion",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 160,
        "y": 560,
        "wires": [
            [
                "827ab83ae2c78ad2",
                "4ced36f0f13b7bb9",
                "d1f54575177f2e57",
                "8b747d190ebff0b2"
            ]
        ]
    },
    {
        "id": "e695355b9e32b218",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "DiametroCasing",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataInstalation.DiametroCasing",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e2419e408c8a7668",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "DiametroTubing",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataInstalation.DiametroTubing",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "80e019ab8f8149e8",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "ProfundidadVarilla",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataInstalation.ProfundidadVarilla",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f3108ce20db66c79",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "PresionCasing",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataInstalation.PresionCasing",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "adaae1b6a39a1d7e",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "PresionTubing",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataInstalation.PresionTubing",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "48cb0fa85922cb7b",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "InclinacionMaxima",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataUnidadBombeo.inclinacionMax",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "495dd699cb4052d8",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "desplazamiento0",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataUnidadBombeo.desplazamiento",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "854ce32ea1b5afc8",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "inclinacionMin",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataUnidadBombeo.inclinacionMin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "1306ba5c4c7bcc52",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "TorqueMin",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataUnidadBombeo.torqueMax",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "fa157a68217c39cd",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "balanceEstructura",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataUnidadBombeo.balanceEstructura",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "7ad17a6371ef812b",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "relacionCaja",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataUnidadBombeo.relacionCaja",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "76e92771251ba430",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "produccion",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataProduccion.produccion",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "3e15e467a40d88f7",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "diametroBomba",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataProduccion.diametroBomba",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "951dd9076fa62aea",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "longitudEmbolo",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataProduccion.longitudEmbolo",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "dd4b874c564be096",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "gravedadFluido",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataProduccion.gravedadFluido",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "48399d05d546249b",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "nivelLiquidoDinamico",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataProduccion.nivelLiquidoDinamico",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9404675ff21528fd",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "longitudStroke",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataProduccion.longitudStroke",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3a3d15df3519e181",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "constanteAmortiguamiento",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataProduccion.constanteAmortiguamiento",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "a20e87743bb7a4fe",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "api",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::DataProduccion.api",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "827ab83ae2c78ad2",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "a29dc858ae62d58f",
        "name": "DataInstalacion",
        "rules": [
            {
                "t": "set",
                "p": "DataInstalation",
                "pt": "global",
                "to": "#:(memoryOnly)::DataInstalation",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "4ced36f0f13b7bb9",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "a29dc858ae62d58f",
        "name": "DataProduccion",
        "rules": [
            {
                "t": "set",
                "p": "DataProduccion",
                "pt": "global",
                "to": "#:(memoryOnly)::DataProduccion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "d1f54575177f2e57",
        "type": "change",
        "z": "6278f7e7f20ddc7d",
        "g": "a29dc858ae62d58f",
        "name": "DataUnidadBombeo",
        "rules": [
            {
                "t": "set",
                "p": "DataUnidadBombeo",
                "pt": "global",
                "to": "#:(memoryOnly)::DataUnidadBombeo",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c967f958cd8bdfb7",
        "type": "link in",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "PantallaAdquisionInstalacion",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 155,
        "y": 100,
        "wires": [
            [
                "7272dab73cde0eab"
            ]
        ]
    },
    {
        "id": "05a3da5da05a6074",
        "type": "function",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "LeerDataInstalacion",
        "func": "var DataInstalation = global.get(\"DataInstalation\")||[];\ncontext.set(\"DataInstalation\", DataInstalation, \"memoryOnly\");\nif (DataInstalation != null){\n    node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\n    // DiametroCasing\n    try { var DiametroCasing = MSG(DataInstalation.DiametroCasing);}\n    catch (error) { DiametroCasing = MSG(0);}\n\n    // DiametroTubing\n    try { var DiametroTubing = MSG(DataInstalation.DiametroTubing);}\n    catch (error) { DiametroTubing = MSG(0);}\n\n    // ProfundidadVarilla\n    try { var ProfundidadVarilla = MSG(DataInstalation.ProfundidadVarilla);}\n    catch (error) { ProfundidadVarilla = MSG(0);}\n\n    // PresionCasing\n    try { var PresionCasing = MSG(DataInstalation.PresionCasing);}\n    catch (error) { PresionCasing = MSG(0);}\n\n    // PresionTubing\n    try { var PresionTubing = MSG(DataInstalation.PresionTubing);}\n    catch (error) { PresionTubing = MSG(0);}\n    // Ajustar información en los cajetines\n    return [DiametroCasing, DiametroTubing, ProfundidadVarilla, PresionCasing, PresionTubing];\n}\n\n\nfunction MSG(message){\n    return {payload: message}\n}\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "var DataInstalation = global.get(\"DataInstalation\") || null;\nif (DataInstalation == null){\n    DataInstalation = {\n    \"DiametroCasing\": 2.375,\n    \"DiametroTubing\": 5.5,\n    \"ProfundidadVarilla\": 5115,\n    \"PresionCasing\": 0,\n    \"PresionTubing\": 127\n    }\n    global.set(\"DataInstalation\", DataInstalation);\n}\n",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 220,
        "wires": [
            [
                "ec242348a51029a6"
            ],
            [
                "5f0bb9f1e0119991"
            ],
            [
                "8fa3259854a3cbcd"
            ],
            [
                "1078ae10a317774d"
            ],
            [
                "a2a4d12b5d11c700"
            ]
        ]
    },
    {
        "id": "79c8fd5ea0a7f8cd",
        "type": "ui_toast",
        "z": "6278f7e7f20ddc7d",
        "g": "a29dc858ae62d58f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Data",
        "name": "NotifyData",
        "x": 350,
        "y": 620,
        "wires": []
    },
    {
        "id": "8b747d190ebff0b2",
        "type": "function",
        "z": "6278f7e7f20ddc7d",
        "g": "a29dc858ae62d58f",
        "name": "msgConfirmarData",
        "func": "msg.payload = \"Guardando Configuración\";\nmsg.topic = \"Configuración Pozo\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 600,
        "wires": [
            [
                "79c8fd5ea0a7f8cd"
            ]
        ]
    },
    {
        "id": "0587dab757af8216",
        "type": "complete",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "ActualizarDataIntalacion",
        "scope": [
            "79c8fd5ea0a7f8cd"
        ],
        "uncaught": false,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "05a3da5da05a6074"
            ]
        ]
    },
    {
        "id": "f3be5ce759a4a80f",
        "type": "function",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "LeerDataProduccion",
        "func": "var DataProduccion = global.get(\"DataProduccion\")||null;\ncontext.set(\"DataProduccion\", DataProduccion, \"memoryOnly\");\nif (DataProduccion != null){\n    node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\n    // produccion\n    try { var produccion = MSG(DataProduccion.produccion);}\n    catch (error) { produccion = MSG(0);}\n\n    // diametroBomba\n    try { var diametroBomba = MSG(DataProduccion.diametroBomba);}\n    catch (error) { diametroBomba = MSG(0);}\n\n    // longitudEmbolo\n    try { var longitudEmbolo = MSG(DataProduccion.longitudEmbolo);}\n    catch (error) { longitudEmbolo = MSG(0);}\n\n    // gravedadFluido\n    try { var gravedadFluido = MSG(DataProduccion.gravedadFluido);}\n    catch (error) { gravedadFluido = MSG(0);}\n\n    // nivelLiquidoDinamico\n    try { var nivelLiquidoDinamico = MSG(DataProduccion.nivelLiquidoDinamico);}\n    catch (error) { nivelLiquidoDinamico = MSG(0);}\n\n    // longitudStroke\n    try { var longitudStroke = MSG(DataProduccion.longitudStroke);}\n    catch (error) { longitudStroke = MSG(0);}\n\n    try { var constanteAmortiguamiento = MSG(DataProduccion.constanteAmortiguamiento);}\n    catch (error) { constanteAmortiguamiento = MSG(0);}\n\n    try { var api = MSG(DataProduccion.api);}\n    catch (error) { api = MSG(0);}\n\n    // Ajustar información en los cajetines\n    return [produccion, diametroBomba, longitudEmbolo, gravedadFluido, nivelLiquidoDinamico, longitudStroke, constanteAmortiguamiento, api];\n}\n\n\nfunction MSG(message){\n    return {payload: message}\n}\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "var DataProduccion = global.get(\"DataProduccion\") || null;\nif (DataProduccion == null){\n    DataProduccion = { \n        \"produccion\":70,\n        \"diametroBomba\": 1.25,\n        \"longitudEmbolo\": 94,\n        \"gravedadFluido\": 1.1,\n        \"nivelLiquidoDinamico\": 1689.1,\n        \"longitudStroke\": 100,\n        \"constanteAmortiguamiento\": 0.2,\n        \"api\": 30 \n        }\n    global.set(\"DataProduccion\", DataProduccion);\n}\n",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 200,
        "wires": [
            [
                "d15c9873acaa7a5a"
            ],
            [
                "1a95f9772998f85b"
            ],
            [
                "e04df775f9112cfa"
            ],
            [
                "51b9fdba441d36b6"
            ],
            [
                "2789ad8eda712c18"
            ],
            [
                "d7d48cf3a4dde0e5"
            ],
            [
                "4ce75a492476ae17"
            ],
            [
                "329b040ad0147b73"
            ]
        ]
    },
    {
        "id": "bd2109e7b422682a",
        "type": "link in",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "PantallaAdquisionProduccion",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 915,
        "y": 80,
        "wires": [
            [
                "d9756d5c2fdbe14c"
            ]
        ]
    },
    {
        "id": "155305bb3c1378e6",
        "type": "function",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "LeerDataUnidadBombeo",
        "func": "var DataUnidadBombeo = global.get(\"DataUnidadBombeo\")||null;\ncontext.set(\"DataUnidadBombeo\", DataUnidadBombeo, \"memoryOnly\");\nif (DataUnidadBombeo != null){\n    node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\n    // inclinacionMax\n    try { var inclinacionMax = MSG(DataUnidadBombeo.inclinacionMax);}\n    catch (error) { inclinacionMax = MSG(0);}\n\n    // desplazamiento\n    try { var desplazamiento = MSG(DataUnidadBombeo.desplazamiento);}\n    catch (error) { desplazamiento = MSG(0);}\n\n    // inclinacionMin\n    try { var inclinacionMin = MSG(DataUnidadBombeo.inclinacionMin);}\n    catch (error) { inclinacionMin = MSG(0);}\n\n    // torqueMax\n    try { var torqueMax = MSG(DataUnidadBombeo.torqueMax);}\n    catch (error) { torqueMax = MSG(0);}\n\n    // balanceEstructura\n    try { var balanceEstructura = MSG(DataUnidadBombeo.balanceEstructura);}\n    catch (error) { balanceEstructura = MSG(0);}\n\n    // relacionCaja\n    try { var relacionCaja = MSG(DataUnidadBombeo.relacionCaja);}\n    catch (error) { relacionCaja = MSG(0);}\n\n    // Ajustar información en los cajetines\n    return [inclinacionMax, desplazamiento, inclinacionMin, torqueMax, balanceEstructura, relacionCaja];\n}\n\n\nfunction MSG(message){\n    return {payload: message}\n}\n",
        "outputs": 6,
        "noerr": 0,
        "initialize": "var DataUnidadBombeo = global.get(\"DataUnidadBombeo\") || null;\nif (DataUnidadBombeo == null){\n    DataUnidadBombeo = { \n        \"inclinacionMax\":100,\n        \"desplazamiento\":100,\n        \"inclinacionMin\":0,\n        \"torqueMax\":115,\n        \"balanceEstructura\":10,\n        \"relacionCaja\":1\n        }\n    global.set(\"DataUnidadBombeo\", DataUnidadBombeo);\n}\n",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 640,
        "wires": [
            [
                "cde211deb28f6bed"
            ],
            [
                "de3161fb18eb7d79"
            ],
            [
                "1d725debadffb46d"
            ],
            [
                "5db66f5b60da77ea"
            ],
            [
                "fb7eab19ddad7e6e"
            ],
            [
                "9c9a324973206a61"
            ]
        ]
    },
    {
        "id": "5ed97706ae066277",
        "type": "link in",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "PantallaAdquisionDataBombeo",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 835,
        "y": 540,
        "wires": [
            [
                "c48671c015ff393d"
            ]
        ]
    },
    {
        "id": "7272dab73cde0eab",
        "type": "switch",
        "z": "6278f7e7f20ddc7d",
        "g": "cae36d29c5f8f5f1",
        "name": "Settings",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Settings",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "05a3da5da05a6074"
            ]
        ]
    },
    {
        "id": "d9756d5c2fdbe14c",
        "type": "switch",
        "z": "6278f7e7f20ddc7d",
        "g": "9bddfef0b0857da0",
        "name": "Settings",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Settings",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 960,
        "y": 120,
        "wires": [
            [
                "f3be5ce759a4a80f"
            ]
        ]
    },
    {
        "id": "c48671c015ff393d",
        "type": "switch",
        "z": "6278f7e7f20ddc7d",
        "g": "93b8284ca58599b2",
        "name": "Settings",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Settings",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 940,
        "y": 540,
        "wires": [
            [
                "155305bb3c1378e6"
            ]
        ]
    },
    {
        "id": "b4539185fb0ed29c",
        "type": "ui_table",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "name": "",
        "order": 23,
        "width": 12,
        "height": 3,
        "columns": [
            {
                "field": "brand",
                "title": "Manu",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "code",
                "title": "Clase",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Tipo",
                "title": "Tipo",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "A",
                "title": "A",
                "width": "7.57%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "C",
                "title": "C",
                "width": "7.57%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "I",
                "title": "I",
                "width": "7.57%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "P",
                "title": "P",
                "width": "7.57%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "H",
                "title": "H",
                "width": "7.57%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "G",
                "title": "G",
                "width": "7.57%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "R",
                "title": "R",
                "width": "7.57%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 990,
        "y": 140,
        "wires": [
            [
                "a6a22dd37b39aff2"
            ]
        ]
    },
    {
        "id": "6beb986644fd85c9",
        "type": "ui_button",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "",
        "group": "e5360c10debc8116",
        "order": 16,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Guardar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Confirm geometry",
        "payloadType": "str",
        "topic": "topic",
        "x": 560,
        "y": 240,
        "wires": [
            [
                "7e0d4a9b48d34e79"
            ]
        ]
    },
    {
        "id": "d0000719b53a7a2e",
        "type": "link in",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "InitGeometryDefault",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 175,
        "y": 60,
        "wires": [
            [
                "da09bd4c407c4879"
            ]
        ]
    },
    {
        "id": "dc9dec37ee85de21",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "A",
        "format": "{{msg.payload}}[in]",
        "layout": "row-spread",
        "x": 410,
        "y": 180,
        "wires": []
    },
    {
        "id": "a1c831b7e90e22ff",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "C",
        "format": "{{msg.payload}}[in]",
        "layout": "row-spread",
        "x": 400,
        "y": 220,
        "wires": []
    },
    {
        "id": "e921a2fdc3c59c6c",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "I",
        "format": "{{msg.payload}}[in]",
        "layout": "row-spread",
        "x": 400,
        "y": 260,
        "wires": []
    },
    {
        "id": "39c025cfd924d890",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "R",
        "format": "{{msg.payload}}[in]",
        "layout": "row-spread",
        "x": 400,
        "y": 300,
        "wires": []
    },
    {
        "id": "feb2500f598af26b",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 13,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "P",
        "format": "{{msg.payload}}[in]",
        "layout": "row-spread",
        "x": 400,
        "y": 340,
        "wires": []
    },
    {
        "id": "0867564e255cf141",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "G",
        "format": "{{msg.payload}}[in]",
        "layout": "row-spread",
        "x": 400,
        "y": 380,
        "wires": []
    },
    {
        "id": "8459b3906d74937a",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "H",
        "format": "{{msg.payload}}[in]",
        "layout": "row-spread",
        "x": 400,
        "y": 420,
        "wires": []
    },
    {
        "id": "bcbc178529974542",
        "type": "file in",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "GeometriaSRPExcel",
        "filename": "/home/bcpgrp/node_modules/SocketRodPoint/GeometriaSRP.csv",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": true,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "86fc24861fc10aec"
            ]
        ]
    },
    {
        "id": "86fc24861fc10aec",
        "type": "function",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "Tipos SRP geometria",
        "func": "var geometria = flow.get(\"geometria\", \"memoryOnly\") || [];\nvar add = msg.payload.split(\",\");\nadd.forEach(toFloat);\nfunction toFloat(element, index, array) {\n    array[index] = (element);\n}\n\nvar data = {\n    \"brand\": add[0],\n    \"code\": add[1],\n    \"A\": add[2],\n    \"C\": add[3],\n    \"I\": add[4],\n    \"P\": add[5],\n    \"H\": add[6],\n    \"G\": add[7],\n    \"R\": add[8],\n    \"Tipo\": add[9]\n};\ngeometria.push(data);\nflow.set(\"geometria\", geometria, \"memoryOnly\");\ncontext.set(\"geometria\", geometria, \"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "da09bd4c407c4879",
        "type": "change",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "Delete",
        "rules": [
            {
                "t": "delete",
                "p": "#:(memoryOnly)::geometria",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "bcbc178529974542"
            ]
        ]
    },
    {
        "id": "1ac77a51ce28dc09",
        "type": "complete",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "CompletoSRPExcel",
        "scope": [
            "bcbc178529974542"
        ],
        "uncaught": false,
        "x": 430,
        "y": 100,
        "wires": [
            [
                "ae6d79c692edb1b3"
            ]
        ]
    },
    {
        "id": "ae6d79c692edb1b3",
        "type": "function",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "borrar bit final",
        "func": "var geometria = flow.get(\"geometria\",\"memoryOnly\")||null;\ngeometria.pop();\nflow.set(\"geometria\", geometria,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c76052ebdaa1c89f",
        "type": "change",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "Geometria",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::geometria",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 140,
        "wires": [
            [
                "b4539185fb0ed29c"
            ]
        ]
    },
    {
        "id": "a6eada0644843ecf",
        "type": "complete",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "borrarBitFinal",
        "scope": [
            "ae6d79c692edb1b3"
        ],
        "uncaught": false,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "c76052ebdaa1c89f"
            ]
        ]
    },
    {
        "id": "5ad2031a8a072ecf",
        "type": "function",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "SetGeometria",
        "func": "var tablaGeometria = flow.get(\"tablaGeometria\",\"memoryOnly\");\nvar data = {... tablaGeometria};//Clonar la info para que no se transcriba al otro lado\n\nif(tablaGeometria != null){\n    msg.payload = \"Configured Geometry\";\n    global.set(\"GeometriaSucket\", data);\n} else {\n    msg.payload = \"Geometry NOT Configured, select any Option\";\n}\n\n// variables de contexto\ncontext.set(\"tablaGeometria\", tablaGeometria,\"memoryOnly\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 360,
        "wires": [
            [
                "302111413eaa1c5e"
            ]
        ]
    },
    {
        "id": "4ea4752526705df9",
        "type": "switch",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "ValidarGeometriaPopUp",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 320,
        "wires": [
            [
                "5ad2031a8a072ecf"
            ],
            []
        ]
    },
    {
        "id": "302111413eaa1c5e",
        "type": "ui_toast",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Geometry",
        "name": "NotifyGeometria",
        "x": 580,
        "y": 400,
        "wires": []
    },
    {
        "id": "7e0d4a9b48d34e79",
        "type": "ui_toast",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "Confirmar Geometría",
        "x": 600,
        "y": 280,
        "wires": [
            [
                "4ea4752526705df9"
            ]
        ]
    },
    {
        "id": "79f86b9972bfcd80",
        "type": "function",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "LeerGeometria",
        "func": "var GeometriaSucket = global.get(\"GeometriaSucket\")||[];\nvar tablaGeometria = flow.get(\"tablaGeometria\",\"memoryOnly\")||0;\ncontext.set(\"GeometriaSucket\", GeometriaSucket, \"memoryOnly\");\ncontext.set(\"tablaGeometria\", tablaGeometria, \"memoryOnly\");\n\n// valida si tiene algo en memoria\n\nif (tablaGeometria != 0) {\n\n    // A\n    try { var A = MSG(tablaGeometria.A); }\n    catch (error) { A = MSG(0); }\n\n    // C\n    try { var C = MSG(tablaGeometria.C); }\n    catch (error) { C = MSG(\"\"); }\n\n    // I\n    try { var I = MSG(tablaGeometria.I); }\n    catch (error) { I = MSG(0); }\n\n    // R\n    try { var R = MSG(tablaGeometria.R); }\n    catch (error) { R = MSG(0); }\n\n    // P\n    try { var P = MSG(tablaGeometria.P); }\n    catch (error) { P = MSG(0); }\n\n    // G\n    try { var G = MSG(tablaGeometria.G); }\n    catch (error) { G = MSG(0); }\n\n    // H\n    try { var H = MSG(tablaGeometria.H); }\n    catch (error) { H = MSG(0); }\n\n    // codigo\n    try { var codigo = MSG(tablaGeometria.code); }\n    catch (error) { codigo = MSG(0); }\n    // ID\n    try { var id = MSG(tablaGeometria.brand); }\n    catch (error) { id = MSG(0); }\n    //Tipo\n    try { var Tipo = MSG(tablaGeometria.Tipo); }\n    catch (error) { Tipo = MSG(0); }\n\n\n    // AjustR dR la información lRida para cargar Rn los cajRtinRs\n    return [A, C, I, R, P, G, H, codigo, id,Tipo];\n}\n\n\n\nif (GeometriaSucket != null){\n    node.status({fill:\"green\",shape:\"dot\",text:msg.payload});\n    // A\n    try { var A = MSG(GeometriaSucket.A);}\n    catch (error) { A = MSG(0);}\n\n    // C\n    try { var C = MSG(GeometriaSucket.C);}\n    catch (error) { C = MSG(\"\");}\n\n    // I\n    try { var I = MSG(GeometriaSucket.I);}\n    catch (error) { I = MSG(0);}\n\n    // R\n    try { var R = MSG(GeometriaSucket.R);}\n    catch (error) { R = MSG(0);}\n\n    // P\n    try { var P = MSG(GeometriaSucket.P);}\n    catch (error) { P = MSG(0);}\n\n    // G\n    try { var G = MSG(GeometriaSucket.G);}\n    catch (error) { G = MSG(0);}\n\n    // H\n    try { var H = MSG(GeometriaSucket.H);}\n    catch (error) { H = MSG(0);}\n\n    // codigo\n    try { var codigo = MSG(GeometriaSucket.codigo);}\n    catch (error) { codigo = MSG(0);}\n    // ID\n    try { var id = MSG(GeometriaSucket.Marca);}\n    catch (error) { id = MSG(0);}\n    //Tipo\n    try { var Tipo = MSG(GeometriaSucket.Tipo); }\n    catch (error) { Tipo = MSG(0); }\n\n    // AjustR dR la información lRida para cargar Rn los cajRtinRs\n    return [A, C, I, R, P, G, H, codigo,id,Tipo];\n}\n\nfunction MSG(message){\n    return {payload: message}\n}\n",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 320,
        "wires": [
            [
                "dc9dec37ee85de21",
                "32ce26c0d0b04f77"
            ],
            [
                "a1c831b7e90e22ff"
            ],
            [
                "e921a2fdc3c59c6c"
            ],
            [
                "39c025cfd924d890"
            ],
            [
                "feb2500f598af26b"
            ],
            [
                "0867564e255cf141"
            ],
            [
                "8459b3906d74937a"
            ],
            [
                "343c34ac79b7a658"
            ],
            [
                "6b6f660a01296c98"
            ],
            [
                "72026d71504e7a74"
            ]
        ]
    },
    {
        "id": "343c34ac79b7a658",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 18,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Clase",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 390,
        "y": 460,
        "wires": []
    },
    {
        "id": "48fafa6b2605673b",
        "type": "link in",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "LeerGeometriaInicio",
        "links": [
            "5b1c19c1114ca8bc"
        ],
        "x": 75,
        "y": 320,
        "wires": [
            [
                "79f86b9972bfcd80"
            ]
        ]
    },
    {
        "id": "5cd1fb77c9bc162f",
        "type": "complete",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "setgeometria",
        "scope": [
            "5ad2031a8a072ecf",
            "a7f1ced49f661635"
        ],
        "uncaught": false,
        "x": 150,
        "y": 440,
        "wires": [
            [
                "79f86b9972bfcd80"
            ]
        ]
    },
    {
        "id": "a7f1ced49f661635",
        "type": "function",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "dataTablaGeometria",
        "func": "var entrada = msg.payload;\ncontext.set(\"entrada\",entrada,\"memoryOnly\");\nflow.set(\"tablaGeometria\", entrada,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 80,
        "wires": [
            [
                "35a420bf34c17eac"
            ]
        ]
    },
    {
        "id": "6b6f660a01296c98",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Manufactura",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 500,
        "wires": []
    },
    {
        "id": "e3fea7b19ee5bea0",
        "type": "switch",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "Settings",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Settings",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 260,
        "y": 120,
        "wires": [
            [
                "da09bd4c407c4879",
                "a9c77bf176fd0376",
                "51f41357dbdb98a3"
            ]
        ]
    },
    {
        "id": "9323de8b6d7ca929",
        "type": "link in",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "",
        "links": [
            "4372d5a0.d338dc"
        ],
        "x": 155,
        "y": 120,
        "wires": [
            [
                "e3fea7b19ee5bea0"
            ]
        ]
    },
    {
        "id": "305da8bc7276e8b4",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 22,
        "width": 12,
        "height": 1,
        "name": "infoLabelGeometria",
        "label": "<font size=4px>Seleccione la geometria en la tabla",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 890,
        "y": 300,
        "wires": []
    },
    {
        "id": "a9c77bf176fd0376",
        "type": "function",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "cambioGeometria",
        "func": "var type = global.get(\"SRP.Type\",\"memoryOnly\");\nvar geometria;\nif (type == \"Average\"){\n    geometria = { \"brand\": \"Lufkin\", \"code\": \"C 320-256-120\", \"A\": 155, \"C\": 111.07, \"I\": 111, \"P\": 232, \"H\": 42, \"G\": 96, \"R\": 132, \"id\": 1 };\n} else if (type == \"Gass Interference\"){\n    geometria = { \"brand\": \"Lufkin\", \"code\": \"M 640-365-168\", \"A\": 210, \"C\": 120.03, \"I\": 120, \"P\": 262, \"H\": 47, \"G\": 111, \"R\": 148, \"id\": 0 };\n} else if (type == \"Asphaltenes in Pump\"){\n    geometria = { \"brand\": \"Lufkin\", \"code\": \"M 640-365-168\", \"A\": 210, \"C\": 120.03, \"I\": 120, \"P\": 262, \"H\": 47, \"G\": 111, \"R\": 148, \"id\": 0 };\n}\nglobal.set(\"GeometriaSucket\",geometria);\ncontext.set(\"type\",type,\"memoryOnly\");\ncontext.set(\"geometria\", geometria,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "51f41357dbdb98a3",
        "type": "switch",
        "z": "b368eb771541cd7f",
        "name": "",
        "property": "#:(memoryOnly)::SRP.Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Average",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Gass Interference",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Asphaltenes in Pump",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 710,
        "y": 200,
        "wires": [
            [
                "56abbddc993e4f47"
            ],
            [
                "91e6df30159f39f8"
            ],
            [
                "91e6df30159f39f8"
            ],
            [
                "56abbddc993e4f47"
            ]
        ]
    },
    {
        "id": "56abbddc993e4f47",
        "type": "template",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "C320",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col\">\n                <center><img src=\"http://localhost:1880/swcpro-images/geometriaSucket.png\" style=\"width:55%;height = 100%\" ><center>\n            </div>\n        </div>\n    </div>\n\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera /\n        -webkit-user-select: none;\n        / Safari /\n        -khtml-user-select: none;\n        / Konqueror HTML /\n        -moz-user-select: none;\n        / Firefox /\n        -ms-user-select: none;\n        / Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 30px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 870,
        "y": 180,
        "wires": [
            [
                "6e17766beb28a8c1"
            ]
        ]
    },
    {
        "id": "91e6df30159f39f8",
        "type": "template",
        "z": "b368eb771541cd7f",
        "name": "MARKII",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col\">\n                <center><img src=\"http://localhost:1880/swcpro-images/geometriaSucket1.png\" style=\"width:50%;height = 100%\"><center>\n            </div>\n        </div>\n    </div>\n\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera /\n        -webkit-user-select: none;\n        / Safari /\n        -khtml-user-select: none;\n        / Konqueror HTML /\n        -moz-user-select: none;\n        / Firefox /\n        -ms-user-select: none;\n        / Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 880,
        "y": 220,
        "wires": [
            [
                "6e17766beb28a8c1"
            ]
        ]
    },
    {
        "id": "6e17766beb28a8c1",
        "type": "ui_template",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "name": "imagen Geometry",
        "order": 1,
        "width": 7,
        "height": 6,
        "format": "<div ng-bind-html=\"msg.payload|trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1070,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "35a420bf34c17eac",
        "type": "debug",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1490,
        "y": 80,
        "wires": []
    },
    {
        "id": "a6a22dd37b39aff2",
        "type": "switch",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "filtrar",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C 320-256-120",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Mark II 640-365-168",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1170,
        "y": 140,
        "wires": [
            [
                "56abbddc993e4f47",
                "a7f1ced49f661635"
            ],
            [
                "91e6df30159f39f8",
                "a7f1ced49f661635"
            ],
            [
                "a2a2df81154e9740"
            ]
        ]
    },
    {
        "id": "a2a2df81154e9740",
        "type": "template",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "NONE",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "",
        "output": "str",
        "x": 870,
        "y": 260,
        "wires": [
            [
                "6e17766beb28a8c1"
            ]
        ]
    },
    {
        "id": "72026d71504e7a74",
        "type": "ui_text",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "group": "e5360c10debc8116",
        "order": 20,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Tipo",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 390,
        "y": 540,
        "wires": []
    },
    {
        "id": "58fc26aba318c49c",
        "type": "inject",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 180,
        "wires": [
            [
                "bcbc178529974542"
            ]
        ]
    },
    {
        "id": "32ce26c0d0b04f77",
        "type": "link out",
        "z": "b368eb771541cd7f",
        "g": "67a422f5076a03ee",
        "name": "DesA",
        "links": [
            "457dbe1d9b47b2c8",
            "3344b61f4481f735"
        ],
        "x": 295,
        "y": 220,
        "wires": []
    },
    {
        "id": "843e250256d34d87",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "54bb46e073aa1e2e",
        "name": "",
        "func": "var tipoDinagrama = global.get(\"SRP.Type\", \"memoryOnly\") ||\"Average\";\nvar estado = (global.get(\"SRP.Status\", \"memoryOnly\") || \"Stopped\") == \"Active\" ? true : false;\nvar DynamicFluidLevel = (global.get(\"SRP.DynamicFluidLevel\", \"memoryOnly\") || 0)\nvar Submergence = (global.get(\"SRP.Submergence\", \"memoryOnly\") || 0)\nvar PumpFillPercent = (global.get(\"SRP.PumpFillPercent\", \"memoryOnly\") || 0)\nvar PumpDesplacement = (global.get(\"SRP.PumpDesplacement\", \"memoryOnly\") || 0)\nvar PIP = (global.get(\"SRP.PIP\", \"memoryOnly\") || 0)\nvar TVD = (global.get(\"SRP.HD_TVD\", \"memoryOnly\") || 0)\n\n\ncontext.set(\"tipoDinagrama\", tipoDinagrama);\nvar vector = [];\nif (tipoDinagrama == \"Gas Interference\" && estado == true) {\n    //  producción\n    vector = [26, 692.2, 4973];\n}\nelse if (tipoDinagrama == \"Gas Interference\" && estado == false) {\n    // pozo estatico \n    vector = [\"--\", \"--\", \"--\"];\n} else if (tipoDinagrama == \"Average\" && estado == true) {\n    //  producción\n    vector = [38, 411.9, 1984];\n\n} else if (tipoDinagrama == \"Average\" && estado == false) {\n    // pozo estatico\n    vector = [\"--\", \"--\", \"--\"];\n}\nelse if (tipoDinagrama == \"Asphaltenes in Pump\" && estado == true) {\n    //  producción\n    vector = [22, 550.9, 5207];\n} else if (tipoDinagrama == \"Asphaltenes in Pump\" && estado == false) {\n    // pozo estatico\n    vector = [\"--\", \"--\", \"--\"];\n} else {\n    vector = [\"--\", \"--\", \"--\"];\n}\nif (estado == true) {\n    var msg1 = { payload: intlRound(PumpFillPercent) };//% liquido\n    var msg2 = { payload: intlRound(PIP) };//pup instale Pressure\n    var msg3 = { payload: intlRound(TVD) };//Equivalent Liquid Columt HT (TVD)\n    var msg4 = { payload: intlRound(DynamicFluidLevel) };//Dynamic Fluid Level\n    var msg5 = { payload: intlRound(Submergence) };//Submergence\n} else {\n    msg1 = { payload: \"--\" };//% liquido\n    msg2 = { payload: \"--\" };//pup instale Pressure\n    msg3 = { payload: \"--\" };//Equivalent Liquid Columt HT (TVD)\n    msg4 = { payload: \"--\" };//Dynamic Fluid Level\n    msg5 = { payload: \"--\" };//Submergence\n}\n\nreturn [msg1, msg2, msg3, msg4, msg5];\n\n// funcionalidad de redondeo\nfunction intlRound(numero, decimales = 2, usarComa = false) {\n    var opciones = {\n        maximumFractionDigits: decimales,\n        useGrouping: false\n    };\n    usarComa = usarComa ? \"es\" : \"en\";\n    return parseFloat(Intl.NumberFormat(usarComa, opciones).format(numero));\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 240,
        "wires": [
            [
                "7ee866165d8eaa56"
            ],
            [
                "2ef2aff836428e70"
            ],
            [
                "f295c7967245792a"
            ],
            [
                "b6564175707f7414"
            ],
            [
                "28957741ff430c98"
            ]
        ]
    },
    {
        "id": "fe1a9bde13dab923",
        "type": "link in",
        "z": "6a1ef6a7aef873a7",
        "g": "854b667853465d2b",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 75,
        "y": 240,
        "wires": [
            [
                "57d96f9647eeba77"
            ]
        ]
    },
    {
        "id": "57d96f9647eeba77",
        "type": "switch",
        "z": "6a1ef6a7aef873a7",
        "g": "854b667853465d2b",
        "name": "Active?",
        "property": "#:(memoryOnly)::SRP.Status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Active",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 240,
        "wires": [
            [
                "832a31d3f59bf4df"
            ],
            [
                "381f2e27385db5e4"
            ]
        ]
    },
    {
        "id": "832a31d3f59bf4df",
        "type": "template",
        "z": "6a1ef6a7aef873a7",
        "g": "854b667853465d2b",
        "name": "DSH1",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col\">\n                <img src=\"http://localhost:1880/swcpro-images/DHS1.png\" style=\"width:40%;\">\n            </div>\n        </div>\n    </div>\n\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 300,
        "y": 200,
        "wires": [
            [
                "9ab20d05e2553884"
            ]
        ]
    },
    {
        "id": "381f2e27385db5e4",
        "type": "template",
        "z": "6a1ef6a7aef873a7",
        "g": "854b667853465d2b",
        "name": "DSH2",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col\">\n                <img src=\"http://localhost:1880/swcpro-images/DHS2.png\" style=\"width:40%;\">\n            </div>\n        </div>\n    </div>\n\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 300,
        "y": 260,
        "wires": [
            [
                "9ab20d05e2553884"
            ]
        ]
    },
    {
        "id": "9ab20d05e2553884",
        "type": "ui_template",
        "z": "6a1ef6a7aef873a7",
        "g": "854b667853465d2b",
        "group": "d5793763aabf18e4",
        "name": "Imagen",
        "order": 1,
        "width": 4,
        "height": 9,
        "format": "",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 430,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2ef2aff836428e70",
        "type": "ui_gauge",
        "z": "6a1ef6a7aef873a7",
        "g": "54bb46e073aa1e2e",
        "name": "",
        "group": "d5793763aabf18e4",
        "order": 6,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "PIP",
        "label": "psi",
        "format": "{{value}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 950,
        "y": 240,
        "wires": []
    },
    {
        "id": "7ee866165d8eaa56",
        "type": "ui_gauge",
        "z": "6a1ef6a7aef873a7",
        "g": "54bb46e073aa1e2e",
        "name": "",
        "group": "d5793763aabf18e4",
        "order": 4,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "Fillage",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00c3e6",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "x": 950,
        "y": 200,
        "wires": []
    },
    {
        "id": "b6564175707f7414",
        "type": "ui_gauge",
        "z": "6a1ef6a7aef873a7",
        "g": "54bb46e073aa1e2e",
        "name": "",
        "group": "d5793763aabf18e4",
        "order": 3,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "Dynamic Fluid Lv.",
        "label": "ft",
        "format": "{{value}}",
        "min": 0,
        "max": "6000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 990,
        "y": 320,
        "wires": []
    },
    {
        "id": "28957741ff430c98",
        "type": "ui_gauge",
        "z": "6a1ef6a7aef873a7",
        "g": "54bb46e073aa1e2e",
        "name": "",
        "group": "d5793763aabf18e4",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "Submergence",
        "label": "ft",
        "format": "{{value}}",
        "min": 0,
        "max": "1300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 980,
        "y": 360,
        "wires": []
    },
    {
        "id": "f295c7967245792a",
        "type": "ui_gauge",
        "z": "6a1ef6a7aef873a7",
        "g": "54bb46e073aa1e2e",
        "name": "",
        "group": "d5793763aabf18e4",
        "order": 2,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "HT (TVD)",
        "label": "ft",
        "format": "{{value}}",
        "min": 0,
        "max": "6000",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "x": 960,
        "y": 280,
        "wires": []
    },
    {
        "id": "5ef9f1c757b3c525",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "LecturaParametros",
        "func": "var numSartas = flow.get(\"numSarta\") || 0; //valor configurable\nvar maxNodos = 1000;//Valor Configurable valor maximo por Sarta\n// msg.payload = numSartas;//validacion del numero de sartas\nvar parDinagram = flow.get(\"parDinagram\")||0;\nvar Tramo = flow.get(\"Tramo\")||0;\nvar Grado_API_del_Fluido = flow.get(\"Grado_API_del_Fluido\");\n\nvar Sartas_AreaCabilla = new Array(10);\n\nfor (var i = 0; i <= numSartas - 1; i++) {\n\n    if (i == 0) {//Sarta 1\n        var nCab = parDinagram['Sarta' + (i + 1)].Longitud_Ca_Ft;\n        var D = parDinagram['Sarta' + (i + 1)].Diametro_Pulg;\n        var Longitud_Tr_Ft = parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n        var L = parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n        var E = parDinagram['Sarta' + (i + 1)].E;\n        var W = parDinagram['Sarta' + (i + 1)].Peso_Lb;\n        var W0 = parDinagram['Sarta' + (i + 1)].Peso_Inicial_Ca;\n        var P  = parDinagram['Sarta' + (i + 1)].Densidad;\n        var Hpr = parDinagram['Sarta' + (i + 1)].Resistencia;\n        var nNodos = L / nCab;\n        var Ac = (3.1416 * (D / 12.0) * (D / 12.0)) / 4.0;\n        var pa = 62.43;\n        var pc = (pa * 141.5) / (Grado_API_del_Fluido + 131.5);\n        var denf = 60.0;\n        var Acf1 = (3.1416 * (D / 12.0) * (D / 12.0)) / 4.0;\n        var Vc = L * Acf1;\n        var Wflo = Vc * (P - pc);\n\n        Tramo[i][1] = nCab;\n        Tramo[i][2] = D;\n        Tramo[i][3] = L;\n        Tramo[i][4] = E;\n        Tramo[i][5] = W;\n        Tramo[i][6] = W0;\n        Tramo[i][7] = P;\n        Tramo[i][8] = Hpr;\n        Tramo[i][9] = nNodos;\n        Tramo[i][10] = Ac;\n        Tramo[i][11] = W0;\n        Tramo[i][19] = Acf1;\n        Tramo[i][21] = Vc;\n        Tramo[i][22] = Wflo;\n        flow.set(\"Tramo\", Tramo);\n\n        // variables definidas para Sarta al final\n        var La = Tramo[i][3];\n        var Rha = Tramo[i][7];\n        var Ea = Tramo[i][4];\n        var Aca = Tramo[i][10];\n        var W0a = Tramo[i][6];\n        var Ma = Tramo[i][9];\n        var Tcab = Tramo[i][1];\n        Acf1 = Tramo[i][19];\n        Vc = Tramo[i][21];\n        Wflo = Tramo[i][22];\n        var DCprom = Tramo[i][2];\n    } else if (i == 1) {//Sarta2\n        var nCab = parDinagram['Sarta' + (i + 1)].Longitud_Ca_Ft;\n        var D = parDinagram['Sarta' + (i + 1)].Diametro_Pulg;\n        var Longitud_Tr_Ft = parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n        var L = parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n        var E = parDinagram['Sarta' + (i + 1)].E;\n        var W = parDinagram['Sarta' + (i + 1)].Peso_Lb;\n        var W0 = parDinagram['Sarta' + (i + 1)].Peso_Inicial_Ca;\n        var P = parDinagram['Sarta' + (i + 1)].Densidad;\n        var Hpr = parDinagram['Sarta' + (i + 1)].Resistencia;\n        var nNodos = L / nCab;\n        var Ac = (3.1416 * (D / 12.0) * (D / 12.0)) / 4.0;\n        var pa = 62.43;\n        var pc = (pa * 141.5) / (Grado_API_del_Fluido + 131.5);\n        var denf = 60.0;\n        var Acf1 = (3.1416 * (D / 12.0) * (D / 12.0)) / 4.0;\n        var Vc = L * Acf1;\n        var Wflo = Vc * (P - pc);\n\n        Tramo[i][1] = nCab;\n        Tramo[i][2] = D;\n        Tramo[i][3] = L;\n        Tramo[i][4] = E;\n        Tramo[i][5] = W;\n        Tramo[i][6] = W0;\n        Tramo[i][7] = P;\n        Tramo[i][8] = Hpr;\n        Tramo[i][9] = nNodos;\n        Tramo[i][10] = Ac;\n        Tramo[i][11] = W0;\n        Tramo[i][19] = Acf1;\n        Tramo[i][21] = Vc;\n        Tramo[i][22] = Wflo;\n        flow.set(\"Tramo\", Tramo);\n        La = Tramo[i][3] + Tramo[i - 1][3];\n        Rha = (Tramo[i][7] + Tramo[i - 1][7]) / 2.0;\n        Ea = (Tramo[i][4] + Tramo[i - 1][4]) / 2.0;\n        Aca = (Tramo[i][10] + Tramo[i - 1][10]) / 2.0;\n        W0a = Tramo[i][6] + Tramo[i - 1][6];\n        Ma = Tramo[i][9] + Tramo[i - 1][9];\n        Tcab = (Tramo[i][1] + Tramo[i - 1][1]) / 2.0;\n        Acf1 = Tramo[i][19] + Tramo[i][19];\n        Vc = Tramo[i][21] + Tramo[i - 1][21];\n        Wflo = Tramo[i][22] + Tramo[i - 1][22];\n        DCprom = (Tramo[i][2] + Tramo[i - 1][2]) / 2.0;\n    } else if (i == 2) {//Sarta3\n        var nCab = parDinagram['Sarta' + (i + 1)].Longitud_Ca_Ft;\n        var D = parDinagram['Sarta' + (i + 1)].Diametro_Pulg;\n        var Longitud_Tr_Ft = parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n        var L = parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n        var E = parDinagram['Sarta' + (i + 1)].E;\n        var W = parDinagram['Sarta' + (i + 1)].Peso_Lb;\n        var W0 = parDinagram['Sarta' + (i + 1)].Peso_Inicial_Ca;\n        var P = parDinagram['Sarta' + (i + 1)].Densidad;\n        var Hpr = parDinagram['Sarta' + (i + 1)].Resistencia;\n        var nNodos = L / nCab;\n\n        var Ac = (3.1416 * (D / 12.0) * (D / 12.0)) / 4.0;\n        var pa = 62.43;\n        var pc = (pa * 141.5) / (Grado_API_del_Fluido + 131.5);\n        var denf = 60.0;\n        var Acf1 = (3.1416 * (D / 12.0) * (D / 12.0)) / 4.0;\n        var Vc = L * Acf1;\n        var Wflo = Vc * (P - pc);\n\n        Tramo[i][1] = nCab;\n        Tramo[i][2] = D;\n        Tramo[i][3] = L;\n        Tramo[i][4] = E;\n        Tramo[i][5] = W;\n        Tramo[i][6] = W0;\n        Tramo[i][7] = P;\n        Tramo[i][8] = Hpr;\n        Tramo[i][9] = nNodos;\n        Tramo[i][10] = Ac;\n        Tramo[i][11] = W0;\n        Tramo[i][21] = Vc;\n        Tramo[i][22] = Wflo;\n        flow.set(\"Tramo\", Tramo);\n\n        La = Tramo[i][3] + Tramo[i - 1][3] + Tramo[i - 2][3];\n        Rha = (Tramo[i][7] + Tramo[i - 1][7] + Tramo[i - 2][7]) / 3.0;\n        Ea = (Tramo[i][4] + Tramo[i - 1][4] + Tramo[i - 2][4]) / 3.0;\n        Aca = (Tramo[i][10] + Tramo[i - 1][10] + Tramo[i - 2][10]) / 3.0;\n        W0a = Tramo[i][6] + Tramo[i - 1][6] + Tramo[i - 2][6];\n        Ma = Tramo[i][9] + Tramo[i - 1][9] + Tramo[i - 2][9];\n        Tcab = (Tramo[i][1] + Tramo[i - 1][1] + Tramo[i - 2][1]) / 3.0;\n        Acf1 = Tramo[i][19] + Tramo[i - 1][19] + Tramo[i - 2][19];\n        Vc = Tramo[i][21] + Tramo[i - 1][21] + Tramo[i - 2][21];\n        Wflo = Tramo[i][22] + Tramo[i - 1][22] + Tramo[i - 2][22];\n        DCprom = (Tramo[i][2] + Tramo[i - 1][2] + Tramo[i - 2][2]) / 3.0;\n\n\n    } else if (i == 3) {//Sarta 4 \n        // sarta4\n        var nCab = parDinagram['Sarta' + (i + 1)].Longitud_Ca_Ft;\n        var D = parDinagram['Sarta' + (i + 1)].Diametro_Pulg;\n        var Longitud_Tr_Ft = parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n        var L = parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n        var E = parDinagram['Sarta' + (i + 1)].E;\n        var W = parDinagram['Sarta' + (i + 1)].Peso_Lb;\n        var W0 = parDinagram['Sarta' + (i + 1)].Peso_Inicial_Ca;\n        var P = parDinagram['Sarta' + (i + 1)].Densidad;\n        var Hpr = parDinagram['Sarta' + (i + 1)].Resistencia;\n        var nNodos = L / nCab;\n\n        var Ac = (3.1416 * (D / 12.0) * (D / 12.0)) / 4.0;\n        var pa = 62.43;\n        var pc = (pa * 141.5) / (Grado_API_del_Fluido + 131.5);\n        var denf = 60.0;\n        var Acf1 = (3.1416 * (D / 12.0) * (D / 12.0)) / 4.0;\n        var Vc = L * Acf1;\n        var Wflo = Vc * (P - pc);\n\n        Tramo[i][1] = nCab;\n        Tramo[i][2] = D;\n        Tramo[i][3] = L;\n        Tramo[i][4] = E;\n        Tramo[i][5] = W;\n        Tramo[i][6] = W0;\n        Tramo[i][7] = P;\n        Tramo[i][8] = Hpr;\n        Tramo[i][9] = nNodos;\n        Tramo[i][10] = Ac;\n        Tramo[i][11] = W0;\n        Tramo[i][21] = Vc;\n        Tramo[i][22] = Wflo;\n        flow.set(\"Tramo\", Tramo);\n\n        La = Tramo[i][3] + Tramo[i - 1][3] + Tramo[i - 2][3] + Tramo[i - 3][3];\n        Rha = (Tramo[i][7] + Tramo[i - 1][7] + Tramo[i - 2][7] + Tramo[i - 3][7]) / 4.0;\n        Ea = (Tramo[i][4] + Tramo[i - 1][4] + Tramo[i - 2][4] + Tramo[i - 3][4]) / 4.0;\n        Aca = (Tramo[i][10] + Tramo[i - 1][10] + Tramo[i - 2][10] + Tramo[i - 3][10]) / 4.0;\n        W0a = Tramo[i][6] + Tramo[i - 1][6] + Tramo[i - 2][6] + Tramo[i - 3][6];\n        Ma = Tramo[i][9] + Tramo[i - 1][9] + Tramo[i - 2][9] + Tramo[i - 3][9];\n        Tcab = (Tramo[i][1] + Tramo[i - 1][1] + Tramo[i - 2][1] + Tramo[i - 3][1]) / 4.0;\n        Acf1 = Tramo[i][19] + Tramo[i - 1][19] + Tramo[i - 2][19] + Tramo[i - 3][19];\n        Vc = Tramo[i][21] + Tramo[i - 1][21] + Tramo[i - 2][21] + Tramo[i - 3][21];\n        Wflo = Tramo[i][22] + Tramo[i - 1][22] + Tramo[i - 2][22] + Tramo[i - 3][22];\n        DCprom = (Tramo[i][2] + Tramo[i - 1][2] + Tramo[i - 2][2] + Tramo[i - 3][2]) / 4.0;\n\n\n    } else if (i == 4) {//Sarta5\n        // sarta 5\n        var nCab = parDinagram['Sarta' + (i + 1)].Longitud_Ca_Ft;\n        var D = parDinagram['Sarta' + (i + 1)].Diametro_Pulg;\n        var Longitud_Tr_Ft = parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n        var L = parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n        var E = parDinagram['Sarta' + (i + 1)].E;\n        var W = parDinagram['Sarta' + (i + 1)].Peso_Lb;\n        var W0 = parDinagram['Sarta' + (i + 1)].Peso_Inicial_Ca;\n        var P = parDinagram['Sarta' + (i + 1)].Densidad;\n        var Hpr = parDinagram['Sarta' + (i + 1)].Resistencia;\n        var nNodos = L / nCab;\n\n        var Ac = (3.1416 * (D / 12.0) * (D / 12.0)) / 4.0;\n        var pa = 62.43;\n        var pc = (pa * 141.5) / (Grado_API_del_Fluido + 131.5);\n        var denf = 60.0;\n        var Acf1 = (3.1416 * (D / 12.0) * (D / 12.0)) / 4.0;\n        var Vc = L * Acf1;\n        var Wflo = Vc * (P - pc);\n\n        Tramo[i][1] = nCab;\n        Tramo[i][2] = D;\n        Tramo[i][3] = L;\n        Tramo[i][4] = E;\n        Tramo[i][5] = W;\n        Tramo[i][6] = W0;\n        Tramo[i][7] = P;\n        Tramo[i][8] = Hpr;\n        Tramo[i][9] = nNodos;\n        Tramo[i][10] = Ac;\n        Tramo[i][11] = W0;\n        Tramo[i][21] = Vc;\n        Tramo[i][22] = Wflo;\n        flow.set(\"Tramo\", Tramo);\n        La = Tramo[i][3] + Tramo[i - 1][3] + Tramo[i - 2][3] + Tramo[i - 3][3] + Tramo[i - 4][3];\n        Rha = (Tramo[i][7] + Tramo[i - 1][7] + Tramo[i - 2][7] + Tramo[i - 3][7] + Tramo[i - 4][7]) / 5.0;\n        Ea = (Tramo[i][4] + Tramo[i - 1][4] + Tramo[i - 2][4] + Tramo[i - 3][4] + Tramo[i - 4][4]) / 5.0;\n        Aca = (Tramo[i][10] + Tramo[i - 1][10] + Tramo[i - 2][10] + Tramo[i - 3][10] + Tramo[i - 4][10]) / 5.0;\n        W0a = Tramo[i][6] + Tramo[i - 1][6] + Tramo[i - 2][6] + Tramo[i - 3][6] + Tramo[i - 4][6];\n        Ma = Tramo[i][9] + Tramo[i - 1][9] + Tramo[i - 2][9] + Tramo[i - 3][9] + Tramo[i - 4][9];\n        Tcab = (Tramo[i][1] + Tramo[i - 1][1] + Tramo[i - 2][1] + Tramo[i - 3][1] + Tramo[i - 4][1]) / 5.0;\n        Acf1 = Tramo[i][19] + Tramo[i - 1][19] + Tramo[i - 2][19] + Tramo[i - 3][19] + Tramo[i - 4][19];\n        Vc = Tramo[i][21] + Tramo[i - 1][21] + Tramo[i - 2][21] + Tramo[i - 3][21] + Tramo[i - 4][21];\n        Wflo = Tramo[i][22] + Tramo[i - 1][22] + Tramo[i - 2][22] + Tramo[i - 3][22] + Tramo[i - 4][22];\n        DCprom = (Tramo[i][2] + Tramo[i - 1][2] + Tramo[i - 2][2] + Tramo[i - 3][2] + Tramo[i - 4][2]) / 5.0;\n    } else if (i == 5) {//Sarta6 No Configurada\n\n    } else if (i == 6) {//Sarta7 No Configurada\n\n    } else if (i == 7) {//Sarta8 No Configurada\n\n    } else if (i == 8) {//Sarta9 No Configurada\n\n    } else {\n        msg.payload = \"Hay mas de 9 sartas\"\n    }\n    Tramo[i][12] = La;\n    Tramo[i][13] = Rha;\n    Tramo[i][14] = Ea;\n    Tramo[i][15] = Aca;\n    Tramo[i][16] = W0a;\n    Tramo[i][17] = Tcab;\n    Tramo[i][18] = Ma; //(* TOTAL NUMERO DE NODOS *)\n    Tramo[i][20] = Acf1;\n    Tramo[i][23] = Wflo;\n    Sartas_AreaCabilla[i] = (3.1416 / 4.0) * Math.pow(Tramo[i][2], 2.0); //(* In2 *)\n    // guardar datos de flujo\n}\n// variables de flujo\nflow.set(\"DCprom\", DCprom);\nflow.set(\"Wflo\", Wflo);\nflow.set(\"Tramo\", Tramo);\nflow.set(\"Sartas_AreaCabilla\", Sartas_AreaCabilla);\nflow.set(\"nNodos\", nNodos);\nflow.set(\"nCab\", nCab);\n//guardar las variables de contexto\ncontext.set(\"Sartas_AreaCabilla\", Sartas_AreaCabilla, \"memoryOnly\");\ncontext.set(\"Tramo\", Tramo, \"memoryOnly\");\ncontext.set(\"DCprom\", DCprom, \"memoryOnly\");\ncontext.set(\"Wflo\", Wflo, \"memoryOnly\");\ncontext.set(\"Acf1\", Acf1, \"memoryOnly\");\ncontext.set(\"Ma\", Ma, \"memoryOnly\");\ncontext.set(\"Tcab\", Tcab, \"memoryOnly\");\ncontext.set(\"W0a\", W0a, \"memoryOnly\");\ncontext.set(\"Aca\", Aca, \"memoryOnly\");\ncontext.set(\"Ea\", Ea, \"memoryOnly\");\ncontext.set(\"Rha\", Rha, \"memoryOnly\");\ncontext.set(\"La\", La, \"memoryOnly\");\ncontext.set(\"nNodos\", nNodos, \"memoryOnly\");\ncontext.set(\"Hpr\", Hpr, \"memoryOnly\");\ncontext.set(\"nCab\", nCab, \"memoryOnly\");\ncontext.set(\"W0\", W0, \"memoryOnly\");\ncontext.set(\"Vc\", Vc, \"memoryOnly\");\ncontext.set(\"W\", W, \"memoryOnly\");\ncontext.set(\"E\", E, \"memoryOnly\");\ncontext.set(\"L\", L, \"memoryOnly\");\ncontext.set(\"D\", D, \"memoryOnly\");\ncontext.set(\"Ac\", Ac, \"memoryOnly\");\ncontext.set(\"pa\", pa, \"memoryOnly\");\ncontext.set(\"pc\", pc, \"memoryOnly\");\ncontext.set(\"denf\", denf, \"memoryOnly\");\ncontext.set(\"Tramo\", Tramo, \"memoryOnly\");\ncontext.set(\"P\", P, \"memoryOnly\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 500,
        "wires": [
            [
                "7a6ff18321a03c6d"
            ]
        ]
    },
    {
        "id": "78dececd724e88a8",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "Inicializar",
        "func": "// Inicializar\n\n// variable para guardar los dinagramas\nvar Tramo = createArray(11, 32);\n\nfor (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 30; j++) {\n        Tramo[i][j] = 0;\n    }\n}\n\nvar Goodman_Matriz = createArray(6, 6);\n// variable para guardar los parametros de los dinagramas\nvar parDinagram = {\n    Sarta1: new ParametroSarta(0, 0, 0, 0, 0, 0, 0, 0),\n    Sarta2: new ParametroSarta(0, 0, 0, 0, 0, 0, 0, 0),\n    Sarta3: new ParametroSarta(0, 0, 0, 0, 0, 0, 0, 0),\n    Sarta4: new ParametroSarta(0, 0, 0, 0, 0, 0, 0, 0),\n    Sarta5: new ParametroSarta(0, 0, 0, 0, 0, 0, 0, 0)\n};\n// inicializacion del objeto de parametros\nvar numSarta = 0;\nvar DiametroTubing = 0;\nvar Grado_API_del_Fluido = 0;\nvar Desp_CD = createArray(100);//Consultar el valor eje x\nvar Esfu_CD = createArray(100);//Consultar el valor eje y\nvar PresionCasing = 0;//Consultar el valor eje y\nvar gc = 32.2\n// variables de visualizacion\n\ncontext.set(\"parDinagram\", parDinagram, \"memoryOnly\");\ncontext.set(\"Tramo\", Tramo, \"memoryOnly\");\n\n\nflow.set(\"numSarta\", numSarta);\nflow.set(\"parDinagram\", parDinagram);\nflow.set(\"Tramo\", Tramo);\nflow.set(\"Goodman_Matriz\", Goodman_Matriz);\nflow.set(\"DiametroTubing\", DiametroTubing);\nflow.set(\"Desp_CD\", Desp_CD);\nflow.set(\"Esfu_CD\", Esfu_CD);\nflow.set(\"PresionCasing\", PresionCasing);\nflow.set(\"Grado_API_del_Fluido\", Grado_API_del_Fluido);\nflow.set(\"gc\", gc);\nreturn msg;\n// definir objeto de configuracion de parametros\nfunction ParametroSarta(Longitud_Ca_Ft, Diametro_Pulg, Longitud_Tr_Ft, E, Peso_Lb, Peso_Inicial_Ca, Densidad, Resistencia) {\n    this.Longitud_Ca_Ft = Longitud_Ca_Ft;\n    this.Diametro_Pulg = Diametro_Pulg;\n    this.Longitud_Tr_Ft = Longitud_Tr_Ft;\n    this.E = E * 1000000.0;//Elasticicidad\n    this.Peso_Lb = Peso_Lb;//W\n    this.Peso_Inicial_Ca = Peso_Inicial_Ca;//Wo\n    this.Densidad = Densidad;//P\n    this.Resistencia = Resistencia;\n}\n//funcion para crear matrices de nxn\nfunction createArray(length) {\n    var arr = new Array(length || 0),\n        i = length;\n\n    if (arguments.length > 1) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        while (i--) arr[length - 1 - i] = createArray.apply(this, args);\n    }\n\n    return arr;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "9380591e68aa6cfd",
        "type": "link in",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "InicializarDinagramas",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 115,
        "y": 580,
        "wires": [
            [
                "78dececd724e88a8"
            ]
        ]
    },
    {
        "id": "1c4e8fcfe6a3e2e8",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "SimulacionData",
        "func": "var numSarta;\n// propiedades de las sartas\nvar parDinagram;\n// variables que vienen desde la interfaz grafica para la configuración de Sartas\nvar parametroSarta = global.get(\"Dinagrama.parametroSarta\") || 0;\nvar Grado_API_del_Fluido = global.get(\"DataProduccion.api\")||30;\nvar x = Object.keys(parametroSarta)\nvar tamano = x.length;\nnumSarta = tamano;\nif(parametroSarta == 0){\n    // sarta no esta configurada\n    node.status({fill:\"red\",shape:\"dot\",text:\"SartaNoConfigurada\"});\n}else{\n    // sarta si esta configurada\n    node.status({fill:\"green\",shape:\"dot\",text:\"SartaConfigurada\"});\n}\n\n// asignando las variables desde la interfaz grafica\nswitch (numSarta) {\n    case 1:\n    // cuando es solo una sarta\n        parDinagram = {\n            Sarta1: new Propiedades(parametroSarta[0].RodL, parametroSarta[0].RodDiameter, parametroSarta[0].TaperL, parametroSarta[0].E, 0, 0, parametroSarta[0].RodDensity, parametroSarta[0].RodResistence),\n            Sarta2: new Propiedades(0, 0, 0, 0, 0, 0, 0, 0),\n            Sarta3: new Propiedades(0, 0, 0, 0, 0, 0, 0, 0),\n            Sarta4: new Propiedades(0, 0, 0, 0, 0, 0, 0, 0),\n            Sarta5: new Propiedades(0, 0, 0, 0, 0, 0, 0, 0)\n        };\n        break;\n    case 2:\n        //Cuando son solo dos sartas\n        parDinagram = {\n            Sarta1: new Propiedades(parametroSarta[0].RodL, parametroSarta[0].RodDiameter, parametroSarta[0].TaperL, parametroSarta[0].E, 0, 0, parametroSarta[0].RodDensity, parametroSarta[0].RodResistence),\n            Sarta2: new Propiedades(parametroSarta[1].RodL, parametroSarta[1].RodDiameter, parametroSarta[1].TaperL, parametroSarta[1].E, 0, 0, parametroSarta[1].RodDensity, parametroSarta[1].RodResistence),\n            Sarta3: new Propiedades(0, 0, 0, 0, 0, 0, 0, 0),\n            Sarta4: new Propiedades(0, 0, 0, 0, 0, 0, 0, 0),\n            Sarta5: new Propiedades(0, 0, 0, 0, 0, 0, 0, 0)\n        };\n        break;\n    case 3:\n        //Cuando son 3 sartas\n        parDinagram = {\n            Sarta1: new Propiedades(parametroSarta[0].RodL, parametroSarta[0].RodDiameter, parametroSarta[0].TaperL, parametroSarta[0].E, 0, 0, parametroSarta[0].RodDensity, parametroSarta[0].RodResistence),\n            Sarta2: new Propiedades(parametroSarta[1].RodL, parametroSarta[1].RodDiameter, parametroSarta[1].TaperL, parametroSarta[1].E, 0, 0, parametroSarta[1].RodDensity, parametroSarta[1].RodResistence),\n            Sarta3: new Propiedades(parametroSarta[2].RodL, parametroSarta[2].RodDiameter, parametroSarta[2].TaperL, parametroSarta[2].E, 0, 0, parametroSarta[2].RodDensity, parametroSarta[2].RodResistence),\n            Sarta4: new Propiedades(0, 0, 0, 0, 0, 0, 0, 0),\n            Sarta5: new Propiedades(0, 0, 0, 0, 0, 0, 0, 0)\n        };\n        break;\n    case 4:\n        //Cuando son 4 sartas\n        parDinagram = {\n            Sarta1: new Propiedades(parametroSarta[0].RodL, parametroSarta[0].RodDiameter, parametroSarta[0].TaperL, parametroSarta[0].E, 0, 0, parametroSarta[0].RodDensity, parametroSarta[0].RodResistence),\n            Sarta2: new Propiedades(parametroSarta[1].RodL, parametroSarta[1].RodDiameter, parametroSarta[1].TaperL, parametroSarta[1].E, 0, 0, parametroSarta[1].RodDensity, parametroSarta[1].RodResistence),\n            Sarta3: new Propiedades(parametroSarta[2].RodL, parametroSarta[2].RodDiameter, parametroSarta[2].TaperL, parametroSarta[2].E, 0, 0, parametroSarta[2].RodDensity, parametroSarta[2].RodResistence),\n            Sarta4: new Propiedades(parametroSarta[3].RodL, parametroSarta[3].RodDiameter, parametroSarta[3].TaperL, parametroSarta[3].E, 0, 0, parametroSarta[3].RodDensity, parametroSarta[3].RodResistence),\n            Sarta5: new Propiedades(0, 0, 0, 0, 0, 0, 0, 0)\n        };\n        break;\n    case 5:\n        // cuando son 5 sartas caso que normalmente no aplicable \n        parDinagram = {\n            Sarta1: new Propiedades(parametroSarta[0].RodL, parametroSarta[0].RodDiameter, parametroSarta[0].TaperL, parametroSarta[0].E, 0, 0, parametroSarta[0].RodDensity, parametroSarta[0].RodResistence),\n            Sarta2: new Propiedades(parametroSarta[1].RodL, parametroSarta[1].RodDiameter, parametroSarta[1].TaperL, parametroSarta[1].E, 0, 0, parametroSarta[1].RodDensity, parametroSarta[1].RodResistence),\n            Sarta3: new Propiedades(parametroSarta[2].RodL, parametroSarta[2].RodDiameter, parametroSarta[2].TaperL, parametroSarta[2].E, 0, 0, parametroSarta[2].RodDensity, parametroSarta[2].RodResistence),\n            Sarta4: new Propiedades(parametroSarta[3].RodL, parametroSarta[3].RodDiameter, parametroSarta[3].TaperL, parametroSarta[3].E, 0, 0, parametroSarta[3].RodDensity, parametroSarta[3].RodResistence),\n            Sarta5: new Propiedades(parametroSarta[4].RodL, parametroSarta[4].RodDiameter, parametroSarta[4].TaperL, parametroSarta[4].E, 0, 0, parametroSarta[4].RodDensity, parametroSarta[4].RodResistence)\n        };\n        //Declaraciones ejecutadas cuando el resultado de expresión coincide con valorN\n        break;\n    default:\n        break;\n}\n\n\nvar NumeroMuestras;\nvar NNodo = 0;//Consultar el valor\nvar ConstanteAmortiguamiento = global.get(\"DataProduccion.constanteAmortiguamiento\")||0;//Consultar el valor\nvar SPM_Feedback = 8.511;//Consultar el valor\n\n// dinagrama Average\n// Desp_CD = [0, 0.330105, 0.799962, 1.393695, 2.117669, 2.974185, 3.96401, 5.065364, 6.2659, 7.553576, 8.91896, 10.358983, 11.886531, 13.500606, 15.167234, 16.886798, 18.670802, 20.497495, 22.359915, 24.276116, 26.231995, 28.230639, 30.26319, 32.348447, 34.475836, 36.630317, 38.818887, 41.046406, 43.302157, 45.590541, 47.925313, 50.300933, 52.577332, 54.853751, 57.161699, 59.435462, 61.651955, 63.858037, 66.064828, 68.227771, 70.327155, 72.396572, 74.433643, 76.414749, 78.317265, 80.165578, 81.962988, 83.710797, 85.393053, 86.980384, 88.490199, 89.93009, 91.273828, 92.517733, 93.67952, 94.75152, 95.710803, 96.581065, 97.35993, 98.024083, 98.590626, 99.06094, 99.440777, 99.718404, 99.902792, 100, 99.993847, 99.91777, 99.738179, 99.471178, 99.1364, 98.729244, 98.26827, 97.740287, 97.14606, 96.499626, 95.795845, 95.004194, 94.166931, 93.305759, 92.363083, 91.377555, 90.378012, 89.320355, 88.203358, 87.044812, 85.848247, 84.590117, 83.28975, 81.955886, 80.558081, 79.112056, 77.637751, 76.108937, 74.516871, 72.905498, 71.262853, 69.544993, 67.805908, 66.058483, 64.237607, 62.366976, 60.498742, 58.589726, 56.612168, 54.624505, 52.632183, 50.586885, 48.494825, 46.396112, 44.280315, 42.134398, 39.973161, 37.810793, 35.634485, 33.423226, 31.235041, 29.075682, 26.898933, 24.743302, 22.634195, 20.581552, 18.588134, 16.676948, 14.84577, 13.085015, 11.417382, 9.842795, 8.365165, 6.990245, 5.721944, 4.565173, 3.538413, 2.64918, 1.878685, 1.232986, 0.727498, 0.354476, 0.1153, 0, 0.059576]\n// Esfu_CD = [9.395175, 9.794512, 9.714645, 9.698671, 9.858406, 9.762565, 9.682698, 9.762565, 9.570884, 9.666724, 10.177875, 10.449424, 10.593185, 10.832787, 10.976549, 11.136283, 11.389862, 11.477716, 11.591527, 11.783209, 11.851096, 11.99885, 11.825139, 11.563573, 11.214154, 11.040442, 10.848761, 10.625132, 10.465398, 10.321636, 10.193849, 10.018141, 9.842432, 9.682698, 9.586857, 9.826459, 10.050088, 10.113981, 10.241769, 10.401504, 10.417477, 10.401504, 10.513318, 10.545265, 10.449424, 10.609159, 10.75292, 10.529291, 10.209822, 9.986194, 9.890353, 9.650751, 9.395175, 9.411149, 9.379202, 9.155573, 9.011812, 9.123626, 8.995839, 8.788184, 9.043759, 9.379202, 9.522963, 9.60283, 9.842432, 10.034114, 9.97022, 10.002167, 9.954247, 10.034114, 9.986194, 10.098008, 10.193849, 9.938273, 9.618804, 9.538937, 9.55491, 9.331282, 9.171547, 9.347255, 9.315308, 9.123626, 9.18752, 9.331282, 9.18752, 9.155573, 9.522963, 9.778539, 9.682698, 9.714645, 9.906326, 9.874379, 9.634777, 9.634777, 9.666724, 9.411149, 9.203494, 9.09168, 8.820131, 8.3569, 7.957564, 7.89367, 7.765882, 7.462386, 7.270704, 7.302651, 7.11097, 6.759554, 6.599819, 6.839421, 7.031103, 7.254731, 7.622121, 7.925617, 7.909643, 7.909643, 8.245086, 8.3569, 8.324953, 8.596502, 8.804157, 8.788184, 8.788184, 8.756237, 8.420794, 8.340927, 8.484688, 8.388847, 8.452741, 8.596502, 8.500661, 8.484688, 8.596502, 8.564555, 8.596502, 8.804157, 9.043759, 9.267388, 9.331282, 9.299335, 9.682698]\n\n// dinagrama de gas\nvar Desp_CD =  global.get(\"Dinagrama.superficie.Desp_CD\")||0;\nvar Esfu_CD = global.get(\"Dinagrama.superficie.Esfu_CD\")||0;\n\nNumeroMuestras = Desp_CD.length ;//tamaño del vector muestras\nvar DiametroTubing = global.get(\"DataInstalation.DiametroTubing\")||null;\nvar PresionCasing = global.get(\"DataInstalation.PresionCasing\")||0;\n\n\n// variables de contexto\ncontext.set(\"NumeroMuestras\", NumeroMuestras, \"memoryOnly\");\ncontext.set(\"Esfu_CD\", Esfu_CD, \"memoryOnly\");\ncontext.set(\"Desp_CD\", Desp_CD, \"memoryOnly\");\ncontext.set(\"parDinagram\", parDinagram, \"memoryOnly\");\ncontext.set(\"NNodo\", NNodo, \"memoryOnly\");\ncontext.set(\"SPM_Feedback\", SPM_Feedback, \"memoryOnly\");\ncontext.set(\"numSarta\", numSarta, \"memoryOnly\");\ncontext.set(\"PresionCasing\", PresionCasing,\"memoryOnly\");\ncontext.set(\"Grado_API_del_Fluido\", Grado_API_del_Fluido,\"memoryOnly\");\ncontext.set(\"ConstanteAmortiguamiento\", ConstanteAmortiguamiento,\"memoryOnly\");\ncontext.set(\"DiametroTubing\", DiametroTubing,\"memoryOnly\");\ncontext.set(\"PresionCasing\", PresionCasing,\"memoryOnly\");\n// variables de flujo\nflow.set(\"numSarta\", numSarta);\nflow.set(\"parDinagram\", parDinagram);\nflow.set(\"NumeroMuestras\", NumeroMuestras);\nflow.set(\"NNodo\", NNodo);\nflow.set(\"ConstanteAmortiguamiento\", ConstanteAmortiguamiento);\nflow.set(\"SPM_Feedback\", SPM_Feedback);\nflow.set(\"Desp_CD\", Desp_CD);\nflow.set(\"Esfu_CD\", Esfu_CD);\nflow.set(\"DiametroTubing\", DiametroTubing);\nflow.set(\"PresionCasing\", PresionCasing);\nflow.set(\"Grado_API_del_Fluido\", Grado_API_del_Fluido);\n// variables globales\nglobal.set(\"Dinagrama.numSarta\", numSarta);\nreturn msg;\n\n\n\n// funciones utilizadas\n\nfunction Propiedades(Longitud_Ca_Ft, Diametro_Pulg, Longitud_Tr_Ft, E, Peso_Lb, Peso_Inicial_Ca, Densidad, Resistencia) {\n    this.Longitud_Ca_Ft = Longitud_Ca_Ft;\n    this.Diametro_Pulg = Diametro_Pulg;\n    this.Longitud_Tr_Ft = Longitud_Tr_Ft;\n    this.E = E * 1000000.0;//Elasticicidad\n    this.Peso_Lb = Peso_Lb;//W\n    this.Peso_Inicial_Ca = Peso_Inicial_Ca;//Wo\n    this.Densidad = Densidad;//P\n    this.Resistencia = Resistencia;\n}\nfunction createArray(length) {\n    var arr = new Array(length || 0),\n        i = length;\n\n    if (arguments.length > 1) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        while (i--) arr[length - 1 - i] = createArray.apply(this, args);\n    }\n\n    return arr;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 460,
        "wires": [
            [
                "de1bafacc719791d"
            ]
        ]
    },
    {
        "id": "1d26662def25323f",
        "type": "inject",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "inyectar",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 460,
        "wires": [
            [
                "1c4e8fcfe6a3e2e8"
            ]
        ]
    },
    {
        "id": "e0439a824aa40693",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "SetNodo",
        "func": "var numSarta = flow.get(\"numSarta\") || 0; //valor configurable\nvar Tramo = flow.get(\"Tramo\")||null;\nvar Goodman_Matriz = flow.get(\"Goodman_Matriz\")||null;\nvar Sartas_AreaCabilla = flow.get(\"Sartas_AreaCabilla\")||null;\nvar NNodo = 0;\nvar NodosZona1 = 0;\nvar NodosZona2 = 0;\nvar NodosZona3 = 0;\nvar NodosZona4 = 0;\nvar NodosZona5 = 0;\nvar NodosZona6 = 0;\nvar NodosZona7 = 0;\nswitch (numSarta) {\n    case 1:\n        NNodo = (Tramo[0][18]);\n        NodosZona1 = Tramo[0][18];\n        NodosZona2 = Tramo[0][18] - 1.0;\n        NodosZona3 = (4.0 / 5.0) * Tramo[0][18];\n        NodosZona4 = (3.0 / 5.0) * Tramo[0][18];\n        NodosZona5 = (2.0 / 5.0) * Tramo[0][18];\n        NodosZona6 = (1.0 / 5.0) * Tramo[0][18];\n        NodosZona7 = 2.0;\n        Goodman_Matriz[1][0] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][1] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][2] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][3] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][4] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][5] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][6] = Sartas_AreaCabilla[0];\n        break;\n    case 2:\n        NNodo = (Tramo[1][18]);\n        NodosZona1 = Tramo[1][18];\n        NodosZona2 = (4.0 / 5.0) * Tramo[1][18];\n        NodosZona3 = (3.0 / 5.0) * Tramo[1][18];\n        NodosZona4 = Tramo[0][18] + 2.0; //(* (2.0 / 5.0) * Tramo[1, 18] ; *)\n        NodosZona5 = Tramo[0][18];\n        NodosZona6 = (1.0 / 2.0) * Tramo[0][18];\n        NodosZona7 = 2.0;\n        // DIAGRAMA DE GOODMAN\n        Goodman_Matriz[1][0] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][1] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][2] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][3] = Sartas_AreaCabilla[1];\n        Goodman_Matriz[1][4] = Sartas_AreaCabilla[1];\n        Goodman_Matriz[1][5] = Sartas_AreaCabilla[1];\n        Goodman_Matriz[1][6] = Sartas_AreaCabilla[1];\n        break;\n    case 3:\n        NNodo=(Tramo[2][18])\n        NodosZona1 = Tramo[2][18];\n        NodosZona2 = Tramo[2][18] - 1.0;\n        NodosZona3 = (4.0 / 5.0) * Tramo[2][18];\n        NodosZona4 = Tramo[1][18];\n        NodosZona5 = (3.0 / 5.0) * Tramo[1][18];\n        NodosZona6 = Tramo[0][18];\n        NodosZona7 = 2.0;\n        Goodman_Matriz[1][0] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][1] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][2] = Sartas_AreaCabilla[1];\n        Goodman_Matriz[1][3] = Sartas_AreaCabilla[1];\n        Goodman_Matriz[1][4] = Sartas_AreaCabilla[2];\n        Goodman_Matriz[1][5] = Sartas_AreaCabilla[2];\n        Goodman_Matriz[1][6] = Sartas_AreaCabilla[2];\n        break;\n    case 4:\n        NNodo = (Tramo[3][18])\n        NodosZona1 = Tramo[3][18];\n        NodosZona2 = Tramo[3][18] - 1.0;\n        NodosZona3 = (9.0 / 10.0) * Tramo[3][18];\n        NodosZona4 = Tramo[2][18];\n        NodosZona5 = (3.5 / 5.0) * Tramo[2][18];\n        NodosZona6 = Tramo[1][18];\n        NodosZona7 = 2.0;\n        // goodman\n        Goodman_Matriz[1][0] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][1] = Sartas_AreaCabilla[1];\n        Goodman_Matriz[1][2] = Sartas_AreaCabilla[2];\n        Goodman_Matriz[1][3] = Sartas_AreaCabilla[2];\n        Goodman_Matriz[1][4] = Sartas_AreaCabilla[3];\n        Goodman_Matriz[1][5] = Sartas_AreaCabilla[3];\n        Goodman_Matriz[1][6] = Sartas_AreaCabilla[3];\n        break;\n    case 5:\n        NNodo = (Tramo[4][18]);\n        NodosZona1 = Tramo[4][18];\n        NodosZona2 = Tramo[4][18] - 1.0;\n        NodosZona3 = Tramo[3][18];\n        NodosZona4 = Tramo[2][18];\n        NodosZona5 = Tramo[1][18];\n        NodosZona6 = Tramo[0][18];\n        NodosZona7 = 2.0;\n        // goodman\n        Goodman_Matriz[1][0] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][1] = Sartas_AreaCabilla[0];\n        Goodman_Matriz[1][2] = Sartas_AreaCabilla[1];\n        Goodman_Matriz[1][3] = Sartas_AreaCabilla[2];\n        Goodman_Matriz[1][4] = Sartas_AreaCabilla[3];\n        Goodman_Matriz[1][5] = Sartas_AreaCabilla[4];\n        Goodman_Matriz[1][6] = Sartas_AreaCabilla[4];\n        break;\n    default:\n        msg.payload = \"Demasiadas Sartas\"\n}\nGoodman_Matriz[0][0] = NodosZona7;\nGoodman_Matriz[0][1] = NodosZona6;\nGoodman_Matriz[0][2] = NodosZona5;\nGoodman_Matriz[0][3] = NodosZona4;\nGoodman_Matriz[0][4] = NodosZona3;\nGoodman_Matriz[0][5] = NodosZona2;\nGoodman_Matriz[0][6] = NodosZona1;\nNNodo = parseInt(NNodo);//truncar valores del ciclo for\n//variables de Contexto\ncontext.set(\"numSarta\", numSarta, \"memoryOnly\");\ncontext.set(\"NNodo\", NNodo, \"memoryOnly\");\ncontext.set(\"Sartas_AreaCabilla\", NNodo, \"memoryOnly\");\ncontext.set(\"NodosZona1\", NodosZona1, \"memoryOnly\");\ncontext.set(\"NodosZona2\", NodosZona2, \"memoryOnly\");\ncontext.set(\"Goodman_Matriz\", Goodman_Matriz, \"memoryOnly\");\n\n// variables de Flujo\nflow.set(\"NNodo\", NNodo, \"file\");//validar funcionamiento\nflow.set(\"Goodman_Matriz\", Goodman_Matriz, \"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 580,
        "wires": [
            [
                "1b31503325926827"
            ]
        ]
    },
    {
        "id": "519724ca0bae0425",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "OperarVectores",
        "func": "var Tramo = flow.get(\"Tramo\")||0;\nvar Data_Empty = flow.get(\"Data_Empty\")||0;\nvar numSarta = flow.get(\"numSarta\")||0;\nvar NNodo = flow.get(\"NNodo\")||0;\nNNodo = parseInt(NNodo);//redondeo\nvar NumeroMuestras = flow.get(\"NumeroMuestras\")||0;\nvar UV = flow.get(\"UV\")||0;\nvar Jo_Gl = flow.get(\"Jo_Gl\")||0;\nvar DX = flow.get(\"DX\")||0;\nvar UM = flow.get(\"UM\")||0;\nvar E_Gl = flow.get(\"E_Gl\")||0;\nvar A_Gl = flow.get(\"A_Gl\")||0;\nvar worm_v = flow.get(\"worm_v\")||0;\nvar M = flow.get(\"M\")||0;\nvar Wflo = flow.get(\"Wflo\");\nvar Numero_de_sartas = numSarta;\nvar Desp_CD_F1 = createArray(520)\nvar Esfu_CD_F1 = createArray(520)\nvar UltimoNodo;\nvar Iniciar_CDF_OperarVectores_Nodos = false;\nvar Iniciar_CDF_OperarVectores_Bomba = false;\nvar max_Desp = 0;\n// inicializar variables\nfor (let JJ = 0; JJ <= 300; JJ++) {\n    Desp_CD_F1[JJ] = Data_Empty[JJ];\n    Esfu_CD_F1[JJ] = Data_Empty[JJ];\n}\n\nswitch (Numero_de_sartas) {\n    case 1:\n        UltimoNodo = parseInt((Tramo[0][18]) - 1);\n        if (NNodo <= UltimoNodo){\n            Iniciar_CDF_OperarVectores_Nodos = true;\n        } else if (NNodo = (Tramo[0][18])){\n            Iniciar_CDF_OperarVectores_Bomba = true;\n        }\n        break;\n    case 2:\n        UltimoNodo = parseInt((Tramo[1][18]) - 1);\n        if (NNodo <= UltimoNodo){\n            Iniciar_CDF_OperarVectores_Nodos = true;\n        } else if (NNodo = (Tramo[1][18])){\n            Iniciar_CDF_OperarVectores_Bomba = true;\n        }\n        break;\n    case 3:\n        UltimoNodo = parseInt((Tramo[2][18]) - 1);\n        if (NNodo <= UltimoNodo){\n            Iniciar_CDF_OperarVectores_Nodos = true;\n        } else if (NNodo = (Tramo[2][18])){\n            Iniciar_CDF_OperarVectores_Bomba = true;\n        }\n        break;\n    case 4:\n        UltimoNodo = parseInt((Tramo[3][18]) - 1);\n        if (NNodo <= UltimoNodo){\n            Iniciar_CDF_OperarVectores_Nodos = true;\n        } else if (NNodo = (Tramo[3][18]) ){\n            Iniciar_CDF_OperarVectores_Bomba = true;\n        }\n        break;\n    case 5:\n        UltimoNodo = parseInt((Tramo[4][18]) - 1);\n        if (NNodo <= UltimoNodo){\n            Iniciar_CDF_OperarVectores_Nodos = true;\n        } else if (NNodo = (Tramo[4][18])){\n            Iniciar_CDF_OperarVectores_Bomba = true;\n        }\n\n        break;\n    default:\n        msg.payload = \"Demasiadas Sartas\"\n}\n\n// (* CALCULO DE DIINAGRAMA EN NODOS *)\nif (Iniciar_CDF_OperarVectores_Nodos==true){\n    var Conteo11 = 0;\n    for (Conteo11 = 0; Conteo11 <= NumeroMuestras-1; Conteo11++) {        \n        Desp_CD_F1[Conteo11] = -12.0 * (UV[Conteo11 + Jo_Gl - 2]);\n        if (DX!=0){\n            Esfu_CD_F1[Conteo11] = (((E_Gl * A_Gl * 144.0) / DX) * (UV[Conteo11 + Jo_Gl - 2] - UM[1][Conteo11 + Jo_Gl - 2])) / 1000.0;\n            Esfu_CD_F1[Conteo11] = Esfu_CD_F1[Conteo11] - worm_v[parseInt(NNodo)] / 1000.0;\n        }\n    }\n    // revizar en que apartado se utilizan\n    Desp_CD_F1[Conteo11 - 1] = Desp_CD_F1[1];\n    Esfu_CD_F1[Conteo11 - 1] = Esfu_CD_F1[1];\n    Desp_CD_F1[Conteo11] = Desp_CD_F1[0];\n    Esfu_CD_F1[Conteo11] = Esfu_CD_F1[0];\n    var Filtrar_CDF = true;\n    var Graficar_CDF = 0;\n    var Iniciar_CDF_OperarVectores_Nodos = false;\n}\n\n// (* CALCULO DE DIINAGRAMA EN BOMBA *)\nif (Iniciar_CDF_OperarVectores_Bomba == true){\n    for (let Conteo11 = M; Conteo11 <= (M + NumeroMuestras-1); Conteo11++) {\n        if (UV[Conteo11] > max_Desp){\n            max_Desp = UV[Conteo11];\n        }\n    }\n    for (let Conteo11 = 0; Conteo11 <= NumeroMuestras - 1 ; Conteo11++) {\n        if(DX!=0){\n            // parseFloat(Int2Float32(array16to32(Accel_Time)).toFixed(3))\n            Desp_CD_F1[Conteo11] = - 12.0 * ((UV[(parseInt(M) + Conteo11)] - max_Desp));\n            Esfu_CD_F1[Conteo11] = ((E_Gl * A_Gl * 144.0) / (DX)) * ((UV[(parseInt(M) + Conteo11)] - UM[1][(parseInt(M) + Conteo11)]) / 1000.0);\n            Esfu_CD_F1[Conteo11] = Esfu_CD_F1[Conteo11] - (Wflo / 1000.0);\n        }\n    }\n    // Cierre del dinagrama de fondo el primer dato con el ultimo;\n    Desp_CD_F1[Conteo11 - 1] = Desp_CD_F1[1];\n    Esfu_CD_F1[Conteo11 - 1] = Esfu_CD_F1[1];\n\n    Desp_CD_F1[Conteo11] = Desp_CD_F1[0];\n    Esfu_CD_F1[Conteo11] = Esfu_CD_F1[0];\n\n}\n\n// guardar variables en context\ncontext.set(\"Desp_CD_F1\", Desp_CD_F1, \"memoryOnly\");\ncontext.set(\"M\", M, \"memoryOnly\");\ncontext.set(\"Esfu_CD_F1\", Esfu_CD_F1, \"memoryOnly\");\ncontext.set(\"Data_Empty\", Data_Empty, \"memoryOnly\");\ncontext.set(\"Tramo\", Tramo, \"memoryOnly\");\ncontext.set(\"Numero_de_sartas\", Numero_de_sartas, \"memoryOnly\");\ncontext.set(\"UltimoNodo\", UltimoNodo, \"memoryOnly\");\ncontext.set(\"Iniciar_CDF_OperarVectores_Nodos\", Iniciar_CDF_OperarVectores_Nodos, \"memoryOnly\");\ncontext.set(\"Iniciar_CDF_OperarVectores_Bomba\", Iniciar_CDF_OperarVectores_Bomba, \"memoryOnly\");\ncontext.set(\"NumeroMuestras\", NumeroMuestras, \"memoryOnly\");\ncontext.set(\"UV\", UV, \"memoryOnly\");\ncontext.set(\"Jo_Gl\", Jo_Gl, \"memoryOnly\");\ncontext.set(\"E_Gl\", E_Gl, \"memoryOnly\");\ncontext.set(\"DX\", DX, \"memoryOnly\");\ncontext.set(\"UM\", UM, \"memoryOnly\");\ncontext.set(\"worm_v\", worm_v, \"memoryOnly\");\ncontext.set(\"max_Desp\", max_Desp, \"memoryOnly\");\ncontext.set(\"Wflo\", Wflo, \"memoryOnly\");\ncontext.set(\"M\", M, \"memoryOnly\");\ncontext.set(\"NNodo\", NNodo, \"memoryOnly\");\n\n// guardar variables de flujo\nflow.set(\"Desp_CD_F1\", Desp_CD_F1);\nflow.set(\"Esfu_CD_F1\", Esfu_CD_F1);\n\n\n// funciones a utilizar\nfunction createArray(length) {\n    var arr = new Array(length || 0),\n        i = length;\n\n    if (arguments.length > 1) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        while (i--) arr[length - 1 - i] = createArray.apply(this, args);\n    }\n\n    return arr;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 660,
        "wires": [
            [
                "144b8abb78491883"
            ]
        ]
    },
    {
        "id": "de1bafacc719791d",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "ActualizarSartas",
        "func": "// entradas del sistema\nvar parDinagram = flow.get(\"parDinagram\")||0;\nvar numSarta = flow.get(\"numSarta\")||0;\n\n// Calculo de peso inicial y peso Lb de las sartas\nfor (let i = 0; i <= numSarta-1; i++) {\n    // Sarta_1.Peso_Inicial_Ca := Sarta_1.Densidad * 3.1416 * (POW((Sarta_1.Diametro_Pulg / 12.0), 2.0) / 4.0) * Sarta_1.Longitud_Tr_Ft;\n    parDinagram['Sarta' + (i + 1)].Peso_Inicial_Ca = parDinagram['Sarta' + (i + 1)].Densidad * 3.1416 * (Math.pow((parDinagram['Sarta' + (i + 1)].Diametro_Pulg / 12.0), 2) / 4) * parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n    if (parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft>0){\n        parDinagram['Sarta' + (i + 1)].Peso_Lb = parDinagram['Sarta' + (i + 1)].Peso_Inicial_Ca / parDinagram['Sarta' + (i + 1)].Longitud_Tr_Ft;\n    } \n}\n\n\n// guardar variables de contexto\ncontext.set(\"parDinagram\", parDinagram, \"memoryOnly\");\ncontext.set(\"numSarta\", numSarta, \"memoryOnly\");\n\n// guardar las variables de salida de flujo\nflow.set(\"parDinagram\", parDinagram);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 460,
        "wires": [
            [
                "5ef9f1c757b3c525"
            ]
        ],
        "info": "rutina para crear los pesos "
    },
    {
        "id": "7a6ff18321a03c6d",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "setVarPou",
        "func": "var NumeroMuestras = flow.get(\"NumeroMuestras\")||0;\nvar Desp_CD = flow.get(\"Desp_CD\")||0;\nvar Esfu_CD = flow.get(\"Esfu_CD\")||0;\nvar Tramo = flow.get(\"Tramo\")||0;\nvar DX = flow.get(\"DX\")||0;\nvar UM = createArray(3, 520);\nvar UV = createArray(520);\nvar Numero_de_sartas = flow.get(\"numSarta\") || 0;\nvar SPM_Feedback = flow.get(\"SPM_Feedback\")||0;\nvar nCab = flow.get(\"nCab\")||0;\nvar DCprom = flow.get(\"DCprom\")||0;\nvar DiametroTubing = flow.get(\"DiametroTubing\")||0;\nvar PresionCasing = flow.get(\"PresionCasing\")||0;\nvar T = SPM_Feedback;\nvar np = 1.0, DT_0 = 0, DT1, Rho, gc = 32.2, Cest, LongOptm;\nvar AreaTubing, AreaCabilla, CargaCabezal, DT_Gl;\nvar V = 0.1;//identificar Value\nvar nt1 = Numero_de_sartas - 1;\nvar T_Matrix = NumeroMuestras;\nvar A = Tramo[nt1][15];\nvar E = Tramo[nt1][14];\nvar M = Tramo[nt1][18] - 1.0;\nvar L = Tramo[nt1][12];\nvar LM = M + 1.0;\nvar N = (T_Matrix) + 2.0 * (M - 1.0 + np);\nvar NT = Math.round(T_Matrix);\nvar NTI = NT;\n\nif ((L != 0.0) && (T_Matrix != 149)) {\n    LongOptm = (2.0 / (149.0 - (T_Matrix))) * L;\n}\nif (((T_Matrix) + 2.0 * (LM)) > 500.0) {\n    nCab = LongOptm;\n    var Ajustar_Datos = 1.0;\n    M = Tramo[nt1][18] - 1.0;\n    M = parseInt(M);\n}\n// setear las variables\nfor (let j = 0; j <= 1; j++) {\n    for (let z = 0; z <= 499; z++) {\n        UM[j][z] = 0.0;\n        UV[z] = 0.0;\n    }\n}\n// (* ------- Llenado de las dos Primeras filas de la matriz U---------*)\nfor (let j = 0; j <= NumeroMuestras - 1; j++) {\n    UM[0][j] = -(Desp_CD[j]) / (12.0);\n    if ((E != 0.0) && (A != 0)) {\n    // segunda  ley de hooke segunda linea \n        UM[1][j] = (Esfu_CD[j] * 1000.0) * (DX / (E * A * 144.0)) + UM[0][j];\n    }\n}\n\nM = parseInt(M);//truncar valores del ciclo for\nfor (let j = 0; j <= (2*M); j++) {\n    UM[0][NumeroMuestras + j] = UM[0][j];\n    UM[1][NumeroMuestras + j] = UM[1][j];\n}\nif (T != 0) {\n    DT1 = 60.0 / T / ((NTI) - 1.0);\n}\nNT = N;\nif (T != 0) {\n    DT_0 = 60.0 / T / ((NTI) - 1.0);\n}\nif (M != 0.0) {\n    DX = L / (M);\n}\nE = Tramo[Numero_de_sartas - 1][14];\nRho = Tramo[Numero_de_sartas - 1][13];\nif ((Rho != 0.0) && (V != 0.0) && (DT_0 != 0.0)) {\n    V = Math.sqrt(144.0 * E * gc / Rho);\n    Cest = DX / V / DT_0;;\n}\nAreaTubing = (3.1416 / 4.0) * Math.pow(DiametroTubing, 2.0);\nAreaCabilla = (3.1416 / 4.0) * Math.pow(DCprom, 2.0);\nCargaCabezal = ((AreaTubing - AreaCabilla) * PresionCasing) / 1000.0;\n\n// variables utilizadas en otras rutinas\nDT_Gl = DT1;\n// VARIABLES DE FLUJO\nflow.set(\"UM\", UM);\nflow.set(\"UV\", UV);\nflow.set(\"DX\", DX);\nflow.set(\"nCab\", nCab);\nflow.set(\"AreaTubing\", AreaTubing);\nflow.set(\"AreaCabilla\", AreaCabilla);\nflow.set(\"CargaCabezal\", CargaCabezal);\nflow.set(\"DT_Gl\", DT_Gl);\nflow.set(\"M\", M);\n\n// VARIABLES DE CONTEXTO\ncontext.set(\"A\", A, \"memoryOnly\");\ncontext.set(\"E\", E, \"memoryOnly\");\ncontext.set(\"DX\", DX, \"memoryOnly\");\ncontext.set(\"M\", M, \"memoryOnly\");\ncontext.set(\"UM\", UM, \"memoryOnly\");\ncontext.set(\"aDQUISIONUM\", UM, \"memoryOnly\");\ncontext.set(\"Desp_CD\", Desp_CD, \"memoryOnly\");\ncontext.set(\"Esfu_CD\", Esfu_CD, \"memoryOnly\");\ncontext.set(\"Tramo\", Tramo, \"memoryOnly\");\ncontext.set(\"nt1\", nt1, \"memoryOnly\");\ncontext.set(\"L\", L, \"memoryOnly\");\ncontext.set(\"T_Matrix\", T_Matrix, \"memoryOnly\");\ncontext.set(\"LongOptm\", LongOptm, \"memoryOnly\");\ncontext.set(\"nCab\", nCab, \"memoryOnly\");\ncontext.set(\"LM\", LM, \"memoryOnly\");\ncontext.set(\"np\", np, \"memoryOnly\");\ncontext.set(\"T\", T, \"memoryOnly\");\ncontext.set(\"DT_0\", DT_0, \"memoryOnly\");\ncontext.set(\"NTI\", NTI, \"memoryOnly\");\ncontext.set(\"SPM_Feedback\", SPM_Feedback, \"memoryOnly\");\ncontext.set(\"DT1\", DT1, \"memoryOnly\");\ncontext.set(\"Rho\", Rho, \"memoryOnly\");\ncontext.set(\"V\", V, \"memoryOnly\");\ncontext.set(\"gc\", gc, \"memoryOnly\");\ncontext.set(\"Cest\", Cest, \"memoryOnly\");\ncontext.set(\"nCab\", nCab, \"memoryOnly\");\ncontext.set(\"AreaTubing\", AreaTubing, \"memoryOnly\");\ncontext.set(\"AreaCabilla\", AreaCabilla, \"memoryOnly\");\ncontext.set(\"CargaCabezal\", CargaCabezal, \"memoryOnly\");\ncontext.set(\"DiametroTubing\", DiametroTubing, \"memoryOnly\");\ncontext.set(\"DCprom\", DCprom, \"memoryOnly\");\ncontext.set(\"PresionCasing\", PresionCasing, \"memoryOnly\");\ncontext.set(\"DT_Gl\", DT_Gl, \"memoryOnly\");\ncontext.set(\"UV\", UV, \"memoryOnly\");\ncontext.set(\"N\", N, \"memoryOnly\");\ncontext.set(\"NT\", NT, \"memoryOnly\");\ncontext.set(\"NumeroMuestras\", NumeroMuestras, \"memoryOnly\");\nreturn msg;\nfunction createArray(length) {\n    var arr = new Array(length || 0),\n        i = length;\n\n    if (arguments.length > 1) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        while (i--) arr[length - 1 - i] = createArray.apply(this, args);\n    }\n\n    return arr;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 540,
        "wires": [
            [
                "e0439a824aa40693"
            ]
        ]
    },
    {
        "id": "1b31503325926827",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "CalculoFondo",
        "func": "var M = flow.get(\"M\")||null;\nvar NumeroMuestras = flow.get(\"NumeroMuestras\")||null;\nvar NumeroMuestras = flow.get(\"NumeroMuestras\")||null;\nvar Tramo = flow.get(\"Tramo\")||null;\nvar NNodo = flow.get(\"NNodo\") || null;\nNNodo = parseInt(NNodo);//truncar valores del ciclo for\nvar DX = flow.get(\"DX\") || null;\nvar gc = flow.get(\"gc\") || null;\nvar DT_Gl = flow.get(\"DT_Gl\") || null;\nvar ConstanteAmortiguamiento = flow.get(\"ConstanteAmortiguamiento\") || null;\nvar UV = flow.get(\"UV\") || null;//preguntar de donde va\nvar UM = flow.get(\"UM\") || null;//preguntar de donde va\nvar C_Gl = ConstanteAmortiguamiento;\nvar N = (2 * (M)) + NumeroMuestras;\nvar Rho, E, A, W0, L, Alpha, A1, A2, A3, A4;\n\n// identificacion donde se esta calculando el dinagrama\nvar k = 0;\nvar worm = 0;\nvar worm_v = createArray(NNodo + 2);\nvar Data_Empty = createArray(550);\nfor (let i = 0; i < 550; i++) {\n    Data_Empty[i] = 0;\n}\n\nvar L1 = Tramo[0][3];\nvar L2 = L1 + Tramo[1][3];\nvar L3 = L2 + Tramo[2][3];\nvar L4 = L3 + Tramo[3][3];\nvar L5 = L4 + Tramo[4][3];\n\nfor (var jo = 2; jo <= NNodo; jo++) {\n    if ((L1 != 0.0) && (((jo - 2) * DX) <= L1)) {\n        k = 1;\n        DX = Tramo[k - 1][1];\n    }\n    if ((L2 != 0.0) && (((jo - 1) * DX) > L1) && (((jo) * DX) <= L2)) {\n        k = 2;\n        DX = Tramo[k - 1][1];\n    }\n    if ((L3 != 0.0) && (((jo - 1) * DX) > L2) && (((jo) * DX) <= L3)) {\n        k = 3;\n        DX = Tramo[k - 1][1];\n    }\n    if ((L4 != 0.0) && (((jo - 1) * DX) > L3) && (((jo) * DX) <= L4)) {\n        k = 4;\n        DX = Tramo[k - 1][1];\n    }\n    if ((L5 != 0.0) && (((jo - 1) * DX) > L4) && (((jo) * DX) <= L5)) {\n        k = 5;\n        DX = Tramo[k - 1][1];\n    }\n    worm = worm + Tramo[k - 1][5] * DX;\n    worm_v[jo] = worm;\n    // calculo de constantes de trabajo\n    Rho = Tramo[k - 1][13];\n    E = Tramo[k - 1][14];\n    A = Tramo[k - 1][15];\n    W0 = Tramo[k - 1][16];\n    L = Tramo[k - 1][12];\n\n    if (DT_Gl != 0.0 && Rho != 0.0 && A != 0.0 && gc != 0.0 && E != 0.0 && DX != 0.0) {\n        Alpha = (DX / (DT_Gl * DT_Gl)) * ((Rho * A) / (gc));\n        A1 = (Alpha * (1.0 + (C_Gl * DT_Gl))) / ((E * A * 144.0) / DX);\n        A2 = -(Alpha * (2.0 + (C_Gl * DT_Gl)) - ((2.0 * E * A * 144.0) / DX)) / (E * A * 144.0 / DX);\n        A3 = Alpha / (E * A * 144.0 / DX);\n        A4 = -1.0;\n    }\n    // validar esto \n    // Del cuarto nodo en adelante, se llena la matriz U con datos historicos\n    if (jo > 3) {\n        for (let KK = 0; KK <= 499; KK++) {\n            UM[0][KK] = UM[1][KK];\n            UM[1][KK] = UV[KK];//Revizar UV y UM me estan seteando a cero todas\n        }\n    }\n    for (let KK = 0; KK <= 499; KK++) {\n        // seteo de las variable UV\n        Data_Empty[KK] = 0;\n        UV[KK] = Data_Empty[KK];\n    }\n    // (* Calculo de Vector U con ecuacion de onda -*)\n    for (let y = jo - 1; y <= (N - jo + 1); y++) {\n        UV[y] = (A1 * UM[1][y + 1]) + (A2 * UM[1][y]) + (A3 * UM[1][y - 1]) + (A4 * UM[0][y]);\n    }\n    \n}\n\n\nvar Jo_Gl = jo;\nvar E_Gl = E;\nvar A_Gl = A;\n\n\n// guardar variables de contexto\ncontext.set(\"N\",N,\"memoryOnly\");\ncontext.set(\"M\", M, \"memoryOnly\");\ncontext.set(\"NumeroMuestras\", NumeroMuestras, \"memoryOnly\");\ncontext.set(\"L1\", L1, \"memoryOnly\");\ncontext.set(\"L2\", L2, \"memoryOnly\");\ncontext.set(\"L3\", L3, \"memoryOnly\");\ncontext.set(\"L4\", L4, \"memoryOnly\");\ncontext.set(\"L5\", L5, \"memoryOnly\");\ncontext.set(\"Tramo\", Tramo, \"memoryOnly\");\ncontext.set(\"Rho\", Rho, \"memoryOnly\");\ncontext.set(\"E\", E, \"memoryOnly\");\ncontext.set(\"W0\", W0, \"memoryOnly\");\ncontext.set(\"L\", L, \"memoryOnly\");\ncontext.set(\"Alpha\", Alpha, \"memoryOnly\");\ncontext.set(\"A1\", A1, \"memoryOnly\");\ncontext.set(\"A2\", A2, \"memoryOnly\");\ncontext.set(\"A3\", A3, \"memoryOnly\");\ncontext.set(\"A4\", A4, \"memoryOnly\");\ncontext.set(\"NNodo\", NNodo, \"memoryOnly\");\ncontext.set(\"DX\", DX, \"memoryOnly\");\ncontext.set(\"k\", k, \"memoryOnly\");\ncontext.set(\"gc\", gc, \"memoryOnly\");\ncontext.set(\"DT_Gl\", DT_Gl, \"memoryOnly\");\ncontext.set(\"Data_Empty\", Data_Empty, \"memoryOnly\");\ncontext.set(\"UV\", UV, \"memoryOnly\");\ncontext.set(\"UM\", UM, \"memoryOnly\");\ncontext.set(\"worm\", worm, \"memoryOnly\");\ncontext.set(\"worm_v\", worm_v, \"memoryOnly\");\n// guardar variables de flujo\nflow.set(\"DX\", DX);\nflow.set(\"UM\", UM);\nflow.set(\"UV\", UV);\nflow.set(\"Jo_Gl\", Jo_Gl);\nflow.set(\"E_Gl\", E_Gl);\nflow.set(\"A_Gl\", A_Gl);\nflow.set(\"Data_Empty\", Data_Empty);\nflow.set(\"worm_v\", worm_v);\n\nreturn msg;\n\n// funciones a utilizar\nfunction createArray(length) {\n    var arr = new Array(length || 0),\n        i = length;\n\n    if (arguments.length > 1) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        while (i--) arr[length - 1 - i] = createArray.apply(this, args);\n    }\n\n    return arr;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 620,
        "wires": [
            [
                "519724ca0bae0425"
            ]
        ]
    },
    {
        "id": "65d6f38a052e2fb5",
        "type": "inject",
        "z": "6a1ef6a7aef873a7",
        "g": "9d4d96338ab627d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 900,
        "wires": [
            [
                "6749a4e697c2d46c"
            ]
        ]
    },
    {
        "id": "6eaf6a1933c0c45b",
        "type": "template",
        "z": "6a1ef6a7aef873a7",
        "g": "9d4d96338ab627d0",
        "name": "Fondo",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n<script>{{{script}}}</script>\n<style>{{{style}}}</style>\n  <head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n    {{!-- Libreria para la creacion de los PLOTs 3D --}}\n    <script src=\"http://localhost:1880/SocketRodPoint/lib/js/plotly-2.3.0.min.js\"></script>\n    \n  </head>\n  <body>\n\n    {{!-- variables invisibles --}}\n    <div id=\"x\" ng-bind-html=\"msg.x\" style=\"display:none\"></div>\n    {{!-- <div id=\"xvisual\" ng-bind-html=\"msg.x\" ></div> --}}\n    <div id=\"y\" ng-bind-html=\"msg.y\" style=\"display:none\"></div>\n    <div id=\"demo\" onclick=\"myFunction()\">Mostrar</div>\n     <div id='myDiv2'><!-- Plotly chart will be drawn inside this DIV --></div>\n     <script>\n            function myFunction() {\n                var x = document.getElementById(\"x\").innerHTML;//adquision de data desde nodered\n                var y = document.getElementById(\"y\").innerHTML;//adquision de data desde nodered\n                var x1 = x.split(\",\")\n                var y1 = y.split(\",\")\n                for(i = 0; i < x1.length; i++) {\n                    x1[i] = Redondeo(x1[i]);\n                    y1[i] = Redondeo(y1[i]);\n                }\n\n                var trace1  = {\n                    x: x1,\n                    y: y1,\n                    name: 'Dynagrama',\n                    type: 'scatter'\n                };\n                var trace2  = {\n                    x: [40],\n                    y: [2],\n                    name: 'Pump Off',\n                    mode: 'scatter'\n                };\n                var layout = {\n                    title: 'Dinagrama de Fondo',\n                    autosize: false,\n                    width: 620,\n                    height: 420,\n                    yaxis: {\n                        title: 'Carga [Klb]',\n                        tickmode: 'array',\n                        automargin: true,\n                        titlefont: { size:12 },\n                    },\n\n                    xaxis: {\n                        title: 'Posición [in]',\n                        automargin: true,\n                        titlefont: { size:12 },\n                    },\n                    images: [\n                            {\n                                source: \"http://localhost:1880/swcpro-images/hlogo.png\",\n                                xref: \"paper\",\n                                yref: \"paper\",\n                                sizing: \"stretch\",\n                                x: 0.25,\n                                y: 0,\n                                sizex: 0.6,\n                                sizey: 1,\n                                opacity: 0.1,\n                                xanchor: \"left\",\n                                yanchor: \"bottom\"\n                            }],\n                };\n\n                var data = [trace1,trace2];\n                Plotly.newPlot('myDiv2', data,layout);\n                \n                //document.getElementById(\"demo\").innerHTML = x1[1];\n                // alert(\"Calculo Completo\");\n                // funciones utilizadas\n                function Redondeo(x) {\n                    return Number.parseFloat(x).toFixed(2);\n                }\n            }\n    </script>\n\n    <script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n    <script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n    <script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n  </body>\n  \n  <style>\n    .disable-select {\n        user-select: none; /* supported by Chrome and Opera /\n        -webkit-user-select: none; / Safari /\n       -khtml-user-select: none; / Konqueror HTML /\n       -moz-user-select: none; / Firefox /\n       -ms-user-select: none; / Internet Explorer/Edge */\n    }\n  </style>\n</html>",
        "output": "str",
        "x": 420,
        "y": 900,
        "wires": [
            [
                "4040a91ad2f6935f"
            ]
        ]
    },
    {
        "id": "6749a4e697c2d46c",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "9d4d96338ab627d0",
        "name": "Data",
        "func": "\n// datos iniciales no borrar\n// var x = [0.033277, 0.298705, 0.669662, 1.142543, 1.738089, 2.445315, 3.24979, 4.16783, 5.191564, 6.2639, 7.402083, 8.644076, 9.995452, 11.436207, 12.939613, 14.526823, 16.207429, 17.955852, 19.767089, 21.661885, 23.624661, 25.635197, 27.697951, 29.828932, 31.998408, 34.196706, 36.431962, 38.706677, 41.013411, 43.348044, 45.724339, 48.149071, 50.476498, 52.779014, 55.120742, 57.459779, 59.748734, 62.024175, 64.298563, 66.545006, 68.754159, 70.919379, 73.046079, 75.123682, 77.140381, 79.09421, 80.977625, 82.811451, 84.579372, 86.249988, 87.835515, 89.337428, 90.736624, 92.029825, 93.241625, 94.357514, 95.357404, 96.268926, 97.088471, 97.786361, 98.380386, 98.874318, 99.279144, 99.586828, 99.810243, 99.950044, 100, 99.969048, 99.84817, 99.656304, 99.38845, 99.04231, 98.631415, 98.154287, 97.60945, 97.003055, 96.349038, 95.605669, 94.789098, 93.9618, 93.076469, 92.111869, 91.121867, 90.096869, 89.000145, 87.842846, 86.656537, 85.425313, 84.132857, 82.808357, 81.434432, 79.999276, 78.532158, 77.02775, 75.449812, 73.823023, 72.176406, 70.472903, 68.718008, 66.958862, 65.136436, 63.233183, 61.321827, 59.397612, 57.405607, 55.372212, 53.344732, 51.283979, 49.176999, 47.05716, 44.92315, 42.768083, 40.577774, 38.367145, 36.162597, 33.921988, 31.66278, 29.433932, 27.208785, 25.003011, 22.846217, 20.749532, 18.705578, 16.740837, 14.852849, 12.993374, 11.230657, 9.571503, 8.026405, 6.6034, 5.317899, 4.165887, 3.161054, 2.300859, 1.572431, 0.977982, 0.51571, 0.198895, 0.033277, 0];\n// var y = [9.325307, 9.676723, 9.676723, 9.580882, 9.788537, 9.820484, 9.596856, 9.676723, 9.548935, 9.485041, 10.012166, 10.363582, 10.475396, 10.730972, 10.90668, 11.002521, 11.258096, 11.433804, 11.513671, 11.717333, 11.835137, 11.917001, 11.809181, 11.631476, 11.226149, 10.970574, 10.794866, 10.651104, 10.459423, 10.267741, 10.139953, 9.996192, 9.820484, 9.628803, 9.516988, 9.692696, 9.900351, 10.07606, 10.187874, 10.315662, 10.331635, 10.331635, 10.443449, 10.507343, 10.443449, 10.53929, 10.699025, 10.571237, 10.251768, 9.980219, 9.804511, 9.612829, 9.405174, 9.357254, 9.34128, 9.149599, 8.97389, 9.021811, 8.92597, 8.734288, 8.909997, 9.245439, 9.437121, 9.532962, 9.75659, 9.884378, 9.932298, 9.964245, 9.900351, 9.996192, 9.948272, 10.028139, 10.139953, 9.964245, 9.628803, 9.469068, 9.469068, 9.34128, 9.149599, 9.245439, 9.29336, 9.117652, 9.053758, 9.245439, 9.181545, 9.085705, 9.373227, 9.70867, 9.692696, 9.644776, 9.788537, 9.868405, 9.628803, 9.548935, 9.612829, 9.421147, 9.165572, 9.037784, 8.814156, 8.350925, 7.903668, 7.759907, 7.711987, 7.456411, 7.200836, 7.168889, 7.041101, 6.705658, 6.561897, 6.753579, 6.929287, 7.184862, 7.536279, 7.855748, 7.919642, 7.887695, 8.09535, 8.318978, 8.334952, 8.526633, 8.766235, 8.734288, 8.686368, 8.718315, 8.414819, 8.223138, 8.366899, 8.350925, 8.366899, 8.51066, 8.478713, 8.382872, 8.494686, 8.51066, 8.55858, 8.750262, 8.941944, 9.229466, 9.373227, 9.29336];\n\nvar x = global.get(\"Dinagrama.fondo.Desp_CD\")||0;\nvar y = global.get(\"Dinagrama.fondo.Esfu_CD\")||0;\ncontext.set(\"x\",x,\"memoryOnly\");\ncontext.set(\"y\",y,\"memoryOnly\");\nif(x != 0 && y != 0){\n    // si esta configurado\n    msg.x = x;\n    msg.y = y;\n    return msg;\n}else{\n    node.status({fill:\"red\",shape:\"dot\",text:\"NoTieneData\"});\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 900,
        "wires": [
            [
                "6eaf6a1933c0c45b"
            ]
        ]
    },
    {
        "id": "4040a91ad2f6935f",
        "type": "ui_template",
        "z": "6a1ef6a7aef873a7",
        "g": "9d4d96338ab627d0",
        "group": "f2a62c0d6f10d2b7",
        "name": "Downhole",
        "order": 1,
        "width": 12,
        "height": "11",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 580,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "144b8abb78491883",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "AcotarVector",
        "func": "// variables del dinagrama de fondo\nvar Desp_CD_F1 = flow.get(\"Desp_CD_F1\")||0;\nvar Esfu_CD_F1 = flow.get(\"Esfu_CD_F1\")||0;\n// variables acotadas del dinagrama de fondo\nvar Desp_CD=[],Esfu_CD=[];\nvar finalPoint = 0 ; //Define el valor donde acaba los dinagramas\n// tamaños de los vectores\nvar sizex = Desp_CD_F1.length\nvar sizey = Esfu_CD_F1.length\nif ((Desp_CD_F1 != 0) && (Esfu_CD_F1 != 0) && (sizex == sizey)){\n    // existe el vector de desplazamiento y esfuerzo\n    node.status({fill:\"green\",shape:\"dot\",text:\"Calculo\"});\n    // identificar donde se acaba el vector \n    for (let i = 0; i < sizex; i++) {\n        // si los siguientes pasos del vector son cero\n        if (Desp_CD_F1[i] == 0 && Desp_CD_F1[i + 1] == 0 && Desp_CD_F1[i+2] == 0 ){\n            finalPoint = i;\n            break;//Termina el Ciclo For\n        }\n        \n    }\n    for (let i = 0; i < finalPoint; i++) {\n        Desp_CD[i] = Desp_CD_F1[i];\n        Esfu_CD[i] = Esfu_CD_F1[i];\n    }\n    Desp_CD.push(Desp_CD[0]);\n    Esfu_CD.push(Esfu_CD[0]);\n    // cerrar el dinagrama de fondo\n    // guardar las variables globales\n    global.set(\"Dinagrama.fondo.Desp_CD\", Desp_CD);\n    global.set(\"Dinagrama.fondo.Esfu_CD\", Esfu_CD);\n    flow.set(\"Desp_CD_F1\", Desp_CD);\n    flow.set(\"Esfu_CD_F1\", Esfu_CD);\n}else{\n    // no existen los vectores de desplazamiento y espuerzo\n    node.status({fill:\"red\",shape:\"dot\",text:\"NoCalculo\"});\n}\n\n// visualizacion de variables\ncontext.set(\"sizex\", sizex,\"memoryOnly\");\ncontext.set(\"sizey\", sizey,\"memoryOnly\");\ncontext.set(\"finalPoint\", finalPoint,\"memoryOnly\");\ncontext.set(\"Desp\", Desp_CD,\"memoryOnly\");\ncontext.set(\"Esfu\", Esfu_CD,\"memoryOnly\");\ncontext.set(\"Desp_CD_F1\", Desp_CD_F1,\"memoryOnly\");\ncontext.set(\"Esfu_CD_F1\", Esfu_CD_F1,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 700,
        "wires": [
            [
                "b8210abad06fb15e"
            ]
        ]
    },
    {
        "id": "31c115f2ca699261",
        "type": "template",
        "z": "6a1ef6a7aef873a7",
        "g": "9648249e35aead30",
        "name": "Surface1",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n<script>{{{script}}}</script>\n<style>{{{style}}}</style>\n  <head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n    {{!-- Libreria para la creacion de los PLOTs 3D --}}\n    <script src=\"http://localhost:1880/SocketRodPoint/lib/js/plotly-2.3.0.min.js\"></script>\n    \n  </head>\n  <body>\n\n    {{!-- variables invisibles --}}\n    <div id=\"x\" ng-bind-html=\"msg.x\" style=\"display:none\"></div>\n    {{!-- <div id=\"xvisual\" ng-bind-html=\"msg.x\" ></div> --}}\n    <div id=\"y\" ng-bind-html=\"msg.y\" style=\"display:none\"></div>\n    <div id=\"demo\" onclick=\"myFunction()\">Mostrar</div>\n     <div id='myDiv2'><!-- Plotly chart will be drawn inside this DIV --></div>\n     <script>\n            function myFunction() {\n                var x = document.getElementById(\"x\").innerHTML;//adquision de data desde nodered\n                var y = document.getElementById(\"y\").innerHTML;//adquision de data desde nodered\n                var x1 = x.split(\",\")\n                var y1 = y.split(\",\")\n                for(i = 0; i < x1.length; i++) {\n                    x1[i] = Redondeo(x1[i]);\n                    y1[i] = Redondeo(y1[i]);\n                }\n\n                var trace1  = {\n                    x: x1,\n                    y: y1,\n                    name: 'Dynagrama',\n                    type: 'scatter'\n                };\n                var trace2  = {\n                    x: [40],\n                    y: [2],\n                    name: 'Pump Off',\n                    mode: 'scatter'\n                };\n                var layout = {\n                    title: 'Dinagrama de Fondo',\n                    autosize: false,\n                    width: 720,\n                    height: 520,\n                    yaxis: {\n                        title: 'Carga [Klb]',\n                        tickmode: 'array',\n                        automargin: true,\n                        titlefont: { size:12 },\n                    },\n\n                    xaxis: {\n                        title: 'Posición [in]',\n                        automargin: true,\n                        titlefont: { size:12 },\n                    },\n                    images: [\n                            {\n                                source: \"http://localhost:1880/swcpro-images/hlogo.png\",\n                                xref: \"paper\",\n                                yref: \"paper\",\n                                sizing: \"stretch\",\n                                x: 0.25,\n                                y: 0,\n                                sizex: 0.6,\n                                sizey: 1,\n                                opacity: 0.1,\n                                xanchor: \"left\",\n                                yanchor: \"bottom\"\n                            }],\n                };\n\n                var data = [trace1,trace2];\n                Plotly.newPlot('myDiv2', data,layout);\n                \n                //document.getElementById(\"demo\").innerHTML = x1[1];\n                // alert(\"Calculo Completo\");\n                // funciones utilizadas\n                function Redondeo(x) {\n                    return Number.parseFloat(x).toFixed(2);\n                }\n            }\n    </script>\n\n    <script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n    <script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n    <script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n  </body>\n  \n  <style>\n    .disable-select {\n        user-select: none; /* supported by Chrome and Opera /\n        -webkit-user-select: none; / Safari /\n       -khtml-user-select: none; / Konqueror HTML /\n       -moz-user-select: none; / Firefox /\n       -ms-user-select: none; / Internet Explorer/Edge */\n    }\n  </style>\n</html>",
        "output": "str",
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "7e856988dab94127"
            ]
        ]
    },
    {
        "id": "305dc890db8b5ec3",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "9648249e35aead30",
        "name": "Data",
        "func": "\n// datos iniciales average\nvar Desp_CD = [0.033277, 0.298705, 0.669662, 1.142543, 1.738089, 2.445315, 3.24979, 4.16783, 5.191564, 6.2639, 7.402083, 8.644076, 9.995452, 11.436207, 12.939613, 14.526823, 16.207429, 17.955852, 19.767089, 21.661885, 23.624661, 25.635197, 27.697951, 29.828932, 31.998408, 34.196706, 36.431962, 38.706677, 41.013411, 43.348044, 45.724339, 48.149071, 50.476498, 52.779014, 55.120742, 57.459779, 59.748734, 62.024175, 64.298563, 66.545006, 68.754159, 70.919379, 73.046079, 75.123682, 77.140381, 79.09421, 80.977625, 82.811451, 84.579372, 86.249988, 87.835515, 89.337428, 90.736624, 92.029825, 93.241625, 94.357514, 95.357404, 96.268926, 97.088471, 97.786361, 98.380386, 98.874318, 99.279144, 99.586828, 99.810243, 99.950044, 100, 99.969048, 99.84817, 99.656304, 99.38845, 99.04231, 98.631415, 98.154287, 97.60945, 97.003055, 96.349038, 95.605669, 94.789098, 93.9618, 93.076469, 92.111869, 91.121867, 90.096869, 89.000145, 87.842846, 86.656537, 85.425313, 84.132857, 82.808357, 81.434432, 79.999276, 78.532158, 77.02775, 75.449812, 73.823023, 72.176406, 70.472903, 68.718008, 66.958862, 65.136436, 63.233183, 61.321827, 59.397612, 57.405607, 55.372212, 53.344732, 51.283979, 49.176999, 47.05716, 44.92315, 42.768083, 40.577774, 38.367145, 36.162597, 33.921988, 31.66278, 29.433932, 27.208785, 25.003011, 22.846217, 20.749532, 18.705578, 16.740837, 14.852849, 12.993374, 11.230657, 9.571503, 8.026405, 6.6034, 5.317899, 4.165887, 3.161054, 2.300859, 1.572431, 0.977982, 0.51571, 0.198895, 0.033277, 0.001];\nvar Esfu_CD = [9.325307, 9.676723, 9.676723, 9.580882, 9.788537, 9.820484, 9.596856, 9.676723, 9.548935, 9.485041, 10.012166, 10.363582, 10.475396, 10.730972, 10.90668, 11.002521, 11.258096, 11.433804, 11.513671, 11.717333, 11.835137, 11.917001, 11.809181, 11.631476, 11.226149, 10.970574, 10.794866, 10.651104, 10.459423, 10.267741, 10.139953, 9.996192, 9.820484, 9.628803, 9.516988, 9.692696, 9.900351, 10.07606, 10.187874, 10.315662, 10.331635, 10.331635, 10.443449, 10.507343, 10.443449, 10.53929, 10.699025, 10.571237, 10.251768, 9.980219, 9.804511, 9.612829, 9.405174, 9.357254, 9.34128, 9.149599, 8.97389, 9.021811, 8.92597, 8.734288, 8.909997, 9.245439, 9.437121, 9.532962, 9.75659, 9.884378, 9.932298, 9.964245, 9.900351, 9.996192, 9.948272, 10.028139, 10.139953, 9.964245, 9.628803, 9.469068, 9.469068, 9.34128, 9.149599, 9.245439, 9.29336, 9.117652, 9.053758, 9.245439, 9.181545, 9.085705, 9.373227, 9.70867, 9.692696, 9.644776, 9.788537, 9.868405, 9.628803, 9.548935, 9.612829, 9.421147, 9.165572, 9.037784, 8.814156, 8.350925, 7.903668, 7.759907, 7.711987, 7.456411, 7.200836, 7.168889, 7.041101, 6.705658, 6.561897, 6.753579, 6.929287, 7.184862, 7.536279, 7.855748, 7.919642, 7.887695, 8.09535, 8.318978, 8.334952, 8.526633, 8.766235, 8.734288, 8.686368, 8.718315, 8.414819, 8.223138, 8.366899, 8.350925, 8.366899, 8.51066, 8.478713, 8.382872, 8.494686, 8.51066, 8.55858, 8.750262, 8.941944, 9.229466, 9.373227, 9.29336];\nvar tamano = Desp_CD.length;\n// var x = flow.get(\"Desp_CD\")||0;\n// var y = flow.get(\"Esfu_CD\")||0;\n// dinagrama de gas\n// var Desp_CD = [0, 0.224574, 0.496868, 0.867747, 1.328572, 1.89669, 2.570432, 3.393135, 4.289549, 5.288867, 6.43659, 7.582092, 8.956267, 10.358862, 11.857743, 13.417861, 15.107362, 16.864719, 18.724704, 20.694909, 22.753248, 24.913934, 27.180452, 29.517336, 31.980745, 34.454301, 37.049365, 39.683092, 42.40997, 45.156138, 47.962012, 50.882079, 53.930831, 57.022566, 60.115319, 63.246317, 66.44984, 69.764908, 73.08379, 76.393188, 79.750306, 83.170194, 86.615925, 90.03914, 93.471265, 96.937732, 100.408005, 103.837159, 107.215439, 110.6243, 113.99866, 117.343608, 120.608417, 123.832944, 127.008757, 130.113978, 133.155573, 136.101284, 138.989571, 141.78246, 144.483574, 147.073823, 149.550348, 151.908622, 154.137773, 156.215994, 158.15917, 159.965142, 161.615724, 163.08193, 164.379924, 165.509708, 166.437277, 167.147583, 167.667381, 167.943159, 168, 167.841807, 167.435134, 166.758799, 165.843461, 164.691349, 163.276265, 161.618832, 159.701771, 157.527869, 155.123882, 152.472531, 149.581061, 146.475114, 143.132951, 139.568506, 135.796832, 131.887744, 127.922138, 123.778288, 119.424977, 114.975712, 110.483794, 105.959259, 101.358626, 96.699386, 92.048245, 87.434791, 82.833975, 78.277395, 73.817031, 69.484447, 65.242435, 61.114198, 57.103149, 53.299035, 49.670081, 46.256423, 43.033533, 39.779907, 36.497077, 33.521516, 30.745085, 28.043689, 25.362559, 22.859935, 20.567032, 18.384838, 16.243884, 14.223881, 12.392976, 10.701904, 9.092276, 7.681779, 6.402267, 5.286767, 4.234804, 3.277176, 2.469625, 1.774385, 1.181493, 0.708925, 0.374798, 0.14497, 0, 0.02183]\n// var Esfu_CD = [11.471815, 11.586548, 11.357083, 11.190199, 11.273641, 11.492676, 12.014187, 12.452257, 12.493978, 12.546129, 13.088501, 12.994629, 13.735175, 13.808186, 13.808186, 13.933349, 14.350558, 15.122395, 15.915092, 16.697359, 16.958115, 17.239731, 17.19801, 17.114568, 17.124998, 16.885103, 16.916394, 16.958115, 17.20844, 17.323173, 17.531777, 17.521347, 17.521347, 17.500487, 17.229301, 17.250161, 16.958115, 16.999836, 17.020696, 16.978975, 16.874673, 16.634778, 16.499185, 16.332301, 16.196708, 15.80036, 15.779499, 15.769069, 15.769069, 15.83165, 15.716918, 15.581325, 15.383151, 15.393581, 15.330999, 15.289278, 15.080674, 15.028523, 15.038953, 14.90336, 14.8825, 14.507011, 14.246256, 14.225395, 14.194105, 14.141953, 13.97507, 13.756035, 13.672593, 13.683024, 13.463989, 13.328396, 13.213663, 12.900756, 12.994629, 12.963338, 12.921617, 12.733873, 12.316664, 12.181071, 12.181071, 11.909885, 11.722141, 11.638699, 11.471815, 11.409234, 11.377943, 11.190199, 11.012885, 10.992025, 10.929444, 10.981595, 10.939874, 10.950304, 11.21106, 11.461385, 11.461385, 11.607408, 11.649129, 11.836873, 12.13935, 12.212361, 12.347954, 12.504408, 12.640001, 12.921617, 12.963338, 12.765164, 12.671291, 12.577419, 12.358385, 11.826443, 10.814711, 9.38577, 8.655654, 8.311456, 7.946399, 8.217584, 8.853828, 9.490072, 10.032444, 10.251479, 10.814711, 11.304932, 11.450955, 11.836873, 12.702582, 13.130221, 13.662163, 14.277546, 14.068942, 13.474419, 12.59828, 12.118489, 11.68042, 11.075467, 10.658258, 10.626967, 10.522665, 10.105456, 10.595676, 11.398804]\n// dinagrama con mugre en la bomba\n// var Desp_CD = [0, 0.369189, 0.742716, 1.205566, 1.778803, 2.499349, 3.430619, 4.379978, 5.380327, 6.440896, 7.604035, 8.912963, 10.295033, 11.780759, 13.358305, 14.969793, 16.746506, 18.666076, 20.732845, 22.887308, 25.102317, 27.348906, 29.7339, 31.788957, 34.171687, 36.538843, 38.853071, 41.260312, 43.748624, 46.268991, 48.884218, 51.471383, 54.127999, 56.84994, 59.511133, 62.543436, 65.520964, 68.554151, 71.558192, 74.465868, 77.438326, 80.617816, 83.954604, 87.312385, 90.515057, 93.738246, 97.128289, 100.392216, 103.62591, 106.915589, 110.139852, 113.28317, 116.280066, 119.437953, 122.661055, 125.792354, 128.758445, 131.674865, 134.428574, 137.203588, 140.003721, 142.742348, 145.314789, 147.637213, 149.930816, 152.162913, 154.371834, 156.46908, 158.319785, 159.917869, 161.433704, 162.843404, 164.104183, 165.218322, 165.984281, 166.654637, 167.230909, 167.734382, 168, 167.874872, 167.598978, 167.073067, 166.408009, 165.505097, 164.299179, 162.763323, 161.07746, 159.144188, 157.044079, 154.714803, 152.06167, 149.140279, 145.950629, 142.613035, 139.269641, 135.966026, 132.625445, 129.164502, 125.108666, 121.044858, 116.945713, 112.649543, 108.145055, 103.600561, 99.222486, 94.849483, 90.359702, 85.988561, 81.628315, 77.295455, 72.872855, 68.415353, 64.178456, 60.01405, 56.325866, 52.648767, 49.142431, 45.572308, 42.106817, 38.712733, 35.642846, 32.799755, 30.117871, 27.460333, 24.862798, 22.387488, 20.153306, 18.111606, 16.297352, 14.59316, 12.899673, 11.233423, 9.573913, 8.100912, 6.768705, 5.617685, 4.612127, 3.621577, 2.691247, 1.865225, 1.279462, 0.870653, 0.587434, 0.319493, 0.090653, 0, 0.069794];\n// var Esfu_CD = [7.931805, 7.958692, 8.057279, 8.890786, 9.016261, 9.482308, 9.598819, 9.52712, 9.518157, 9.56297, 9.804956, 10.029017, 10.118641, 10.118641, 10.405439, 10.36959, 10.22619, 10.064866, 9.885618, 9.840805, 9.85873, 9.85873, 9.787031, 10.710162, 16.033854, 16.320652, 15.630544, 16.150366, 15.756018, 15.773943, 15.962154, 16.096591, 16.338577, 16.383389, 16.652263, 17.566432, 13.309271, 12.520576, 12.71775, 12.018679, 12.64605, 12.798412, 12.905961, 12.807374, 12.538501, 12.538501, 12.386139, 11.221022, 13.92768, 14.689487, 14.590901, 15.173459, 14.725337, 14.62675, 14.429577, 14.384764, 14.357877, 14.142778, 14.035229, 14.904586, 13.45267, 12.538501, 12.35029, 10.970073, 11.364421, 11.722919, 11.964905, 12.045567, 11.973867, 12.018679, 11.94698, 11.077623, 11.516782, 12.063491, 12.045567, 13.022473, 12.735675, 12.081416, 11.624332, 11.328571, 11.265834, 9.751181, 9.52712, 9.688444, 9.643632, 9.329946, 9.312021, 7.958692, 7.922842, 8.155866, 8.388889, 8.774275, 8.729462, 8.7205, 8.370965, 5.05486, 2.724625, 2.527451, 1.764523, 2.67085, 3.692569, 3.809081, 3.764268, 3.674644, 4.239278, 4.65155, 5.260997, 5.538832, 6.417152, 7.250659, 7.645007, 8.406814, 8.603988, 8.191716, 8.24549, 8.290303, 8.433702, 8.173791, 8.191716, 8.093129, 7.94973, 7.743594, 7.47472, 6.802537, 6.677063, 7.483683, 7.600194, 7.627082, 7.573307, 7.58227, 7.645007, 7.797368, 8.146903, 8.344077, 8.290303, 8.550213, 8.962486, 8.819087, 8.595026, 8.084166, 8.191716, 8.299265, 8.523326, 8.460589, 7.940767, 7.770481, 7.922842];\n\n\nmsg.x = Desp_CD;\nmsg.y = Esfu_CD;\nvar tamano = Desp_CD.length;\n// prueba con mitad de datos\n// var vectorX = [], vectorY = [];\n// for (let i = 0; i < tamano; i = i + 2) {\n//     var indice = i / 2;\n//     vectorY[indice] = Esfu_CD[i] ;\n//     vectorX[indice] = Desp_CD[i] ;\n// }\n\n// variables de monitoreo\ncontext.set(\"x\", Desp_CD,\"memoryOnly\");\ncontext.set(\"y\", Esfu_CD,\"memoryOnly\");\ncontext.set(\"tamano\", tamano,\"memoryOnly\");\n// variables Globales\nglobal.set(\"Dinagrama.superficie.Desp_CD\", Desp_CD);\nglobal.set(\"Dinagrama.superficie.Esfu_CD\", Esfu_CD);\nglobal.set(\"Dinagrama.superficie.nMuestras\", tamano);\n// logica para guardar la mitad de los valores \n// global.set(\"Dinagrama.superficie.Desp_CD\", vectorX);\n// global.set(\"Dinagrama.superficie.Esfu_CD\", vectorY);\n// global.set(\"Dinagrama.superficie.nMuestras\", vectorX.length);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1060,
        "wires": [
            [
                "31c115f2ca699261"
            ]
        ]
    },
    {
        "id": "01cf9b61f66c1ef5",
        "type": "inject",
        "z": "6a1ef6a7aef873a7",
        "g": "9648249e35aead30",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 1060,
        "wires": [
            [
                "305dc890db8b5ec3"
            ]
        ]
    },
    {
        "id": "7e856988dab94127",
        "type": "ui_template",
        "z": "6a1ef6a7aef873a7",
        "g": "9648249e35aead30",
        "group": "ded8f6853f86499e",
        "name": "Surface",
        "order": 1,
        "width": 12,
        "height": "11",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "b8210abad06fb15e",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "FiltroDinagrama",
        "func": "var Desp_CD_F1 = flow.get(\"Desp_CD_F1\") || 0;\nvar Esfu_CD_F1 = flow.get(\"Esfu_CD_F1\") || 0;\nvar NumeroMuestras = flow.get(\"NumeroMuestras\")||0;\nvar Entro = context.get(\"Entro\")||0;\n// variables auxiliares para el filtro\n\nvar Desp_CD_F0= Desp_CD_F1[0];\nvar Desp_CD_F1P= Desp_CD_F1[1];\nvar Desp_CD_F2P= Desp_CD_F1[2];\nvar Desp_CD_F3= Desp_CD_F1[3];\nvar Desp_CD_F4= Desp_CD_F1[4];\nvar Desp_CD_F5= Desp_CD_F1[5];\nvar Desp_CD_F6= Desp_CD_F1[6];\nvar Desp_CD_F144= Desp_CD_F1[NumeroMuestras - 5];\nvar Desp_CD_F145= Desp_CD_F1[NumeroMuestras - 4];\nvar Desp_CD_F146= Desp_CD_F1[NumeroMuestras - 3];\nvar Desp_CD_F147= Desp_CD_F1[NumeroMuestras - 2];\nvar Desp_CD_F148= Desp_CD_F1[NumeroMuestras - 1];\nvar Desp_CD_F149= Desp_CD_F1[NumeroMuestras];\n\nvar Esfu_CD_F0= Esfu_CD_F1[0];\nvar Esfu_CD_F1P= Esfu_CD_F1[1];\nvar Esfu_CD_F2P= Esfu_CD_F1[2];\nvar Esfu_CD_F3= Esfu_CD_F1[3];\nvar Esfu_CD_F4= Esfu_CD_F1[4];\nvar Esfu_CD_F5= Esfu_CD_F1[5];\nvar Esfu_CD_F6= Esfu_CD_F1[6];\nvar Esfu_CD_F144= Esfu_CD_F1[NumeroMuestras - 5];\nvar Esfu_CD_F145= Esfu_CD_F1[NumeroMuestras - 4];\nvar Esfu_CD_F146= Esfu_CD_F1[NumeroMuestras - 3];\nvar Esfu_CD_F147= Esfu_CD_F1[NumeroMuestras - 2];\nvar Esfu_CD_F148= Esfu_CD_F1[NumeroMuestras - 1];\nvar Esfu_CD_F149= Esfu_CD_F1[NumeroMuestras];\nif (Desp_CD_F1 != 0 && Esfu_CD_F1 != 0){\n    node.status({fill:\"green\",shape:\"ring\",text:\"ok\"});\n    // creación del filtro\n    for (var Conteo12 = 0; Conteo12 <= NumeroMuestras-1; Conteo12++) {\n        if((Conteo12<=(NumeroMuestras-6))&&Conteo12>6){\n            Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F1[Conteo12 + 1] + Desp_CD_F1[Conteo12 + 2] + Desp_CD_F1[Conteo12 + 3] + Desp_CD_F1[Conteo12 + 4] + Desp_CD_F1[Conteo12 + 5] + Desp_CD_F1[Conteo12 + 6] + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F1[Conteo12 - 3] + Desp_CD_F1[Conteo12 - 4] + Desp_CD_F1[Conteo12 - 5] + Desp_CD_F1[Conteo12 - 6]) / 13.0;\n            Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F1[Conteo12 + 1] + Esfu_CD_F1[Conteo12 + 2] + Esfu_CD_F1[Conteo12 + 3] + Esfu_CD_F1[Conteo12 + 4] + Esfu_CD_F1[Conteo12 + 5] + Esfu_CD_F1[Conteo12 + 6] + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F1[Conteo12 - 3] + Esfu_CD_F1[Conteo12 - 4] + Esfu_CD_F1[Conteo12 - 5] + Esfu_CD_F1[Conteo12 - 6]) / 13.0;\n        }\n        if(Conteo12 == 0){\n\n            Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F1[Conteo12 + 1] + Desp_CD_F1[Conteo12 + 2] + Desp_CD_F1[Conteo12 + 3] + Desp_CD_F1[Conteo12 + 4] + Desp_CD_F1[Conteo12 + 5] + Desp_CD_F1[Conteo12 + 6] + Desp_CD_F149 + Desp_CD_F148 + Desp_CD_F147 + Desp_CD_F146 + Desp_CD_F145 + Desp_CD_F144) / 13.0;\n            Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F1[Conteo12 + 1] + Esfu_CD_F1[Conteo12 + 2] + Esfu_CD_F1[Conteo12 + 3] + Esfu_CD_F1[Conteo12 + 4] + Esfu_CD_F1[Conteo12 + 5] + Esfu_CD_F1[Conteo12 + 6] + Esfu_CD_F149 + Esfu_CD_F148 + Esfu_CD_F147 + Esfu_CD_F146 + Esfu_CD_F145 + Esfu_CD_F144) / 13.0;\n        }\n        if (Conteo12 = 1) {\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F1[Conteo12 + 1] + Desp_CD_F1[Conteo12 + 2] + Desp_CD_F1[Conteo12 + 3] + Desp_CD_F1[Conteo12 + 4] + Desp_CD_F1[Conteo12 + 5] + Desp_CD_F1[Conteo12 + 6] + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F149 + Desp_CD_F148 + Desp_CD_F147 + Desp_CD_F146 + Desp_CD_F145) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F1[Conteo12 + 1] + Esfu_CD_F1[Conteo12 + 2] + Esfu_CD_F1[Conteo12 + 3] + Esfu_CD_F1[Conteo12 + 4] + Esfu_CD_F1[Conteo12 + 5] + Esfu_CD_F1[Conteo12 + 6] + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F149 + Esfu_CD_F148 + Esfu_CD_F147 + Esfu_CD_F146 + Esfu_CD_F145) / 13.0;\n        }\n\n        if (Conteo12 = 2){\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F1[Conteo12 + 1] + Desp_CD_F1[Conteo12 + 2] + Desp_CD_F1[Conteo12 + 3] + Desp_CD_F1[Conteo12 + 4] + Desp_CD_F1[Conteo12 + 5] + Desp_CD_F1[Conteo12 + 6] + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F149 + Desp_CD_F148 + Desp_CD_F147 + Desp_CD_F146) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F1[Conteo12 + 1] + Esfu_CD_F1[Conteo12 + 2] + Esfu_CD_F1[Conteo12 + 3] + Esfu_CD_F1[Conteo12 + 4] + Esfu_CD_F1[Conteo12 + 5] + Esfu_CD_F1[Conteo12 + 6] + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F149 + Esfu_CD_F148 + Esfu_CD_F147 + Esfu_CD_F146) / 13.0;\n        }\n\n        if (Conteo12 = 3) {\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F1[Conteo12 + 1] + Desp_CD_F1[Conteo12 + 2] + Desp_CD_F1[Conteo12 + 3] + Desp_CD_F1[Conteo12 + 4] + Desp_CD_F1[Conteo12 + 5] + Desp_CD_F1[Conteo12 + 6] + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F1[Conteo12 - 3] + Desp_CD_F149 + Desp_CD_F148 + Desp_CD_F147) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F1[Conteo12 + 1] + Esfu_CD_F1[Conteo12 + 2] + Esfu_CD_F1[Conteo12 + 3] + Esfu_CD_F1[Conteo12 + 4] + Esfu_CD_F1[Conteo12 + 5] + Esfu_CD_F1[Conteo12 + 6] + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F1[Conteo12 - 3] + Esfu_CD_F149 + Esfu_CD_F148 + Esfu_CD_F147) / 13.0;\n        }\n\n        if (Conteo12 = 4) {\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F1[Conteo12 + 1] + Desp_CD_F1[Conteo12 + 2] + Desp_CD_F1[Conteo12 + 3] + Desp_CD_F1[Conteo12 + 4] + Desp_CD_F1[Conteo12 + 5] + Desp_CD_F1[Conteo12 + 6] + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F1[Conteo12 - 3] + Desp_CD_F1[Conteo12 - 4] + Desp_CD_F149 + Desp_CD_F148) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F1[Conteo12 + 1] + Esfu_CD_F1[Conteo12 + 2] + Esfu_CD_F1[Conteo12 + 3] + Esfu_CD_F1[Conteo12 + 4] + Esfu_CD_F1[Conteo12 + 5] + Esfu_CD_F1[Conteo12 + 6] + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F1[Conteo12 - 3] + Esfu_CD_F1[Conteo12 - 4] + Esfu_CD_F149 + Esfu_CD_F148) / 13.0;\n        }\n\n        if (Conteo12 = 5) {\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F1[Conteo12 + 1] + Desp_CD_F1[Conteo12 + 2] + Desp_CD_F1[Conteo12 + 3] + Desp_CD_F1[Conteo12 + 4] + Desp_CD_F1[Conteo12 + 5] + Desp_CD_F1[Conteo12 + 6] + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F1[Conteo12 - 3] + Desp_CD_F1[Conteo12 - 4] + Desp_CD_F1[Conteo12 - 5] + Desp_CD_F149) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F1[Conteo12 + 1] + Esfu_CD_F1[Conteo12 + 2] + Esfu_CD_F1[Conteo12 + 3] + Esfu_CD_F1[Conteo12 + 4] + Esfu_CD_F1[Conteo12 + 5] + Esfu_CD_F1[Conteo12 + 6] + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F1[Conteo12 - 3] + Esfu_CD_F1[Conteo12 - 4] + Esfu_CD_F1[Conteo12 - 5] + Esfu_CD_F149) / 13.0;\n        }\n\n        if (Conteo12 = 6) {\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F1[Conteo12 + 1] + Desp_CD_F1[Conteo12 + 2] + Desp_CD_F1[Conteo12 + 3] + Desp_CD_F1[Conteo12 + 4] + Desp_CD_F1[Conteo12 + 5] + Desp_CD_F1[Conteo12 + 6] + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F1[Conteo12 - 3] + Desp_CD_F1[Conteo12 - 4] + Desp_CD_F1[Conteo12 - 5] + Desp_CD_F1[Conteo12 - 6]) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F1[Conteo12 + 1] + Esfu_CD_F1[Conteo12 + 2] + Esfu_CD_F1[Conteo12 + 3] + Esfu_CD_F1[Conteo12 + 4] + Esfu_CD_F1[Conteo12 + 5] + Esfu_CD_F1[Conteo12 + 6] + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F1[Conteo12 - 3] + Esfu_CD_F1[Conteo12 - 4] + Esfu_CD_F1[Conteo12 - 5] + Esfu_CD_F1[Conteo12 - 6]) / 13.0;\n        }\n\n\n        if (Conteo12 = NumeroMuestras - 5) {\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F145 + Desp_CD_F146 + Desp_CD_F147 + Desp_CD_F148 + Desp_CD_F149 + Desp_CD_F0 + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F1[Conteo12 - 3] + Desp_CD_F1[Conteo12 - 4] + Desp_CD_F1[Conteo12 - 5] + Desp_CD_F1[Conteo12 - 6]) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F145 + Esfu_CD_F146 + Esfu_CD_F147 + Esfu_CD_F148 + Esfu_CD_F149 + Esfu_CD_F0 + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F1[Conteo12 - 3] + Esfu_CD_F1[Conteo12 - 4] + Esfu_CD_F1[Conteo12 - 5] + Esfu_CD_F1[Conteo12 - 6]) / 13.0;\n        }\n\n        if (Conteo12 = NumeroMuestras - 4) {\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F149 + Desp_CD_F148 + Desp_CD_F147 + Desp_CD_F146 + Desp_CD_F1P + Desp_CD_F0 + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F1[Conteo12 - 3] + Desp_CD_F1[Conteo12 - 4] + Desp_CD_F1[Conteo12 - 5] + Desp_CD_F1[Conteo12 - 6]) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F149 + Esfu_CD_F148 + Esfu_CD_F147 + Esfu_CD_F146 + Esfu_CD_F1P + Esfu_CD_F0 + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F1[Conteo12 - 3] + Esfu_CD_F1[Conteo12 - 4] + Esfu_CD_F1[Conteo12 - 5] + Esfu_CD_F1[Conteo12 - 6]) / 13.0;\n        }\n\n        if (Conteo12 = NumeroMuestras - 3) {\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F149 + Desp_CD_F148 + Desp_CD_F147 + Desp_CD_F2P + Desp_CD_F1P + Desp_CD_F0 + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F1[Conteo12 - 3] + Desp_CD_F1[Conteo12 - 4] + Desp_CD_F1[Conteo12 - 5] + Desp_CD_F1[Conteo12 - 6]) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F149 + Esfu_CD_F148 + Esfu_CD_F147 + Esfu_CD_F2P + Esfu_CD_F1P + Esfu_CD_F0 + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F1[Conteo12 - 3] + Esfu_CD_F1[Conteo12 - 4] + Esfu_CD_F1[Conteo12 - 5] + Esfu_CD_F1[Conteo12 - 6]) / 13.0;\n        }\n\n        if (Conteo12 = NumeroMuestras - 2) {\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F149 + Desp_CD_F148 + Desp_CD_F3 + Desp_CD_F2P + Desp_CD_F1P + Desp_CD_F0 + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F1[Conteo12 - 3] + Desp_CD_F1[Conteo12 - 4] + Desp_CD_F1[Conteo12 - 5] + Desp_CD_F1[Conteo12 - 6]) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F149 + Esfu_CD_F148 + Esfu_CD_F3 + Esfu_CD_F2P + Esfu_CD_F1P + Esfu_CD_F0 + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F1[Conteo12 - 3] + Esfu_CD_F1[Conteo12 - 4] + Esfu_CD_F1[Conteo12 - 5] + Esfu_CD_F1[Conteo12 - 6]) / 13.0;\n        }\n\n        if (Conteo12 = NumeroMuestras - 1) {\n        Desp_CD_F1[Conteo12] = (Desp_CD_F1[Conteo12] + Desp_CD_F149 + Desp_CD_F4 + Desp_CD_F3 + Desp_CD_F2P + Desp_CD_F1P + Desp_CD_F0 + Desp_CD_F1[Conteo12 - 1] + Desp_CD_F1[Conteo12 - 2] + Desp_CD_F1[Conteo12 - 3] + Desp_CD_F1[Conteo12 - 4] + Desp_CD_F1[Conteo12 - 5] + Desp_CD_F1[Conteo12 - 6]) / 13.0;\n        Esfu_CD_F1[Conteo12] = (Esfu_CD_F1[Conteo12] + Esfu_CD_F149 + Esfu_CD_F4 + Esfu_CD_F3 + Esfu_CD_F2P + Esfu_CD_F1P + Esfu_CD_F0 + Esfu_CD_F1[Conteo12 - 1] + Esfu_CD_F1[Conteo12 - 2] + Esfu_CD_F1[Conteo12 - 3] + Esfu_CD_F1[Conteo12 - 4] + Esfu_CD_F1[Conteo12 - 5] + Esfu_CD_F1[Conteo12 - 6]) / 13.0;\n        }\n\n        if (Conteo12 = NumeroMuestras) {\n        Esfu_CD_F1[Conteo12] = Esfu_CD_F1[0];\n        Desp_CD_F1[Conteo12] = Desp_CD_F1[0];\n        }\n        \n    }\n    // guardar los vectores\n    global.set(\"Dinagrama.fondo.Desp_CD\", Desp_CD_F1);\n    global.set(\"Dinagrama.fondo.nMuestras\", Desp_CD_F1.length);\n    global.set(\"Dinagrama.fondo.Esfu_CD\", Esfu_CD_F1);\n    flow.set(\"Desp_CD_F1\",Desp_CD_F1);\n    flow.set(\"Esfu_CD_F1\",Esfu_CD_F1);\n    node.status({fill:\"green\",shape:\"ring\",text:\"OK\"});\n\n}else{\n    node.status({fill:\"red\",shape:\"ring\",text:\"NODinagrama\"});\n}\ncontext.set(\"NumeroMuestras\", NumeroMuestras,\"memoryOnly\");\ncontext.set(\"Esfu_CD_F1\", Esfu_CD_F1,\"memoryOnly\");\ncontext.set(\"Desp_CD_F1\", Desp_CD_F1,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 740,
        "wires": [
            [
                "d0f5dfd40edd6ea0"
            ]
        ]
    },
    {
        "id": "05d96036920b3247",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "9d4d96338ab627d0",
        "name": "Data",
        "func": "\n// datos iniciales no borrar\n// var x = [0.033277, 0.298705, 0.669662, 1.142543, 1.738089, 2.445315, 3.24979, 4.16783, 5.191564, 6.2639, 7.402083, 8.644076, 9.995452, 11.436207, 12.939613, 14.526823, 16.207429, 17.955852, 19.767089, 21.661885, 23.624661, 25.635197, 27.697951, 29.828932, 31.998408, 34.196706, 36.431962, 38.706677, 41.013411, 43.348044, 45.724339, 48.149071, 50.476498, 52.779014, 55.120742, 57.459779, 59.748734, 62.024175, 64.298563, 66.545006, 68.754159, 70.919379, 73.046079, 75.123682, 77.140381, 79.09421, 80.977625, 82.811451, 84.579372, 86.249988, 87.835515, 89.337428, 90.736624, 92.029825, 93.241625, 94.357514, 95.357404, 96.268926, 97.088471, 97.786361, 98.380386, 98.874318, 99.279144, 99.586828, 99.810243, 99.950044, 100, 99.969048, 99.84817, 99.656304, 99.38845, 99.04231, 98.631415, 98.154287, 97.60945, 97.003055, 96.349038, 95.605669, 94.789098, 93.9618, 93.076469, 92.111869, 91.121867, 90.096869, 89.000145, 87.842846, 86.656537, 85.425313, 84.132857, 82.808357, 81.434432, 79.999276, 78.532158, 77.02775, 75.449812, 73.823023, 72.176406, 70.472903, 68.718008, 66.958862, 65.136436, 63.233183, 61.321827, 59.397612, 57.405607, 55.372212, 53.344732, 51.283979, 49.176999, 47.05716, 44.92315, 42.768083, 40.577774, 38.367145, 36.162597, 33.921988, 31.66278, 29.433932, 27.208785, 25.003011, 22.846217, 20.749532, 18.705578, 16.740837, 14.852849, 12.993374, 11.230657, 9.571503, 8.026405, 6.6034, 5.317899, 4.165887, 3.161054, 2.300859, 1.572431, 0.977982, 0.51571, 0.198895, 0.033277, 0];\n// var y = [9.325307, 9.676723, 9.676723, 9.580882, 9.788537, 9.820484, 9.596856, 9.676723, 9.548935, 9.485041, 10.012166, 10.363582, 10.475396, 10.730972, 10.90668, 11.002521, 11.258096, 11.433804, 11.513671, 11.717333, 11.835137, 11.917001, 11.809181, 11.631476, 11.226149, 10.970574, 10.794866, 10.651104, 10.459423, 10.267741, 10.139953, 9.996192, 9.820484, 9.628803, 9.516988, 9.692696, 9.900351, 10.07606, 10.187874, 10.315662, 10.331635, 10.331635, 10.443449, 10.507343, 10.443449, 10.53929, 10.699025, 10.571237, 10.251768, 9.980219, 9.804511, 9.612829, 9.405174, 9.357254, 9.34128, 9.149599, 8.97389, 9.021811, 8.92597, 8.734288, 8.909997, 9.245439, 9.437121, 9.532962, 9.75659, 9.884378, 9.932298, 9.964245, 9.900351, 9.996192, 9.948272, 10.028139, 10.139953, 9.964245, 9.628803, 9.469068, 9.469068, 9.34128, 9.149599, 9.245439, 9.29336, 9.117652, 9.053758, 9.245439, 9.181545, 9.085705, 9.373227, 9.70867, 9.692696, 9.644776, 9.788537, 9.868405, 9.628803, 9.548935, 9.612829, 9.421147, 9.165572, 9.037784, 8.814156, 8.350925, 7.903668, 7.759907, 7.711987, 7.456411, 7.200836, 7.168889, 7.041101, 6.705658, 6.561897, 6.753579, 6.929287, 7.184862, 7.536279, 7.855748, 7.919642, 7.887695, 8.09535, 8.318978, 8.334952, 8.526633, 8.766235, 8.734288, 8.686368, 8.718315, 8.414819, 8.223138, 8.366899, 8.350925, 8.366899, 8.51066, 8.478713, 8.382872, 8.494686, 8.51066, 8.55858, 8.750262, 8.941944, 9.229466, 9.373227, 9.29336];\n\nvar x = flow.get(\"Desp_CD_F1\") || 0;\nvar y = flow.get(\"Esfu_CD_F1\") || 0;\ncontext.set(\"x\",x,\"memoryOnly\");\ncontext.set(\"y\",y,\"memoryOnly\");\nif(x != 0 && y != 0){\n    // si esta configurado\n    msg.x = x;\n    msg.y = y;\n    return msg;\n}else{\n    node.status({fill:\"red\",shape:\"dot\",text:\"NoTieneData\"});\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 940,
        "wires": [
            [
                "6eaf6a1933c0c45b"
            ]
        ]
    },
    {
        "id": "067c35d016f6c30c",
        "type": "inject",
        "z": "6a1ef6a7aef873a7",
        "g": "9d4d96338ab627d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 940,
        "wires": [
            [
                "05d96036920b3247"
            ]
        ]
    },
    {
        "id": "bbd14a02c90c8979",
        "type": "link in",
        "z": "6a1ef6a7aef873a7",
        "g": "54bb46e073aa1e2e",
        "name": "",
        "links": [
            "ecf98f3f.4a704"
        ],
        "x": 635,
        "y": 240,
        "wires": [
            [
                "843e250256d34d87"
            ]
        ]
    },
    {
        "id": "d0f5dfd40edd6ea0",
        "type": "function",
        "z": "6a1ef6a7aef873a7",
        "g": "a063560e4a0a3bf1",
        "name": "VariablesParaSensorLess",
        "func": "var numSarta = flow.get(\"numSarta\");\nvar parDinagram = flow.get(\"parDinagram\");\n\ncontext.set(\"numSarta\", numSarta, \"memoryOnly\");\ncontext.set(\"parDinagram\", parDinagram, \"memoryOnly\");\n\nglobal.set(\"SensorLess.numSarta\", numSarta);\nglobal.set(\"SensorLess.parDinagram\", parDinagram);\n\n// node.status({fill:\"red\",shape:\"ring\",text:\"Enviado\"});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "97e367536885e6cd",
        "type": "change",
        "z": "035da46c73925442",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 270,
        "wires": [
            []
        ]
    },
    {
        "id": "171758641cc4e0f6",
        "type": "pccc out",
        "z": "035da46c73925442",
        "endpoint": "e9d237aaf9318e74",
        "variable": "CommandWord",
        "name": "",
        "x": 1660,
        "y": 110,
        "wires": []
    },
    {
        "id": "24a48109d7ab3b22",
        "type": "delay",
        "z": "035da46c73925442",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1090,
        "y": 110,
        "wires": [
            [
                "d438541735ec8419"
            ]
        ]
    },
    {
        "id": "d438541735ec8419",
        "type": "change",
        "z": "035da46c73925442",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 110,
        "wires": [
            [
                "b6f62db856a7a050"
            ]
        ]
    },
    {
        "id": "6ed6869cc5cbdbee",
        "type": "delay",
        "z": "035da46c73925442",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1640,
        "y": 190,
        "wires": [
            [
                "a2de798176a15ce4"
            ]
        ]
    },
    {
        "id": "0b3680f025274c11",
        "type": "inject",
        "z": "035da46c73925442",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1490,
        "y": 70,
        "wires": [
            [
                "171758641cc4e0f6"
            ]
        ]
    },
    {
        "id": "95b1ebf28bb264c7",
        "type": "function",
        "z": "035da46c73925442",
        "name": "Bloque de arranque por protección",
        "func": "var Prot = global.get(\"Protections.General\",'memoryOnly')||false;\nvar FallaGeneral = global.get(\"IO.Functions.DO['Falla general']\",\"memoryOnly\")||false;\nif ((Prot || FallaGeneral) &&  ((msg.command == \"Arranque 'Reverse'\") || (msg.command == \"Arranque 'Forward'\")) ){return;}\nelse{return msg;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1520,
        "y": 150,
        "wires": [
            [
                "b6f62db856a7a050"
            ]
        ]
    },
    {
        "id": "214024d92e28c0eb",
        "type": "switch",
        "z": "035da46c73925442",
        "name": "comando",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Arranque",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Parada",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1250,
        "y": 190,
        "wires": [
            [
                "51889898aa9d2367"
            ],
            [
                "10677a146fd26bef"
            ]
        ]
    },
    {
        "id": "4365adb6c57be5a2",
        "type": "function",
        "z": "035da46c73925442",
        "name": "time",
        "func": "var rampadesc = global.get(\"C2S.Speed_Control.Decel\")||0;\nvar hzmotor = global.get(\"C2S.Motor_Control.Nameplate.Hertz\")||60;\nvar frecact = global.get(\"C2S.Implicit.Output_Frequency\",\"memoryOnly\")||0;\nfrecact = Math.abs(frecact);\n\nmsg.delay = parseInt(((frecact/hzmotor)*rampadesc)*1000+500);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 230,
        "wires": [
            [
                "edd7e9397d183c8e"
            ]
        ]
    },
    {
        "id": "edd7e9397d183c8e",
        "type": "delay",
        "z": "035da46c73925442",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1710,
        "y": 230,
        "wires": [
            [
                "a2de798176a15ce4"
            ]
        ]
    },
    {
        "id": "b6f62db856a7a050",
        "type": "function",
        "z": "035da46c73925442",
        "name": "Int to IEEE 754",
        "func": "v = new DataView(new ArrayBuffer(4));\nmsg.payload = msg.payload.toString(16);\nv.setUint32(0, '0x'+ msg.payload);\nnode.status({fill:\"green\",shape:\"dot\",text:v.getFloat32(0)});\n\nmsg.payload = v.getFloat32(0);\n\nreturn msg;\n\n// Fuentes:\n// https://stackoverflow.com/questions/41635908/node-red-parsing-json-data-and-converting-it-into-binary\n// https://stackoverflow.com/questions/49221045/javascript-hexadecimal-string-to-ieee-754-floating-point",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1460,
        "y": 110,
        "wires": [
            [
                "171758641cc4e0f6"
            ]
        ]
    },
    {
        "id": "938c8afc9524926f",
        "type": "switch",
        "z": "035da46c73925442",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Basic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Direction",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 200,
        "wires": [
            [
                "c3c01c1fc2afb8e3"
            ],
            [
                "6693af4c82947f27"
            ]
        ]
    },
    {
        "id": "c3c01c1fc2afb8e3",
        "type": "switch",
        "z": "035da46c73925442",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reset",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 340,
        "y": 150,
        "wires": [
            [
                "74a2709edd01cafa"
            ],
            [
                "ffd69f19b5c17c43"
            ],
            [
                "192cc54d1de410d2"
            ]
        ]
    },
    {
        "id": "6693af4c82947f27",
        "type": "switch",
        "z": "035da46c73925442",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 250,
        "wires": [
            [
                "8b95b4e05ff16f71"
            ],
            [
                "dfa61a17e1864dae"
            ]
        ]
    },
    {
        "id": "dfa61a17e1864dae",
        "type": "change",
        "z": "035da46c73925442",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Reverse",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 270,
        "wires": [
            [
                "e7537b32dfdb9705"
            ]
        ]
    },
    {
        "id": "8b95b4e05ff16f71",
        "type": "change",
        "z": "035da46c73925442",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Forward",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 230,
        "wires": [
            [
                "e7537b32dfdb9705"
            ]
        ]
    },
    {
        "id": "192cc54d1de410d2",
        "type": "change",
        "z": "035da46c73925442",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 190,
        "wires": [
            [
                "e7537b32dfdb9705"
            ]
        ]
    },
    {
        "id": "ffd69f19b5c17c43",
        "type": "change",
        "z": "035da46c73925442",
        "name": "Parada",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Stop",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 150,
        "wires": [
            [
                "e7537b32dfdb9705"
            ]
        ]
    },
    {
        "id": "74a2709edd01cafa",
        "type": "change",
        "z": "035da46c73925442",
        "name": "Arranque",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 110,
        "wires": [
            [
                "e7537b32dfdb9705"
            ]
        ]
    },
    {
        "id": "e7537b32dfdb9705",
        "type": "function",
        "z": "035da46c73925442",
        "name": "LogicCommand",
        "func": "var Direction = global.get(\"C2S.Drive_Status.Command_dir\",\"memoryOnly\");\n\n//Mensaje de salida\nif(msg.payload == 'Start'){\n    if(Direction == 0){\n        msg.command = \"Arranque 'Reverse'\";\n    }\n    else{\n        msg.command = \"Arranque 'Forward'\";\n    }\n    msg.payload = 2;\n}\nelse if(msg.payload == 'Stop'){\n    msg.command = \"Parada del equipo\";\n    msg.payload = 1;\n}\nelse if(msg.payload == 'Reset'){\n    msg.command = \"Reset del equipo\";\n    msg.payload = 8;\n    \n}\nelse if(msg.payload == 'Forward'){\n    msg.command = \"Cambio sentido de giro a 'Forward'\";\n    msg.payload = 16;\n}\nelse if(msg.payload == 'Reverse'){\n    msg.command = \"Cambio sentido de giro a 'Reverse'\";\n    msg.payload = 32;\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 920,
        "y": 190,
        "wires": [
            [
                "24a48109d7ab3b22",
                "95b1ebf28bb264c7",
                "214024d92e28c0eb",
                "97e367536885e6cd"
            ]
        ]
    },
    {
        "id": "10677a146fd26bef",
        "type": "function",
        "z": "035da46c73925442",
        "name": "set Active0",
        "func": "msg.active0 = global.get(\"C2S.Drive_Status.Active\",\"memoryOnly\")||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 230,
        "wires": [
            [
                "4365adb6c57be5a2"
            ]
        ]
    },
    {
        "id": "a2de798176a15ce4",
        "type": "function",
        "z": "035da46c73925442",
        "name": "set Active1",
        "func": "msg.active1 = global.get(\"C2S.Drive_Status.Active\",\"memoryOnly\")||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1860,
        "y": 190,
        "wires": [
            [
                "dba47efe70219591"
            ]
        ]
    },
    {
        "id": "dba47efe70219591",
        "type": "function",
        "z": "035da46c73925442",
        "name": "Arranque/Parada",
        "func": "var Active0     = msg.active0;\nvar Active1     = msg.active1;\nvar Arranque    = ((msg.command == \"Arranque 'Forward'\") || (msg.command==\"Arranque 'Reverse'\")) ? true:false;\nvar Parada      = msg.command == \"Parada del equipo\" ? true:false;\ndelete msg.topic;\n// Arranque exitoso\nif(Arranque && Active0 == 0 && Active0 != Active1){\n    msg.payload =\"Arranque exitoso\";\n    global.set(\"C2S.FlagStatus\",true);\n}\n// Arranque fallido\nelse if(Arranque && Active0 == 0 && Active0 == Active1){\n    msg.payload = \"Arranque fallido\";\n}\n// Parada Exitosa\nelse if (Parada && Active0 == 1 && Active0 != Active1){\n    msg.payload = \"Parada exitosa\";\n    global.set(\"C2S.FlagStatus\", false);\n}\n// Parada Fallida\nelse if (Parada && Active0 == 1 && Active0 == Active1){\n    msg.payload = \"Parada fallida\";\n}\nelse{\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2040,
        "y": 190,
        "wires": [
            []
        ]
    },
    {
        "id": "51889898aa9d2367",
        "type": "function",
        "z": "035da46c73925442",
        "name": "set Active0",
        "func": "msg.active0 = global.get(\"C2S.Drive_Status.Active\",\"memoryOnly\")||0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 190,
        "wires": [
            [
                "6ed6869cc5cbdbee"
            ]
        ]
    },
    {
        "id": "4f091c4deeb7e255",
        "type": "function",
        "z": "f77d8fb250cbcf1d",
        "name": "conversionDia",
        "func": "var InputSeconds = msg.payload;\nif(InputSeconds >= 0){\n    // si no genera numeros negativos\n    var Days = parseInt(InputSeconds / 86400);\n    var Hours = parseInt((InputSeconds - (Days) * 86400) / 3600);\n    var SegRest = parseInt(InputSeconds - (Hours * 3600) - (Days * 86400));\n    var Min = parseInt(SegRest / 60);\n    var seconds = parseInt(SegRest - (Min * 60));\n    \n    // conversion a string\n    Days = Days.toString()\n    Hours = Hours.toString()\n    Min = Min.toString()\n    seconds = seconds.toString()\n    //concatenacion\n    var date = Days; date += \":\"; date += Hours; date += \":\"; date += Min; date += \":\";date += seconds;\n    // retornar el mensaje\n    msg.payload = date;\n    // guardar las variables\n    context.set(\"Days\", (Days),\"memoryOnly\");\n    context.set(\"InputSeconds\", InputSeconds, \"memoryOnly\");\n    context.set(\"Hours\", Hours, \"memoryOnly\");\n    context.set(\"SegRest\", SegRest, \"memoryOnly\");\n    context.set(\"Min\", Min, \"memoryOnly\");\n    context.set(\"seconds\", seconds, \"memoryOnly\");\n    context.set(\"date\", date, \"memoryOnly\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "923d63f441f43f13",
        "type": "function",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "Set Parametros de Tiempo",
        "func": "var ton = global.get(\"Control_functions.Controlon_off.ton\") || 0;\nvar toff = global.get(\"Control_functions.Controlon_off.toff\") || 0;\n\nif(ton != 0 && toff != 0){\n    //conversión ton\n    var seconds = ton;\n    var hour = Math.floor(seconds / 3600);\n    hour = parseInt((hour < 10) ? '0' + hour : hour);\n    var minute = Math.floor((seconds / 60) % 60);\n    minute = parseInt((minute < 10) ? '0' + minute : minute);\n    var second = seconds % 60;\n    second = parseInt((second < 10) ? '0' + second : second);\n    //Conversión toff\n\n    var seconds2 = toff;\n    var hour2 = Math.floor(seconds2 / 3600);\n    hour2 = parseInt((hour2 < 10) ? '0' + hour2 : hour2);\n    var minute2 = Math.floor((seconds2 / 60) % 60);\n    minute2 = parseInt((minute2 < 10) ? '0' + minute2 : minute2);\n    var second2 = seconds2 % 60;\n    second2 = parseInt((second2 < 10) ? '0' + second2 : second2);\n    // variables de tiempo de entrada\n    hour = { payload: hour };\n    minute = { payload: minute };\n    second = { payload: second };\n    // variables de tiempo de salida\n    hour2 = { payload: hour2 };\n    minute2 = { payload: minute2 };\n    second2 = { payload: second2 };\n// Declaración de parametros en msg.\n    return [hour, minute, second,hour2, minute2, second2];\n}\n",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 600,
        "wires": [
            [
                "2109bbab6075bb12"
            ],
            [
                "c28da4d63169b436"
            ],
            [
                "633d69e85cd4273d"
            ],
            [
                "73e4e1467a78a7bb"
            ],
            [
                "4c056e6caf7acffe"
            ],
            [
                "344a1d24134f522b"
            ]
        ]
    },
    {
        "id": "b37f86580848e10b",
        "type": "function",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "name": "Tiempo ON/OFF",
        "func": "var HMarcha = flow.get(\"Control.Controlon_off.Horas_Marcha\")|| 0;\nvar MMarcha = flow.get(\"Control.Controlon_off.Minutos_Marcha\") || 0;\nvar SMarcha = flow.get(\"Control.Controlon_off.Segundos_Marcha\") || 0;\n\nvar HPausa = flow.get(\"Control.Controlon_off.Horas_Pausa\") || 0;\nvar MPausa = flow.get(\"Control.Controlon_off.Minutos_Pausa\") || 0;\nvar SPausa = flow.get(\"Control.Controlon_off.Segundos_Pausa\") || 0;\n\nvar TMarcha = { payload: (HMarcha * 3600) + (MMarcha * 60) + SMarcha};\nvar TPausa = { payload: (HPausa * 3600) + (MPausa * 60) + SPausa };\n\nnode.status({ fill: \"red\", shape: \"dot\", text: \"TMarcha: \"+ TMarcha.payload + \" TPausa:\" + TPausa.payload });\n\nreturn [TMarcha,TPausa];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 260,
        "wires": [
            [
                "265746b1eeaca5fd"
            ],
            [
                "5332bed331397338"
            ]
        ]
    },
    {
        "id": "265746b1eeaca5fd",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "name": "timeTon",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.ton",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 240,
        "wires": [
            [
                "937aca96cc86906c"
            ]
        ]
    },
    {
        "id": "5332bed331397338",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "name": "timeToff",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.toff",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 280,
        "wires": [
            [
                "937aca96cc86906c"
            ]
        ]
    },
    {
        "id": "f78646b26f8246e0",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control.Controlon_off.confirmar",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "25d0f4f9cc0cbbc0",
        "type": "function",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "name": "Confirmar Actualización",
        "func": "if(msg.payload == true){\n    msg.payload = \"¿Desea Actualizar Datos Control ON/OFF?\";\n    msg.topic = \"Actualización Confirmada Control On/Off\";\n    msg.actualizar = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 300,
        "wires": [
            [
                "4f627b07415ef96e"
            ]
        ]
    },
    {
        "id": "4f627b07415ef96e",
        "type": "ui_toast",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "red",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "Cancelar",
        "raw": false,
        "topic": "",
        "name": "SPM",
        "x": 970,
        "y": 260,
        "wires": [
            [
                "c3a8183221d9fafe"
            ]
        ]
    },
    {
        "id": "c3a8183221d9fafe",
        "type": "switch",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "name": "if",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Aceptar",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Cancelar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 260,
        "wires": [
            [
                "f78646b26f8246e0",
                "c153e4fdd9ce3c18"
            ],
            [
                "ae26d5eef96a6990"
            ]
        ]
    },
    {
        "id": "c153e4fdd9ce3c18",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 220,
        "wires": [
            [
                "b37f86580848e10b"
            ]
        ]
    },
    {
        "id": "ae26d5eef96a6990",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 300,
        "wires": [
            [
                "eee0b070f76590b2"
            ]
        ]
    },
    {
        "id": "937aca96cc86906c",
        "type": "ui_button",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "name": "",
        "group": "e37df2c845093401",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Actualizar Datos",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "x": 600,
        "y": 260,
        "wires": [
            [
                "25d0f4f9cc0cbbc0"
            ]
        ]
    },
    {
        "id": "e8b8423b9c4c6e08",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control.Controlon_off.Horas_Marcha",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "5f3e1c612d3d4d12",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control.Controlon_off.Minutos_Marcha",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c969c7cacbbff852",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control.Controlon_off.Segundos_Marcha",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "eb4dfe7adadd8f34",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control.Controlon_off.Horas_Pausa",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "2e1d777e859bed3d",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control.Controlon_off.Minutos_Pausa",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "6e1f6fa9633b3d1f",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Control.Controlon_off.Segundos_Pausa",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "2109bbab6075bb12",
        "type": "ui_text_input",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "label": "Marcha (Horas)",
        "tooltip": "",
        "group": "e37df2c845093401",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 680,
        "y": 500,
        "wires": [
            [
                "e8b8423b9c4c6e08"
            ]
        ]
    },
    {
        "id": "c28da4d63169b436",
        "type": "ui_text_input",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "label": "Marcha (Minutos)",
        "tooltip": "",
        "group": "e37df2c845093401",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 690,
        "y": 540,
        "wires": [
            [
                "5f3e1c612d3d4d12"
            ]
        ]
    },
    {
        "id": "633d69e85cd4273d",
        "type": "ui_text_input",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "label": "Marcha (Segundos)",
        "tooltip": "",
        "group": "e37df2c845093401",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 690,
        "y": 580,
        "wires": [
            [
                "c969c7cacbbff852"
            ]
        ]
    },
    {
        "id": "73e4e1467a78a7bb",
        "type": "ui_text_input",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "label": "Pausa (Horas)",
        "tooltip": "",
        "group": "e37df2c845093401",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 680,
        "y": 620,
        "wires": [
            [
                "eb4dfe7adadd8f34"
            ]
        ]
    },
    {
        "id": "4c056e6caf7acffe",
        "type": "ui_text_input",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "label": "Pausa (Minutos)",
        "tooltip": "",
        "group": "e37df2c845093401",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 680,
        "y": 660,
        "wires": [
            [
                "2e1d777e859bed3d"
            ]
        ]
    },
    {
        "id": "344a1d24134f522b",
        "type": "ui_text_input",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "",
        "label": "Pausa (Segundos)",
        "tooltip": "",
        "group": "e37df2c845093401",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "x": 690,
        "y": 700,
        "wires": [
            [
                "6e1f6fa9633b3d1f"
            ]
        ]
    },
    {
        "id": "9d5ab93e68875cf4",
        "type": "ui_chart",
        "z": "1890b8e955d8f8fa",
        "g": "d5ab7ccd2eaf9c7e",
        "name": "Tendencia principa",
        "group": "e37df2c845093401",
        "order": 13,
        "width": 12,
        "height": 4,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "60",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#d62728",
            "#2ca02c",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 550,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "156287dbdde7759f",
        "type": "ui_switch",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "",
        "label": "Activar/Desactivar PumpOn/Off",
        "tooltip": "",
        "group": "e37df2c845093401",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Desea Activar Pump Off Controller",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 1070,
        "y": 1460,
        "wires": [
            [
                "c82c938cd7e28fae"
            ]
        ]
    },
    {
        "id": "dc5431853d568cc5",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "habilitar",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.habilitado",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 1400,
        "wires": [
            [
                "b11065b3e2970783"
            ]
        ]
    },
    {
        "id": "e058166bb272c1b4",
        "type": "debug",
        "z": "1890b8e955d8f8fa",
        "g": "d5ab7ccd2eaf9c7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 500,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ea9f83cfaae149a6",
        "type": "link in",
        "z": "1890b8e955d8f8fa",
        "d": true,
        "g": "d5ab7ccd2eaf9c7e",
        "name": "TendenciaPumpOffController",
        "links": [
            "4a2b3cda088b2c7c"
        ],
        "x": 215,
        "y": 1380,
        "wires": [
            [
                "d2c079af5901e54c"
            ]
        ]
    },
    {
        "id": "d2c079af5901e54c",
        "type": "switch",
        "z": "1890b8e955d8f8fa",
        "g": "d5ab7ccd2eaf9c7e",
        "name": "PantallaHome",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Otras Funciones de Control",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 1380,
        "wires": [
            [
                "e058166bb272c1b4",
                "9d5ab93e68875cf4"
            ]
        ]
    },
    {
        "id": "eaf4b2085acff39e",
        "type": "link in",
        "z": "1890b8e955d8f8fa",
        "g": "a0b84f94a6510eee",
        "name": "MostrarParametrosTiempoPumpOffTiempo",
        "links": [
            "e57f9ec634067114",
            "eee0b070f76590b2"
        ],
        "x": 175,
        "y": 600,
        "wires": [
            [
                "923d63f441f43f13"
            ]
        ]
    },
    {
        "id": "24332fdbcbeb5e8d",
        "type": "link in",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "MostrarParametrosTiempoPumpOff",
        "links": [
            "b11065b3e2970783",
            "e57f9ec634067114"
        ],
        "x": 755,
        "y": 1460,
        "wires": [
            [
                "9bf20a3cfce9fae1"
            ]
        ]
    },
    {
        "id": "9bf20a3cfce9fae1",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "habilitado",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Control_functions.Controlon_off.habilitado",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 1460,
        "wires": [
            [
                "156287dbdde7759f"
            ]
        ]
    },
    {
        "id": "eaaaccf524f27cd3",
        "type": "ui_toast",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "Cancelar",
        "raw": false,
        "topic": "¿Desea Activar el Pump off controller?",
        "name": "confirm",
        "x": 1380,
        "y": 1420,
        "wires": [
            [
                "b972240fa3c146c4"
            ]
        ]
    },
    {
        "id": "b972240fa3c146c4",
        "type": "switch",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "if",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Aceptar",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Cancelar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 1420,
        "wires": [
            [
                "dc5431853d568cc5",
                "258d1e598d71b09d"
            ],
            [
                "8676f151870d6dd1"
            ]
        ]
    },
    {
        "id": "8676f151870d6dd1",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "Deshabilitar",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.habilitado",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 1440,
        "wires": [
            [
                "b11065b3e2970783"
            ]
        ]
    },
    {
        "id": "c82c938cd7e28fae",
        "type": "switch",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "actual",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1270,
        "y": 1460,
        "wires": [
            [
                "eaaaccf524f27cd3"
            ],
            [
                "abf83d7b7058ada8"
            ]
        ]
    },
    {
        "id": "abf83d7b7058ada8",
        "type": "ui_toast",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "Cancelar",
        "raw": false,
        "topic": "¿Desea Desactivar el Pump off controller?",
        "name": "confirm",
        "x": 1420,
        "y": 1480,
        "wires": [
            [
                "2edb376b1401ac97"
            ]
        ]
    },
    {
        "id": "2edb376b1401ac97",
        "type": "switch",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "if",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Aceptar",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Cancelar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1550,
        "y": 1520,
        "wires": [
            [
                "872c0292870c3d55",
                "5e99aadeec08ef39"
            ],
            [
                "4c2bf44c8e1d1fb9"
            ]
        ]
    },
    {
        "id": "872c0292870c3d55",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "Deshabilitar",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.habilitado",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 1500,
        "wires": [
            [
                "b11065b3e2970783"
            ]
        ]
    },
    {
        "id": "4c2bf44c8e1d1fb9",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "habilitar",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.habilitado",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 1540,
        "wires": [
            [
                "b11065b3e2970783"
            ]
        ]
    },
    {
        "id": "b11065b3e2970783",
        "type": "link out",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "mensajeConfirmacionhabilitarPumpuOffController",
        "links": [
            "24332fdbcbeb5e8d",
            "abb0b9752cdaccc9"
        ],
        "x": 1815,
        "y": 1440,
        "wires": []
    },
    {
        "id": "eee0b070f76590b2",
        "type": "link out",
        "z": "1890b8e955d8f8fa",
        "g": "1f2682bef5794306",
        "name": "",
        "links": [
            "eaf4b2085acff39e"
        ],
        "x": 1455,
        "y": 300,
        "wires": []
    },
    {
        "id": "258d1e598d71b09d",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "Habilitar/Deshabilitar Controles",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1360,
        "wires": [
            [
                "9dac8d865abda724"
            ]
        ]
    },
    {
        "id": "9dac8d865abda724",
        "type": "link out",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "Habilitar/DeshabilitarControles",
        "links": [
            "2bc6768709625e43",
            "bbd595192d49b438",
            "49fe97c860153810",
            "aec36d38b1582fd3"
        ],
        "x": 2015,
        "y": 1420,
        "wires": []
    },
    {
        "id": "5e99aadeec08ef39",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "Habilitar/Deshabilitar Controles",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 1540,
        "wires": [
            [
                "cd39cc92c052f90b"
            ]
        ]
    },
    {
        "id": "cd39cc92c052f90b",
        "type": "link out",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "Habilitar/DeshabilitarControles",
        "links": [
            "2bc6768709625e43",
            "bbd595192d49b438",
            "49fe97c860153810",
            "aec36d38b1582fd3"
        ],
        "x": 2035,
        "y": 1600,
        "wires": []
    },
    {
        "id": "941b04b909291975",
        "type": "link in",
        "z": "1890b8e955d8f8fa",
        "g": "3caf0dee72fc2047",
        "name": "",
        "links": [
            "2c30352a35cef16e",
            "551f3f3a606f0afd",
            "eb1d9e4386e09a07",
            "c8892ada3c10edfc"
        ],
        "x": 855,
        "y": 1520,
        "wires": [
            [
                "156287dbdde7759f"
            ]
        ]
    },
    {
        "id": "7468830a5595288e",
        "type": "debug",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "diaHora",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 960,
        "y": 1060,
        "wires": []
    },
    {
        "id": "dfb2d8dab3143b0d",
        "type": "function",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "LogicaControlOnOff",
        "func": "var habilitado = global.get(\"Control_functions.Controlon_off.habilitado\")||false;\nvar ton = global.get(\"Control_functions.Controlon_off.ton\") || 0;//tiempo de alta\nvar toff = global.get(\"Control_functions.Controlon_off.toff\") || 0;//tiempo de baja\nvar estado = global.get(\"Control_functions.Controlon_off.estado\") || false;//estado del equipo\nvar buttonComand = global.get(\"Control_functions.Controlon_off.buttonComand\") || false;//boton de arranque del sistema\nvar At_Setpt_Spd = global.get(\"C2S.Drive_Status.At_Setpt_Spd\",\"memoryOnly\")||0;//llegó a referencia el VSD\nvar comunicacion = global.get(\"C2S.Comunicacion_Drive\",\"memoryOnly\")||false;\nvar FallaGeneral = global.get(\"IO.Functions.DO['Falla general']\", 'memoryOnly') || false;\n// flag de estado del arranque automatico\nvar AutomaticRestart = global.get(\"Control_functions.ActiveCF.AutomaticRestart\",\"memoryOnly\")||false;\nvar flagArranqueAutomatico = context.get(\"flagArranqueAutomatico\",\"memoryOnly\")||false;\nvar ctr = context.get(\"ctr\",ctr)||0;\nvar time = 0,color;\nvar flag = context.get(\"flag\",\"memoryOnly\")||false; //seteo de flag para identificar si ya ha llegado a la referencia\nif (habilitado == true && comunicacion == true && FallaGeneral == false) {\n    //visualizar estado del habilitado\n    color = \"green\";\n    if (toff != 0 && ton != 0) {\n        // logica para cambiar entre estados\n        if (AutomaticRestart == true && flagArranqueAutomatico == false){\n            node.status({ fill: \"yellow\", shape: \"dot\", text: \"esperandoArranque\" });\n            buttonComand = false;//se ejecuta una sola vez\n            estado = true;\n            flagArranqueAutomatico = true;//ya se ejecuto el arranque automatico\n        }else if(flagArranqueAutomatico == true){\n            buttonComand = true;//inicie la operación\n            flagArranqueAutomatico = false;\n        }\n        if (estado == true && buttonComand == true ) {\n            color = \"green\";\n            if (At_Setpt_Spd == 1){//El VSD ya llegó a la referencia\n                ctr = ctr + 1;\n                flag = true;\n            }else if(flag == true){//seguir contando el tiempo\n                ctr = ctr + 1;\n            }\n            else{\n                ctr = ctr;//No aumente el tiempo\n            }\n            context.set(\"ctr\", ctr)//guardar contador\n            time = ton - ctr;\n            if (ton == ctr) {\n                global.set(\"Control_functions.Controlon_off.estado\", false);\n                context.set(\"ctr\", 0)//setear el contador\n            } else if (ctr > ton) {\n                //caso en el cual se cambia el tiempo del contador pot pantalla\n                context.set(\"ctr\", 0)//setear el contador\n            }\n        } else if (estado == false && buttonComand == true){\n            color = \"red\";\n            if (At_Setpt_Spd == 0){//El VSD ya se paro\n                ctr = ctr + 1;\n                flag = false;//seteo de la flag\n            }\n            else{\n                ctr = ctr;\n            }\n            context.set(\"ctr\", ctr)//guardar contador\n            time = toff - ctr;\n            if (toff == ctr) {\n                global.set(\"Control_functions.Controlon_off.estado\", true);\n                context.set(\"ctr\", 0)//setear el contador\n            } else if (ctr > toff) {\n                //caso en el cual se cambia el tiempo del contador pot pantalla\n                context.set(\"ctr\", 0)//setear el contador\n            }\n        }else {\n            estado = \"pausa\";\n            time = 0;\n        }\n\n    } else {\n        color = \"red\"\n        time = 0;\n        estado = \"tiemposNoConfigurados\";\n        flag = false;\n    }\n} else if (habilitado == false && comunicacion == true && FallaGeneral == false) {\n    global.set(\"Control_functions.Controlon_off.estado\", true);\n    context.set(\"ctr\", 0)//setear el contador\n    time = time ;\n    estado = \"deshabilitado\";color = \"red\";\n    flag = false\n} else if (FallaGeneral == true && comunicacion == true){\n    global.set(\"Control_functions.Controlon_off.estado\", false);//setee el estado de activar en bajo\n    buttonComand = false;\n    global.set(\"Control_functions.Controlon_off.buttonComand\", false);\n    context.set(\"ctr\", 0)//setear el contador\n    time = 0;\n    estado = \"FallaGeneral\";\n    flag = false\n}\nelse if (comunicacion == false){\n    global.set(\"Control_functions.Controlon_off.estado\", false);//setee el estado de activar en bajo\n    context.set(\"ctr\", 0)//setear el contador\n    time = 0;\n    estado = \"falloComunicacion\";\n    flag = false\n}\n// estado de la función\nnode.status({ fill: \"red\", shape: \"dot\", text: estado });\n// set variables\ncontext.set(\"habilitado\",habilitado,\"memoryOnly\");\ncontext.set(\"estado\",estado,\"memoryOnly\");\ncontext.set(\"toff\",toff,\"memoryOnly\");\ncontext.set(\"ton\",ton,\"memoryOnly\");\ncontext.set(\"time\",time,\"memoryOnly\");\ncontext.set(\"time\",time,\"memoryOnly\");\ncontext.set(\"buttonComand\", buttonComand,\"memoryOnly\");\ncontext.set(\"At_Setpt_Spd\", At_Setpt_Spd,\"memoryOnly\");\ncontext.set(\"flag\", flag,\"memoryOnly\");\ncontext.set(\"FallaGeneral\", FallaGeneral,\"memoryOnly\");\ncontext.set(\"flagArranqueAutomatico\", flagArranqueAutomatico,\"memoryOnly\");\ncontext.set(\"AutomaticRestart\", AutomaticRestart,\"memoryOnly\");\n\ntime = { payload: time };\nestado = { payload: estado };\nreturn [estado, time];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 980,
        "wires": [
            [
                "9ec6d52462cf9447"
            ],
            [
                "b03e0ac1537edae8"
            ]
        ]
    },
    {
        "id": "4834ceceae06a274",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "Arranque",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Start",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 860,
        "wires": [
            [
                "5ab55f15839c8b62"
            ]
        ]
    },
    {
        "id": "a3cb09a8f3941aba",
        "type": "switch",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 860,
        "wires": [
            [
                "4834ceceae06a274"
            ],
            [
                "ceaf6c43578a56ea"
            ]
        ]
    },
    {
        "id": "ceaf6c43578a56ea",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "Pare",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Stop",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Basic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 900,
        "wires": [
            [
                "5ab55f15839c8b62"
            ]
        ]
    },
    {
        "id": "cba380e0e52cd32b",
        "type": "ui_text",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "group": "e37df2c845093401",
        "order": 10,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Tiempo:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 960,
        "y": 960,
        "wires": []
    },
    {
        "id": "994ebb3d980c43bd",
        "type": "ui_text",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "group": "e37df2c845093401",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Estado",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 840,
        "y": 900,
        "wires": []
    },
    {
        "id": "846c2e0e5cd8fad9",
        "type": "link in",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "DetenerPumpOff",
        "links": [
            "81fa38f1f2f2f99e",
            "326325a2bd2ea956"
        ],
        "x": 215,
        "y": 1080,
        "wires": [
            [
                "1551d461961f629a"
            ]
        ]
    },
    {
        "id": "1551d461961f629a",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "buttonComandOff",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.buttonComand",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "a238e44da1043fc8",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "buttonComandOn",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.buttonComand",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.estado",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "fd237aae6448ebac",
        "type": "link in",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "ArrancarPumpOff",
        "links": [
            "5349719bba569373",
            "4be7d50a192e4c91"
        ],
        "x": 215,
        "y": 1040,
        "wires": [
            [
                "a238e44da1043fc8"
            ]
        ]
    },
    {
        "id": "9ec6d52462cf9447",
        "type": "rbe",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 860,
        "wires": [
            [
                "a3cb09a8f3941aba",
                "994ebb3d980c43bd"
            ]
        ]
    },
    {
        "id": "50866dbb9fc505f2",
        "type": "comment",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "FiltroPorProtección",
        "info": "Si se está enviando un arranque siempre no\nfuncionan los protecciones debidamente",
        "x": 710,
        "y": 820,
        "wires": []
    },
    {
        "id": "8ce32e6d89bb8bd5",
        "type": "subflow:f77d8fb250cbcf1d",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "x": 820,
        "y": 1020,
        "wires": [
            [
                "7468830a5595288e",
                "cba380e0e52cd32b"
            ]
        ]
    },
    {
        "id": "5ab55f15839c8b62",
        "type": "subflow:035da46c73925442",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "",
        "x": 1200,
        "y": 900,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b03e0ac1537edae8",
        "type": "rbe",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 650,
        "y": 1020,
        "wires": [
            [
                "8ce32e6d89bb8bd5"
            ]
        ]
    },
    {
        "id": "8c7c947326ff02b5",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "trueArranqueAuntomatico",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.estado",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "7819bb96d43a4d64",
        "type": "link in",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "PumpOnControlFunction",
        "links": [
            "ad87cee4.7dbb5"
        ],
        "x": 235,
        "y": 1220,
        "wires": [
            [
                "8c7c947326ff02b5",
                "b9dcf539def2f220"
            ]
        ]
    },
    {
        "id": "603028515e6a66ba",
        "type": "link in",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "refreshLogicControlPumpOnOFf",
        "links": [
            "5c8e6b675c0ddf20",
            "58d10b0ab4c186c5"
        ],
        "x": 285,
        "y": 980,
        "wires": [
            [
                "dfb2d8dab3143b0d"
            ]
        ]
    },
    {
        "id": "b64a18e24f00a0e2",
        "type": "change",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "buttonComandOff",
        "rules": [
            {
                "t": "set",
                "p": "Control_functions.Controlon_off.buttonComand",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "b9dcf539def2f220",
        "type": "function",
        "z": "1890b8e955d8f8fa",
        "g": "6604db9c5e9f2794",
        "name": "enableAutomatic",
        "func": "var Enable = global.get(\"Control_functions.Automatic_Restart.Enable\")||false;\nif(Enable == false){\n    // no arranque la función de control\n    // si esta deshabilitado el arranque\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1180,
        "wires": [
            [
                "b64a18e24f00a0e2"
            ]
        ]
    },
    {
        "id": "25837d82b2979b05",
        "type": "inject",
        "z": "902fc438.e5d758",
        "g": "3cb51855.a66038",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 1420,
        "wires": [
            [
                "58d10b0ab4c186c5"
            ]
        ]
    },
    {
        "id": "58d10b0ab4c186c5",
        "type": "link out",
        "z": "902fc438.e5d758",
        "name": "refresh data 1s",
        "links": [
            "603028515e6a66ba"
        ],
        "x": 345,
        "y": 1420,
        "wires": []
    },
    {
        "id": "4be7d50a192e4c91",
        "type": "link out",
        "z": "902fc438.e5d758",
        "name": "BottonArranquePantallaPrincipal",
        "links": [
            "fd237aae6448ebac"
        ],
        "x": 1455,
        "y": 660,
        "wires": []
    },
    {
        "id": "326325a2bd2ea956",
        "type": "link out",
        "z": "902fc438.e5d758",
        "g": "fcb3da61.429db8",
        "name": "BottonDetenerPantallaPrincipal",
        "links": [
            "846c2e0e5cd8fad9"
        ],
        "x": 1415,
        "y": 760,
        "wires": []
    }
]